

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Feb 16 15:28:06 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18LF25K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1
    95                           	psect	text79,global,reloc=2,class=CODE,delta=1
    96                           	psect	text80,global,reloc=2,class=CODE,delta=1
    97                           	psect	text81,global,reloc=2,class=CODE,delta=1
    98                           	psect	text82,global,reloc=2,class=CODE,delta=1
    99                           	psect	text83,global,reloc=2,class=CODE,delta=1
   100                           	psect	text84,global,reloc=2,class=CODE,delta=1
   101                           	psect	text85,global,reloc=2,class=CODE,delta=1
   102                           	psect	text86,global,reloc=2,class=CODE,delta=1
   103                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   104                           	psect	text88,global,reloc=2,class=CODE,delta=1
   105                           	psect	text89,global,reloc=2,class=CODE,delta=1
   106                           	psect	text90,global,reloc=2,class=CODE,delta=1
   107                           	psect	text91,global,reloc=2,class=CODE,delta=1
   108                           	psect	text92,global,reloc=2,class=CODE,delta=1
   109                           	psect	text93,global,reloc=2,class=CODE,delta=1
   110                           	psect	text94,global,reloc=2,class=CODE,delta=1
   111                           	psect	text95,global,reloc=2,class=CODE,delta=1
   112                           	psect	text96,global,reloc=2,class=CODE,delta=1
   113                           	psect	text97,global,reloc=2,class=CODE,delta=1
   114                           	psect	text98,global,reloc=2,class=CODE,delta=1
   115                           	psect	text99,global,reloc=2,class=CODE,delta=1
   116                           	psect	text100,global,reloc=2,class=CODE,delta=1
   117                           	psect	text101,global,reloc=2,class=CODE,delta=1
   118                           	psect	text102,global,reloc=2,class=CODE,delta=1
   119                           	psect	text103,global,reloc=2,class=CODE,delta=1
   120                           	psect	text104,global,reloc=2,class=CODE,delta=1
   121                           	psect	text105,global,reloc=2,class=CODE,delta=1
   122                           	psect	text106,global,reloc=2,class=CODE,delta=1
   123                           	psect	text107,global,reloc=2,class=CODE,delta=1
   124                           	psect	text108,global,reloc=2,class=CODE,delta=1
   125                           	psect	text109,global,reloc=2,class=CODE,delta=1
   126                           	psect	text110,global,reloc=2,class=CODE,delta=1
   127                           	psect	text111,global,reloc=2,class=CODE,delta=1
   128                           	psect	text112,global,reloc=2,class=CODE,delta=1
   129                           	psect	text113,global,reloc=2,class=CODE,delta=1
   130                           	psect	text114,global,reloc=2,class=CODE,delta=1
   131                           	psect	text115,global,reloc=2,class=CODE,delta=1
   132                           	psect	text116,global,reloc=2,class=CODE,delta=1
   133                           	psect	text117,global,reloc=2,class=CODE,delta=1
   134                           	psect	text118,global,reloc=2,class=CODE,delta=1
   135                           	psect	text119,global,reloc=2,class=CODE,delta=1
   136                           	psect	text120,global,reloc=2,class=CODE,delta=1
   137                           	psect	text121,global,reloc=2,class=CODE,delta=1
   138                           	psect	text122,global,reloc=2,class=CODE,delta=1
   139                           	psect	text123,global,reloc=2,class=CODE,delta=1
   140                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   141                           	psect	text124,global,reloc=2,class=CODE,delta=1
   142                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   143                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   144                           	dabs	1,0x400,48,_BDT
   145                           	dabs	1,0x500,64,_cdc_data_tx
   146                           	dabs	1,0x438,8,_CtrlTrfData
   147                           	dabs	1,0x430,8,_SetupPkt
   148                           	dabs	1,0x540,64,_cdc_data_rx
   149  0000                     
   150                           	psect	idataBANK0
   151  00596E                     __pidataBANK0:
   152                           	opt stack 0
   153                           
   154                           ;initializer for _selectedFont
   155  00596E  8B                 	db	low _OledFont0
   156  00596F  75                 	db	high _OledFont0
   157                           
   158                           ;initializer for _SleepTimeOut
   159  005970  0A                 	db	10
   160                           
   161                           ;initializer for _dataRateSelection
   162  005971  02                 	db	2
   163                           
   164                           ;initializer for _dataRateValue
   165  005972  02                 	db	2
   166                           
   167                           ;initializer for _exitUSB
   168  005973  01                 	db	1
   169                           
   170                           ;initializer for _menuTimeout
   171  005974  01                 	db	1
   172                           
   173                           ;initializer for _moteState
   174  005975  01                 	db	1
   175                           
   176                           ;initializer for _periodicState
   177  005976  03                 	db	3
   178                           
   179                           ;initializer for _periodicTimerValue
   180  005977  03                 	db	3
   181                           
   182                           ;initializer for _periodicUpValue
   183  005978  03                 	db	3
   184                           
   185                           	psect	mediumconst
   186  007582                     __pmediumconst:
   187                           	opt stack 0
   188  007582  00                 	db	0
   189  007583                     _USB_SD_Ptr:
   190                           	opt stack 0
   191  007583  48                 	db	low _sd000
   192  007584  79                 	db	high _sd000
   193  007585  CE                 	db	low _sd001
   194  007586  78                 	db	high _sd001
   195  007587  02                 	db	low _sd002
   196  007588  79                 	db	high _sd002
   197  007589                     __end_of_USB_SD_Ptr:
   198                           	opt stack 0
   199  007589                     _USB_CD_Ptr:
   200                           	opt stack 0
   201  007589  8B                 	db	low _configDescriptor1
   202  00758A  78                 	db	high _configDescriptor1
   203  00758B                     __end_of_USB_CD_Ptr:
   204                           	opt stack 0
   205  00758B                     _OledFont0:
   206                           	opt stack 0
   207  00758B  00                 	db	0
   208  00758C  00                 	db	0
   209  00758D  00                 	db	0
   210  00758E  00                 	db	0
   211  00758F  00                 	db	0
   212  007590  00                 	db	0
   213  007591  00                 	db	0
   214  007592  00                 	db	0
   215  007593  00                 	db	0
   216  007594  00                 	db	0
   217  007595  00                 	db	0
   218  007596  5F                 	db	95
   219  007597  00                 	db	0
   220  007598  00                 	db	0
   221  007599  00                 	db	0
   222  00759A  00                 	db	0
   223  00759B  00                 	db	0
   224  00759C  00                 	db	0
   225  00759D  03                 	db	3
   226  00759E  00                 	db	0
   227  00759F  03                 	db	3
   228  0075A0  00                 	db	0
   229  0075A1  00                 	db	0
   230  0075A2  00                 	db	0
   231  0075A3  64                 	db	100
   232  0075A4  3C                 	db	60
   233  0075A5  26                 	db	38
   234  0075A6  64                 	db	100
   235  0075A7  3C                 	db	60
   236  0075A8  26                 	db	38
   237  0075A9  24                 	db	36
   238  0075AA  00                 	db	0
   239  0075AB  26                 	db	38
   240  0075AC  49                 	db	73
   241  0075AD  49                 	db	73
   242  0075AE  7F                 	db	127
   243  0075AF  49                 	db	73
   244  0075B0  49                 	db	73
   245  0075B1  32                 	db	50
   246  0075B2  00                 	db	0
   247  0075B3  42                 	db	66
   248  0075B4  25                 	db	37
   249  0075B5  12                 	db	18
   250  0075B6  08                 	db	8
   251  0075B7  24                 	db	36
   252  0075B8  52                 	db	82
   253  0075B9  21                 	db	33
   254  0075BA  00                 	db	0
   255  0075BB  20                 	db	32
   256  0075BC  50                 	db	80
   257  0075BD  4E                 	db	78
   258  0075BE  55                 	db	85
   259  0075BF  22                 	db	34
   260  0075C0  58                 	db	88
   261  0075C1  28                 	db	40
   262  0075C2  00                 	db	0
   263  0075C3  00                 	db	0
   264  0075C4  00                 	db	0
   265  0075C5  00                 	db	0
   266  0075C6  03                 	db	3
   267  0075C7  00                 	db	0
   268  0075C8  00                 	db	0
   269  0075C9  00                 	db	0
   270  0075CA  00                 	db	0
   271  0075CB  00                 	db	0
   272  0075CC  00                 	db	0
   273  0075CD  1C                 	db	28
   274  0075CE  22                 	db	34
   275  0075CF  41                 	db	65
   276  0075D0  00                 	db	0
   277  0075D1  00                 	db	0
   278  0075D2  00                 	db	0
   279  0075D3  00                 	db	0
   280  0075D4  00                 	db	0
   281  0075D5  00                 	db	0
   282  0075D6  41                 	db	65
   283  0075D7  22                 	db	34
   284  0075D8  1C                 	db	28
   285  0075D9  00                 	db	0
   286  0075DA  00                 	db	0
   287  0075DB  00                 	db	0
   288  0075DC  15                 	db	21
   289  0075DD  15                 	db	21
   290  0075DE  0E                 	db	14
   291  0075DF  0E                 	db	14
   292  0075E0  15                 	db	21
   293  0075E1  15                 	db	21
   294  0075E2  00                 	db	0
   295  0075E3  00                 	db	0
   296  0075E4  08                 	db	8
   297  0075E5  08                 	db	8
   298  0075E6  3E                 	db	62
   299  0075E7  08                 	db	8
   300  0075E8  08                 	db	8
   301  0075E9  00                 	db	0
   302  0075EA  00                 	db	0
   303  0075EB  00                 	db	0
   304  0075EC  00                 	db	0
   305  0075ED  00                 	db	0
   306  0075EE  50                 	db	80
   307  0075EF  30                 	db	48
   308  0075F0  00                 	db	0
   309  0075F1  00                 	db	0
   310  0075F2  00                 	db	0
   311  0075F3  00                 	db	0
   312  0075F4  08                 	db	8
   313  0075F5  08                 	db	8
   314  0075F6  08                 	db	8
   315  0075F7  08                 	db	8
   316  0075F8  08                 	db	8
   317  0075F9  00                 	db	0
   318  0075FA  00                 	db	0
   319  0075FB  00                 	db	0
   320  0075FC  00                 	db	0
   321  0075FD  00                 	db	0
   322  0075FE  40                 	db	64
   323  0075FF  00                 	db	0
   324  007600  00                 	db	0
   325  007601  00                 	db	0
   326  007602  00                 	db	0
   327  007603  40                 	db	64
   328  007604  20                 	db	32
   329  007605  10                 	db	16
   330  007606  08                 	db	8
   331  007607  04                 	db	4
   332  007608  02                 	db	2
   333  007609  01                 	db	1
   334  00760A  00                 	db	0
   335  00760B  00                 	db	0
   336  00760C  3E                 	db	62
   337  00760D  41                 	db	65
   338  00760E  41                 	db	65
   339  00760F  41                 	db	65
   340  007610  3E                 	db	62
   341  007611  00                 	db	0
   342  007612  00                 	db	0
   343  007613  00                 	db	0
   344  007614  00                 	db	0
   345  007615  41                 	db	65
   346  007616  7F                 	db	127
   347  007617  40                 	db	64
   348  007618  00                 	db	0
   349  007619  00                 	db	0
   350  00761A  00                 	db	0
   351  00761B  00                 	db	0
   352  00761C  42                 	db	66
   353  00761D  61                 	db	97
   354  00761E  51                 	db	81
   355  00761F  49                 	db	73
   356  007620  6E                 	db	110
   357  007621  00                 	db	0
   358  007622  00                 	db	0
   359  007623  00                 	db	0
   360  007624  22                 	db	34
   361  007625  41                 	db	65
   362  007626  49                 	db	73
   363  007627  49                 	db	73
   364  007628  36                 	db	54
   365  007629  00                 	db	0
   366  00762A  00                 	db	0
   367  00762B  00                 	db	0
   368  00762C  18                 	db	24
   369  00762D  14                 	db	20
   370  00762E  12                 	db	18
   371  00762F  7F                 	db	127
   372  007630  10                 	db	16
   373  007631  00                 	db	0
   374  007632  00                 	db	0
   375  007633  00                 	db	0
   376  007634  27                 	db	39
   377  007635  49                 	db	73
   378  007636  49                 	db	73
   379  007637  49                 	db	73
   380  007638  71                 	db	113
   381  007639  00                 	db	0
   382  00763A  00                 	db	0
   383  00763B  00                 	db	0
   384  00763C  3C                 	db	60
   385  00763D  4A                 	db	74
   386  00763E  49                 	db	73
   387  00763F  48                 	db	72
   388  007640  70                 	db	112
   389  007641  00                 	db	0
   390  007642  00                 	db	0
   391  007643  00                 	db	0
   392  007644  43                 	db	67
   393  007645  21                 	db	33
   394  007646  11                 	db	17
   395  007647  0D                 	db	13
   396  007648  03                 	db	3
   397  007649  00                 	db	0
   398  00764A  00                 	db	0
   399  00764B  00                 	db	0
   400  00764C  36                 	db	54
   401  00764D  49                 	db	73
   402  00764E  49                 	db	73
   403  00764F  49                 	db	73
   404  007650  36                 	db	54
   405  007651  00                 	db	0
   406  007652  00                 	db	0
   407  007653  00                 	db	0
   408  007654  06                 	db	6
   409  007655  09                 	db	9
   410  007656  49                 	db	73
   411  007657  29                 	db	41
   412  007658  1E                 	db	30
   413  007659  00                 	db	0
   414  00765A  00                 	db	0
   415  00765B  00                 	db	0
   416  00765C  00                 	db	0
   417  00765D  00                 	db	0
   418  00765E  12                 	db	18
   419  00765F  00                 	db	0
   420  007660  00                 	db	0
   421  007661  00                 	db	0
   422  007662  00                 	db	0
   423  007663  00                 	db	0
   424  007664  00                 	db	0
   425  007665  00                 	db	0
   426  007666  52                 	db	82
   427  007667  30                 	db	48
   428  007668  00                 	db	0
   429  007669  00                 	db	0
   430  00766A  00                 	db	0
   431  00766B  00                 	db	0
   432  00766C  00                 	db	0
   433  00766D  08                 	db	8
   434  00766E  14                 	db	20
   435  00766F  14                 	db	20
   436  007670  22                 	db	34
   437  007671  00                 	db	0
   438  007672  00                 	db	0
   439  007673  00                 	db	0
   440  007674  14                 	db	20
   441  007675  14                 	db	20
   442  007676  14                 	db	20
   443  007677  14                 	db	20
   444  007678  14                 	db	20
   445  007679  14                 	db	20
   446  00767A  00                 	db	0
   447  00767B  00                 	db	0
   448  00767C  00                 	db	0
   449  00767D  22                 	db	34
   450  00767E  14                 	db	20
   451  00767F  14                 	db	20
   452  007680  08                 	db	8
   453  007681  00                 	db	0
   454  007682  00                 	db	0
   455  007683  00                 	db	0
   456  007684  02                 	db	2
   457  007685  01                 	db	1
   458  007686  59                 	db	89
   459  007687  05                 	db	5
   460  007688  02                 	db	2
   461  007689  00                 	db	0
   462  00768A  00                 	db	0
   463  00768B  3E                 	db	62
   464  00768C  41                 	db	65
   465  00768D  5D                 	db	93
   466  00768E  55                 	db	85
   467  00768F  4D                 	db	77
   468  007690  51                 	db	81
   469  007691  2E                 	db	46
   470  007692  00                 	db	0
   471  007693  40                 	db	64
   472  007694  7C                 	db	124
   473  007695  4A                 	db	74
   474  007696  09                 	db	9
   475  007697  4A                 	db	74
   476  007698  7C                 	db	124
   477  007699  40                 	db	64
   478  00769A  00                 	db	0
   479  00769B  41                 	db	65
   480  00769C  7F                 	db	127
   481  00769D  49                 	db	73
   482  00769E  49                 	db	73
   483  00769F  49                 	db	73
   484  0076A0  49                 	db	73
   485  0076A1  36                 	db	54
   486  0076A2  00                 	db	0
   487  0076A3  1C                 	db	28
   488  0076A4  22                 	db	34
   489  0076A5  41                 	db	65
   490  0076A6  41                 	db	65
   491  0076A7  41                 	db	65
   492  0076A8  41                 	db	65
   493  0076A9  22                 	db	34
   494  0076AA  00                 	db	0
   495  0076AB  41                 	db	65
   496  0076AC  7F                 	db	127
   497  0076AD  41                 	db	65
   498  0076AE  41                 	db	65
   499  0076AF  41                 	db	65
   500  0076B0  22                 	db	34
   501  0076B1  1C                 	db	28
   502  0076B2  00                 	db	0
   503  0076B3  41                 	db	65
   504  0076B4  7F                 	db	127
   505  0076B5  49                 	db	73
   506  0076B6  49                 	db	73
   507  0076B7  5D                 	db	93
   508  0076B8  41                 	db	65
   509  0076B9  63                 	db	99
   510  0076BA  00                 	db	0
   511  0076BB  41                 	db	65
   512  0076BC  7F                 	db	127
   513  0076BD  49                 	db	73
   514  0076BE  09                 	db	9
   515  0076BF  1D                 	db	29
   516  0076C0  01                 	db	1
   517  0076C1  03                 	db	3
   518  0076C2  00                 	db	0
   519  0076C3  1C                 	db	28
   520  0076C4  22                 	db	34
   521  0076C5  41                 	db	65
   522  0076C6  49                 	db	73
   523  0076C7  49                 	db	73
   524  0076C8  3A                 	db	58
   525  0076C9  08                 	db	8
   526  0076CA  00                 	db	0
   527  0076CB  41                 	db	65
   528  0076CC  7F                 	db	127
   529  0076CD  08                 	db	8
   530  0076CE  08                 	db	8
   531  0076CF  08                 	db	8
   532  0076D0  7F                 	db	127
   533  0076D1  41                 	db	65
   534  0076D2  00                 	db	0
   535  0076D3  00                 	db	0
   536  0076D4  41                 	db	65
   537  0076D5  41                 	db	65
   538  0076D6  7F                 	db	127
   539  0076D7  41                 	db	65
   540  0076D8  41                 	db	65
   541  0076D9  00                 	db	0
   542  0076DA  00                 	db	0
   543  0076DB  30                 	db	48
   544  0076DC  40                 	db	64
   545  0076DD  41                 	db	65
   546  0076DE  41                 	db	65
   547  0076DF  3F                 	db	63
   548  0076E0  01                 	db	1
   549  0076E1  01                 	db	1
   550  0076E2  00                 	db	0
   551  0076E3  41                 	db	65
   552  0076E4  7F                 	db	127
   553  0076E5  08                 	db	8
   554  0076E6  0C                 	db	12
   555  0076E7  12                 	db	18
   556  0076E8  61                 	db	97
   557  0076E9  41                 	db	65
   558  0076EA  00                 	db	0
   559  0076EB  41                 	db	65
   560  0076EC  7F                 	db	127
   561  0076ED  41                 	db	65
   562  0076EE  40                 	db	64
   563  0076EF  40                 	db	64
   564  0076F0  40                 	db	64
   565  0076F1  60                 	db	96
   566  0076F2  00                 	db	0
   567  0076F3  41                 	db	65
   568  0076F4  7F                 	db	127
   569  0076F5  42                 	db	66
   570  0076F6  0C                 	db	12
   571  0076F7  42                 	db	66
   572  0076F8  7F                 	db	127
   573  0076F9  41                 	db	65
   574  0076FA  00                 	db	0
   575  0076FB  41                 	db	65
   576  0076FC  7F                 	db	127
   577  0076FD  42                 	db	66
   578  0076FE  0C                 	db	12
   579  0076FF  11                 	db	17
   580  007700  7F                 	db	127
   581  007701  01                 	db	1
   582  007702  00                 	db	0
   583  007703  1C                 	db	28
   584  007704  22                 	db	34
   585  007705  41                 	db	65
   586  007706  41                 	db	65
   587  007707  41                 	db	65
   588  007708  22                 	db	34
   589  007709  1C                 	db	28
   590  00770A  00                 	db	0
   591  00770B  41                 	db	65
   592  00770C  7F                 	db	127
   593  00770D  49                 	db	73
   594  00770E  09                 	db	9
   595  00770F  09                 	db	9
   596  007710  09                 	db	9
   597  007711  06                 	db	6
   598  007712  00                 	db	0
   599  007713  0C                 	db	12
   600  007714  12                 	db	18
   601  007715  21                 	db	33
   602  007716  21                 	db	33
   603  007717  61                 	db	97
   604  007718  52                 	db	82
   605  007719  4C                 	db	76
   606  00771A  00                 	db	0
   607  00771B  41                 	db	65
   608  00771C  7F                 	db	127
   609  00771D  09                 	db	9
   610  00771E  09                 	db	9
   611  00771F  19                 	db	25
   612  007720  69                 	db	105
   613  007721  46                 	db	70
   614  007722  00                 	db	0
   615  007723  66                 	db	102
   616  007724  49                 	db	73
   617  007725  49                 	db	73
   618  007726  49                 	db	73
   619  007727  49                 	db	73
   620  007728  49                 	db	73
   621  007729  33                 	db	51
   622  00772A  00                 	db	0
   623  00772B  03                 	db	3
   624  00772C  01                 	db	1
   625  00772D  41                 	db	65
   626  00772E  7F                 	db	127
   627  00772F  41                 	db	65
   628  007730  01                 	db	1
   629  007731  03                 	db	3
   630  007732  00                 	db	0
   631  007733  01                 	db	1
   632  007734  3F                 	db	63
   633  007735  41                 	db	65
   634  007736  40                 	db	64
   635  007737  41                 	db	65
   636  007738  3F                 	db	63
   637  007739  01                 	db	1
   638  00773A  00                 	db	0
   639  00773B  01                 	db	1
   640  00773C  0F                 	db	15
   641  00773D  31                 	db	49
   642  00773E  40                 	db	64
   643  00773F  31                 	db	49
   644  007740  0F                 	db	15
   645  007741  01                 	db	1
   646  007742  00                 	db	0
   647  007743  01                 	db	1
   648  007744  1F                 	db	31
   649  007745  61                 	db	97
   650  007746  14                 	db	20
   651  007747  61                 	db	97
   652  007748  1F                 	db	31
   653  007749  01                 	db	1
   654  00774A  00                 	db	0
   655  00774B  41                 	db	65
   656  00774C  41                 	db	65
   657  00774D  36                 	db	54
   658  00774E  08                 	db	8
   659  00774F  36                 	db	54
   660  007750  41                 	db	65
   661  007751  41                 	db	65
   662  007752  00                 	db	0
   663  007753  01                 	db	1
   664  007754  03                 	db	3
   665  007755  44                 	db	68
   666  007756  78                 	db	120
   667  007757  44                 	db	68
   668  007758  03                 	db	3
   669  007759  01                 	db	1
   670  00775A  00                 	db	0
   671  00775B  43                 	db	67
   672  00775C  61                 	db	97
   673  00775D  51                 	db	81
   674  00775E  49                 	db	73
   675  00775F  45                 	db	69
   676  007760  43                 	db	67
   677  007761  61                 	db	97
   678  007762  00                 	db	0
   679  007763  00                 	db	0
   680  007764  00                 	db	0
   681  007765  7F                 	db	127
   682  007766  41                 	db	65
   683  007767  41                 	db	65
   684  007768  00                 	db	0
   685  007769  00                 	db	0
   686  00776A  00                 	db	0
   687  00776B  01                 	db	1
   688  00776C  02                 	db	2
   689  00776D  04                 	db	4
   690  00776E  08                 	db	8
   691  00776F  10                 	db	16
   692  007770  20                 	db	32
   693  007771  40                 	db	64
   694  007772  00                 	db	0
   695  007773  00                 	db	0
   696  007774  00                 	db	0
   697  007775  41                 	db	65
   698  007776  41                 	db	65
   699  007777  7F                 	db	127
   700  007778  00                 	db	0
   701  007779  00                 	db	0
   702  00777A  00                 	db	0
   703  00777B  00                 	db	0
   704  00777C  04                 	db	4
   705  00777D  02                 	db	2
   706  00777E  01                 	db	1
   707  00777F  01                 	db	1
   708  007780  02                 	db	2
   709  007781  04                 	db	4
   710  007782  00                 	db	0
   711  007783  00                 	db	0
   712  007784  40                 	db	64
   713  007785  40                 	db	64
   714  007786  40                 	db	64
   715  007787  40                 	db	64
   716  007788  40                 	db	64
   717  007789  40                 	db	64
   718  00778A  00                 	db	0
   719  00778B  00                 	db	0
   720  00778C  01                 	db	1
   721  00778D  02                 	db	2
   722  00778E  00                 	db	0
   723  00778F  00                 	db	0
   724  007790  00                 	db	0
   725  007791  00                 	db	0
   726  007792  00                 	db	0
   727  007793  00                 	db	0
   728  007794  34                 	db	52
   729  007795  4A                 	db	74
   730  007796  4A                 	db	74
   731  007797  4A                 	db	74
   732  007798  3C                 	db	60
   733  007799  40                 	db	64
   734  00779A  00                 	db	0
   735  00779B  00                 	db	0
   736  00779C  41                 	db	65
   737  00779D  3F                 	db	63
   738  00779E  48                 	db	72
   739  00779F  48                 	db	72
   740  0077A0  48                 	db	72
   741  0077A1  30                 	db	48
   742  0077A2  00                 	db	0
   743  0077A3  00                 	db	0
   744  0077A4  3C                 	db	60
   745  0077A5  42                 	db	66
   746  0077A6  42                 	db	66
   747  0077A7  42                 	db	66
   748  0077A8  24                 	db	36
   749  0077A9  00                 	db	0
   750  0077AA  00                 	db	0
   751  0077AB  00                 	db	0
   752  0077AC  30                 	db	48
   753  0077AD  48                 	db	72
   754  0077AE  48                 	db	72
   755  0077AF  49                 	db	73
   756  0077B0  3F                 	db	63
   757  0077B1  40                 	db	64
   758  0077B2  00                 	db	0
   759  0077B3  00                 	db	0
   760  0077B4  3C                 	db	60
   761  0077B5  4A                 	db	74
   762  0077B6  4A                 	db	74
   763  0077B7  4A                 	db	74
   764  0077B8  2C                 	db	44
   765  0077B9  00                 	db	0
   766  0077BA  00                 	db	0
   767  0077BB  00                 	db	0
   768  0077BC  00                 	db	0
   769  0077BD  48                 	db	72
   770  0077BE  7E                 	db	126
   771  0077BF  49                 	db	73
   772  0077C0  09                 	db	9
   773  0077C1  00                 	db	0
   774  0077C2  00                 	db	0
   775  0077C3  00                 	db	0
   776  0077C4  26                 	db	38
   777  0077C5  49                 	db	73
   778  0077C6  49                 	db	73
   779  0077C7  49                 	db	73
   780  0077C8  3F                 	db	63
   781  0077C9  01                 	db	1
   782  0077CA  00                 	db	0
   783  0077CB  41                 	db	65
   784  0077CC  7F                 	db	127
   785  0077CD  48                 	db	72
   786  0077CE  04                 	db	4
   787  0077CF  44                 	db	68
   788  0077D0  78                 	db	120
   789  0077D1  40                 	db	64
   790  0077D2  00                 	db	0
   791  0077D3  00                 	db	0
   792  0077D4  00                 	db	0
   793  0077D5  44                 	db	68
   794  0077D6  7D                 	db	125
   795  0077D7  40                 	db	64
   796  0077D8  00                 	db	0
   797  0077D9  00                 	db	0
   798  0077DA  00                 	db	0
   799  0077DB  00                 	db	0
   800  0077DC  00                 	db	0
   801  0077DD  40                 	db	64
   802  0077DE  44                 	db	68
   803  0077DF  3D                 	db	61
   804  0077E0  00                 	db	0
   805  0077E1  00                 	db	0
   806  0077E2  00                 	db	0
   807  0077E3  41                 	db	65
   808  0077E4  7F                 	db	127
   809  0077E5  10                 	db	16
   810  0077E6  18                 	db	24
   811  0077E7  24                 	db	36
   812  0077E8  42                 	db	66
   813  0077E9  42                 	db	66
   814  0077EA  00                 	db	0
   815  0077EB  00                 	db	0
   816  0077EC  40                 	db	64
   817  0077ED  41                 	db	65
   818  0077EE  7F                 	db	127
   819  0077EF  40                 	db	64
   820  0077F0  40                 	db	64
   821  0077F1  00                 	db	0
   822  0077F2  00                 	db	0
   823  0077F3  42                 	db	66
   824  0077F4  7E                 	db	126
   825  0077F5  02                 	db	2
   826  0077F6  7C                 	db	124
   827  0077F7  02                 	db	2
   828  0077F8  7E                 	db	126
   829  0077F9  40                 	db	64
   830  0077FA  00                 	db	0
   831  0077FB  42                 	db	66
   832  0077FC  7E                 	db	126
   833  0077FD  44                 	db	68
   834  0077FE  02                 	db	2
   835  0077FF  42                 	db	66
   836  007800  7C                 	db	124
   837  007801  40                 	db	64
   838  007802  00                 	db	0
   839  007803  00                 	db	0
   840  007804  3C                 	db	60
   841  007805  42                 	db	66
   842  007806  42                 	db	66
   843  007807  42                 	db	66
   844  007808  3C                 	db	60
   845  007809  00                 	db	0
   846  00780A  00                 	db	0
   847  00780B  00                 	db	0
   848  00780C  41                 	db	65
   849  00780D  7F                 	db	127
   850  00780E  49                 	db	73
   851  00780F  09                 	db	9
   852  007810  09                 	db	9
   853  007811  06                 	db	6
   854  007812  00                 	db	0
   855  007813  00                 	db	0
   856  007814  06                 	db	6
   857  007815  09                 	db	9
   858  007816  09                 	db	9
   859  007817  49                 	db	73
   860  007818  7F                 	db	127
   861  007819  41                 	db	65
   862  00781A  00                 	db	0
   863  00781B  00                 	db	0
   864  00781C  42                 	db	66
   865  00781D  7E                 	db	126
   866  00781E  44                 	db	68
   867  00781F  02                 	db	2
   868  007820  02                 	db	2
   869  007821  04                 	db	4
   870  007822  00                 	db	0
   871  007823  00                 	db	0
   872  007824  64                 	db	100
   873  007825  4A                 	db	74
   874  007826  4A                 	db	74
   875  007827  4A                 	db	74
   876  007828  36                 	db	54
   877  007829  00                 	db	0
   878  00782A  00                 	db	0
   879  00782B  00                 	db	0
   880  00782C  04                 	db	4
   881  00782D  3F                 	db	63
   882  00782E  44                 	db	68
   883  00782F  44                 	db	68
   884  007830  20                 	db	32
   885  007831  00                 	db	0
   886  007832  00                 	db	0
   887  007833  00                 	db	0
   888  007834  02                 	db	2
   889  007835  3E                 	db	62
   890  007836  40                 	db	64
   891  007837  40                 	db	64
   892  007838  22                 	db	34
   893  007839  7E                 	db	126
   894  00783A  40                 	db	64
   895  00783B  02                 	db	2
   896  00783C  0E                 	db	14
   897  00783D  32                 	db	50
   898  00783E  40                 	db	64
   899  00783F  32                 	db	50
   900  007840  0E                 	db	14
   901  007841  02                 	db	2
   902  007842  00                 	db	0
   903  007843  02                 	db	2
   904  007844  1E                 	db	30
   905  007845  62                 	db	98
   906  007846  18                 	db	24
   907  007847  62                 	db	98
   908  007848  1E                 	db	30
   909  007849  02                 	db	2
   910  00784A  00                 	db	0
   911  00784B  42                 	db	66
   912  00784C  62                 	db	98
   913  00784D  14                 	db	20
   914  00784E  08                 	db	8
   915  00784F  14                 	db	20
   916  007850  62                 	db	98
   917  007851  42                 	db	66
   918  007852  00                 	db	0
   919  007853  01                 	db	1
   920  007854  43                 	db	67
   921  007855  45                 	db	69
   922  007856  38                 	db	56
   923  007857  05                 	db	5
   924  007858  03                 	db	3
   925  007859  01                 	db	1
   926  00785A  00                 	db	0
   927  00785B  00                 	db	0
   928  00785C  46                 	db	70
   929  00785D  62                 	db	98
   930  00785E  52                 	db	82
   931  00785F  4A                 	db	74
   932  007860  46                 	db	70
   933  007861  62                 	db	98
   934  007862  00                 	db	0
   935  007863  00                 	db	0
   936  007864  00                 	db	0
   937  007865  08                 	db	8
   938  007866  36                 	db	54
   939  007867  41                 	db	65
   940  007868  00                 	db	0
   941  007869  00                 	db	0
   942  00786A  00                 	db	0
   943  00786B  00                 	db	0
   944  00786C  00                 	db	0
   945  00786D  00                 	db	0
   946  00786E  7F                 	db	127
   947  00786F  00                 	db	0
   948  007870  00                 	db	0
   949  007871  00                 	db	0
   950  007872  00                 	db	0
   951  007873  00                 	db	0
   952  007874  00                 	db	0
   953  007875  00                 	db	0
   954  007876  41                 	db	65
   955  007877  36                 	db	54
   956  007878  08                 	db	8
   957  007879  00                 	db	0
   958  00787A  00                 	db	0
   959  00787B  00                 	db	0
   960  00787C  18                 	db	24
   961  00787D  08                 	db	8
   962  00787E  08                 	db	8
   963  00787F  10                 	db	16
   964  007880  10                 	db	16
   965  007881  18                 	db	24
   966  007882  00                 	db	0
   967  007883  AA                 	db	170
   968  007884  55                 	db	85
   969  007885  AA                 	db	170
   970  007886  55                 	db	85
   971  007887  AA                 	db	170
   972  007888  55                 	db	85
   973  007889  AA                 	db	170
   974  00788A  55                 	db	85
   975  00788B                     __end_of_OledFont0:
   976                           	opt stack 0
   977  00788B                     _configDescriptor1:
   978                           	opt stack 0
   979  00788B  09                 	db	9
   980  00788C  02                 	db	2
   981  00788D  43                 	db	67
   982  00788E  00                 	db	0
   983  00788F  02                 	db	2
   984  007890  01                 	db	1
   985  007891  00                 	db	0
   986  007892  C0                 	db	192
   987  007893  32                 	db	50
   988  007894  09                 	db	9
   989  007895  04                 	db	4
   990  007896  00                 	db	0
   991  007897  00                 	db	0
   992  007898  01                 	db	1
   993  007899  02                 	db	2
   994  00789A  02                 	db	2
   995  00789B  01                 	db	1
   996  00789C  00                 	db	0
   997  00789D  05                 	db	5
   998  00789E  24                 	db	36
   999  00789F  00                 	db	0
  1000  0078A0  10                 	db	16
  1001  0078A1  01                 	db	1
  1002  0078A2  04                 	db	4
  1003  0078A3  24                 	db	36
  1004  0078A4  02                 	db	2
  1005  0078A5  02                 	db	2
  1006  0078A6  05                 	db	5
  1007  0078A7  24                 	db	36
  1008  0078A8  06                 	db	6
  1009  0078A9  00                 	db	0
  1010  0078AA  01                 	db	1
  1011  0078AB  05                 	db	5
  1012  0078AC  24                 	db	36
  1013  0078AD  01                 	db	1
  1014  0078AE  00                 	db	0
  1015  0078AF  01                 	db	1
  1016  0078B0  07                 	db	7
  1017  0078B1  05                 	db	5
  1018  0078B2  81                 	db	129
  1019  0078B3  03                 	db	3
  1020  0078B4  08                 	db	8
  1021  0078B5  00                 	db	0
  1022  0078B6  02                 	db	2
  1023  0078B7  09                 	db	9
  1024  0078B8  04                 	db	4
  1025  0078B9  01                 	db	1
  1026  0078BA  00                 	db	0
  1027  0078BB  02                 	db	2
  1028  0078BC  0A                 	db	10
  1029  0078BD  00                 	db	0
  1030  0078BE  00                 	db	0
  1031  0078BF  00                 	db	0
  1032  0078C0  07                 	db	7
  1033  0078C1  05                 	db	5
  1034  0078C2  02                 	db	2
  1035  0078C3  02                 	db	2
  1036  0078C4  40                 	db	64
  1037  0078C5  00                 	db	0
  1038  0078C6  00                 	db	0
  1039  0078C7  07                 	db	7
  1040  0078C8  05                 	db	5
  1041  0078C9  82                 	db	130
  1042  0078CA  02                 	db	2
  1043  0078CB  40                 	db	64
  1044  0078CC  00                 	db	0
  1045  0078CD  00                 	db	0
  1046  0078CE                     __end_of_configDescriptor1:
  1047                           	opt stack 0
  1048  0078CE                     _sd001:
  1049                           	opt stack 0
  1050  0078CE  34                 	db	52
  1051  0078CF  03                 	db	3
  1052  0078D0  004D               	dw	77
  1053  0078D2  0069               	dw	105
  1054  0078D4  0063               	dw	99
  1055  0078D6  0072               	dw	114
  1056  0078D8  006F               	dw	111
  1057  0078DA  0063               	dw	99
  1058  0078DC  0068               	dw	104
  1059  0078DE  0069               	dw	105
  1060  0078E0  0070               	dw	112
  1061  0078E2  0020               	dw	32
  1062  0078E4  0054               	dw	84
  1063  0078E6  0065               	dw	101
  1064  0078E8  0063               	dw	99
  1065  0078EA  0068               	dw	104
  1066  0078EC  006E               	dw	110
  1067  0078EE  006F               	dw	111
  1068  0078F0  006C               	dw	108
  1069  0078F2  006F               	dw	111
  1070  0078F4  0067               	dw	103
  1071  0078F6  0079               	dw	121
  1072  0078F8  0020               	dw	32
  1073  0078FA  0049               	dw	73
  1074  0078FC  006E               	dw	110
  1075  0078FE  0063               	dw	99
  1076  007900  002E               	dw	46
  1077  007902                     __end_of_sd001:
  1078                           	opt stack 0
  1079  007902                     _sd002:
  1080                           	opt stack 0
  1081  007902  34                 	db	52
  1082  007903  03                 	db	3
  1083  007904  0043               	dw	67
  1084  007906  0044               	dw	68
  1085  007908  0043               	dw	67
  1086  00790A  0020               	dw	32
  1087  00790C  0052               	dw	82
  1088  00790E  0053               	dw	83
  1089  007910  002D               	dw	45
  1090  007912  0032               	dw	50
  1091  007914  0033               	dw	51
  1092  007916  0032               	dw	50
  1093  007918  0020               	dw	32
  1094  00791A  0045               	dw	69
  1095  00791C  006D               	dw	109
  1096  00791E  0075               	dw	117
  1097  007920  006C               	dw	108
  1098  007922  0061               	dw	97
  1099  007924  0074               	dw	116
  1100  007926  0069               	dw	105
  1101  007928  006F               	dw	111
  1102  00792A  006E               	dw	110
  1103  00792C  0020               	dw	32
  1104  00792E  0044               	dw	68
  1105  007930  0065               	dw	101
  1106  007932  006D               	dw	109
  1107  007934  006F               	dw	111
  1108  007936                     __end_of_sd002:
  1109                           	opt stack 0
  1110  007936                     _device_dsc:
  1111                           	opt stack 0
  1112  007936  12                 	db	18
  1113  007937  01                 	db	1
  1114  007938  0200               	dw	512
  1115  00793A  02                 	db	2
  1116  00793B  00                 	db	0
  1117  00793C  00                 	db	0
  1118  00793D  08                 	db	8
  1119  00793E  04D8               	dw	1240
  1120  007940  000A               	dw	10
  1121  007942  0100               	dw	256
  1122  007944  01                 	db	1
  1123  007945  02                 	db	2
  1124  007946  00                 	db	0
  1125  007947  01                 	db	1
  1126  007948                     __end_of_device_dsc:
  1127                           	opt stack 0
  1128  007948                     _sd000:
  1129                           	opt stack 0
  1130  007948  04                 	db	4
  1131  007949  03                 	db	3
  1132  00794A  0409               	dw	1033
  1133  00794C                     __end_of_sd000:
  1134                           	opt stack 0
  1135  0000                     _ANSELAbits	set	3931
  1136  0000                     _ANSELCbits	set	3933
  1137  0000                     _ACTCON	set	4021
  1138  0000                     _ADCON0	set	4034
  1139  0000                     _ADCON0bits	set	4034
  1140  0000                     _ADCON1	set	4033
  1141  0000                     _ADCON2	set	4032
  1142  0000                     _ADRESH	set	4036
  1143  0000                     _ADRESL	set	4035
  1144  0000                     _BAUDCON	set	4024
  1145  0000                     _CM1CON0	set	3992
  1146  0000                     _CM1CON0bits	set	3992
  1147  0000                     _CM2CON1bits	set	3994
  1148  0000                     _EEADR	set	4009
  1149  0000                     _EECON1bits	set	4006
  1150  0000                     _EECON2	set	4007
  1151  0000                     _EEDATA	set	4008
  1152  0000                     _INTCONbits	set	4082
  1153  0000                     _IOCCbits	set	3975
  1154  0000                     _IPR3bits	set	4005
  1155  0000                     _LATA	set	3977
  1156  0000                     _LATAbits	set	3977
  1157  0000                     _LATB	set	3978
  1158  0000                     _LATBbits	set	3978
  1159  0000                     _LATC	set	3979
  1160  0000                     _LATCbits	set	3979
  1161  0000                     _OSCCON	set	4051
  1162  0000                     _OSCCON2	set	4050
  1163  0000                     _OSCCON2bits	set	4050
  1164  0000                     _OSCTUNE	set	3995
  1165  0000                     _PIE1bits	set	3997
  1166  0000                     _PIE2bits	set	4000
  1167  0000                     _PIE3bits	set	4003
  1168  0000                     _PIR1bits	set	3998
  1169  0000                     _PIR2bits	set	4001
  1170  0000                     _PIR3bits	set	4004
  1171  0000                     _PORTAbits	set	3968
  1172  0000                     _PORTBbits	set	3969
  1173  0000                     _PORTCbits	set	3970
  1174  0000                     _PR2	set	4027
  1175  0000                     _RCONbits	set	4048
  1176  0000                     _RCREG	set	4014
  1177  0000                     _RCSTA	set	4011
  1178  0000                     _RCSTAbits	set	4011
  1179  0000                     _SPBRG	set	4015
  1180  0000                     _SPBRGH	set	4016
  1181  0000                     _SSP1ADD	set	4040
  1182  0000                     _SSP1CON1	set	4038
  1183  0000                     _SSP1CON1bits	set	4038
  1184  0000                     _SSP1STAT	set	4039
  1185  0000                     _SSP1STATbits	set	4039
  1186  0000                     _SSPBUF	set	4041
  1187  0000                     _T1CON	set	4045
  1188  0000                     _T1CONbits	set	4045
  1189  0000                     _T1GCON	set	4044
  1190  0000                     _T1GCONbits	set	4044
  1191  0000                     _T2CON	set	4026
  1192  0000                     _T2CONbits	set	4026
  1193  0000                     _TABLAT	set	4085
  1194  0000                     _TBLPTRH	set	4087
  1195  0000                     _TBLPTRL	set	4086
  1196  0000                     _TBLPTRU	set	4088
  1197  0000                     _TMR1H	set	4047
  1198  0000                     _TMR1L	set	4046
  1199  0000                     _TMR2	set	4028
  1200  0000                     _TRISAbits	set	3986
  1201  0000                     _TRISB	set	3987
  1202  0000                     _TRISBbits	set	3987
  1203  0000                     _TRISC	set	3988
  1204  0000                     _TRISCbits	set	3988
  1205  0000                     _TXREG	set	4013
  1206  0000                     _TXSTA	set	4012
  1207  0000                     _TXSTAbits	set	4012
  1208  0000                     _UADDR	set	3939
  1209  0000                     _UCFG	set	3938
  1210  0000                     _UCON	set	3936
  1211  0000                     _UCONbits	set	3936
  1212  0000                     _UEIE	set	3942
  1213  0000                     _UEIR	set	3943
  1214  0000                     _UEP0bits	set	3946
  1215  0000                     _UIE	set	3940
  1216  0000                     _UIEbits	set	3940
  1217  0000                     _UIR	set	3941
  1218  0000                     _UIRbits	set	3941
  1219  0000                     _USTAT	set	3937
  1220  0000                     _VREFCON0	set	3965
  1221  0000                     _VREFCON0bits	set	3965
  1222  0000                     _WDTCONbits	set	4049
  1223  0000                     _WPUBbits	set	3973
  1224  0000                     _UEP0	set	3946
  1225  0000                     _UEP1	set	3947
  1226  0000                     _CKE	set	32318
  1227  0000                     _CKP	set	32308
  1228  0000                     _GIE	set	32663
  1229  0000                     _PEIE	set	32662
  1230  00794C                     STR_192:
  1231  00794C  73                 	db	115	;'s'
  1232  00794D  79                 	db	121	;'y'
  1233  00794E  73                 	db	115	;'s'
  1234  00794F  20                 	db	32
  1235  007950  73                 	db	115	;'s'
  1236  007951  65                 	db	101	;'e'
  1237  007952  74                 	db	116	;'t'
  1238  007953  20                 	db	32
  1239  007954  70                 	db	112	;'p'
  1240  007955  69                 	db	105	;'i'
  1241  007956  6E                 	db	110	;'n'
  1242  007957  64                 	db	100	;'d'
  1243  007958  69                 	db	105	;'i'
  1244  007959  67                 	db	103	;'g'
  1245  00795A  20                 	db	32
  1246  00795B  47                 	db	71	;'G'
  1247  00795C  50                 	db	80	;'P'
  1248  00795D  49                 	db	73	;'I'
  1249  00795E  4F                 	db	79	;'O'
  1250  00795F  31                 	db	49	;'1'
  1251  007960  30                 	db	48	;'0'
  1252  007961  20                 	db	32
  1253  007962  30                 	db	48	;'0'
  1254  007963  0D                 	db	13
  1255  007964  0A                 	db	10
  1256  007965  00                 	db	0
  1257  007966                     STR_193:
  1258  007966  73                 	db	115	;'s'
  1259  007967  79                 	db	121	;'y'
  1260  007968  73                 	db	115	;'s'
  1261  007969  20                 	db	32
  1262  00796A  73                 	db	115	;'s'
  1263  00796B  65                 	db	101	;'e'
  1264  00796C  74                 	db	116	;'t'
  1265  00796D  20                 	db	32
  1266  00796E  70                 	db	112	;'p'
  1267  00796F  69                 	db	105	;'i'
  1268  007970  6E                 	db	110	;'n'
  1269  007971  64                 	db	100	;'d'
  1270  007972  69                 	db	105	;'i'
  1271  007973  67                 	db	103	;'g'
  1272  007974  20                 	db	32
  1273  007975  47                 	db	71	;'G'
  1274  007976  50                 	db	80	;'P'
  1275  007977  49                 	db	73	;'I'
  1276  007978  4F                 	db	79	;'O'
  1277  007979  31                 	db	49	;'1'
  1278  00797A  31                 	db	49	;'1'
  1279  00797B  20                 	db	32
  1280  00797C  30                 	db	48	;'0'
  1281  00797D  0D                 	db	13
  1282  00797E  0A                 	db	10
  1283  00797F  00                 	db	0
  1284  007980                     STR_190:
  1285  007980  73                 	db	115	;'s'
  1286  007981  79                 	db	121	;'y'
  1287  007982  73                 	db	115	;'s'
  1288  007983  20                 	db	32
  1289  007984  73                 	db	115	;'s'
  1290  007985  65                 	db	101	;'e'
  1291  007986  74                 	db	116	;'t'
  1292  007987  20                 	db	32
  1293  007988  70                 	db	112	;'p'
  1294  007989  69                 	db	105	;'i'
  1295  00798A  6E                 	db	110	;'n'
  1296  00798B  64                 	db	100	;'d'
  1297  00798C  69                 	db	105	;'i'
  1298  00798D  67                 	db	103	;'g'
  1299  00798E  20                 	db	32
  1300  00798F  47                 	db	71	;'G'
  1301  007990  50                 	db	80	;'P'
  1302  007991  49                 	db	73	;'I'
  1303  007992  4F                 	db	79	;'O'
  1304  007993  31                 	db	49	;'1'
  1305  007994  30                 	db	48	;'0'
  1306  007995  20                 	db	32
  1307  007996  31                 	db	49	;'1'
  1308  007997  0D                 	db	13
  1309  007998  0A                 	db	10
  1310  007999  00                 	db	0
  1311  00799A                     STR_191:
  1312  00799A  73                 	db	115	;'s'
  1313  00799B  79                 	db	121	;'y'
  1314  00799C  73                 	db	115	;'s'
  1315  00799D  20                 	db	32
  1316  00799E  73                 	db	115	;'s'
  1317  00799F  65                 	db	101	;'e'
  1318  0079A0  74                 	db	116	;'t'
  1319  0079A1  20                 	db	32
  1320  0079A2  70                 	db	112	;'p'
  1321  0079A3  69                 	db	105	;'i'
  1322  0079A4  6E                 	db	110	;'n'
  1323  0079A5  64                 	db	100	;'d'
  1324  0079A6  69                 	db	105	;'i'
  1325  0079A7  67                 	db	103	;'g'
  1326  0079A8  20                 	db	32
  1327  0079A9  47                 	db	71	;'G'
  1328  0079AA  50                 	db	80	;'P'
  1329  0079AB  49                 	db	73	;'I'
  1330  0079AC  4F                 	db	79	;'O'
  1331  0079AD  31                 	db	49	;'1'
  1332  0079AE  31                 	db	49	;'1'
  1333  0079AF  20                 	db	32
  1334  0079B0  31                 	db	49	;'1'
  1335  0079B1  0D                 	db	13
  1336  0079B2  0A                 	db	10
  1337  0079B3  00                 	db	0
  1338  0079B4                     STR_22:
  1339  0079B4  73                 	db	115	;'s'
  1340  0079B5  79                 	db	121	;'y'
  1341  0079B6  73                 	db	115	;'s'
  1342  0079B7  20                 	db	32
  1343  0079B8  73                 	db	115	;'s'
  1344  0079B9  6C                 	db	108	;'l'
  1345  0079BA  65                 	db	101	;'e'
  1346  0079BB  65                 	db	101	;'e'
  1347  0079BC  70                 	db	112	;'p'
  1348  0079BD  20                 	db	32
  1349  0079BE  39                 	db	57	;'9'
  1350  0079BF  39                 	db	57	;'9'
  1351  0079C0  39                 	db	57	;'9'
  1352  0079C1  39                 	db	57	;'9'
  1353  0079C2  39                 	db	57	;'9'
  1354  0079C3  39                 	db	57	;'9'
  1355  0079C4  39                 	db	57	;'9'
  1356  0079C5  39                 	db	57	;'9'
  1357  0079C6  39                 	db	57	;'9'
  1358  0079C7  00                 	db	0
  1359  0079C8                     STR_83:
  1360  0079C8  28                 	db	40
  1361  0079C9  55                 	db	85	;'U'
  1362  0079CA  4E                 	db	78	;'N'
  1363  0079CB  43                 	db	67	;'C'
  1364  0079CC  4E                 	db	78	;'N'
  1365  0079CD  46                 	db	70	;'F'
  1366  0079CE  29                 	db	41
  1367  0079CF  20                 	db	32
  1368  0079D0  20                 	db	32
  1369  0079D1  20                 	db	32
  1370  0079D2  20                 	db	32
  1371  0079D3  28                 	db	40
  1372  0079D4  43                 	db	67	;'C'
  1373  0079D5  4E                 	db	78	;'N'
  1374  0079D6  46                 	db	70	;'F'
  1375  0079D7  29                 	db	41
  1376  0079D8  20                 	db	32
  1377  0079D9  00                 	db	0
  1378  0079DA                     STR_96:
  1379  0079DA  4D                 	db	77	;'M'
  1380  0079DB  61                 	db	97	;'a'
  1381  0079DC  63                 	db	99	;'c'
  1382  0079DD  20                 	db	32
  1383  0079DE  45                 	db	69	;'E'
  1384  0079DF  72                 	db	114	;'r'
  1385  0079E0  72                 	db	114	;'r'
  1386  0079E1  6F                 	db	111	;'o'
  1387  0079E2  72                 	db	114	;'r'
  1388  0079E3  20                 	db	32
  1389  0079E4  4F                 	db	79	;'O'
  1390  0079E5  63                 	db	99	;'c'
  1391  0079E6  63                 	db	99	;'c'
  1392  0079E7  75                 	db	117	;'u'
  1393  0079E8  72                 	db	114	;'r'
  1394  0079E9  65                 	db	101	;'e'
  1395  0079EA  64                 	db	100	;'d'
  1396  0079EB  00                 	db	0
  1397  0079EC                     STR_142:
  1398  0079EC  52                 	db	82	;'R'
  1399  0079ED  65                 	db	101	;'e'
  1400  0079EE  63                 	db	99	;'c'
  1401  0079EF  65                 	db	101	;'e'
  1402  0079F0  70                 	db	112	;'p'
  1403  0079F1  74                 	db	116	;'t'
  1404  0079F2  69                 	db	105	;'i'
  1405  0079F3  6F                 	db	111	;'o'
  1406  0079F4  6E                 	db	110	;'n'
  1407  0079F5  20                 	db	32
  1408  0079F6  74                 	db	116	;'t'
  1409  0079F7  69                 	db	105	;'i'
  1410  0079F8  6D                 	db	109	;'m'
  1411  0079F9  65                 	db	101	;'e'
  1412  0079FA  6F                 	db	111	;'o'
  1413  0079FB  75                 	db	117	;'u'
  1414  0079FC  74                 	db	116	;'t'
  1415  0079FD  00                 	db	0
  1416  0079FE  48                 	db	72	;'H'
  1417  0079FF  75                 	db	117	;'u'
  1418  007A00  6D                 	db	109	;'m'
  1419  007A01  3A                 	db	58	;':'
  1420  007A02  20                 	db	32
  1421  007A03  20                 	db	32
  1422  007A04  20                 	db	32
  1423  007A05  20                 	db	32
  1424  007A06  20                 	db	32
  1425  007A07  20                 	db	32
  1426  007A08  20                 	db	32
  1427  007A09  20                 	db	32
  1428  007A0A  20                 	db	32
  1429  007A0B  20                 	db	32
  1430  007A0C  20                 	db	32
  1431  007A0D  20                 	db	32
  1432  007A0E  00                 	db	0
  1433  007A0F  54                 	db	84	;'T'
  1434  007A10  65                 	db	101	;'e'
  1435  007A11  6D                 	db	109	;'m'
  1436  007A12  70                 	db	112	;'p'
  1437  007A13  3A                 	db	58	;':'
  1438  007A14  20                 	db	32
  1439  007A15  20                 	db	32
  1440  007A16  20                 	db	32
  1441  007A17  20                 	db	32
  1442  007A18  20                 	db	32
  1443  007A19  20                 	db	32
  1444  007A1A  20                 	db	32
  1445  007A1B  20                 	db	32
  1446  007A1C  20                 	db	32
  1447  007A1D  20                 	db	32
  1448  007A1E  20                 	db	32
  1449  007A1F  00                 	db	0
  1450  007A20                     STR_39:
  1451  007A20  20                 	db	32
  1452  007A21  20                 	db	32
  1453  007A22  28                 	db	40
  1454  007A23  53                 	db	83	;'S'
  1455  007A24  32                 	db	50	;'2'
  1456  007A25  29                 	db	41
  1457  007A26  20                 	db	32
  1458  007A27  20                 	db	32
  1459  007A28  20                 	db	32
  1460  007A29  20                 	db	32
  1461  007A2A  20                 	db	32
  1462  007A2B  20                 	db	32
  1463  007A2C  20                 	db	32
  1464  007A2D  20                 	db	32
  1465  007A2E  20                 	db	32
  1466  007A2F  20                 	db	32
  1467  007A30  00                 	db	0
  1468  007A31  54                 	db	84	;'T'
  1469  007A32  65                 	db	101	;'e'
  1470  007A33  6D                 	db	109	;'m'
  1471  007A34  70                 	db	112	;'p'
  1472  007A35  3A                 	db	58	;':'
  1473  007A36  20                 	db	32
  1474  007A37  2D                 	db	45
  1475  007A38  20                 	db	32
  1476  007A39  20                 	db	32
  1477  007A3A  20                 	db	32
  1478  007A3B  20                 	db	32
  1479  007A3C  20                 	db	32
  1480  007A3D  20                 	db	32
  1481  007A3E  20                 	db	32
  1482  007A3F  20                 	db	32
  1483  007A40  20                 	db	32
  1484  007A41  00                 	db	0
  1485  007A42                     STR_92:
  1486  007A42  20                 	db	32
  1487  007A43  20                 	db	32
  1488  007A44  20                 	db	32
  1489  007A45  20                 	db	32
  1490  007A46  52                 	db	82	;'R'
  1491  007A47  65                 	db	101	;'e'
  1492  007A48  63                 	db	99	;'c'
  1493  007A49  65                 	db	101	;'e'
  1494  007A4A  69                 	db	105	;'i'
  1495  007A4B  76                 	db	118	;'v'
  1496  007A4C  65                 	db	101	;'e'
  1497  007A4D  64                 	db	100	;'d'
  1498  007A4E  20                 	db	32
  1499  007A4F  20                 	db	32
  1500  007A50  20                 	db	32
  1501  007A51  20                 	db	32
  1502  007A52  00                 	db	0
  1503  007A53                     STR_41:
  1504  007A53  20                 	db	32
  1505  007A54  20                 	db	32
  1506  007A55  20                 	db	32
  1507  007A56  20                 	db	32
  1508  007A57  20                 	db	32
  1509  007A58  20                 	db	32
  1510  007A59  20                 	db	32
  1511  007A5A  20                 	db	32
  1512  007A5B  20                 	db	32
  1513  007A5C  28                 	db	40
  1514  007A5D  53                 	db	83	;'S'
  1515  007A5E  33                 	db	51	;'3'
  1516  007A5F  29                 	db	41
  1517  007A60  20                 	db	32
  1518  007A61  20                 	db	32
  1519  007A62  20                 	db	32
  1520  007A63  00                 	db	0
  1521  007A64                     STR_33:
  1522  007A64  20                 	db	32
  1523  007A65  20                 	db	32
  1524  007A66  28                 	db	40
  1525  007A67  53                 	db	83	;'S'
  1526  007A68  32                 	db	50	;'2'
  1527  007A69  29                 	db	41
  1528  007A6A  20                 	db	32
  1529  007A6B  20                 	db	32
  1530  007A6C  20                 	db	32
  1531  007A6D  28                 	db	40
  1532  007A6E  53                 	db	83	;'S'
  1533  007A6F  33                 	db	51	;'3'
  1534  007A70  29                 	db	41
  1535  007A71  20                 	db	32
  1536  007A72  20                 	db	32
  1537  007A73  20                 	db	32
  1538  007A74  00                 	db	0
  1539  007A75  20                 	db	32
  1540  007A76  20                 	db	32
  1541  007A77  4E                 	db	78	;'N'
  1542  007A78  6F                 	db	111	;'o'
  1543  007A79  20                 	db	32
  1544  007A7A  72                 	db	114	;'r'
  1545  007A7B  65                 	db	101	;'e'
  1546  007A7C  73                 	db	115	;'s'
  1547  007A7D  70                 	db	112	;'p'
  1548  007A7E  6F                 	db	111	;'o'
  1549  007A7F  6E                 	db	110	;'n'
  1550  007A80  73                 	db	115	;'s'
  1551  007A81  65                 	db	101	;'e'
  1552  007A82  20                 	db	32
  1553  007A83  20                 	db	32
  1554  007A84  20                 	db	32
  1555  007A85  00                 	db	0
  1556  007A86                     STR_116:
  1557  007A86  20                 	db	32
  1558  007A87  41                 	db	65	;'A'
  1559  007A88  6C                 	db	108	;'l'
  1560  007A89  6C                 	db	108	;'l'
  1561  007A8A  6F                 	db	111	;'o'
  1562  007A8B  77                 	db	119	;'w'
  1563  007A8C  20                 	db	32
  1564  007A8D  43                 	db	67	;'C'
  1565  007A8E  6C                 	db	108	;'l'
  1566  007A8F  61                 	db	97	;'a'
  1567  007A90  73                 	db	115	;'s'
  1568  007A91  73                 	db	115	;'s'
  1569  007A92  20                 	db	32
  1570  007A93  43                 	db	67	;'C'
  1571  007A94  20                 	db	32
  1572  007A95  20                 	db	32
  1573  007A96  00                 	db	0
  1574  007A97                     STR_79:
  1575  007A97  20                 	db	32
  1576  007A98  20                 	db	32
  1577  007A99  4C                 	db	76	;'L'
  1578  007A9A  61                 	db	97	;'a'
  1579  007A9B  73                 	db	115	;'s'
  1580  007A9C  74                 	db	116	;'t'
  1581  007A9D  20                 	db	32
  1582  007A9E  4D                 	db	77	;'M'
  1583  007A9F  65                 	db	101	;'e'
  1584  007AA0  73                 	db	115	;'s'
  1585  007AA1  73                 	db	115	;'s'
  1586  007AA2  61                 	db	97	;'a'
  1587  007AA3  67                 	db	103	;'g'
  1588  007AA4  65                 	db	101	;'e'
  1589  007AA5  20                 	db	32
  1590  007AA6  20                 	db	32
  1591  007AA7  00                 	db	0
  1592  007AA8                     STR_78:
  1593  007AA8  20                 	db	32
  1594  007AA9  56                 	db	86	;'V'
  1595  007AAA  69                 	db	105	;'i'
  1596  007AAB  65                 	db	101	;'e'
  1597  007AAC  77                 	db	119	;'w'
  1598  007AAD  20                 	db	32
  1599  007AAE  44                 	db	68	;'D'
  1600  007AAF  6F                 	db	111	;'o'
  1601  007AB0  77                 	db	119	;'w'
  1602  007AB1  6E                 	db	110	;'n'
  1603  007AB2  6C                 	db	108	;'l'
  1604  007AB3  69                 	db	105	;'i'
  1605  007AB4  6E                 	db	110	;'n'
  1606  007AB5  6B                 	db	107	;'k'
  1607  007AB6  20                 	db	32
  1608  007AB7  20                 	db	32
  1609  007AB8  00                 	db	0
  1610  007AB9                     STR_75:
  1611  007AB9  20                 	db	32
  1612  007ABA  20                 	db	32
  1613  007ABB  49                 	db	73	;'I'
  1614  007ABC  73                 	db	115	;'s'
  1615  007ABD  73                 	db	115	;'s'
  1616  007ABE  75                 	db	117	;'u'
  1617  007ABF  65                 	db	101	;'e'
  1618  007AC0  20                 	db	32
  1619  007AC1  55                 	db	85	;'U'
  1620  007AC2  70                 	db	112	;'p'
  1621  007AC3  6C                 	db	108	;'l'
  1622  007AC4  69                 	db	105	;'i'
  1623  007AC5  6E                 	db	110	;'n'
  1624  007AC6  6B                 	db	107	;'k'
  1625  007AC7  20                 	db	32
  1626  007AC8  20                 	db	32
  1627  007AC9  00                 	db	0
  1628  007ACA                     STR_28:
  1629  007ACA  20                 	db	32
  1630  007ACB  28                 	db	40
  1631  007ACC  53                 	db	83	;'S'
  1632  007ACD  31                 	db	49	;'1'
  1633  007ACE  29                 	db	41
  1634  007ACF  20                 	db	32
  1635  007AD0  20                 	db	32
  1636  007AD1  20                 	db	32
  1637  007AD2  20                 	db	32
  1638  007AD3  20                 	db	32
  1639  007AD4  20                 	db	32
  1640  007AD5  28                 	db	40
  1641  007AD6  53                 	db	83	;'S'
  1642  007AD7  32                 	db	50	;'2'
  1643  007AD8  29                 	db	41
  1644  007AD9  20                 	db	32
  1645  007ADA  00                 	db	0
  1646  007ADB                     STR_31:
  1647  007ADB  20                 	db	32
  1648  007ADC  4A                 	db	74	;'J'
  1649  007ADD  6F                 	db	111	;'o'
  1650  007ADE  69                 	db	105	;'i'
  1651  007ADF  6E                 	db	110	;'n'
  1652  007AE0  69                 	db	105	;'i'
  1653  007AE1  6E                 	db	110	;'n'
  1654  007AE2  67                 	db	103	;'g'
  1655  007AE3  20                 	db	32
  1656  007AE4  4D                 	db	77	;'M'
  1657  007AE5  65                 	db	101	;'e'
  1658  007AE6  74                 	db	116	;'t'
  1659  007AE7  68                 	db	104	;'h'
  1660  007AE8  6F                 	db	111	;'o'
  1661  007AE9  64                 	db	100	;'d'
  1662  007AEA  20                 	db	32
  1663  007AEB  00                 	db	0
  1664  007AEC                     STR_137:
  1665  007AEC  43                 	db	67	;'C'
  1666  007AED  20                 	db	32
  1667  007AEE  43                 	db	67	;'C'
  1668  007AEF  6C                 	db	108	;'l'
  1669  007AF0  61                 	db	97	;'a'
  1670  007AF1  73                 	db	115	;'s'
  1671  007AF2  73                 	db	115	;'s'
  1672  007AF3  20                 	db	32
  1673  007AF4  4D                 	db	77	;'M'
  1674  007AF5  65                 	db	101	;'e'
  1675  007AF6  73                 	db	115	;'s'
  1676  007AF7  73                 	db	115	;'s'
  1677  007AF8  61                 	db	97	;'a'
  1678  007AF9  67                 	db	103	;'g'
  1679  007AFA  65                 	db	101	;'e'
  1680  007AFB  20                 	db	32
  1681  007AFC  00                 	db	0
  1682  007AFD                     STR_91:
  1683  007AFD  53                 	db	83	;'S'
  1684  007AFE  65                 	db	101	;'e'
  1685  007AFF  72                 	db	114	;'r'
  1686  007B00  76                 	db	118	;'v'
  1687  007B01  65                 	db	101	;'e'
  1688  007B02  72                 	db	114	;'r'
  1689  007B03  20                 	db	32
  1690  007B04  52                 	db	82	;'R'
  1691  007B05  65                 	db	101	;'e'
  1692  007B06  73                 	db	115	;'s'
  1693  007B07  70                 	db	112	;'p'
  1694  007B08  6F                 	db	111	;'o'
  1695  007B09  6E                 	db	110	;'n'
  1696  007B0A  73                 	db	115	;'s'
  1697  007B0B  65                 	db	101	;'e'
  1698  007B0C  20                 	db	32
  1699  007B0D  00                 	db	0
  1700  007B0E                     STR_121:
  1701  007B0E  54                 	db	84	;'T'
  1702  007B0F  78                 	db	120	;'x'
  1703  007B10  20                 	db	32
  1704  007B11  45                 	db	69	;'E'
  1705  007B12  76                 	db	118	;'v'
  1706  007B13  65                 	db	101	;'e'
  1707  007B14  6E                 	db	110	;'n'
  1708  007B15  74                 	db	116	;'t'
  1709  007B16  20                 	db	32
  1710  007B17  54                 	db	84	;'T'
  1711  007B18  69                 	db	105	;'i'
  1712  007B19  6D                 	db	109	;'m'
  1713  007B1A  69                 	db	105	;'i'
  1714  007B1B  6E                 	db	110	;'n'
  1715  007B1C  67                 	db	103	;'g'
  1716  007B1D  20                 	db	32
  1717  007B1E  00                 	db	0
  1718  007B1F                     STR_120:
  1719  007B1F  50                 	db	80	;'P'
  1720  007B20  65                 	db	101	;'e'
  1721  007B21  72                 	db	114	;'r'
  1722  007B22  69                 	db	105	;'i'
  1723  007B23  6F                 	db	111	;'o'
  1724  007B24  64                 	db	100	;'d'
  1725  007B25  69                 	db	105	;'i'
  1726  007B26  63                 	db	99	;'c'
  1727  007B27  20                 	db	32
  1728  007B28  55                 	db	85	;'U'
  1729  007B29  70                 	db	112	;'p'
  1730  007B2A  6C                 	db	108	;'l'
  1731  007B2B  69                 	db	105	;'i'
  1732  007B2C  6E                 	db	110	;'n'
  1733  007B2D  6B                 	db	107	;'k'
  1734  007B2E  20                 	db	32
  1735  007B2F  00                 	db	0
  1736  007B30  43                 	db	67	;'C'
  1737  007B31  68                 	db	104	;'h'
  1738  007B32  65                 	db	101	;'e'
  1739  007B33  63                 	db	99	;'c'
  1740  007B34  6B                 	db	107	;'k'
  1741  007B35  20                 	db	32
  1742  007B36  73                 	db	115	;'s'
  1743  007B37  75                 	db	117	;'u'
  1744  007B38  6D                 	db	109	;'m'
  1745  007B39  20                 	db	32
  1746  007B3A  65                 	db	101	;'e'
  1747  007B3B  72                 	db	114	;'r'
  1748  007B3C  72                 	db	114	;'r'
  1749  007B3D  6F                 	db	111	;'o'
  1750  007B3E  72                 	db	114	;'r'
  1751  007B3F  20                 	db	32
  1752  007B40  00                 	db	0
  1753  007B41                     STR_76:
  1754  007B41  20                 	db	32
  1755  007B42  4C                 	db	76	;'L'
  1756  007B43  6F                 	db	111	;'o'
  1757  007B44  52                 	db	82	;'R'
  1758  007B45  61                 	db	97	;'a'
  1759  007B46  57                 	db	87	;'W'
  1760  007B47  41                 	db	65	;'A'
  1761  007B48  4E                 	db	78	;'N'
  1762  007B49  20                 	db	32
  1763  007B4A  50                 	db	80	;'P'
  1764  007B4B  61                 	db	97	;'a'
  1765  007B4C  63                 	db	99	;'c'
  1766  007B4D  6B                 	db	107	;'k'
  1767  007B4E  65                 	db	101	;'e'
  1768  007B4F  74                 	db	116	;'t'
  1769  007B50  20                 	db	32
  1770  007B51  00                 	db	0
  1771  007B52                     STR_32:
  1772  007B52  3C                 	db	60	;'<'
  1773  007B53  2D                 	db	45
  1774  007B54  20                 	db	32
  1775  007B55  41                 	db	65	;'A'
  1776  007B56  42                 	db	66	;'B'
  1777  007B57  50                 	db	80	;'P'
  1778  007B58  20                 	db	32
  1779  007B59  20                 	db	32
  1780  007B5A  20                 	db	32
  1781  007B5B  4F                 	db	79	;'O'
  1782  007B5C  54                 	db	84	;'T'
  1783  007B5D  41                 	db	65	;'A'
  1784  007B5E  41                 	db	65	;'A'
  1785  007B5F  20                 	db	32
  1786  007B60  2D                 	db	45
  1787  007B61  3E                 	db	62	;'>'
  1788  007B62  00                 	db	0
  1789  007B63                     STR_25:
  1790  007B63  52                 	db	82	;'R'
  1791  007B64  65                 	db	101	;'e'
  1792  007B65  52                 	db	82	;'R'
  1793  007B66  75                 	db	117	;'u'
  1794  007B67  6E                 	db	110	;'n'
  1795  007B68  20                 	db	32
  1796  007B69  50                 	db	80	;'P'
  1797  007B6A  77                 	db	119	;'w'
  1798  007B6B  72                 	db	114	;'r'
  1799  007B6C  54                 	db	84	;'T'
  1800  007B6D  73                 	db	115	;'s'
  1801  007B6E  74                 	db	116	;'t'
  1802  007B6F  3C                 	db	60	;'<'
  1803  007B70  53                 	db	83	;'S'
  1804  007B71  32                 	db	50	;'2'
  1805  007B72  3E                 	db	62	;'>'
  1806  007B73  00                 	db	0
  1807  007B74                     STR_70:
  1808  007B74  49                 	db	73	;'I'
  1809  007B75  73                 	db	115	;'s'
  1810  007B76  73                 	db	115	;'s'
  1811  007B77  75                 	db	117	;'u'
  1812  007B78  65                 	db	101	;'e'
  1813  007B79  20                 	db	32
  1814  007B7A  50                 	db	80	;'P'
  1815  007B7B  65                 	db	101	;'e'
  1816  007B7C  72                 	db	114	;'r'
  1817  007B7D  6F                 	db	111	;'o'
  1818  007B7E  64                 	db	100	;'d'
  1819  007B7F  69                 	db	105	;'i'
  1820  007B80  63                 	db	99	;'c'
  1821  007B81  20                 	db	32
  1822  007B82  54                 	db	84	;'T'
  1823  007B83  58                 	db	88	;'X'
  1824  007B84  00                 	db	0
  1825  007B85                     STR_94:
  1826  007B85  44                 	db	68	;'D'
  1827  007B86  61                 	db	97	;'a'
  1828  007B87  74                 	db	116	;'t'
  1829  007B88  61                 	db	97	;'a'
  1830  007B89  20                 	db	32
  1831  007B8A  54                 	db	84	;'T'
  1832  007B8B  72                 	db	114	;'r'
  1833  007B8C  61                 	db	97	;'a'
  1834  007B8D  6E                 	db	110	;'n'
  1835  007B8E  73                 	db	115	;'s'
  1836  007B8F  6D                 	db	109	;'m'
  1837  007B90  69                 	db	105	;'i'
  1838  007B91  74                 	db	116	;'t'
  1839  007B92  74                 	db	116	;'t'
  1840  007B93  65                 	db	101	;'e'
  1841  007B94  64                 	db	100	;'d'
  1842  007B95  00                 	db	0
  1843  007B96                     STR_164:
  1844  007B96  45                 	db	69	;'E'
  1845  007B97  6E                 	db	110	;'n'
  1846  007B98  74                 	db	116	;'t'
  1847  007B99  65                 	db	101	;'e'
  1848  007B9A  72                 	db	114	;'r'
  1849  007B9B  20                 	db	32
  1850  007B9C  53                 	db	83	;'S'
  1851  007B9D  6C                 	db	108	;'l'
  1852  007B9E  65                 	db	101	;'e'
  1853  007B9F  65                 	db	101	;'e'
  1854  007BA0  70                 	db	112	;'p'
  1855  007BA1  20                 	db	32
  1856  007BA2  4D                 	db	77	;'M'
  1857  007BA3  6F                 	db	111	;'o'
  1858  007BA4  64                 	db	100	;'d'
  1859  007BA5  65                 	db	101	;'e'
  1860  007BA6  00                 	db	0
  1861  007BA7                     STR_81:
  1862  007BA7  55                 	db	85	;'U'
  1863  007BA8  70                 	db	112	;'p'
  1864  007BA9  6C                 	db	108	;'l'
  1865  007BAA  69                 	db	105	;'i'
  1866  007BAB  6E                 	db	110	;'n'
  1867  007BAC  6B                 	db	107	;'k'
  1868  007BAD  20                 	db	32
  1869  007BAE  50                 	db	80	;'P'
  1870  007BAF  63                 	db	99	;'c'
  1871  007BB0  6B                 	db	107	;'k'
  1872  007BB1  74                 	db	116	;'t'
  1873  007BB2  20                 	db	32
  1874  007BB3  54                 	db	84	;'T'
  1875  007BB4  79                 	db	121	;'y'
  1876  007BB5  70                 	db	112	;'p'
  1877  007BB6  65                 	db	101	;'e'
  1878  007BB7  00                 	db	0
  1879  007BB8                     STR_146:
  1880  007BB8  53                 	db	83	;'S'
  1881  007BB9  65                 	db	101	;'e'
  1882  007BBA  6C                 	db	108	;'l'
  1883  007BBB  65                 	db	101	;'e'
  1884  007BBC  63                 	db	99	;'c'
  1885  007BBD  74                 	db	116	;'t'
  1886  007BBE  20                 	db	32
  1887  007BBF  44                 	db	68	;'D'
  1888  007BC0  61                 	db	97	;'a'
  1889  007BC1  74                 	db	116	;'t'
  1890  007BC2  61                 	db	97	;'a'
  1891  007BC3  20                 	db	32
  1892  007BC4  52                 	db	82	;'R'
  1893  007BC5  61                 	db	97	;'a'
  1894  007BC6  74                 	db	116	;'t'
  1895  007BC7  65                 	db	101	;'e'
  1896  007BC8  00                 	db	0
  1897  007BC9                     STR_26:
  1898  007BC9  4D                 	db	77	;'M'
  1899  007BCA  6F                 	db	111	;'o'
  1900  007BCB  62                 	db	98	;'b'
  1901  007BCC  69                 	db	105	;'i'
  1902  007BCD  6C                 	db	108	;'l'
  1903  007BCE  65                 	db	101	;'e'
  1904  007BCF  20                 	db	32
  1905  007BD0  4D                 	db	77	;'M'
  1906  007BD1  6F                 	db	111	;'o'
  1907  007BD2  74                 	db	116	;'t'
  1908  007BD3  65                 	db	101	;'e'
  1909  007BD4  20                 	db	32
  1910  007BD5  2D                 	db	45
  1911  007BD6  41                 	db	65	;'A'
  1912  007BD7  70                 	db	112	;'p'
  1913  007BD8  70                 	db	112	;'p'
  1914  007BD9  00                 	db	0
  1915  007BDA  20                 	db	32
  1916  007BDB  66                 	db	102	;'f'
  1917  007BDC  72                 	db	114	;'r'
  1918  007BDD  6F                 	db	111	;'o'
  1919  007BDE  6D                 	db	109	;'m'
  1920  007BDF  20                 	db	32
  1921  007BE0  74                 	db	116	;'t'
  1922  007BE1  68                 	db	104	;'h'
  1923  007BE2  65                 	db	101	;'e'
  1924  007BE3  20                 	db	32
  1925  007BE4  73                 	db	115	;'s'
  1926  007BE5  65                 	db	101	;'e'
  1927  007BE6  6E                 	db	110	;'n'
  1928  007BE7  73                 	db	115	;'s'
  1929  007BE8  6F                 	db	111	;'o'
  1930  007BE9  72                 	db	114	;'r'
  1931  007BEA  00                 	db	0
  1932  007BEB                     STR_27:
  1933  007BEB  4E                 	db	78	;'N'
  1934  007BEC  61                 	db	97	;'a'
  1935  007BED  76                 	db	118	;'v'
  1936  007BEE  69                 	db	105	;'i'
  1937  007BEF  67                 	db	103	;'g'
  1938  007BF0  61                 	db	97	;'a'
  1939  007BF1  74                 	db	116	;'t'
  1940  007BF2  65                 	db	101	;'e'
  1941  007BF3  20                 	db	32
  1942  007BF4  20                 	db	32
  1943  007BF5  53                 	db	83	;'S'
  1944  007BF6  65                 	db	101	;'e'
  1945  007BF7  6C                 	db	108	;'l'
  1946  007BF8  65                 	db	101	;'e'
  1947  007BF9  63                 	db	99	;'c'
  1948  007BFA  74                 	db	116	;'t'
  1949  007BFB  00                 	db	0
  1950  007BFC                     STR_111:
  1951  007BFC  4D                 	db	77	;'M'
  1952  007BFD  65                 	db	101	;'e'
  1953  007BFE  6E                 	db	110	;'n'
  1954  007BFF  75                 	db	117	;'u'
  1955  007C00  20                 	db	32
  1956  007C01  48                 	db	72	;'H'
  1957  007C02  61                 	db	97	;'a'
  1958  007C03  73                 	db	115	;'s'
  1959  007C04  20                 	db	32
  1960  007C05  54                 	db	84	;'T'
  1961  007C06  69                 	db	105	;'i'
  1962  007C07  6D                 	db	109	;'m'
  1963  007C08  65                 	db	101	;'e'
  1964  007C09  6F                 	db	111	;'o'
  1965  007C0A  75                 	db	117	;'u'
  1966  007C0B  74                 	db	116	;'t'
  1967  007C0C  00                 	db	0
  1968  007C0D                     STR_105:
  1969  007C0D  44                 	db	68	;'D'
  1970  007C0E  6F                 	db	111	;'o'
  1971  007C0F  77                 	db	119	;'w'
  1972  007C10  6E                 	db	110	;'n'
  1973  007C11  6C                 	db	108	;'l'
  1974  007C12  69                 	db	105	;'i'
  1975  007C13  6E                 	db	110	;'n'
  1976  007C14  6B                 	db	107	;'k'
  1977  007C15  20                 	db	32
  1978  007C16  44                 	db	68	;'D'
  1979  007C17  69                 	db	105	;'i'
  1980  007C18  73                 	db	115	;'s'
  1981  007C19  70                 	db	112	;'p'
  1982  007C1A  6C                 	db	108	;'l'
  1983  007C1B  61                 	db	97	;'a'
  1984  007C1C  79                 	db	121	;'y'
  1985  007C1D  00                 	db	0
  1986  007C1E                     STR_132:
  1987  007C1E  20                 	db	32
  1988  007C1F  20                 	db	32
  1989  007C20  20                 	db	32
  1990  007C21  20                 	db	32
  1991  007C22  20                 	db	32
  1992  007C23  20                 	db	32
  1993  007C24  20                 	db	32
  1994  007C25  20                 	db	32
  1995  007C26  20                 	db	32
  1996  007C27  20                 	db	32
  1997  007C28  20                 	db	32
  1998  007C29  20                 	db	32
  1999  007C2A  20                 	db	32
  2000  007C2B  20                 	db	32
  2001  007C2C  20                 	db	32
  2002  007C2D  00                 	db	0
  2003  007C2E                     STR_103:
  2004  007C2E  20                 	db	32
  2005  007C2F  20                 	db	32
  2006  007C30  20                 	db	32
  2007  007C31  20                 	db	32
  2008  007C32  44                 	db	68	;'D'
  2009  007C33  69                 	db	105	;'i'
  2010  007C34  73                 	db	115	;'s'
  2011  007C35  70                 	db	112	;'p'
  2012  007C36  6C                 	db	108	;'l'
  2013  007C37  61                 	db	97	;'a'
  2014  007C38  79                 	db	121	;'y'
  2015  007C39  20                 	db	32
  2016  007C3A  20                 	db	32
  2017  007C3B  20                 	db	32
  2018  007C3C  20                 	db	32
  2019  007C3D  00                 	db	0
  2020  007C3E                     STR_102:
  2021  007C3E  20                 	db	32
  2022  007C3F  20                 	db	32
  2023  007C40  53                 	db	83	;'S'
  2024  007C41  65                 	db	101	;'e'
  2025  007C42  6E                 	db	110	;'n'
  2026  007C43  73                 	db	115	;'s'
  2027  007C44  6F                 	db	111	;'o'
  2028  007C45  72                 	db	114	;'r'
  2029  007C46  20                 	db	32
  2030  007C47  44                 	db	68	;'D'
  2031  007C48  61                 	db	97	;'a'
  2032  007C49  74                 	db	116	;'t'
  2033  007C4A  61                 	db	97	;'a'
  2034  007C4B  20                 	db	32
  2035  007C4C  20                 	db	32
  2036  007C4D  00                 	db	0
  2037  007C4E                     STR_114:
  2038  007C4E  28                 	db	40
  2039  007C4F  4E                 	db	78	;'N'
  2040  007C50  41                 	db	65	;'A'
  2041  007C51  56                 	db	86	;'V'
  2042  007C52  29                 	db	41
  2043  007C53  20                 	db	32
  2044  007C54  20                 	db	32
  2045  007C55  20                 	db	32
  2046  007C56  20                 	db	32
  2047  007C57  28                 	db	40
  2048  007C58  43                 	db	67	;'C'
  2049  007C59  4E                 	db	78	;'N'
  2050  007C5A  47                 	db	71	;'G'
  2051  007C5B  29                 	db	41
  2052  007C5C  20                 	db	32
  2053  007C5D  00                 	db	0
  2054  007C5E                     STR_73:
  2055  007C5E  28                 	db	40
  2056  007C5F  4E                 	db	78	;'N'
  2057  007C60  41                 	db	65	;'A'
  2058  007C61  56                 	db	86	;'V'
  2059  007C62  29                 	db	41
  2060  007C63  20                 	db	32
  2061  007C64  20                 	db	32
  2062  007C65  20                 	db	32
  2063  007C66  20                 	db	32
  2064  007C67  28                 	db	40
  2065  007C68  53                 	db	83	;'S'
  2066  007C69  45                 	db	69	;'E'
  2067  007C6A  4C                 	db	76	;'L'
  2068  007C6B  29                 	db	41
  2069  007C6C  20                 	db	32
  2070  007C6D  00                 	db	0
  2071  007C6E                     STR_165:
  2072  007C6E  28                 	db	40
  2073  007C6F  4E                 	db	78	;'N'
  2074  007C70  41                 	db	65	;'A'
  2075  007C71  56                 	db	86	;'V'
  2076  007C72  29                 	db	41
  2077  007C73  20                 	db	32
  2078  007C74  20                 	db	32
  2079  007C75  20                 	db	32
  2080  007C76  20                 	db	32
  2081  007C77  28                 	db	40
  2082  007C78  53                 	db	83	;'S'
  2083  007C79  4C                 	db	76	;'L'
  2084  007C7A  50                 	db	80	;'P'
  2085  007C7B  29                 	db	41
  2086  007C7C  20                 	db	32
  2087  007C7D  00                 	db	0
  2088  007C7E                     STR_133:
  2089  007C7E  72                 	db	114	;'r'
  2090  007C7F  61                 	db	97	;'a'
  2091  007C80  64                 	db	100	;'d'
  2092  007C81  69                 	db	105	;'i'
  2093  007C82  6F                 	db	111	;'o'
  2094  007C83  20                 	db	32
  2095  007C84  73                 	db	115	;'s'
  2096  007C85  65                 	db	101	;'e'
  2097  007C86  74                 	db	116	;'t'
  2098  007C87  20                 	db	32
  2099  007C88  77                 	db	119	;'w'
  2100  007C89  64                 	db	100	;'d'
  2101  007C8A  74                 	db	116	;'t'
  2102  007C8B  20                 	db	32
  2103  007C8C  30                 	db	48	;'0'
  2104  007C8D  00                 	db	0
  2105  007C8E                     STR_178:
  2106  007C8E  6D                 	db	109	;'m'
  2107  007C8F  61                 	db	97	;'a'
  2108  007C90  63                 	db	99	;'c'
  2109  007C91  20                 	db	32
  2110  007C92  73                 	db	115	;'s'
  2111  007C93  65                 	db	101	;'e'
  2112  007C94  74                 	db	116	;'t'
  2113  007C95  20                 	db	32
  2114  007C96  61                 	db	97	;'a'
  2115  007C97  64                 	db	100	;'d'
  2116  007C98  72                 	db	114	;'r'
  2117  007C99  20                 	db	32
  2118  007C9A  6F                 	db	111	;'o'
  2119  007C9B  66                 	db	102	;'f'
  2120  007C9C  66                 	db	102	;'f'
  2121  007C9D  00                 	db	0
  2122  007C9E                     STR_98:
  2123  007C9E  4E                 	db	78	;'N'
  2124  007C9F  6F                 	db	111	;'o'
  2125  007CA0  20                 	db	32
  2126  007CA1  46                 	db	70	;'F'
  2127  007CA2  72                 	db	114	;'r'
  2128  007CA3  65                 	db	101	;'e'
  2129  007CA4  65                 	db	101	;'e'
  2130  007CA5  20                 	db	32
  2131  007CA6  43                 	db	67	;'C'
  2132  007CA7  68                 	db	104	;'h'
  2133  007CA8  61                 	db	97	;'a'
  2134  007CA9  6E                 	db	110	;'n'
  2135  007CAA  6E                 	db	110	;'n'
  2136  007CAB  65                 	db	101	;'e'
  2137  007CAC  6C                 	db	108	;'l'
  2138  007CAD  00                 	db	0
  2139  007CAE                     STR_7:
  2140  007CAE  42                 	db	66	;'B'
  2141  007CAF  75                 	db	117	;'u'
  2142  007CB0  69                 	db	105	;'i'
  2143  007CB1  6C                 	db	108	;'l'
  2144  007CB2  64                 	db	100	;'d'
  2145  007CB3  20                 	db	32
  2146  007CB4  44                 	db	68	;'D'
  2147  007CB5  61                 	db	97	;'a'
  2148  007CB6  74                 	db	116	;'t'
  2149  007CB7  65                 	db	101	;'e'
  2150  007CB8  2F                 	db	47
  2151  007CB9  54                 	db	84	;'T'
  2152  007CBA  69                 	db	105	;'i'
  2153  007CBB  6D                 	db	109	;'m'
  2154  007CBC  65                 	db	101	;'e'
  2155  007CBD  00                 	db	0
  2156  007CBE                     STR_112:
  2157  007CBE  20                 	db	32
  2158  007CBF  20                 	db	32
  2159  007CC0  20                 	db	32
  2160  007CC1  20                 	db	32
  2161  007CC2  45                 	db	69	;'E'
  2162  007CC3  6E                 	db	110	;'n'
  2163  007CC4  61                 	db	97	;'a'
  2164  007CC5  62                 	db	98	;'b'
  2165  007CC6  6C                 	db	108	;'l'
  2166  007CC7  65                 	db	101	;'e'
  2167  007CC8  64                 	db	100	;'d'
  2168  007CC9  20                 	db	32
  2169  007CCA  20                 	db	32
  2170  007CCB  20                 	db	32
  2171  007CCC  00                 	db	0
  2172  007CCD                     STR_131:
  2173  007CCD  20                 	db	32
  2174  007CCE  20                 	db	32
  2175  007CCF  20                 	db	32
  2176  007CD0  20                 	db	32
  2177  007CD1  52                 	db	82	;'R'
  2178  007CD2  75                 	db	117	;'u'
  2179  007CD3  6E                 	db	110	;'n'
  2180  007CD4  6E                 	db	110	;'n'
  2181  007CD5  69                 	db	105	;'i'
  2182  007CD6  6E                 	db	110	;'n'
  2183  007CD7  67                 	db	103	;'g'
  2184  007CD8  20                 	db	32
  2185  007CD9  20                 	db	32
  2186  007CDA  20                 	db	32
  2187  007CDB  00                 	db	0
  2188  007CDC                     STR_113:
  2189  007CDC  20                 	db	32
  2190  007CDD  20                 	db	32
  2191  007CDE  20                 	db	32
  2192  007CDF  20                 	db	32
  2193  007CE0  44                 	db	68	;'D'
  2194  007CE1  69                 	db	105	;'i'
  2195  007CE2  73                 	db	115	;'s'
  2196  007CE3  61                 	db	97	;'a'
  2197  007CE4  62                 	db	98	;'b'
  2198  007CE5  6C                 	db	108	;'l'
  2199  007CE6  65                 	db	101	;'e'
  2200  007CE7  64                 	db	100	;'d'
  2201  007CE8  20                 	db	32
  2202  007CE9  20                 	db	32
  2203  007CEA  00                 	db	0
  2204  007CEB                     STR_187:
  2205  007CEB  6D                 	db	109	;'m'
  2206  007CEC  61                 	db	97	;'a'
  2207  007CED  63                 	db	99	;'c'
  2208  007CEE  20                 	db	32
  2209  007CEF  73                 	db	115	;'s'
  2210  007CF0  65                 	db	101	;'e'
  2211  007CF1  74                 	db	116	;'t'
  2212  007CF2  20                 	db	32
  2213  007CF3  61                 	db	97	;'a'
  2214  007CF4  64                 	db	100	;'d'
  2215  007CF5  72                 	db	114	;'r'
  2216  007CF6  20                 	db	32
  2217  007CF7  6F                 	db	111	;'o'
  2218  007CF8  6E                 	db	110	;'n'
  2219  007CF9  00                 	db	0
  2220  007CFA                     STR_2:
  2221  007CFA  20                 	db	32
  2222  007CFB  20                 	db	32
  2223  007CFC  20                 	db	32
  2224  007CFD  4C                 	db	76	;'L'
  2225  007CFE  6F                 	db	111	;'o'
  2226  007CFF  52                 	db	82	;'R'
  2227  007D00  61                 	db	97	;'a'
  2228  007D01  20                 	db	32
  2229  007D02  44                 	db	68	;'D'
  2230  007D03  65                 	db	101	;'e'
  2231  007D04  6D                 	db	109	;'m'
  2232  007D05  6F                 	db	111	;'o'
  2233  007D06  20                 	db	32
  2234  007D07  20                 	db	32
  2235  007D08  00                 	db	0
  2236  007D09                     STR_3:
  2237  007D09  20                 	db	32
  2238  007D0A  56                 	db	86	;'V'
  2239  007D0B  20                 	db	32
  2240  007D0C  31                 	db	49	;'1'
  2241  007D0D  2E                 	db	46
  2242  007D0E  30                 	db	48	;'0'
  2243  007D0F  2E                 	db	46
  2244  007D10  30                 	db	48	;'0'
  2245  007D11  4C                 	db	76	;'L'
  2246  007D12  20                 	db	32
  2247  007D13  43                 	db	67	;'C'
  2248  007D14  6F                 	db	111	;'o'
  2249  007D15  64                 	db	100	;'d'
  2250  007D16  65                 	db	101	;'e'
  2251  007D17  00                 	db	0
  2252  007D18                     STR_1:
  2253  007D18  4D                 	db	77	;'M'
  2254  007D19  69                 	db	105	;'i'
  2255  007D1A  63                 	db	99	;'c'
  2256  007D1B  72                 	db	114	;'r'
  2257  007D1C  6F                 	db	111	;'o'
  2258  007D1D  63                 	db	99	;'c'
  2259  007D1E  68                 	db	104	;'h'
  2260  007D1F  69                 	db	105	;'i'
  2261  007D20  70                 	db	112	;'p'
  2262  007D21  20                 	db	32
  2263  007D22  4D                 	db	77	;'M'
  2264  007D23  6F                 	db	111	;'o'
  2265  007D24  74                 	db	116	;'t'
  2266  007D25  65                 	db	101	;'e'
  2267  007D26  00                 	db	0
  2268  007D27                     STR_74:
  2269  007D27  6D                 	db	109	;'m'
  2270  007D28  61                 	db	97	;'a'
  2271  007D29  63                 	db	99	;'c'
  2272  007D2A  20                 	db	32
  2273  007D2B  74                 	db	116	;'t'
  2274  007D2C  78                 	db	120	;'x'
  2275  007D2D  20                 	db	32
  2276  007D2E  75                 	db	117	;'u'
  2277  007D2F  6E                 	db	110	;'n'
  2278  007D30  63                 	db	99	;'c'
  2279  007D31  6E                 	db	110	;'n'
  2280  007D32  66                 	db	102	;'f'
  2281  007D33  20                 	db	32
  2282  007D34  00                 	db	0
  2283  007D35                     STR_134:
  2284  007D35  72                 	db	114	;'r'
  2285  007D36  61                 	db	97	;'a'
  2286  007D37  64                 	db	100	;'d'
  2287  007D38  69                 	db	105	;'i'
  2288  007D39  6F                 	db	111	;'o'
  2289  007D3A  20                 	db	32
  2290  007D3B  72                 	db	114	;'r'
  2291  007D3C  78                 	db	120	;'x'
  2292  007D3D  20                 	db	32
  2293  007D3E  39                 	db	57	;'9'
  2294  007D3F  38                 	db	56	;'8'
  2295  007D40  30                 	db	48	;'0'
  2296  007D41  30                 	db	48	;'0'
  2297  007D42  00                 	db	0
  2298  007D43                     STR_42:
  2299  007D43  6D                 	db	109	;'m'
  2300  007D44  61                 	db	97	;'a'
  2301  007D45  63                 	db	99	;'c'
  2302  007D46  20                 	db	32
  2303  007D47  6A                 	db	106	;'j'
  2304  007D48  6F                 	db	111	;'o'
  2305  007D49  69                 	db	105	;'i'
  2306  007D4A  6E                 	db	110	;'n'
  2307  007D4B  20                 	db	32
  2308  007D4C  6F                 	db	111	;'o'
  2309  007D4D  74                 	db	116	;'t'
  2310  007D4E  61                 	db	97	;'a'
  2311  007D4F  61                 	db	97	;'a'
  2312  007D50  00                 	db	0
  2313  007D51                     STR_56:
  2314  007D51  69                 	db	105	;'i'
  2315  007D52  6E                 	db	110	;'n'
  2316  007D53  76                 	db	118	;'v'
  2317  007D54  61                 	db	97	;'a'
  2318  007D55  6C                 	db	108	;'l'
  2319  007D56  69                 	db	105	;'i'
  2320  007D57  64                 	db	100	;'d'
  2321  007D58  5F                 	db	95	;'_'
  2322  007D59  70                 	db	112	;'p'
  2323  007D5A  61                 	db	97	;'a'
  2324  007D5B  72                 	db	114	;'r'
  2325  007D5C  61                 	db	97	;'a'
  2326  007D5D  6D                 	db	109	;'m'
  2327  007D5E  00                 	db	0
  2328  007D5F                     STR_44:
  2329  007D5F  6B                 	db	107	;'k'
  2330  007D60  65                 	db	101	;'e'
  2331  007D61  79                 	db	121	;'y'
  2332  007D62  73                 	db	115	;'s'
  2333  007D63  5F                 	db	95	;'_'
  2334  007D64  6E                 	db	110	;'n'
  2335  007D65  6F                 	db	111	;'o'
  2336  007D66  74                 	db	116	;'t'
  2337  007D67  5F                 	db	95	;'_'
  2338  007D68  69                 	db	105	;'i'
  2339  007D69  6E                 	db	110	;'n'
  2340  007D6A  69                 	db	105	;'i'
  2341  007D6B  74                 	db	116	;'t'
  2342  007D6C  00                 	db	0
  2343  007D6D                     STR_82:
  2344  007D6D  54                 	db	84	;'T'
  2345  007D6E  68                 	db	104	;'h'
  2346  007D6F  72                 	db	114	;'r'
  2347  007D70  6F                 	db	111	;'o'
  2348  007D71  75                 	db	117	;'u'
  2349  007D72  20                 	db	32
  2350  007D73  50                 	db	80	;'P'
  2351  007D74  6F                 	db	111	;'o'
  2352  007D75  72                 	db	114	;'r'
  2353  007D76  74                 	db	116	;'t'
  2354  007D77  23                 	db	35
  2355  007D78  20                 	db	32
  2356  007D79  00                 	db	0
  2357  007D7A                     STR_72:
  2358  007D7A  4C                 	db	76	;'L'
  2359  007D7B  3A                 	db	58	;':'
  2360  007D7C  20                 	db	32
  2361  007D7D  20                 	db	32
  2362  007D7E  20                 	db	32
  2363  007D7F  20                 	db	32
  2364  007D80  20                 	db	32
  2365  007D81  20                 	db	32
  2366  007D82  20                 	db	32
  2367  007D83  54                 	db	84	;'T'
  2368  007D84  3A                 	db	58	;':'
  2369  007D85  20                 	db	32
  2370  007D86  00                 	db	0
  2371  007D87                     STR_179:
  2372  007D87  6D                 	db	109	;'m'
  2373  007D88  61                 	db	97	;'a'
  2374  007D89  63                 	db	99	;'c'
  2375  007D8A  20                 	db	32
  2376  007D8B  73                 	db	115	;'s'
  2377  007D8C  65                 	db	101	;'e'
  2378  007D8D  74                 	db	116	;'t'
  2379  007D8E  20                 	db	32
  2380  007D8F  64                 	db	100	;'d'
  2381  007D90  72                 	db	114	;'r'
  2382  007D91  20                 	db	32
  2383  007D92  30                 	db	48	;'0'
  2384  007D93  00                 	db	0
  2385  007D94                     STR_180:
  2386  007D94  6D                 	db	109	;'m'
  2387  007D95  61                 	db	97	;'a'
  2388  007D96  63                 	db	99	;'c'
  2389  007D97  20                 	db	32
  2390  007D98  73                 	db	115	;'s'
  2391  007D99  65                 	db	101	;'e'
  2392  007D9A  74                 	db	116	;'t'
  2393  007D9B  20                 	db	32
  2394  007D9C  64                 	db	100	;'d'
  2395  007D9D  72                 	db	114	;'r'
  2396  007D9E  20                 	db	32
  2397  007D9F  31                 	db	49	;'1'
  2398  007DA0  00                 	db	0
  2399  007DA1                     STR_181:
  2400  007DA1  6D                 	db	109	;'m'
  2401  007DA2  61                 	db	97	;'a'
  2402  007DA3  63                 	db	99	;'c'
  2403  007DA4  20                 	db	32
  2404  007DA5  73                 	db	115	;'s'
  2405  007DA6  65                 	db	101	;'e'
  2406  007DA7  74                 	db	116	;'t'
  2407  007DA8  20                 	db	32
  2408  007DA9  64                 	db	100	;'d'
  2409  007DAA  72                 	db	114	;'r'
  2410  007DAB  20                 	db	32
  2411  007DAC  32                 	db	50	;'2'
  2412  007DAD  00                 	db	0
  2413  007DAE                     STR_182:
  2414  007DAE  6D                 	db	109	;'m'
  2415  007DAF  61                 	db	97	;'a'
  2416  007DB0  63                 	db	99	;'c'
  2417  007DB1  20                 	db	32
  2418  007DB2  73                 	db	115	;'s'
  2419  007DB3  65                 	db	101	;'e'
  2420  007DB4  74                 	db	116	;'t'
  2421  007DB5  20                 	db	32
  2422  007DB6  64                 	db	100	;'d'
  2423  007DB7  72                 	db	114	;'r'
  2424  007DB8  20                 	db	32
  2425  007DB9  33                 	db	51	;'3'
  2426  007DBA  00                 	db	0
  2427  007DBB                     STR_183:
  2428  007DBB  6D                 	db	109	;'m'
  2429  007DBC  61                 	db	97	;'a'
  2430  007DBD  63                 	db	99	;'c'
  2431  007DBE  20                 	db	32
  2432  007DBF  73                 	db	115	;'s'
  2433  007DC0  65                 	db	101	;'e'
  2434  007DC1  74                 	db	116	;'t'
  2435  007DC2  20                 	db	32
  2436  007DC3  64                 	db	100	;'d'
  2437  007DC4  72                 	db	114	;'r'
  2438  007DC5  20                 	db	32
  2439  007DC6  34                 	db	52	;'4'
  2440  007DC7  00                 	db	0
  2441  007DC8                     STR_184:
  2442  007DC8  6D                 	db	109	;'m'
  2443  007DC9  61                 	db	97	;'a'
  2444  007DCA  63                 	db	99	;'c'
  2445  007DCB  20                 	db	32
  2446  007DCC  73                 	db	115	;'s'
  2447  007DCD  65                 	db	101	;'e'
  2448  007DCE  74                 	db	116	;'t'
  2449  007DCF  20                 	db	32
  2450  007DD0  64                 	db	100	;'d'
  2451  007DD1  72                 	db	114	;'r'
  2452  007DD2  20                 	db	32
  2453  007DD3  35                 	db	53	;'5'
  2454  007DD4  00                 	db	0
  2455  007DD5                     STR_185:
  2456  007DD5  6D                 	db	109	;'m'
  2457  007DD6  61                 	db	97	;'a'
  2458  007DD7  63                 	db	99	;'c'
  2459  007DD8  20                 	db	32
  2460  007DD9  73                 	db	115	;'s'
  2461  007DDA  65                 	db	101	;'e'
  2462  007DDB  74                 	db	116	;'t'
  2463  007DDC  20                 	db	32
  2464  007DDD  64                 	db	100	;'d'
  2465  007DDE  72                 	db	114	;'r'
  2466  007DDF  20                 	db	32
  2467  007DE0  36                 	db	54	;'6'
  2468  007DE1  00                 	db	0
  2469  007DE2                     STR_186:
  2470  007DE2  6D                 	db	109	;'m'
  2471  007DE3  61                 	db	97	;'a'
  2472  007DE4  63                 	db	99	;'c'
  2473  007DE5  20                 	db	32
  2474  007DE6  73                 	db	115	;'s'
  2475  007DE7  65                 	db	101	;'e'
  2476  007DE8  74                 	db	116	;'t'
  2477  007DE9  20                 	db	32
  2478  007DEA  64                 	db	100	;'d'
  2479  007DEB  72                 	db	114	;'r'
  2480  007DEC  20                 	db	32
  2481  007DED  37                 	db	55	;'7'
  2482  007DEE  00                 	db	0
  2483  007DEF                     STR_40:
  2484  007DEF  6D                 	db	109	;'m'
  2485  007DF0  61                 	db	97	;'a'
  2486  007DF1  63                 	db	99	;'c'
  2487  007DF2  20                 	db	32
  2488  007DF3  6A                 	db	106	;'j'
  2489  007DF4  6F                 	db	111	;'o'
  2490  007DF5  69                 	db	105	;'i'
  2491  007DF6  6E                 	db	110	;'n'
  2492  007DF7  20                 	db	32
  2493  007DF8  61                 	db	97	;'a'
  2494  007DF9  62                 	db	98	;'b'
  2495  007DFA  70                 	db	112	;'p'
  2496  007DFB  00                 	db	0
  2497  007DFC                     STR_10:
  2498  007DFC  42                 	db	66	;'B'
  2499  007DFD  75                 	db	117	;'u'
  2500  007DFE  74                 	db	116	;'t'
  2501  007DFF  74                 	db	116	;'t'
  2502  007E00  6F                 	db	111	;'o'
  2503  007E01  6E                 	db	110	;'n'
  2504  007E02  20                 	db	32
  2505  007E03  54                 	db	84	;'T'
  2506  007E04  65                 	db	101	;'e'
  2507  007E05  73                 	db	115	;'s'
  2508  007E06  74                 	db	116	;'t'
  2509  007E07  3A                 	db	58	;':'
  2510  007E08  00                 	db	0
  2511  007E09                     STR_13:
  2512  007E09  42                 	db	66	;'B'
  2513  007E0A  75                 	db	117	;'u'
  2514  007E0B  74                 	db	116	;'t'
  2515  007E0C  74                 	db	116	;'t'
  2516  007E0D  6F                 	db	111	;'o'
  2517  007E0E  6E                 	db	110	;'n'
  2518  007E0F  31                 	db	49	;'1'
  2519  007E10  20                 	db	32
  2520  007E11  50                 	db	80	;'P'
  2521  007E12  41                 	db	65	;'A'
  2522  007E13  53                 	db	83	;'S'
  2523  007E14  53                 	db	83	;'S'
  2524  007E15  00                 	db	0
  2525  007E16                     STR_14:
  2526  007E16  42                 	db	66	;'B'
  2527  007E17  75                 	db	117	;'u'
  2528  007E18  74                 	db	116	;'t'
  2529  007E19  74                 	db	116	;'t'
  2530  007E1A  6F                 	db	111	;'o'
  2531  007E1B  6E                 	db	110	;'n'
  2532  007E1C  32                 	db	50	;'2'
  2533  007E1D  20                 	db	32
  2534  007E1E  50                 	db	80	;'P'
  2535  007E1F  41                 	db	65	;'A'
  2536  007E20  53                 	db	83	;'S'
  2537  007E21  53                 	db	83	;'S'
  2538  007E22  00                 	db	0
  2539  007E23                     STR_12:
  2540  007E23  50                 	db	80	;'P'
  2541  007E24  72                 	db	114	;'r'
  2542  007E25  65                 	db	101	;'e'
  2543  007E26  73                 	db	115	;'s'
  2544  007E27  73                 	db	115	;'s'
  2545  007E28  20                 	db	32
  2546  007E29  42                 	db	66	;'B'
  2547  007E2A  75                 	db	117	;'u'
  2548  007E2B  74                 	db	116	;'t'
  2549  007E2C  74                 	db	116	;'t'
  2550  007E2D  6F                 	db	111	;'o'
  2551  007E2E  6E                 	db	110	;'n'
  2552  007E2F  00                 	db	0
  2553  007E30                     STR_202:
  2554  007E30  55                 	db	85	;'U'
  2555  007E31  53                 	db	83	;'S'
  2556  007E32  42                 	db	66	;'B'
  2557  007E33  20                 	db	32
  2558  007E34  48                 	db	72	;'H'
  2559  007E35  61                 	db	97	;'a'
  2560  007E36  6E                 	db	110	;'n'
  2561  007E37  64                 	db	100	;'d'
  2562  007E38  6C                 	db	108	;'l'
  2563  007E39  65                 	db	101	;'e'
  2564  007E3A  72                 	db	114	;'r'
  2565  007E3B  00                 	db	0
  2566  007E3C                     STR_71:
  2567  007E3C  4F                 	db	79	;'O'
  2568  007E3D  6E                 	db	110	;'n'
  2569  007E3E  20                 	db	32
  2570  007E3F  50                 	db	80	;'P'
  2571  007E40  6F                 	db	111	;'o'
  2572  007E41  72                 	db	114	;'r'
  2573  007E42  74                 	db	116	;'t'
  2574  007E43  20                 	db	32
  2575  007E44  23                 	db	35
  2576  007E45  3A                 	db	58	;':'
  2577  007E46  20                 	db	32
  2578  007E47  00                 	db	0
  2579  007E48                     STR_88:
  2580  007E48  54                 	db	84	;'T'
  2581  007E49  78                 	db	120	;'x'
  2582  007E4A  20                 	db	32
  2583  007E4B  50                 	db	80	;'P'
  2584  007E4C  6F                 	db	111	;'o'
  2585  007E4D  72                 	db	114	;'r'
  2586  007E4E  74                 	db	116	;'t'
  2587  007E4F  20                 	db	32
  2588  007E50  23                 	db	35
  2589  007E51  3A                 	db	58	;':'
  2590  007E52  20                 	db	32
  2591  007E53  00                 	db	0
  2592  007E54                     STR_86:
  2593  007E54  53                 	db	83	;'S'
  2594  007E55  65                 	db	101	;'e'
  2595  007E56  6E                 	db	110	;'n'
  2596  007E57  74                 	db	116	;'t'
  2597  007E58  20                 	db	32
  2598  007E59  44                 	db	68	;'D'
  2599  007E5A  61                 	db	97	;'a'
  2600  007E5B  74                 	db	116	;'t'
  2601  007E5C  61                 	db	97	;'a'
  2602  007E5D  3A                 	db	58	;':'
  2603  007E5E  20                 	db	32
  2604  007E5F  00                 	db	0
  2605  007E60                     STR_147:
  2606  007E60  44                 	db	68	;'D'
  2607  007E61  61                 	db	97	;'a'
  2608  007E62  74                 	db	116	;'t'
  2609  007E63  61                 	db	97	;'a'
  2610  007E64  20                 	db	32
  2611  007E65  52                 	db	82	;'R'
  2612  007E66  61                 	db	97	;'a'
  2613  007E67  74                 	db	116	;'t'
  2614  007E68  65                 	db	101	;'e'
  2615  007E69  3A                 	db	58	;':'
  2616  007E6A  20                 	db	32
  2617  007E6B  00                 	db	0
  2618  007E6C                     STR_85:
  2619  007E6C  6D                 	db	109	;'m'
  2620  007E6D  61                 	db	97	;'a'
  2621  007E6E  63                 	db	99	;'c'
  2622  007E6F  20                 	db	32
  2623  007E70  74                 	db	116	;'t'
  2624  007E71  78                 	db	120	;'x'
  2625  007E72  20                 	db	32
  2626  007E73  63                 	db	99	;'c'
  2627  007E74  6E                 	db	110	;'n'
  2628  007E75  66                 	db	102	;'f'
  2629  007E76  20                 	db	32
  2630  007E77  00                 	db	0
  2631  007E78                     STR_8:
  2632  007E78  46                 	db	70	;'F'
  2633  007E79  65                 	db	101	;'e'
  2634  007E7A  62                 	db	98	;'b'
  2635  007E7B  20                 	db	32
  2636  007E7C  31                 	db	49	;'1'
  2637  007E7D  36                 	db	54	;'6'
  2638  007E7E  20                 	db	32
  2639  007E7F  32                 	db	50	;'2'
  2640  007E80  30                 	db	48	;'0'
  2641  007E81  31                 	db	49	;'1'
  2642  007E82  37                 	db	55	;'7'
  2643  007E83  00                 	db	0
  2644  007E84                     STR_11:
  2645  007E84  42                 	db	66	;'B'
  2646  007E85  75                 	db	117	;'u'
  2647  007E86  74                 	db	116	;'t'
  2648  007E87  74                 	db	116	;'t'
  2649  007E88  6F                 	db	111	;'o'
  2650  007E89  6E                 	db	110	;'n'
  2651  007E8A  20                 	db	32
  2652  007E8B  46                 	db	70	;'F'
  2653  007E8C  41                 	db	65	;'A'
  2654  007E8D  49                 	db	73	;'I'
  2655  007E8E  4C                 	db	76	;'L'
  2656  007E8F  00                 	db	0
  2657  007E90                     STR_60:
  2658  007E90  4F                 	db	79	;'O'
  2659  007E91  54                 	db	84	;'T'
  2660  007E92  41                 	db	65	;'A'
  2661  007E93  41                 	db	65	;'A'
  2662  007E94  20                 	db	32
  2663  007E95  4A                 	db	74	;'J'
  2664  007E96  6F                 	db	111	;'o'
  2665  007E97  69                 	db	105	;'i'
  2666  007E98  6E                 	db	110	;'n'
  2667  007E99  20                 	db	32
  2668  007E9A  00                 	db	0
  2669  007E9B                     STR_58:
  2670  007E9B  6E                 	db	110	;'n'
  2671  007E9C  6F                 	db	111	;'o'
  2672  007E9D  5F                 	db	95	;'_'
  2673  007E9E  66                 	db	102	;'f'
  2674  007E9F  72                 	db	114	;'r'
  2675  007EA0  65                 	db	101	;'e'
  2676  007EA1  65                 	db	101	;'e'
  2677  007EA2  5F                 	db	95	;'_'
  2678  007EA3  63                 	db	99	;'c'
  2679  007EA4  68                 	db	104	;'h'
  2680  007EA5  00                 	db	0
  2681  007EA6                     STR_50:
  2682  007EA6  53                 	db	83	;'S'
  2683  007EA7  75                 	db	117	;'u'
  2684  007EA8  63                 	db	99	;'c'
  2685  007EA9  63                 	db	99	;'c'
  2686  007EAA  65                 	db	101	;'e'
  2687  007EAB  73                 	db	115	;'s'
  2688  007EAC  73                 	db	115	;'s'
  2689  007EAD  66                 	db	102	;'f'
  2690  007EAE  75                 	db	117	;'u'
  2691  007EAF  6C                 	db	108	;'l'
  2692  007EB0  00                 	db	0
  2693  007EB1                     STR_67:
  2694  007EB1  6D                 	db	109	;'m'
  2695  007EB2  61                 	db	97	;'a'
  2696  007EB3  63                 	db	99	;'c'
  2697  007EB4  20                 	db	32
  2698  007EB5  67                 	db	103	;'g'
  2699  007EB6  65                 	db	101	;'e'
  2700  007EB7  74                 	db	116	;'t'
  2701  007EB8  20                 	db	32
  2702  007EB9  64                 	db	100	;'d'
  2703  007EBA  72                 	db	114	;'r'
  2704  007EBB  00                 	db	0
  2705  007EBC                     STR_45:
  2706  007EBC  56                 	db	86	;'V'
  2707  007EBD  61                 	db	97	;'a'
  2708  007EBE  6C                 	db	108	;'l'
  2709  007EBF  69                 	db	105	;'i'
  2710  007EC0  64                 	db	100	;'d'
  2711  007EC1  20                 	db	32
  2712  007EC2  4B                 	db	75	;'K'
  2713  007EC3  65                 	db	101	;'e'
  2714  007EC4  79                 	db	121	;'y'
  2715  007EC5  73                 	db	115	;'s'
  2716  007EC6  00                 	db	0
  2717  007EC7                     STR_15:
  2718  007EC7  43                 	db	67	;'C'
  2719  007EC8  6F                 	db	111	;'o'
  2720  007EC9  6D                 	db	109	;'m'
  2721  007ECA  6D                 	db	109	;'m'
  2722  007ECB  20                 	db	32
  2723  007ECC  54                 	db	84	;'T'
  2724  007ECD  65                 	db	101	;'e'
  2725  007ECE  73                 	db	115	;'s'
  2726  007ECF  74                 	db	116	;'t'
  2727  007ED0  3A                 	db	58	;':'
  2728  007ED1  00                 	db	0
  2729  007ED2                     STR_106:
  2730  007ED2  52                 	db	82	;'R'
  2731  007ED3  78                 	db	120	;'x'
  2732  007ED4  20                 	db	32
  2733  007ED5  50                 	db	80	;'P'
  2734  007ED6  6F                 	db	111	;'o'
  2735  007ED7  72                 	db	114	;'r'
  2736  007ED8  74                 	db	116	;'t'
  2737  007ED9  23                 	db	35
  2738  007EDA  20                 	db	32
  2739  007EDB  00                 	db	0
  2740  007EDC                     STR_49:
  2741  007EDC  41                 	db	65	;'A'
  2742  007EDD  42                 	db	66	;'B'
  2743  007EDE  50                 	db	80	;'P'
  2744  007EDF  20                 	db	32
  2745  007EE0  4A                 	db	74	;'J'
  2746  007EE1  6F                 	db	111	;'o'
  2747  007EE2  69                 	db	105	;'i'
  2748  007EE3  6E                 	db	110	;'n'
  2749  007EE4  20                 	db	32
  2750  007EE5  00                 	db	0
  2751  007EE6                     STR_23:
  2752  007EE6  4D                 	db	77	;'M'
  2753  007EE7  4F                 	db	79	;'O'
  2754  007EE8  54                 	db	84	;'T'
  2755  007EE9  45                 	db	69	;'E'
  2756  007EEA  20                 	db	32
  2757  007EEB  4D                 	db	77	;'M'
  2758  007EEC  6F                 	db	111	;'o'
  2759  007EED  64                 	db	100	;'d'
  2760  007EEE  65                 	db	101	;'e'
  2761  007EEF  00                 	db	0
  2762  007EF0                     STR_63:
  2763  007EF0  4F                 	db	79	;'O'
  2764  007EF1  54                 	db	84	;'T'
  2765  007EF2  41                 	db	65	;'A'
  2766  007EF3  41                 	db	65	;'A'
  2767  007EF4  20                 	db	32
  2768  007EF5  4A                 	db	74	;'J'
  2769  007EF6  6F                 	db	111	;'o'
  2770  007EF7  69                 	db	105	;'i'
  2771  007EF8  6E                 	db	110	;'n'
  2772  007EF9  00                 	db	0
  2773  007EFA                     STR_51:
  2774  007EFA  6D                 	db	109	;'m'
  2775  007EFB  61                 	db	97	;'a'
  2776  007EFC  63                 	db	99	;'c'
  2777  007EFD  20                 	db	32
  2778  007EFE  72                 	db	114	;'r'
  2779  007EFF  65                 	db	101	;'e'
  2780  007F00  73                 	db	115	;'s'
  2781  007F01  65                 	db	101	;'e'
  2782  007F02  74                 	db	116	;'t'
  2783  007F03  00                 	db	0
  2784  007F04                     STR_29:
  2785  007F04  73                 	db	115	;'s'
  2786  007F05  79                 	db	121	;'y'
  2787  007F06  73                 	db	115	;'s'
  2788  007F07  20                 	db	32
  2789  007F08  72                 	db	114	;'r'
  2790  007F09  65                 	db	101	;'e'
  2791  007F0A  73                 	db	115	;'s'
  2792  007F0B  65                 	db	101	;'e'
  2793  007F0C  74                 	db	116	;'t'
  2794  007F0D  00                 	db	0
  2795  007F0E                     STR_16:
  2796  007F0E  4C                 	db	76	;'L'
  2797  007F0F  45                 	db	69	;'E'
  2798  007F10  44                 	db	68	;'D'
  2799  007F11  20                 	db	32
  2800  007F12  54                 	db	84	;'T'
  2801  007F13  65                 	db	101	;'e'
  2802  007F14  73                 	db	115	;'s'
  2803  007F15  74                 	db	116	;'t'
  2804  007F16  3A                 	db	58	;':'
  2805  007F17  00                 	db	0
  2806  007F18                     STR_200:
  2807  007F18  43                 	db	67	;'C'
  2808  007F19  44                 	db	68	;'D'
  2809  007F1A  43                 	db	67	;'C'
  2810  007F1B  20                 	db	32
  2811  007F1C  4D                 	db	77	;'M'
  2812  007F1D  6F                 	db	111	;'o'
  2813  007F1E  64                 	db	100	;'d'
  2814  007F1F  65                 	db	101	;'e'
  2815  007F20  00                 	db	0
  2816  007F21                     STR_46:
  2817  007F21  52                 	db	82	;'R'
  2818  007F22  65                 	db	101	;'e'
  2819  007F23  71                 	db	113	;'q'
  2820  007F24  75                 	db	117	;'u'
  2821  007F25  69                 	db	105	;'i'
  2822  007F26  72                 	db	114	;'r'
  2823  007F27  65                 	db	101	;'e'
  2824  007F28  64                 	db	100	;'d'
  2825  007F29  00                 	db	0
  2826  007F2A                     STR_48:
  2827  007F2A  61                 	db	97	;'a'
  2828  007F2B  63                 	db	99	;'c'
  2829  007F2C  63                 	db	99	;'c'
  2830  007F2D  65                 	db	101	;'e'
  2831  007F2E  70                 	db	112	;'p'
  2832  007F2F  74                 	db	116	;'t'
  2833  007F30  65                 	db	101	;'e'
  2834  007F31  64                 	db	100	;'d'
  2835  007F32  00                 	db	0
  2836  007F33                     STR_188:
  2837  007F33  6D                 	db	109	;'m'
  2838  007F34  61                 	db	97	;'a'
  2839  007F35  63                 	db	99	;'c'
  2840  007F36  20                 	db	32
  2841  007F37  73                 	db	115	;'s'
  2842  007F38  61                 	db	97	;'a'
  2843  007F39  76                 	db	118	;'v'
  2844  007F3A  65                 	db	101	;'e'
  2845  007F3B  00                 	db	0
  2846  007F3C                     STR_24:
  2847  007F3C  53                 	db	83	;'S'
  2848  007F3D  74                 	db	116	;'t'
  2849  007F3E  61                 	db	97	;'a'
  2850  007F3F  72                 	db	114	;'r'
  2851  007F40  74                 	db	116	;'t'
  2852  007F41  69                 	db	105	;'i'
  2853  007F42  6E                 	db	110	;'n'
  2854  007F43  67                 	db	103	;'g'
  2855  007F44  00                 	db	0
  2856  007F45                     STR_4:
  2857  007F45  4D                 	db	77	;'M'
  2858  007F46  6F                 	db	111	;'o'
  2859  007F47  54                 	db	84	;'T'
  2860  007F48  65                 	db	101	;'e'
  2861  007F49  20                 	db	32
  2862  007F4A  76                 	db	118	;'v'
  2863  007F4B  20                 	db	32
  2864  007F4C  2E                 	db	46
  2865  007F4D  00                 	db	0
  2866  007F4E                     STR_9:
  2867  007F4E  31                 	db	49	;'1'
  2868  007F4F  35                 	db	53	;'5'
  2869  007F50  3A                 	db	58	;':'
  2870  007F51  32                 	db	50	;'2'
  2871  007F52  36                 	db	54	;'6'
  2872  007F53  3A                 	db	58	;':'
  2873  007F54  31                 	db	49	;'1'
  2874  007F55  37                 	db	55	;'7'
  2875  007F56  00                 	db	0
  2876  007F57  52                 	db	82	;'R'
  2877  007F58  46                 	db	70	;'F'
  2878  007F59  20                 	db	32
  2879  007F5A  54                 	db	84	;'T'
  2880  007F5B  65                 	db	101	;'e'
  2881  007F5C  73                 	db	115	;'s'
  2882  007F5D  74                 	db	116	;'t'
  2883  007F5E  3A                 	db	58	;':'
  2884  007F5F  00                 	db	0
  2885  007F60                     STR_17:
  2886  007F60  41                 	db	65	;'A'
  2887  007F61  44                 	db	68	;'D'
  2888  007F62  43                 	db	67	;'C'
  2889  007F63  20                 	db	32
  2890  007F64  54                 	db	84	;'T'
  2891  007F65  65                 	db	101	;'e'
  2892  007F66  73                 	db	115	;'s'
  2893  007F67  74                 	db	116	;'t'
  2894  007F68  00                 	db	0
  2895  007F69                     STR_201:
  2896  007F69  43                 	db	67	;'C'
  2897  007F6A  6F                 	db	111	;'o'
  2898  007F6B  6D                 	db	109	;'m'
  2899  007F6C  6D                 	db	109	;'m'
  2900  007F6D  61                 	db	97	;'a'
  2901  007F6E  6E                 	db	110	;'n'
  2902  007F6F  64                 	db	100	;'d'
  2903  007F70  00                 	db	0
  2904  007F71                     STR_18:
  2905  007F71  54                 	db	84	;'T'
  2906  007F72  65                 	db	101	;'e'
  2907  007F73  6D                 	db	109	;'m'
  2908  007F74  70                 	db	112	;'p'
  2909  007F75  20                 	db	32
  2910  007F76  20                 	db	32
  2911  007F77  3D                 	db	61	;'='
  2912  007F78  00                 	db	0
  2913  007F79                     STR_19:
  2914  007F79  4C                 	db	76	;'L'
  2915  007F7A  69                 	db	105	;'i'
  2916  007F7B  67                 	db	103	;'g'
  2917  007F7C  68                 	db	104	;'h'
  2918  007F7D  74                 	db	116	;'t'
  2919  007F7E  20                 	db	32
  2920  007F7F  3D                 	db	61	;'='
  2921  007F80  00                 	db	0
  2922  007F81                     STR_122:
  2923  007F81  45                 	db	69	;'E'
  2924  007F82  76                 	db	118	;'v'
  2925  007F83  65                 	db	101	;'e'
  2926  007F84  72                 	db	114	;'r'
  2927  007F85  79                 	db	121	;'y'
  2928  007F86  3A                 	db	58	;':'
  2929  007F87  00                 	db	0
  2930  007F88                     STR_64:
  2931  007F88  44                 	db	68	;'D'
  2932  007F89  65                 	db	101	;'e'
  2933  007F8A  6E                 	db	110	;'n'
  2934  007F8B  69                 	db	105	;'i'
  2935  007F8C  65                 	db	101	;'e'
  2936  007F8D  64                 	db	100	;'d'
  2937  007F8E  00                 	db	0
  2938  007F8F                     STR_62:
  2939  007F8F  64                 	db	100	;'d'
  2940  007F90  65                 	db	101	;'e'
  2941  007F91  6E                 	db	110	;'n'
  2942  007F92  69                 	db	105	;'i'
  2943  007F93  65                 	db	101	;'e'
  2944  007F94  64                 	db	100	;'d'
  2945  007F95  00                 	db	0
  2946  007F96                     STR_97:
  2947  007F96  6E                 	db	110	;'n'
  2948  007F97  6F                 	db	111	;'o'
  2949  007F98  5F                 	db	95	;'_'
  2950  007F99  66                 	db	102	;'f'
  2951  007F9A  72                 	db	114	;'r'
  2952  007F9B  65                 	db	101	;'e'
  2953  007F9C  00                 	db	0
  2954  007F9D                     STR_95:
  2955  007F9D  6D                 	db	109	;'m'
  2956  007F9E  61                 	db	97	;'a'
  2957  007F9F  63                 	db	99	;'c'
  2958  007FA0  5F                 	db	95	;'_'
  2959  007FA1  65                 	db	101	;'e'
  2960  007FA2  72                 	db	114	;'r'
  2961  007FA3  00                 	db	0
  2962  007FA4                     STR_90:
  2963  007FA4  6D                 	db	109	;'m'
  2964  007FA5  61                 	db	97	;'a'
  2965  007FA6  63                 	db	99	;'c'
  2966  007FA7  5F                 	db	95	;'_'
  2967  007FA8  72                 	db	114	;'r'
  2968  007FA9  78                 	db	120	;'x'
  2969  007FAA  00                 	db	0
  2970  007FAB                     STR_93:
  2971  007FAB  6D                 	db	109	;'m'
  2972  007FAC  61                 	db	97	;'a'
  2973  007FAD  63                 	db	99	;'c'
  2974  007FAE  5F                 	db	95	;'_'
  2975  007FAF  74                 	db	116	;'t'
  2976  007FB0  78                 	db	120	;'x'
  2977  007FB1  00                 	db	0
  2978  007FB2                     STR_30:
  2979  007FB2  52                 	db	82	;'R'
  2980  007FB3  4E                 	db	78	;'N'
  2981  007FB4  32                 	db	50	;'2'
  2982  007FB5  34                 	db	52	;'4'
  2983  007FB6  00                 	db	0
  2984  007FB7                     STR_34:
  2985  007FB7  52                 	db	82	;'R'
  2986  007FB8  4E                 	db	78	;'N'
  2987  007FB9  32                 	db	50	;'2'
  2988  007FBA  39                 	db	57	;'9'
  2989  007FBB  00                 	db	0
  2990  007FBC                     STR_123:
  2991  007FBC  4D                 	db	77	;'M'
  2992  007FBD  69                 	db	105	;'i'
  2993  007FBE  6E                 	db	110	;'n'
  2994  007FBF  73                 	db	115	;'s'
  2995  007FC0  00                 	db	0
  2996  007FC1                     STR_149:
  2997  007FC1  20                 	db	32
  2998  007FC2  30                 	db	48	;'0'
  2999  007FC3  20                 	db	32
  3000  007FC4  00                 	db	0
  3001  007FC5                     STR_150:
  3002  007FC5  20                 	db	32
  3003  007FC6  31                 	db	49	;'1'
  3004  007FC7  20                 	db	32
  3005  007FC8  00                 	db	0
  3006  007FC9                     STR_151:
  3007  007FC9  20                 	db	32
  3008  007FCA  32                 	db	50	;'2'
  3009  007FCB  20                 	db	32
  3010  007FCC  00                 	db	0
  3011  007FCD                     STR_152:
  3012  007FCD  20                 	db	32
  3013  007FCE  33                 	db	51	;'3'
  3014  007FCF  20                 	db	32
  3015  007FD0  00                 	db	0
  3016  007FD1                     STR_153:
  3017  007FD1  20                 	db	32
  3018  007FD2  34                 	db	52	;'4'
  3019  007FD3  20                 	db	32
  3020  007FD4  00                 	db	0
  3021  007FD5                     STR_154:
  3022  007FD5  20                 	db	32
  3023  007FD6  35                 	db	53	;'5'
  3024  007FD7  20                 	db	32
  3025  007FD8  00                 	db	0
  3026  007FD9                     STR_155:
  3027  007FD9  20                 	db	32
  3028  007FDA  36                 	db	54	;'6'
  3029  007FDB  20                 	db	32
  3030  007FDC  00                 	db	0
  3031  007FDD                     STR_156:
  3032  007FDD  20                 	db	32
  3033  007FDE  37                 	db	55	;'7'
  3034  007FDF  20                 	db	32
  3035  007FE0  00                 	db	0
  3036  007FE1                     STR_159:
  3037  007FE1  20                 	db	32
  3038  007FE2  31                 	db	49	;'1'
  3039  007FE3  30                 	db	48	;'0'
  3040  007FE4  00                 	db	0
  3041  007FE5                     STR_161:
  3042  007FE5  20                 	db	32
  3043  007FE6  33                 	db	51	;'3'
  3044  007FE7  30                 	db	48	;'0'
  3045  007FE8  00                 	db	0
  3046  007FE9                     STR_162:
  3047  007FE9  20                 	db	32
  3048  007FEA  36                 	db	54	;'6'
  3049  007FEB  30                 	db	48	;'0'
  3050  007FEC  00                 	db	0
  3051  007FED                     STR_160:
  3052  007FED  20                 	db	32
  3053  007FEE  31                 	db	49	;'1'
  3054  007FEF  35                 	db	53	;'5'
  3055  007FF0  00                 	db	0
  3056  007FF1                     STR_129:
  3057  007FF1  4F                 	db	79	;'O'
  3058  007FF2  46                 	db	70	;'F'
  3059  007FF3  46                 	db	70	;'F'
  3060  007FF4  00                 	db	0
  3061  007FF5                     STR_157:
  3062  007FF5  41                 	db	65	;'A'
  3063  007FF6  44                 	db	68	;'D'
  3064  007FF7  52                 	db	82	;'R'
  3065  007FF8  00                 	db	0
  3066  007FF9                     STR_43:
  3067  007FF9  6F                 	db	111	;'o'
  3068  007FFA  6B                 	db	107	;'k'
  3069  007FFB  00                 	db	0
  3070  007FFC                     STR_21:
  3071  007FFC  7A                 	db	122	;'z'
  3072  007FFD  00                 	db	0
  3073  0000                     
  3074                           ; #config settings
  3075  007FFE  00                 	db	0	; dummy byte at the end
  3076  0000                     
  3077                           	psect	cinit
  3078  004FAE                     __pcinit:
  3079                           	opt stack 0
  3080  004FAE                     start_initialization:
  3081                           	opt stack 0
  3082  004FAE                     __initialization:
  3083                           	opt stack 0
  3084                           
  3085                           ; Clear objects allocated to BANK2 (160 bytes)
  3086  004FAE  EE02  F000         	lfsr	0,__pbssBANK2
  3087  004FB2  0EA0               	movlw	160
  3088  004FB4                     clear_0:
  3089  004FB4  6AEE               	clrf	postinc0,c
  3090  004FB6  06E8               	decf	wreg,f,c
  3091  004FB8  E1FD               	bnz	clear_0
  3092                           
  3093                           ; Clear objects allocated to BANK1 (230 bytes)
  3094  004FBA  EE01  F000         	lfsr	0,__pbssBANK1
  3095  004FBE  0EE6               	movlw	230
  3096  004FC0                     clear_1:
  3097  004FC0  6AEE               	clrf	postinc0,c
  3098  004FC2  06E8               	decf	wreg,f,c
  3099  004FC4  E1FD               	bnz	clear_1
  3100                           
  3101                           ; Clear objects allocated to BANK0 (99 bytes)
  3102  004FC6  EE00  F060         	lfsr	0,__pbssBANK0
  3103  004FCA  0E63               	movlw	99
  3104  004FCC                     clear_2:
  3105  004FCC  6AEE               	clrf	postinc0,c
  3106  004FCE  06E8               	decf	wreg,f,c
  3107  004FD0  E1FD               	bnz	clear_2
  3108                           
  3109                           ; Clear objects allocated to COMRAM (45 bytes)
  3110  004FD2  EE00  F001         	lfsr	0,__pbssCOMRAM
  3111  004FD6  0E2D               	movlw	45
  3112  004FD8                     clear_3:
  3113  004FD8  6AEE               	clrf	postinc0,c
  3114  004FDA  06E8               	decf	wreg,f,c
  3115  004FDC  E1FD               	bnz	clear_3
  3116                           
  3117                           ; Initialize objects allocated to BANK0 (11 bytes)
  3118                           ; load TBLPTR registers with __pidataBANK0
  3119  004FDE  0E6E               	movlw	low __pidataBANK0
  3120  004FE0  6EF6               	movwf	tblptrl,c
  3121  004FE2  0E59               	movlw	high __pidataBANK0
  3122  004FE4  6EF7               	movwf	tblptrh,c
  3123  004FE6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  3124  004FE8  6EF8               	movwf	tblptru,c
  3125  004FEA  EE00  F0F0         	lfsr	0,__pdataBANK0
  3126  004FEE  EE10 F00B          	lfsr	1,11
  3127  004FF2                     copy_data0:
  3128  004FF2  0009               	tblrd		*+
  3129  004FF4  CFF5 FFEE          	movff	tablat,postinc0
  3130  004FF8  50E5               	movf	postdec1,w,c
  3131  004FFA  50E1               	movf	fsr1l,w,c
  3132  004FFC  E1FA               	bnz	copy_data0
  3133  004FFE                     end_of_initialization:
  3134                           	opt stack 0
  3135  004FFE                     __end_of__initialization:
  3136                           	opt stack 0
  3137  004FFE  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3138  005000  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3139  005002  0E00               	movlw	low (__Lmediumconst shr (0+16))
  3140  005004  6EF8               	movwf	tblptru,c
  3141  005006  0100               	movlb	0
  3142  005008  EF40  F018         	goto	_main	;jump to C main() function
  3143                           tblptru	equ	0xFF8
  3144                           tblptrh	equ	0xFF7
  3145                           tblptrl	equ	0xFF6
  3146                           tablat	equ	0xFF5
  3147                           postinc0	equ	0xFEE
  3148                           wreg	equ	0xFE8
  3149                           postdec1	equ	0xFE5
  3150                           fsr1l	equ	0xFE1
  3151                           
  3152                           	psect	bssCOMRAM
  3153  000001                     __pbssCOMRAM:
  3154                           	opt stack 0
  3155  000001                     _outPipes:
  3156                           	opt stack 0
  3157  000001                     	ds	8
  3158  000009                     _inPipes:
  3159                           	opt stack 0
  3160  000009                     	ds	6
  3161  00000F                     _pBDTEntryIn:
  3162                           	opt stack 0
  3163  00000F                     	ds	6
  3164  000015                     USBapp_LEDUpdateStatus@ledCount:
  3165                           	opt stack 0
  3166  000015                     	ds	2
  3167  000017                     _pBDTEntryEP0OutCurrent:
  3168                           	opt stack 0
  3169  000017                     	ds	2
  3170  000019                     _pBDTEntryEP0OutNext:
  3171                           	opt stack 0
  3172  000019                     	ds	2
  3173  00001B                     _timer1ReloadVal:
  3174                           	opt stack 0
  3175  00001B                     	ds	2
  3176  00001D                     _LastRS232Out:
  3177                           	opt stack 0
  3178  00001D                     	ds	1
  3179  00001E                     _NextUSBOut:
  3180                           	opt stack 0
  3181  00001E                     	ds	1
  3182  00001F                     _RS232_Out_Data_Rdy:
  3183                           	opt stack 0
  3184  00001F                     	ds	1
  3185  000020                     _RS232cp:
  3186                           	opt stack 0
  3187  000020                     	ds	1
  3188  000021                     _USBDeferStatusStagePacket:
  3189                           	opt stack 0
  3190  000021                     	ds	1
  3191  000022                     _USBStatusStageTimeoutCounter:
  3192                           	opt stack 0
  3193  000022                     	ds	1
  3194  000023                     _cdc_trf_state:
  3195                           	opt stack 0
  3196  000023                     	ds	1
  3197  000024                     _controlTransferState:
  3198                           	opt stack 0
  3199  000024                     	ds	1
  3200  000025                     _endpoint_number:
  3201                           	opt stack 0
  3202  000025                     	ds	1
  3203  000026                     _eusartRxCount:
  3204                           	opt stack 0
  3205  000026                     	ds	1
  3206  000027                     _eusartTxBufferRemaining:
  3207                           	opt stack 0
  3208  000027                     	ds	1
  3209  000028                     _eusartTxHead:
  3210                           	opt stack 0
  3211  000028                     	ds	1
  3212  000029                     _moduleBufferIndex:
  3213                           	opt stack 0
  3214  000029                     	ds	1
  3215  00002A                     _rxByteFlag:
  3216                           	opt stack 0
  3217  00002A                     	ds	1
  3218  00002B                     _shortPacketStatus:
  3219                           	opt stack 0
  3220  00002B                     	ds	1
  3221  00002C                     _USBActiveConfiguration:
  3222                           	opt stack 0
  3223  00002C                     	ds	1
  3224  00002D                     _USTATcopy:
  3225                           	opt stack 0
  3226  00002D                     	ds	1
  3227                           tblptru	equ	0xFF8
  3228                           tblptrh	equ	0xFF7
  3229                           tblptrl	equ	0xFF6
  3230                           tablat	equ	0xFF5
  3231                           postinc0	equ	0xFEE
  3232                           wreg	equ	0xFE8
  3233                           postdec1	equ	0xFE5
  3234                           fsr1l	equ	0xFE1
  3235                           
  3236                           	psect	bssBANK0
  3237  000060                     __pbssBANK0:
  3238                           	opt stack 0
  3239  000060                     _pBDTEntryOut:
  3240                           	opt stack 0
  3241  000060                     	ds	6
  3242  000066                     service_pushbutton@PB_Timer:
  3243                           	opt stack 0
  3244  000066                     	ds	4
  3245  00006A                     _ep_data_in:
  3246                           	opt stack 0
  3247  00006A                     	ds	3
  3248  00006D                     _ep_data_out:
  3249                           	opt stack 0
  3250  00006D                     	ds	3
  3251  000070                     _pCDCDst:
  3252                           	opt stack 0
  3253  000070                     	ds	3
  3254  000073                     _pCDCSrc:
  3255                           	opt stack 0
  3256  000073                     	ds	3
  3257  000076                     _CDCDataInHandle:
  3258                           	opt stack 0
  3259  000076                     	ds	2
  3260  000078                     _CDCDataOutHandle:
  3261                           	opt stack 0
  3262  000078                     	ds	2
  3263  00007A                     _RH:
  3264                           	opt stack 0
  3265  00007A                     	ds	2
  3266  00007C                     _Sum:
  3267                           	opt stack 0
  3268  00007C                     	ds	2
  3269  00007E                     _Temp:
  3270                           	opt stack 0
  3271  00007E                     	ds	2
  3272  000080                     _light:
  3273                           	opt stack 0
  3274  000080                     	ds	2
  3275  000082                     _m10SecTicker:
  3276                           	opt stack 0
  3277  000082                     	ds	2
  3278  000084                     _pDst:
  3279                           	opt stack 0
  3280  000084                     	ds	2
  3281  000086                     _temperature:
  3282                           	opt stack 0
  3283  000086                     	ds	2
  3284  000088                     _timerMinTickCount:
  3285                           	opt stack 0
  3286  000088                     	ds	2
  3287  00008A                     _timerMsTickCount:
  3288                           	opt stack 0
  3289  00008A                     	ds	2
  3290  00008C                     _BothEP0OutUOWNsSet:
  3291                           	opt stack 0
  3292  00008C                     	ds	1
  3293  00008D                     _Ch:
  3294                           	opt stack 0
  3295  00008D                     	ds	1
  3296  00008E                     _Check:
  3297                           	opt stack 0
  3298  00008E                     	ds	1
  3299  00008F                     _RH_byte1:
  3300                           	opt stack 0
  3301  00008F                     	ds	1
  3302  000090                     _RH_byte2:
  3303                           	opt stack 0
  3304  000090                     	ds	1
  3305  000091                     _RemoteWakeup:
  3306                           	opt stack 0
  3307  000091                     	ds	1
  3308  000092                     _T_byte1:
  3309                           	opt stack 0
  3310  000092                     	ds	1
  3311  000093                     _T_byte2:
  3312                           	opt stack 0
  3313  000093                     	ds	1
  3314  000094                     _USBBusIsSuspended:
  3315                           	opt stack 0
  3316  000094                     	ds	1
  3317  000095                     _USBDeferINDataStagePackets:
  3318                           	opt stack 0
  3319  000095                     	ds	1
  3320  000096                     _USBDeferOUTDataStagePackets:
  3321                           	opt stack 0
  3322  000096                     	ds	1
  3323  000097                     _USBDeviceState:
  3324                           	opt stack 0
  3325  000097                     	ds	1
  3326  000098                     _USBStatusStageEnabledFlag1:
  3327                           	opt stack 0
  3328  000098                     	ds	1
  3329  000099                     _USBStatusStageEnabledFlag2:
  3330                           	opt stack 0
  3331  000099                     	ds	1
  3332  00009A                     _activeState:
  3333                           	opt stack 0
  3334  00009A                     	ds	1
  3335  00009B                     _appState:
  3336                           	opt stack 0
  3337  00009B                     	ds	1
  3338  00009C                     _appTimer:
  3339                           	opt stack 0
  3340  00009C                     	ds	1
  3341  00009D                     _cdc_mem_type:
  3342                           	opt stack 0
  3343  00009D                     	ds	1
  3344  00009E                     _cdc_rx_len:
  3345                           	opt stack 0
  3346  00009E                     	ds	1
  3347  00009F                     _cdc_tx_len:
  3348                           	opt stack 0
  3349  00009F                     	ds	1
  3350  0000A0                     _control_signal_bitmap:
  3351                           	opt stack 0
  3352  0000A0                     	ds	1
  3353  0000A1                     	ds	1
  3354  0000A2                     	ds	1
  3355  0000A3                     	ds	1
  3356  0000A4                     _eusartRxHead:
  3357                           	opt stack 0
  3358  0000A4                     	ds	1
  3359  0000A5                     _eusartRxTail:
  3360                           	opt stack 0
  3361  0000A5                     	ds	1
  3362  0000A6                     _eusartTxTail:
  3363                           	opt stack 0
  3364  0000A6                     	ds	1
  3365  0000A7                     _inClassCMode:
  3366                           	opt stack 0
  3367  0000A7                     	ds	1
  3368  0000A8                     _mainState:
  3369                           	opt stack 0
  3370  0000A8                     	ds	1
  3371  0000A9                     	ds	1
  3372  0000AA                     _minTicker:
  3373                           	opt stack 0
  3374  0000AA                     	ds	1
  3375  0000AB                     _moteModeState:
  3376                           	opt stack 0
  3377  0000AB                     	ds	1
  3378  0000AC                     _operationType:
  3379                           	opt stack 0
  3380  0000AC                     	ds	1
  3381  0000AD                     _powerOnStatus:
  3382                           	opt stack 0
  3383  0000AD                     	ds	1
  3384  0000AE                     _randomPortNum:
  3385                           	opt stack 0
  3386  0000AE                     	ds	1
  3387  0000AF                     _responseReady:
  3388                           	opt stack 0
  3389  0000AF                     	ds	1
  3390  0000B0                     	ds	1
  3391  0000B1                     _rnModule:
  3392                           	opt stack 0
  3393  0000B1                     	ds	1
  3394  0000B2                     _runningState:
  3395                           	opt stack 0
  3396  0000B2                     	ds	1
  3397  0000B3                     _secTicker:
  3398                           	opt stack 0
  3399  0000B3                     	ds	1
  3400  0000B4                     _sleepTicker:
  3401                           	opt stack 0
  3402  0000B4                     	ds	1
  3403  0000B5                     _usbState:
  3404                           	opt stack 0
  3405  0000B5                     	ds	1
  3406  0000B6                     service_pushbutton@Release_Timer:
  3407                           	opt stack 0
  3408  0000B6                     	ds	1
  3409  0000B7                     _line_coding:
  3410                           	opt stack 0
  3411  0000B7                     	ds	7
  3412  0000BE                     _responsePortNum:
  3413                           	opt stack 0
  3414  0000BE                     	ds	3
  3415  0000C1                     _USBAlternateInterface:
  3416                           	opt stack 0
  3417  0000C1                     	ds	2
  3418                           tblptru	equ	0xFF8
  3419                           tblptrh	equ	0xFF7
  3420                           tblptrl	equ	0xFF6
  3421                           tablat	equ	0xFF5
  3422                           postinc0	equ	0xFEE
  3423                           wreg	equ	0xFE8
  3424                           postdec1	equ	0xFE5
  3425                           fsr1l	equ	0xFE1
  3426                           
  3427                           	psect	dataBANK0
  3428  0000F0                     __pdataBANK0:
  3429                           	opt stack 0
  3430  0000F0                     _selectedFont:
  3431                           	opt stack 0
  3432  0000F0                     	ds	2
  3433  0000F2                     _SleepTimeOut:
  3434                           	opt stack 0
  3435  0000F2                     	ds	1
  3436  0000F3                     	ds	1
  3437  0000F4                     _dataRateValue:
  3438                           	opt stack 0
  3439  0000F4                     	ds	1
  3440  0000F5                     _exitUSB:
  3441                           	opt stack 0
  3442  0000F5                     	ds	1
  3443  0000F6                     _menuTimeout:
  3444                           	opt stack 0
  3445  0000F6                     	ds	1
  3446  0000F7                     _moteState:
  3447                           	opt stack 0
  3448  0000F7                     	ds	1
  3449  0000F8                     _periodicState:
  3450                           	opt stack 0
  3451  0000F8                     	ds	1
  3452  0000F9                     _periodicTimerValue:
  3453                           	opt stack 0
  3454  0000F9                     	ds	1
  3455  0000FA                     _periodicUpValue:
  3456                           	opt stack 0
  3457  0000FA                     	ds	1
  3458                           tblptru	equ	0xFF8
  3459                           tblptrh	equ	0xFF7
  3460                           tblptrl	equ	0xFF6
  3461                           tablat	equ	0xFF5
  3462                           postinc0	equ	0xFEE
  3463                           wreg	equ	0xFE8
  3464                           postdec1	equ	0xFE5
  3465                           fsr1l	equ	0xFE1
  3466                           
  3467                           	psect	bssBANK1
  3468  000100                     __pbssBANK1:
  3469                           	opt stack 0
  3470  000100                     	ds	16
  3471  000110                     _responseId:
  3472                           	opt stack 0
  3473  000110                     	ds	16
  3474  000120                     _BaudRateGen:
  3475                           	opt stack 0
  3476  000120                     	ds	4
  3477  000124                     _USB_Buffer:
  3478                           	opt stack 0
  3479  000124                     	ds	64
  3480  000164                     _moduleResonseBuffer:
  3481                           	opt stack 0
  3482  000164                     	ds	64
  3483  0001A4                     _responseData:
  3484                           	opt stack 0
  3485  0001A4                     	ds	32
  3486  0001C4                     _dataBuffer:
  3487                           	opt stack 0
  3488  0001C4                     	ds	16
  3489  0001D4                     _cdc_notice:
  3490                           	opt stack 0
  3491  0001D4                     	ds	10
  3492  0001DE                     _dummy_encapsulated_cmd_response:
  3493                           	opt stack 0
  3494  0001DE                     	ds	8
  3495                           tblptru	equ	0xFF8
  3496                           tblptrh	equ	0xFF7
  3497                           tblptrl	equ	0xFF6
  3498                           tablat	equ	0xFF5
  3499                           postinc0	equ	0xFEE
  3500                           wreg	equ	0xFE8
  3501                           postdec1	equ	0xFE5
  3502                           fsr1l	equ	0xFE1
  3503                           
  3504                           	psect	bssBANK2
  3505  000200                     __pbssBANK2:
  3506                           	opt stack 0
  3507  000200                     _eusartRxBuffer:
  3508                           	opt stack 0
  3509  000200                     	ds	64
  3510  000240                     _eusartTxBuffer:
  3511                           	opt stack 0
  3512  000240                     	ds	64
  3513  000280                     	ds	32
  3514                           tblptru	equ	0xFF8
  3515                           tblptrh	equ	0xFF7
  3516                           tblptrl	equ	0xFF6
  3517                           tablat	equ	0xFF5
  3518                           postinc0	equ	0xFEE
  3519                           wreg	equ	0xFE8
  3520                           postdec1	equ	0xFE5
  3521                           fsr1l	equ	0xFE1
  3522                           
  3523                           	psect	cstackBANK1
  3524  0001E6                     __pcstackBANK1:
  3525                           	opt stack 0
  3526  0001E6                     moteHandler@gotoSleep:
  3527                           	opt stack 0
  3528                           
  3529                           ; 1 bytes @ 0x0
  3530  0001E6                     	ds	1
  3531  0001E7                     moteHandler@Traw:
  3532                           	opt stack 0
  3533                           
  3534                           ; 2 bytes @ 0x1
  3535  0001E7                     	ds	2
  3536  0001E9                     moteHandler@gotoNextState:
  3537                           	opt stack 0
  3538                           
  3539                           ; 1 bytes @ 0x3
  3540  0001E9                     	ds	1
  3541  0001EA                     moteHandler@s2Button:
  3542                           	opt stack 0
  3543                           
  3544                           ; 1 bytes @ 0x4
  3545  0001EA                     	ds	1
  3546  0001EB                     moteHandler@buttonPress:
  3547                           	opt stack 0
  3548                           
  3549                           ; 1 bytes @ 0x5
  3550  0001EB                     	ds	1
  3551  0001EC                     moteHandler@i:
  3552                           	opt stack 0
  3553                           
  3554                           ; 1 bytes @ 0x6
  3555  0001EC                     	ds	1
  3556  0001ED                     moteHandler@i_1555:
  3557                           	opt stack 0
  3558                           
  3559                           ; 1 bytes @ 0x7
  3560  0001ED                     	ds	1
  3561  0001EE                     moteHandler@readMessage:
  3562                           	opt stack 0
  3563                           
  3564                           ; 1 bytes @ 0x8
  3565  0001EE                     	ds	1
  3566                           tblptru	equ	0xFF8
  3567                           tblptrh	equ	0xFF7
  3568                           tblptrl	equ	0xFF6
  3569                           tablat	equ	0xFF5
  3570                           postinc0	equ	0xFEE
  3571                           wreg	equ	0xFE8
  3572                           postdec1	equ	0xFE5
  3573                           fsr1l	equ	0xFE1
  3574                           
  3575                           	psect	cstackBANK0
  3576  0000C3                     __pcstackBANK0:
  3577                           	opt stack 0
  3578  0000C3                     ??_TMR1_Initialize:
  3579  0000C3                     ?_ADC_GetConversion:
  3580                           	opt stack 0
  3581  0000C3                     ?_strncmp:
  3582                           	opt stack 0
  3583  0000C3                     ?_strcmp:
  3584                           	opt stack 0
  3585  0000C3                     ?_USBTransferOnePacket:
  3586                           	opt stack 0
  3587  0000C3                     ?___awdiv:
  3588                           	opt stack 0
  3589  0000C3                     ?___awmod:
  3590                           	opt stack 0
  3591  0000C3                     ?___lwdiv:
  3592                           	opt stack 0
  3593  0000C3                     ?___lwmod:
  3594                           	opt stack 0
  3595  0000C3                     ?___almod:
  3596                           	opt stack 0
  3597  0000C3                     MOTEapp_handlerState@state:
  3598                           	opt stack 0
  3599  0000C3                     MOTEapp_TimerBasedTask@timerTask:
  3600                           	opt stack 0
  3601  0000C3                     hexToStr@character:
  3602                           	opt stack 0
  3603  0000C3                     moteApp_clearBuffers@counter:
  3604                           	opt stack 0
  3605  0000C3                     USBapp_handlerState@state:
  3606                           	opt stack 0
  3607  0000C3                     USBapp_exitCDCState@usbState:
  3608                           	opt stack 0
  3609  0000C3                     service_pushbutton@bs:
  3610                           	opt stack 0
  3611  0000C3                     EUSART_Read@readValue:
  3612                           	opt stack 0
  3613  0000C3                     EUSART_Write@txData:
  3614                           	opt stack 0
  3615  0000C3                     EUSART_FlushBuffer@index:
  3616                           	opt stack 0
  3617  0000C3                     SPI_Exchange8bit@data:
  3618                           	opt stack 0
  3619  0000C3                     DATAEE_WriteByte@bData:
  3620                           	opt stack 0
  3621  0000C3                     DATAEE_ReadByte@bAdd:
  3622                           	opt stack 0
  3623  0000C3                     TMR2_ReadTimer@readVal:
  3624                           	opt stack 0
  3625  0000C3                     USBTransferOnePacket@dir:
  3626                           	opt stack 0
  3627  0000C3                     ___lbdiv@divisor:
  3628                           	opt stack 0
  3629  0000C3                     moteApp_delayms@length:
  3630                           	opt stack 0
  3631  0000C3                     oled_setFont@font:
  3632                           	opt stack 0
  3633  0000C3                     putUSBUSART@data:
  3634                           	opt stack 0
  3635  0000C3                     ___awdiv@dividend:
  3636                           	opt stack 0
  3637  0000C3                     ___awmod@dividend:
  3638                           	opt stack 0
  3639  0000C3                     ___lwdiv@dividend:
  3640                           	opt stack 0
  3641  0000C3                     ___lwmod@dividend:
  3642                           	opt stack 0
  3643  0000C3                     memset@p1:
  3644                           	opt stack 0
  3645  0000C3                     strcmp@s1:
  3646                           	opt stack 0
  3647  0000C3                     strncmp@s1:
  3648                           	opt stack 0
  3649  0000C3                     ___almod@dividend:
  3650                           	opt stack 0
  3651                           
  3652                           ; 4 bytes @ 0x0
  3653  0000C3                     	ds	1
  3654  0000C4                     MOTEapp_getModuleResponse@terminatorReceived:
  3655                           	opt stack 0
  3656  0000C4                     moteApp_clearBuffers@counter_1853:
  3657                           	opt stack 0
  3658  0000C4                     oled_writeCommand@command:
  3659                           	opt stack 0
  3660  0000C4                     oled_writeData@data:
  3661                           	opt stack 0
  3662  0000C4                     DATAEE_WriteByte@bAdd:
  3663                           	opt stack 0
  3664  0000C4                     ___lbdiv@dividend:
  3665                           	opt stack 0
  3666  0000C4                     sendCommand@string:
  3667                           	opt stack 0
  3668  0000C4                     sendDataCommand@string:
  3669                           	opt stack 0
  3670  0000C4                     USBTransferOnePacket@data:
  3671                           	opt stack 0
  3672                           
  3673                           ; 2 bytes @ 0x1
  3674  0000C4                     	ds	1
  3675  0000C5                     ??_moteApp_delayms:
  3676  0000C5                     ??_ADC_GetConversion:
  3677  0000C5                     ??_oled_devInit:
  3678  0000C5                     MOTEapp_getModuleResponse@bufferByte:
  3679                           	opt stack 0
  3680  0000C5                     moteApp_clearBuffers@counter_1854:
  3681                           	opt stack 0
  3682  0000C5                     Set_Page_Address@address:
  3683                           	opt stack 0
  3684  0000C5                     Set_Column_Address@address:
  3685                           	opt stack 0
  3686  0000C5                     oled_setDisplay@displayType:
  3687                           	opt stack 0
  3688  0000C5                     oled_displayOff@state:
  3689                           	opt stack 0
  3690  0000C5                     DATAEE_WriteByte@GIEBitValue:
  3691                           	opt stack 0
  3692  0000C5                     putUSBUSART@length:
  3693                           	opt stack 0
  3694  0000C5                     ___lbdiv@counter:
  3695                           	opt stack 0
  3696  0000C5                     ___awdiv@divisor:
  3697                           	opt stack 0
  3698  0000C5                     ___awmod@divisor:
  3699                           	opt stack 0
  3700  0000C5                     ___lwdiv@divisor:
  3701                           	opt stack 0
  3702  0000C5                     ___lwmod@divisor:
  3703                           	opt stack 0
  3704  0000C5                     memset@c:
  3705                           	opt stack 0
  3706  0000C5                     strcmp@s2:
  3707                           	opt stack 0
  3708  0000C5                     strncmp@s2:
  3709                           	opt stack 0
  3710                           
  3711                           ; 2 bytes @ 0x2
  3712  0000C5                     	ds	1
  3713  0000C6                     ??_moteApp_toggleLeds:
  3714  0000C6                     ??_MOTEapp_SetDataRateSetting:
  3715  0000C6                     ??_moduleSleep:
  3716  0000C6                     moteApp_clearBuffers@counter_1855:
  3717                           	opt stack 0
  3718  0000C6                     oled_putChar@station_dot:
  3719                           	opt stack 0
  3720  0000C6                     USBTransferOnePacket@len:
  3721                           	opt stack 0
  3722  0000C6                     ___lbdiv@quotient:
  3723                           	opt stack 0
  3724  0000C6                     moteApp_delayms@counter:
  3725                           	opt stack 0
  3726  0000C6                     sendDataCommand@appData:
  3727                           	opt stack 0
  3728                           
  3729                           ; 2 bytes @ 0x3
  3730  0000C6                     	ds	1
  3731  0000C7                     ??_strcmp:
  3732  0000C7                     MOTEapp_SetDataRateSetting@dr:
  3733                           	opt stack 0
  3734  0000C7                     moteApp_toggleLeds@state:
  3735                           	opt stack 0
  3736  0000C7                     oled_putChar@start_page:
  3737                           	opt stack 0
  3738  0000C7                     ADC_GetConversion@channel:
  3739                           	opt stack 0
  3740  0000C7                     USBTransferOnePacket@ep:
  3741                           	opt stack 0
  3742  0000C7                     ___awdiv@counter:
  3743                           	opt stack 0
  3744  0000C7                     ___awmod@counter:
  3745                           	opt stack 0
  3746  0000C7                     ___lwdiv@counter:
  3747                           	opt stack 0
  3748  0000C7                     ___lwmod@counter:
  3749                           	opt stack 0
  3750  0000C7                     memset@n:
  3751                           	opt stack 0
  3752  0000C7                     strncmp@len:
  3753                           	opt stack 0
  3754  0000C7                     ___almod@divisor:
  3755                           	opt stack 0
  3756                           
  3757                           ; 4 bytes @ 0x4
  3758  0000C7                     	ds	1
  3759  0000C8                     ??_oled_putChar:
  3760  0000C8                     sendDataCommand@dataLength:
  3761                           	opt stack 0
  3762  0000C8                     ___awdiv@sign:
  3763                           	opt stack 0
  3764  0000C8                     ___awmod@sign:
  3765                           	opt stack 0
  3766  0000C8                     strcmp@r:
  3767                           	opt stack 0
  3768  0000C8                     moduleResync@escapeCounter:
  3769                           	opt stack 0
  3770  0000C8                     USBTransferOnePacket@handle:
  3771                           	opt stack 0
  3772  0000C8                     ___lwdiv@quotient:
  3773                           	opt stack 0
  3774                           
  3775                           ; 2 bytes @ 0x5
  3776  0000C8                     	ds	1
  3777  0000C9                     ??_strncmp:
  3778  0000C9                     ??_sendDataCommand:
  3779  0000C9                     moteApp_add8bToDataBuffer@bufferLocation:
  3780                           	opt stack 0
  3781  0000C9                     ___awdiv@quotient:
  3782                           	opt stack 0
  3783  0000C9                     memset@p:
  3784                           	opt stack 0
  3785                           
  3786                           ; 2 bytes @ 0x6
  3787  0000C9                     	ds	1
  3788  0000CA                     ??_moteApp_add8bToDataBuffer:
  3789  0000CA                     ??_CDCTxService:
  3790  0000CA                     moduleResync@escapeEvent:
  3791                           	opt stack 0
  3792  0000CA                     sendDataCommand@byteCount:
  3793                           	opt stack 0
  3794  0000CA                     ADC_TempConversion@tempRaw:
  3795                           	opt stack 0
  3796  0000CA                     moteApp_add16bToDataBuffer@number:
  3797                           	opt stack 0
  3798  0000CA                     getsUSBUSART@buffer:
  3799                           	opt stack 0
  3800                           
  3801                           ; 2 bytes @ 0x7
  3802  0000CA                     	ds	1
  3803  0000CB                     sendDataCommand@byteCount_1782:
  3804                           	opt stack 0
  3805  0000CB                     ADC_TempConversion@temp:
  3806                           	opt stack 0
  3807  0000CB                     USBDeviceInit@i:
  3808                           	opt stack 0
  3809  0000CB                     ___almod@counter:
  3810                           	opt stack 0
  3811  0000CB                     _CDCTxService$5932:
  3812                           	opt stack 0
  3813                           
  3814                           ; 2 bytes @ 0x8
  3815  0000CB                     	ds	1
  3816  0000CC                     moteApp_add8bToDataBuffer@number:
  3817                           	opt stack 0
  3818  0000CC                     moteApp_add16bToDataBuffer@bufferLocation:
  3819                           	opt stack 0
  3820  0000CC                     getsUSBUSART@len:
  3821                           	opt stack 0
  3822  0000CC                     ___almod@sign:
  3823                           	opt stack 0
  3824                           
  3825                           ; 1 bytes @ 0x9
  3826  0000CC                     	ds	1
  3827  0000CD                     ??_moteApp_add16bToDataBuffer:
  3828  0000CD                     ??_getsUSBUSART:
  3829  0000CD                     CDCTxService@i:
  3830                           	opt stack 0
  3831                           
  3832                           ; 1 bytes @ 0xA
  3833  0000CD                     	ds	1
  3834  0000CE                     oled_putChar@k:
  3835                           	opt stack 0
  3836  0000CE                     CDCTxService@byte_to_send:
  3837                           	opt stack 0
  3838  0000CE                     _getsUSBUSART$5884:
  3839                           	opt stack 0
  3840                           
  3841                           ; 2 bytes @ 0xB
  3842  0000CE                     	ds	1
  3843  0000CF                     oled_putChar@index:
  3844                           	opt stack 0
  3845                           
  3846                           ; 1 bytes @ 0xC
  3847  0000CF                     	ds	1
  3848  0000D0                     ??_USBapp_DeviceCdcEmulatorHandler:
  3849  0000D0                     oled_clearRow@page:
  3850                           	opt stack 0
  3851  0000D0                     oled_putString@string:
  3852                           	opt stack 0
  3853                           
  3854                           ; 2 bytes @ 0xD
  3855  0000D0                     	ds	1
  3856  0000D1                     oled_clearRow@index:
  3857                           	opt stack 0
  3858                           
  3859                           ; 1 bytes @ 0xE
  3860  0000D1                     	ds	1
  3861  0000D2                     moteApp_GoToSleep@status:
  3862                           	opt stack 0
  3863  0000D2                     oled_putString@station_dot:
  3864                           	opt stack 0
  3865                           
  3866                           ; 1 bytes @ 0xF
  3867  0000D2                     	ds	1
  3868  0000D3                     oled_putString@start_page:
  3869                           	opt stack 0
  3870                           
  3871                           ; 1 bytes @ 0x10
  3872  0000D3                     	ds	1
  3873  0000D4                     oled_putString@index:
  3874                           	opt stack 0
  3875                           
  3876                           ; 1 bytes @ 0x11
  3877  0000D4                     	ds	1
  3878  0000D5                     moteJoiningProcess@changeStates:
  3879                           	opt stack 0
  3880  0000D5                     USBapp_Handler@buttonPress:
  3881                           	opt stack 0
  3882  0000D5                     oled_putUint8@station_dot:
  3883                           	opt stack 0
  3884  0000D5                     test_switch@timeout:
  3885                           	opt stack 0
  3886  0000D5                     oled_putUint16@number:
  3887                           	opt stack 0
  3888                           
  3889                           ; 2 bytes @ 0x12
  3890  0000D5                     	ds	1
  3891  0000D6                     moteJoiningProcess@selectButton:
  3892                           	opt stack 0
  3893  0000D6                     oled_putUint8@start_page:
  3894                           	opt stack 0
  3895                           
  3896                           ; 1 bytes @ 0x13
  3897  0000D6                     	ds	1
  3898  0000D7                     ??_moteJoiningProcess:
  3899  0000D7                     test_switch@buttonCheck:
  3900                           	opt stack 0
  3901  0000D7                     oled_putUint8@number:
  3902                           	opt stack 0
  3903  0000D7                     oled_putUint16@station_dot:
  3904                           	opt stack 0
  3905                           
  3906                           ; 1 bytes @ 0x14
  3907  0000D7                     	ds	1
  3908  0000D8                     moteJoiningProcess@readDataRate:
  3909                           	opt stack 0
  3910  0000D8                     oled_putUint16@start_page:
  3911                           	opt stack 0
  3912  0000D8                     oled_putUint8@numData:
  3913                           	opt stack 0
  3914                           
  3915                           ; 6 bytes @ 0x15
  3916  0000D8                     	ds	1
  3917  0000D9                     moteJoiningProcess@joiningComplete:
  3918                           	opt stack 0
  3919  0000D9                     oled_putUint16@numData:
  3920                           	opt stack 0
  3921                           
  3922                           ; 6 bytes @ 0x16
  3923  0000D9                     	ds	1
  3924  0000DA                     moteJoiningProcess@messageReady:
  3925                           	opt stack 0
  3926                           
  3927                           ; 1 bytes @ 0x17
  3928  0000DA                     	ds	5
  3929  0000DF                     moteRunningProcess@selectButton:
  3930                           	opt stack 0
  3931  0000DF                     test_adc@L:
  3932                           	opt stack 0
  3933                           
  3934                           ; 2 bytes @ 0x1C
  3935  0000DF                     	ds	1
  3936  0000E0                     moteRunningProcess@messageReady:
  3937                           	opt stack 0
  3938                           
  3939                           ; 1 bytes @ 0x1D
  3940  0000E0                     	ds	1
  3941  0000E1                     moteRunningProcess@sleepEvent:
  3942                           	opt stack 0
  3943  0000E1                     test_adc@Traw:
  3944                           	opt stack 0
  3945                           
  3946                           ; 2 bytes @ 0x1E
  3947  0000E1                     	ds	1
  3948  0000E2                     ??_moteRunningProcess:
  3949                           
  3950                           ; 0 bytes @ 0x1F
  3951  0000E2                     	ds	1
  3952  0000E3                     test_adc@T:
  3953                           	opt stack 0
  3954                           
  3955                           ; 1 bytes @ 0x20
  3956  0000E3                     	ds	1
  3957  0000E4                     test_adc@count:
  3958                           	opt stack 0
  3959  0000E4                     moteRunningProcess@readByte:
  3960                           	opt stack 0
  3961                           
  3962                           ; 1 bytes @ 0x21
  3963  0000E4                     	ds	1
  3964  0000E5                     moteRunningProcess@Traw:
  3965                           	opt stack 0
  3966                           
  3967                           ; 2 bytes @ 0x22
  3968  0000E5                     	ds	2
  3969  0000E7                     moteRunningProcess@i:
  3970                           	opt stack 0
  3971                           
  3972                           ; 1 bytes @ 0x24
  3973  0000E7                     	ds	1
  3974  0000E8                     moteRunningProcess@i_1621:
  3975                           	opt stack 0
  3976                           
  3977                           ; 1 bytes @ 0x25
  3978  0000E8                     	ds	1
  3979  0000E9                     moteRunningProcess@counter:
  3980                           	opt stack 0
  3981                           
  3982                           ; 1 bytes @ 0x26
  3983  0000E9                     	ds	1
  3984  0000EA                     moteRunningProcess@counter_1692:
  3985                           	opt stack 0
  3986                           
  3987                           ; 1 bytes @ 0x27
  3988  0000EA                     	ds	1
  3989  0000EB                     moteRunningProcess@bufferReadPos_1691:
  3990                           	opt stack 0
  3991                           
  3992                           ; 1 bytes @ 0x28
  3993  0000EB                     	ds	1
  3994  0000EC                     moteRunningProcess@bufferReadPos:
  3995                           	opt stack 0
  3996                           
  3997                           ; 1 bytes @ 0x29
  3998  0000EC                     	ds	1
  3999  0000ED                     moteRunningProcess@changeStates:
  4000                           	opt stack 0
  4001                           
  4002                           ; 1 bytes @ 0x2A
  4003  0000ED                     	ds	1
  4004  0000EE                     ??_moteHandler:
  4005                           
  4006                           ; 0 bytes @ 0x2B
  4007  0000EE                     	ds	2
  4008  0000F0                     tblptru	equ	0xFF8
  4009                           tblptrh	equ	0xFF7
  4010                           tblptrl	equ	0xFF6
  4011                           tablat	equ	0xFF5
  4012                           postinc0	equ	0xFEE
  4013                           wreg	equ	0xFE8
  4014                           postdec1	equ	0xFE5
  4015                           fsr1l	equ	0xFE1
  4016                           
  4017                           ; 0 bytes @ 0x2D
  4018                           
  4019                           	psect	cstackCOMRAM
  4020  00002E                     __pcstackCOMRAM:
  4021                           	opt stack 0
  4022  00002E                     ??_USBStdGetDscHandler:
  4023  00002E                     ??_USBStdGetStatusHandler:
  4024  00002E                     ?i2_USBTransferOnePacket:
  4025                           	opt stack 0
  4026  00002E                     ?___lldiv:
  4027                           	opt stack 0
  4028  00002E                     USBConfigureEndpoint@direction:
  4029                           	opt stack 0
  4030  00002E                     USBCtrlTrfTxService@byteToSend:
  4031                           	opt stack 0
  4032  00002E                     i2USBTransferOnePacket@dir:
  4033                           	opt stack 0
  4034  00002E                     i2memset@p1:
  4035                           	opt stack 0
  4036  00002E                     ___lldiv@dividend:
  4037                           	opt stack 0
  4038                           
  4039                           ; 4 bytes @ 0x0
  4040  00002E                     	ds	1
  4041  00002F                     ??_USBConfigureEndpoint:
  4042  00002F                     USBStdGetStatusHandler@p:
  4043                           	opt stack 0
  4044  00002F                     i2USBTransferOnePacket@data:
  4045                           	opt stack 0
  4046                           
  4047                           ; 2 bytes @ 0x1
  4048  00002F                     	ds	1
  4049  000030                     i2memset@c:
  4050                           	opt stack 0
  4051                           
  4052                           ; 2 bytes @ 0x2
  4053  000030                     	ds	1
  4054  000031                     i2USBTransferOnePacket@len:
  4055                           	opt stack 0
  4056                           
  4057                           ; 1 bytes @ 0x3
  4058  000031                     	ds	1
  4059  000032                     i2USBTransferOnePacket@ep:
  4060                           	opt stack 0
  4061  000032                     i2memset@n:
  4062                           	opt stack 0
  4063  000032                     ___lldiv@divisor:
  4064                           	opt stack 0
  4065                           
  4066                           ; 4 bytes @ 0x4
  4067  000032                     	ds	1
  4068  000033                     USBConfigureEndpoint@EPNum:
  4069                           	opt stack 0
  4070  000033                     i2USBTransferOnePacket@handle:
  4071                           	opt stack 0
  4072                           
  4073                           ; 2 bytes @ 0x5
  4074  000033                     	ds	1
  4075  000034                     USBConfigureEndpoint@handle:
  4076                           	opt stack 0
  4077  000034                     i2memset@p:
  4078                           	opt stack 0
  4079                           
  4080                           ; 2 bytes @ 0x6
  4081  000034                     	ds	2
  4082  000036                     USBEnableEndpoint@options:
  4083                           	opt stack 0
  4084  000036                     i2USBDeviceInit@i:
  4085                           	opt stack 0
  4086  000036                     ___lldiv@quotient:
  4087                           	opt stack 0
  4088                           
  4089                           ; 4 bytes @ 0x8
  4090  000036                     	ds	1
  4091  000037                     USBEnableEndpoint@p:
  4092                           	opt stack 0
  4093                           
  4094                           ; 2 bytes @ 0x9
  4095  000037                     	ds	2
  4096  000039                     USBEnableEndpoint@ep:
  4097                           	opt stack 0
  4098                           
  4099                           ; 1 bytes @ 0xB
  4100  000039                     	ds	1
  4101  00003A                     USBapp_CdcEmulatorInitialize@i:
  4102                           	opt stack 0
  4103  00003A                     ___lldiv@counter:
  4104                           	opt stack 0
  4105                           
  4106                           ; 1 bytes @ 0xC
  4107  00003A                     	ds	1
  4108  00003B                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  4109                           	opt stack 0
  4110  00003B                     USART_mySetLineCodingHandler@dwBaud:
  4111                           	opt stack 0
  4112                           
  4113                           ; 4 bytes @ 0xD
  4114  00003B                     	ds	2
  4115  00003D                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  4116                           	opt stack 0
  4117                           
  4118                           ; 2 bytes @ 0xF
  4119  00003D                     	ds	2
  4120  00003F                     USBCtrlTrfRxService@i:
  4121                           	opt stack 0
  4122  00003F                     USBCtrlTrfInHandler@lastDTS:
  4123                           	opt stack 0
  4124  00003F                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  4125                           	opt stack 0
  4126                           
  4127                           ; 2 bytes @ 0x11
  4128  00003F                     	ds	1
  4129  000040                     USBCtrlTrfRxService@byteToRead:
  4130                           	opt stack 0
  4131                           
  4132                           ; 1 bytes @ 0x12
  4133  000040                     	ds	1
  4134  000041                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  4135                           
  4136                           ; 0 bytes @ 0x13
  4137  000041                     	ds	2
  4138  000043                     ??_USBStdFeatureReqHandler:
  4139  000043                     USBStdSetCfgHandler@i:
  4140                           	opt stack 0
  4141                           
  4142                           ; 1 bytes @ 0x15
  4143  000043                     	ds	1
  4144  000044                     USBStdFeatureReqHandler@pUEP:
  4145                           	opt stack 0
  4146                           
  4147                           ; 2 bytes @ 0x16
  4148  000044                     	ds	2
  4149  000046                     USBStdFeatureReqHandler@current_ep_data:
  4150                           	opt stack 0
  4151                           
  4152                           ; 1 bytes @ 0x18
  4153  000046                     	ds	1
  4154  000047                     USBStdFeatureReqHandler@p:
  4155                           	opt stack 0
  4156                           
  4157                           ; 2 bytes @ 0x19
  4158  000047                     	ds	2
  4159  000049                     ??_USBCtrlEPService:
  4160  000049                     
  4161                           ; 0 bytes @ 0x1B
  4162  000049                     	ds	2
  4163  00004B                     USBCtrlEPService@setup_cnt:
  4164                           	opt stack 0
  4165                           
  4166                           ; 1 bytes @ 0x1D
  4167  00004B                     	ds	1
  4168  00004C                     USBDeviceTasks@i:
  4169                           	opt stack 0
  4170                           
  4171                           ; 1 bytes @ 0x1E
  4172  00004C                     	ds	1
  4173  00004D                     ??_INTERRUPT_InterruptManager:
  4174                           
  4175                           ; 0 bytes @ 0x1F
  4176  00004D                     	ds	14
  4177                           tblptru	equ	0xFF8
  4178                           tblptrh	equ	0xFF7
  4179                           tblptrl	equ	0xFF6
  4180                           tablat	equ	0xFF5
  4181                           postinc0	equ	0xFEE
  4182                           wreg	equ	0xFE8
  4183                           postdec1	equ	0xFE5
  4184                           fsr1l	equ	0xFE1
  4185                           
  4186 ;;
  4187 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4188 ;;
  4189 ;; *************** function _main *****************
  4190 ;; Defined at:
  4191 ;;		line 68 in file "main.c"
  4192 ;; Parameters:    Size  Location     Type
  4193 ;;		None
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;		None
  4196 ;; Return value:  Size  Location     Type
  4197 ;;		None               void
  4198 ;; Registers used:
  4199 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4200 ;; Tracked objects:
  4201 ;;		On entry : 0/0
  4202 ;;		On exit  : 0/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4205 ;;      Params:         0       0       0       0       0       0       0       0       0
  4206 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4207 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4208 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4209 ;;Total ram usage:        0 bytes
  4210 ;; Hardware stack levels required when called:   21
  4211 ;; This function calls:
  4212 ;;		_DATAEE_ReadByte
  4213 ;;		_DATAEE_WriteByte
  4214 ;;		_MOTEapp_handlerState
  4215 ;;		_SYSTEM_Initialize
  4216 ;;		_USBDeviceAttach
  4217 ;;		_USBDeviceInit
  4218 ;;		_USBapp_Handler
  4219 ;;		_USBapp_handlerState
  4220 ;;		_moduleResync
  4221 ;;		_moteApp_clearCommand
  4222 ;;		_moteApp_delayms
  4223 ;;		_moteHandler
  4224 ;;		_oled_clear
  4225 ;;		_oled_init
  4226 ;;		_oled_putString
  4227 ;;		_test_powerup
  4228 ;; This function is called by:
  4229 ;;		Startup code after reset
  4230 ;; This function uses a non-reentrant model
  4231 ;;
  4232                           
  4233                           	psect	text0
  4234  003080                     __ptext0:
  4235                           	opt stack 0
  4236  003080                     _main:
  4237                           	opt stack 10
  4238                           
  4239                           ;main.c: 71: SYSTEM_Initialize();
  4240                           
  4241                           ;incstack = 0
  4242  003080  ECE9  F02B         	call	_SYSTEM_Initialize	;wreg free
  4243                           
  4244                           ;main.c: 73: oled_init();
  4245  003084  ECB2  F02B         	call	_oled_init	;wreg free
  4246                           
  4247                           ;main.c: 74: USBDeviceInit();
  4248  003088  ECFA  F013         	call	_USBDeviceInit	;wreg free
  4249                           
  4250                           ;main.c: 76: USBDeviceAttach();
  4251  00308C  ECFC  F02A         	call	_USBDeviceAttach	;wreg free
  4252                           
  4253                           ;main.c: 78: PEIE = 1;
  4254  003090  8CF2               	bsf	intcon,6,c	;volatile
  4255                           
  4256                           ;main.c: 79: GIE = 1;
  4257  003092  8EF2               	bsf	intcon,7,c	;volatile
  4258                           
  4259                           ;main.c: 81: moteApp_delayms(300);
  4260  003094  0E01               	movlw	1
  4261  003096  0100               	movlb	0	; () banked
  4262  003098  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4263  00309A  0E2C               	movlw	44
  4264  00309C  6FC3               	movwf	moteApp_delayms@length& (0+255),b
  4265  00309E  EC73  F02A         	call	_moteApp_delayms	;wreg free
  4266                           
  4267                           ;main.c: 82: moduleResync();
  4268  0030A2  EC20  F025         	call	_moduleResync	;wreg free
  4269                           
  4270                           ;main.c: 83: moteApp_delayms(300);
  4271  0030A6  0E01               	movlw	1
  4272  0030A8  0100               	movlb	0	; () banked
  4273  0030AA  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4274  0030AC  0E2C               	movlw	44
  4275  0030AE  6FC3               	movwf	moteApp_delayms@length& (0+255),b
  4276  0030B0  EC73  F02A         	call	_moteApp_delayms	;wreg free
  4277                           
  4278                           ;main.c: 84: moteApp_clearCommand();
  4279  0030B4  EC76  F02C         	call	_moteApp_clearCommand	;wreg free
  4280                           
  4281                           ;main.c: 85: moteApp_delayms(100);
  4282  0030B8  0E00               	movlw	0
  4283  0030BA  0100               	movlb	0	; () banked
  4284  0030BC  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4285  0030BE  0E64               	movlw	100
  4286  0030C0  6FC3               	movwf	moteApp_delayms@length& (0+255),b
  4287  0030C2  EC73  F02A         	call	_moteApp_delayms	;wreg free
  4288                           
  4289                           ;main.c: 87: powerOnStatus = DATAEE_ReadByte(0x00);
  4290  0030C6  0E00               	movlw	0
  4291  0030C8  EC61  F02C         	call	_DATAEE_ReadByte
  4292  0030CC  0100               	movlb	0	; () banked
  4293  0030CE  6FAD               	movwf	_powerOnStatus& (0+255),b
  4294                           
  4295                           ; BSR set to: 0
  4296                           ;main.c: 88: if ( powerOnStatus != 0x55)
  4297  0030D0  0E55               	movlw	85
  4298  0030D2  0100               	movlb	0	; () banked
  4299  0030D4  19AD               	xorwf	_powerOnStatus& (0+255),w,b
  4300  0030D6  B4D8               	btfsc	status,2,c
  4301  0030D8  D008               	goto	l13040
  4302                           
  4303                           ; BSR set to: 0
  4304                           ;main.c: 89: {
  4305                           ;main.c: 90: test_powerup();
  4306  0030DA  EC7D  F029         	call	_test_powerup	;wreg free
  4307                           
  4308                           ;main.c: 91: DATAEE_WriteByte(0x00, 0x55);
  4309  0030DE  0E55               	movlw	85
  4310  0030E0  0100               	movlb	0	; () banked
  4311  0030E2  6FC3               	movwf	DATAEE_WriteByte@bData& (0+255),b
  4312  0030E4  0E00               	movlw	0
  4313  0030E6  ECC0  F029         	call	_DATAEE_WriteByte
  4314  0030EA                     l13040:
  4315                           
  4316                           ;main.c: 92: }
  4317                           ;main.c: 95: operationType = USB;
  4318  0030EA  0E00               	movlw	0
  4319  0030EC  0100               	movlb	0	; () banked
  4320  0030EE  6FAC               	movwf	_operationType& (0+255),b
  4321                           
  4322                           ; BSR set to: 0
  4323                           ;main.c: 96: USBapp_handlerState(USB_STARTUP);
  4324  0030F0  0E00               	movlw	0
  4325  0030F2  ECC7  F02C         	call	_USBapp_handlerState
  4326                           
  4327                           ;main.c: 98: oled_clear();
  4328  0030F6  EC26  F02C         	call	_oled_clear	;wreg free
  4329                           
  4330                           ;main.c: 99: oled_putString("Microchip Mote",0,0);
  4331  0030FA  0E18               	movlw	low STR_1
  4332  0030FC  0100               	movlb	0	; () banked
  4333  0030FE  6FD0               	movwf	oled_putString@string& (0+255),b
  4334  003100  0E7D               	movlw	high STR_1
  4335  003102  0100               	movlb	0	; () banked
  4336  003104  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  4337  003106  0E00               	movlw	0
  4338  003108  0100               	movlb	0	; () banked
  4339  00310A  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  4340  00310C  0E00               	movlw	0
  4341  00310E  0100               	movlb	0	; () banked
  4342  003110  6FD3               	movwf	oled_putString@start_page& (0+255),b
  4343  003112  EC0D  F027         	call	_oled_putString	;wreg free
  4344                           
  4345                           ;main.c: 100: oled_putString("   LoRa Demo  ",0,1);
  4346  003116  0EFA               	movlw	low STR_2
  4347  003118  0100               	movlb	0	; () banked
  4348  00311A  6FD0               	movwf	oled_putString@string& (0+255),b
  4349  00311C  0E7C               	movlw	high STR_2
  4350  00311E  0100               	movlb	0	; () banked
  4351  003120  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  4352  003122  0E00               	movlw	0
  4353  003124  0100               	movlb	0	; () banked
  4354  003126  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  4355  003128  0E01               	movlw	1
  4356  00312A  0100               	movlb	0	; () banked
  4357  00312C  6FD3               	movwf	oled_putString@start_page& (0+255),b
  4358  00312E  EC0D  F027         	call	_oled_putString	;wreg free
  4359                           
  4360                           ;main.c: 101: oled_putString(" V 1.0.0L Code",0,3);
  4361  003132  0E09               	movlw	low STR_3
  4362  003134  0100               	movlb	0	; () banked
  4363  003136  6FD0               	movwf	oled_putString@string& (0+255),b
  4364  003138  0E7D               	movlw	high STR_3
  4365  00313A  0100               	movlb	0	; () banked
  4366  00313C  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  4367  00313E  0E00               	movlw	0
  4368  003140  0100               	movlb	0	; () banked
  4369  003142  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  4370  003144  0E03               	movlw	3
  4371  003146  0100               	movlb	0	; () banked
  4372  003148  6FD3               	movwf	oled_putString@start_page& (0+255),b
  4373  00314A  EC0D  F027         	call	_oled_putString	;wreg free
  4374                           
  4375                           ;main.c: 102: moteApp_delayms(1000);
  4376  00314E  0E03               	movlw	3
  4377  003150  0100               	movlb	0	; () banked
  4378  003152  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4379  003154  0EE8               	movlw	232
  4380  003156  6FC3               	movwf	moteApp_delayms@length& (0+255),b
  4381  003158  EC73  F02A         	call	_moteApp_delayms	;wreg free
  4382                           
  4383                           ;main.c: 106: {
  4384                           ;main.c: 108: switch (operationType)
  4385                           
  4386                           ;main.c: 105: while(1)
  4387  00315C  D015               	goto	l13068
  4388  00315E  D7FF               	goto	l58
  4389  003160                     l13054:
  4390                           
  4391                           ;main.c: 114: USBapp_Handler();
  4392  003160  EC89  F01F         	call	_USBapp_Handler	;wreg free
  4393                           
  4394                           ;main.c: 116: operationType = MOTE;
  4395  003164  0E01               	movlw	1
  4396  003166  0100               	movlb	0	; () banked
  4397  003168  6FAC               	movwf	_operationType& (0+255),b
  4398                           
  4399                           ; BSR set to: 0
  4400                           ;main.c: 117: MOTEapp_handlerState(MOTE_STARTUP);
  4401  00316A  0E01               	movlw	1
  4402  00316C  ECCC  F02C         	call	_MOTEapp_handlerState
  4403                           
  4404                           ;main.c: 118: break;
  4405  003170  D00B               	goto	l13068
  4406  003172                     l13060:
  4407                           
  4408                           ;main.c: 120: if (moteHandler() == MOTE_SWAP)
  4409  003172  ECFF  F00E         	call	_moteHandler	;wreg free
  4410  003176  0A04               	xorlw	4
  4411  003178  A4D8               	btfss	status,2,c
  4412  00317A  D006               	goto	l13068
  4413                           
  4414                           ;main.c: 121: {
  4415                           ;main.c: 123: operationType = USB;
  4416  00317C  0E00               	movlw	0
  4417  00317E  0100               	movlb	0	; () banked
  4418  003180  6FAC               	movwf	_operationType& (0+255),b
  4419                           
  4420                           ; BSR set to: 0
  4421                           ;main.c: 124: USBapp_handlerState(USB_STARTUP);
  4422  003182  0E00               	movlw	0
  4423  003184  ECC7  F02C         	call	_USBapp_handlerState
  4424  003188                     l13068:
  4425  003188  0100               	movlb	0	; () banked
  4426  00318A  51AC               	movf	_operationType& (0+255),w,b
  4427                           
  4428                           ; Switch size 1, requested type "space"
  4429                           ; Number of cases is 2, Range of values is 0 to 1
  4430                           ; switch strategies available:
  4431                           ; Name         Instructions Cycles
  4432                           ; simple_byte            7     4 (average)
  4433                           ;	Chosen strategy is simple_byte
  4434  00318C  0A00               	xorlw	0	; case 0
  4435  00318E  B4D8               	btfsc	status,2,c
  4436  003190  D7E7               	goto	l13054
  4437  003192  0A01               	xorlw	1	; case 1
  4438  003194  B4D8               	btfsc	status,2,c
  4439  003196  D7ED               	goto	l13060
  4440  003198  D7E2               	goto	l58
  4441  00319A                     __end_of_main:
  4442                           	opt stack 0
  4443                           tblptru	equ	0xFF8
  4444                           tblptrh	equ	0xFF7
  4445                           tblptrl	equ	0xFF6
  4446                           tablat	equ	0xFF5
  4447                           intcon	equ	0xFF2
  4448                           postinc0	equ	0xFEE
  4449                           wreg	equ	0xFE8
  4450                           postdec1	equ	0xFE5
  4451                           fsr1l	equ	0xFE1
  4452                           status	equ	0xFD8
  4453                           
  4454 ;; *************** function _test_powerup *****************
  4455 ;; Defined at:
  4456 ;;		line 62 in file "../Includes/Board/poweruptest.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;		None
  4459 ;; Auto vars:     Size  Location     Type
  4460 ;;		None
  4461 ;; Return value:  Size  Location     Type
  4462 ;;		None               void
  4463 ;; Registers used:
  4464 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4465 ;; Tracked objects:
  4466 ;;		On entry : 0/0
  4467 ;;		On exit  : 0/0
  4468 ;;		Unchanged: 0/0
  4469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4470 ;;      Params:         0       0       0       0       0       0       0       0       0
  4471 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4472 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4473 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4474 ;;Total ram usage:        0 bytes
  4475 ;; Hardware stack levels used:    1
  4476 ;; Hardware stack levels required when called:   18
  4477 ;; This function calls:
  4478 ;;		_moteApp_delayms
  4479 ;;		_oled_clear
  4480 ;;		_test_adc
  4481 ;;		_test_comms
  4482 ;;		_test_leds
  4483 ;;		_test_oled
  4484 ;;		_test_switch
  4485 ;; This function is called by:
  4486 ;;		_main
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           	psect	text1
  4491  0052FA                     __ptext1:
  4492                           	opt stack 0
  4493  0052FA                     _test_powerup:
  4494                           	opt stack 12
  4495                           
  4496                           ;poweruptest.c: 65: test_oled();
  4497                           
  4498                           ; BSR set to: 0
  4499                           ;incstack = 0
  4500  0052FA  EC39  F022         	call	_test_oled	;wreg free
  4501                           
  4502                           ;poweruptest.c: 66: moteApp_delayms(20);
  4503  0052FE  0E00               	movlw	0
  4504  005300  0100               	movlb	0	; () banked
  4505  005302  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4506  005304  0E14               	movlw	20
  4507  005306  6FC3               	movwf	moteApp_delayms@length& (0+255),b
  4508  005308  EC73  F02A         	call	_moteApp_delayms	;wreg free
  4509                           
  4510                           ;poweruptest.c: 68: test_switch();
  4511  00530C  EC4D  F019         	call	_test_switch	;wreg free
  4512                           
  4513                           ;poweruptest.c: 70: oled_clear();
  4514  005310  EC26  F02C         	call	_oled_clear	;wreg free
  4515                           
  4516                           ;poweruptest.c: 71: moteApp_delayms(20);
  4517  005314  0E00               	movlw	0
  4518  005316  0100               	movlb	0	; () banked
  4519  005318  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4520  00531A  0E14               	movlw	20
  4521  00531C  6FC3               	movwf	moteApp_delayms@length& (0+255),b
  4522  00531E  EC73  F02A         	call	_moteApp_delayms	;wreg free
  4523                           
  4524                           ;poweruptest.c: 72: test_comms();
  4525  005322  EC9F  F026         	call	_test_comms	;wreg free
  4526                           
  4527                           ;poweruptest.c: 74: test_leds();
  4528  005326  EC43  F027         	call	_test_leds	;wreg free
  4529                           
  4530                           ;poweruptest.c: 76: test_adc();
  4531  00532A  ECBC  F01A         	call	_test_adc	;wreg free
  4532                           
  4533                           ;poweruptest.c: 77: moteApp_delayms(20);
  4534  00532E  0E00               	movlw	0
  4535  005330  0100               	movlb	0	; () banked
  4536  005332  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4537  005334  0E14               	movlw	20
  4538  005336  6FC3               	movwf	moteApp_delayms@length& (0+255),b
  4539  005338  EC73  F02A         	call	_moteApp_delayms	;wreg free
  4540  00533C  0012               	return		;funcret
  4541  00533E                     __end_of_test_powerup:
  4542                           	opt stack 0
  4543                           tblptru	equ	0xFF8
  4544                           tblptrh	equ	0xFF7
  4545                           tblptrl	equ	0xFF6
  4546                           tablat	equ	0xFF5
  4547                           intcon	equ	0xFF2
  4548                           postinc0	equ	0xFEE
  4549                           wreg	equ	0xFE8
  4550                           postdec1	equ	0xFE5
  4551                           fsr1l	equ	0xFE1
  4552                           status	equ	0xFD8
  4553                           
  4554 ;; *************** function _test_switch *****************
  4555 ;; Defined at:
  4556 ;;		line 92 in file "../Includes/Board/poweruptest.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;		None
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;  timeout         2   18[BANK0 ] unsigned int 
  4561 ;;  buttonCheck     1   20[BANK0 ] unsigned char 
  4562 ;; Return value:  Size  Location     Type
  4563 ;;		None               void
  4564 ;; Registers used:
  4565 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4571 ;;      Params:         0       0       0       0       0       0       0       0       0
  4572 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4573 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4574 ;;      Totals:         0       3       0       0       0       0       0       0       0
  4575 ;;Total ram usage:        3 bytes
  4576 ;; Hardware stack levels used:    1
  4577 ;; Hardware stack levels required when called:   17
  4578 ;; This function calls:
  4579 ;;		_moteApp_delayms
  4580 ;;		_oled_clear
  4581 ;;		_oled_putString
  4582 ;; This function is called by:
  4583 ;;		_test_powerup
  4584 ;; This function uses a non-reentrant model
  4585 ;;
  4586                           
  4587                           	psect	text2
  4588  00329A                     __ptext2:
  4589                           	opt stack 0
  4590  00329A                     _test_switch:
  4591                           	opt stack 12
  4592                           
  4593                           ;poweruptest.c: 94: uint16_t timeout = 500;
  4594                           
  4595                           ;incstack = 0
  4596  00329A  0E01               	movlw	1
  4597  00329C  0100               	movlb	0	; () banked
  4598  00329E  6FD6               	movwf	(test_switch@timeout+1)& (0+255),b
  4599  0032A0  0EF4               	movlw	244
  4600  0032A2  6FD5               	movwf	test_switch@timeout& (0+255),b
  4601                           
  4602                           ;poweruptest.c: 95: uint8_t buttonCheck = 0x00;
  4603  0032A4  0E00               	movlw	0
  4604  0032A6  0100               	movlb	0	; () banked
  4605  0032A8  6FD7               	movwf	test_switch@buttonCheck& (0+255),b
  4606                           
  4607                           ; BSR set to: 0
  4608                           ;poweruptest.c: 96: oled_clear();
  4609  0032AA  EC26  F02C         	call	_oled_clear	;wreg free
  4610                           
  4611                           ;poweruptest.c: 97: oled_putString("Button Test:",0,0);
  4612  0032AE  0EFC               	movlw	low STR_10
  4613  0032B0  0100               	movlb	0	; () banked
  4614  0032B2  6FD0               	movwf	oled_putString@string& (0+255),b
  4615  0032B4  0E7D               	movlw	high STR_10
  4616  0032B6  0100               	movlb	0	; () banked
  4617  0032B8  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  4618  0032BA  0E00               	movlw	0
  4619  0032BC  0100               	movlb	0	; () banked
  4620  0032BE  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  4621  0032C0  0E00               	movlw	0
  4622  0032C2  0100               	movlb	0	; () banked
  4623  0032C4  6FD3               	movwf	oled_putString@start_page& (0+255),b
  4624  0032C6  EC0D  F027         	call	_oled_putString	;wreg free
  4625                           
  4626                           ;poweruptest.c: 99: if( (PORTCbits.RC0 == 0) || (PORTCbits.RC1 == 0) )
  4627  0032CA  B082               	btfsc	3970,0,c	;volatile
  4628  0032CC  A282               	btfss	3970,1,c	;volatile
  4629  0032CE  D001               	goto	l11570
  4630  0032D0  D00F               	goto	l11572
  4631  0032D2                     l11570:
  4632                           
  4633                           ;poweruptest.c: 100: {
  4634                           ;poweruptest.c: 101: oled_putString("Button FAIL",0,3);
  4635  0032D2  0E84               	movlw	low STR_11
  4636  0032D4  0100               	movlb	0	; () banked
  4637  0032D6  6FD0               	movwf	oled_putString@string& (0+255),b
  4638  0032D8  0E7E               	movlw	high STR_11
  4639  0032DA  0100               	movlb	0	; () banked
  4640  0032DC  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  4641  0032DE  0E00               	movlw	0
  4642  0032E0  0100               	movlb	0	; () banked
  4643  0032E2  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  4644  0032E4  0E03               	movlw	3
  4645  0032E6  0100               	movlb	0	; () banked
  4646  0032E8  6FD3               	movwf	oled_putString@start_page& (0+255),b
  4647  0032EA  EC0D  F027         	call	_oled_putString	;wreg free
  4648                           
  4649                           ;poweruptest.c: 102: }
  4650  0032EE  D045               	goto	l11590
  4651  0032F0                     l11572:
  4652                           
  4653                           ;poweruptest.c: 103: else
  4654                           ;poweruptest.c: 104: {
  4655                           ;poweruptest.c: 105: oled_putString("Press Button",0,1);
  4656  0032F0  0E23               	movlw	low STR_12
  4657  0032F2  0100               	movlb	0	; () banked
  4658  0032F4  6FD0               	movwf	oled_putString@string& (0+255),b
  4659  0032F6  0E7E               	movlw	high STR_12
  4660  0032F8  0100               	movlb	0	; () banked
  4661  0032FA  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  4662  0032FC  0E00               	movlw	0
  4663  0032FE  0100               	movlb	0	; () banked
  4664  003300  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  4665  003302  0E01               	movlw	1
  4666  003304  0100               	movlb	0	; () banked
  4667  003306  6FD3               	movwf	oled_putString@start_page& (0+255),b
  4668  003308  EC0D  F027         	call	_oled_putString	;wreg free
  4669                           
  4670                           ;poweruptest.c: 106: }
  4671                           ;poweruptest.c: 107: while(timeout--)
  4672  00330C  D036               	goto	l11590
  4673  00330E                     l122:
  4674                           
  4675                           ; BSR set to: 0
  4676                           ;poweruptest.c: 108: {
  4677                           ;poweruptest.c: 109: if(PORTCbits.RC0 == 0)
  4678  00330E  B082               	btfsc	3970,0,c	;volatile
  4679  003310  D013               	goto	l11578
  4680                           
  4681                           ; BSR set to: 0
  4682                           ;poweruptest.c: 110: {
  4683                           ;poweruptest.c: 111: oled_putString("Button1 PASS",0,2);
  4684  003312  0E09               	movlw	low STR_13
  4685  003314  0100               	movlb	0	; () banked
  4686  003316  6FD0               	movwf	oled_putString@string& (0+255),b
  4687  003318  0E7E               	movlw	high STR_13
  4688  00331A  0100               	movlb	0	; () banked
  4689  00331C  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  4690  00331E  0E00               	movlw	0
  4691  003320  0100               	movlb	0	; () banked
  4692  003322  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  4693  003324  0E02               	movlw	2
  4694  003326  0100               	movlb	0	; () banked
  4695  003328  6FD3               	movwf	oled_putString@start_page& (0+255),b
  4696  00332A  EC0D  F027         	call	_oled_putString	;wreg free
  4697                           
  4698                           ;poweruptest.c: 112: buttonCheck = buttonCheck + 0x08;
  4699  00332E  0100               	movlb	0	; () banked
  4700  003330  51D7               	movf	test_switch@buttonCheck& (0+255),w,b
  4701  003332  0F08               	addlw	8
  4702  003334  0100               	movlb	0	; () banked
  4703  003336  6FD7               	movwf	test_switch@buttonCheck& (0+255),b
  4704  003338                     l11578:
  4705                           
  4706                           ; BSR set to: 0
  4707                           ;poweruptest.c: 113: }
  4708                           ;poweruptest.c: 114: if(PORTCbits.RC1 == 0)
  4709  003338  B282               	btfsc	3970,1,c	;volatile
  4710  00333A  D013               	goto	l11584
  4711                           
  4712                           ; BSR set to: 0
  4713                           ;poweruptest.c: 115: {
  4714                           ;poweruptest.c: 116: oled_putString("Button2 PASS",0,3);
  4715  00333C  0E16               	movlw	low STR_14
  4716  00333E  0100               	movlb	0	; () banked
  4717  003340  6FD0               	movwf	oled_putString@string& (0+255),b
  4718  003342  0E7E               	movlw	high STR_14
  4719  003344  0100               	movlb	0	; () banked
  4720  003346  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  4721  003348  0E00               	movlw	0
  4722  00334A  0100               	movlb	0	; () banked
  4723  00334C  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  4724  00334E  0E03               	movlw	3
  4725  003350  0100               	movlb	0	; () banked
  4726  003352  6FD3               	movwf	oled_putString@start_page& (0+255),b
  4727  003354  EC0D  F027         	call	_oled_putString	;wreg free
  4728                           
  4729                           ;poweruptest.c: 117: buttonCheck = buttonCheck + 0x80;
  4730  003358  0100               	movlb	0	; () banked
  4731  00335A  51D7               	movf	test_switch@buttonCheck& (0+255),w,b
  4732  00335C  0F80               	addlw	128
  4733  00335E  0100               	movlb	0	; () banked
  4734  003360  6FD7               	movwf	test_switch@buttonCheck& (0+255),b
  4735  003362                     l11584:
  4736                           
  4737                           ; BSR set to: 0
  4738                           ;poweruptest.c: 118: }
  4739                           ;poweruptest.c: 119: if (buttonCheck == 0x88)
  4740  003362  0E88               	movlw	136
  4741  003364  0100               	movlb	0	; () banked
  4742  003366  19D7               	xorwf	test_switch@buttonCheck& (0+255),w,b
  4743  003368  B4D8               	btfsc	status,2,c
  4744  00336A  0012               	return	
  4745                           
  4746                           ; BSR set to: 0
  4747                           ;poweruptest.c: 122: }
  4748                           ;poweruptest.c: 123: moteApp_delayms(10);
  4749                           
  4750                           ; BSR set to: 0
  4751                           
  4752                           ; BSR set to: 0
  4753                           ;poweruptest.c: 120: {
  4754                           ;poweruptest.c: 121: break;
  4755  00336C  0E00               	movlw	0
  4756  00336E  0100               	movlb	0	; () banked
  4757  003370  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4758  003372  0E0A               	movlw	10
  4759  003374  6FC3               	movwf	moteApp_delayms@length& (0+255),b
  4760  003376  EC73  F02A         	call	_moteApp_delayms	;wreg free
  4761  00337A                     l11590:
  4762  00337A  0100               	movlb	0	; () banked
  4763  00337C  07D5               	decf	test_switch@timeout& (0+255),f,b
  4764  00337E  A0D8               	btfss	status,0,c
  4765  003380  07D6               	decf	(test_switch@timeout+1)& (0+255),f,b
  4766  003382  0100               	movlb	0	; () banked
  4767  003384  29D5               	incf	test_switch@timeout& (0+255),w,b
  4768  003386  E1C3               	bnz	l122
  4769  003388  0100               	movlb	0	; () banked
  4770  00338A  29D6               	incf	(test_switch@timeout+1)& (0+255),w,b
  4771  00338C  B4D8               	btfsc	status,2,c
  4772  00338E  0012               	return	
  4773  003390  D7BE               	goto	l122
  4774  003392                     __end_of_test_switch:
  4775                           	opt stack 0
  4776                           tblptru	equ	0xFF8
  4777                           tblptrh	equ	0xFF7
  4778                           tblptrl	equ	0xFF6
  4779                           tablat	equ	0xFF5
  4780                           intcon	equ	0xFF2
  4781                           postinc0	equ	0xFEE
  4782                           wreg	equ	0xFE8
  4783                           postdec1	equ	0xFE5
  4784                           fsr1l	equ	0xFE1
  4785                           status	equ	0xFD8
  4786                           
  4787 ;; *************** function _test_oled *****************
  4788 ;; Defined at:
  4789 ;;		line 80 in file "../Includes/Board/poweruptest.c"
  4790 ;; Parameters:    Size  Location     Type
  4791 ;;		None
  4792 ;; Auto vars:     Size  Location     Type
  4793 ;;		None
  4794 ;; Return value:  Size  Location     Type
  4795 ;;		None               void
  4796 ;; Registers used:
  4797 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4798 ;; Tracked objects:
  4799 ;;		On entry : 0/0
  4800 ;;		On exit  : 0/0
  4801 ;;		Unchanged: 0/0
  4802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4803 ;;      Params:         0       0       0       0       0       0       0       0       0
  4804 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4805 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4806 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4807 ;;Total ram usage:        0 bytes
  4808 ;; Hardware stack levels used:    1
  4809 ;; Hardware stack levels required when called:   17
  4810 ;; This function calls:
  4811 ;;		_oled_clear
  4812 ;;		_oled_putString
  4813 ;; This function is called by:
  4814 ;;		_test_powerup
  4815 ;; This function uses a non-reentrant model
  4816 ;;
  4817                           
  4818                           	psect	text3
  4819  004472                     __ptext3:
  4820                           	opt stack 0
  4821  004472                     _test_oled:
  4822                           	opt stack 12
  4823                           
  4824                           ;poweruptest.c: 82: oled_clear();
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;incstack = 0
  4828  004472  EC26  F02C         	call	_oled_clear	;wreg free
  4829                           
  4830                           ;poweruptest.c: 84: oled_putString("MoTe v .",0,0);
  4831  004476  0E45               	movlw	low STR_4
  4832  004478  0100               	movlb	0	; () banked
  4833  00447A  6FD0               	movwf	oled_putString@string& (0+255),b
  4834  00447C  0E7F               	movlw	high STR_4
  4835  00447E  0100               	movlb	0	; () banked
  4836  004480  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  4837  004482  0E00               	movlw	0
  4838  004484  0100               	movlb	0	; () banked
  4839  004486  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  4840  004488  0E00               	movlw	0
  4841  00448A  0100               	movlb	0	; () banked
  4842  00448C  6FD3               	movwf	oled_putString@start_page& (0+255),b
  4843  00448E  EC0D  F027         	call	_oled_putString	;wreg free
  4844                           
  4845                           ;poweruptest.c: 85: oled_putString("1",0,6);
  4846  004492  0E9F               	movlw	low (STR_180+11)
  4847  004494  0100               	movlb	0	; () banked
  4848  004496  6FD0               	movwf	oled_putString@string& (0+255),b
  4849  004498  0E7D               	movlw	high (STR_180+11)
  4850  00449A  0100               	movlb	0	; () banked
  4851  00449C  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  4852  00449E  0E00               	movlw	0
  4853  0044A0  0100               	movlb	0	; () banked
  4854  0044A2  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  4855  0044A4  0E06               	movlw	6
  4856  0044A6  0100               	movlb	0	; () banked
  4857  0044A8  6FD3               	movwf	oled_putString@start_page& (0+255),b
  4858  0044AA  EC0D  F027         	call	_oled_putString	;wreg free
  4859                           
  4860                           ;poweruptest.c: 86: oled_putString("0",0,8);
  4861  0044AE  0E92               	movlw	low (STR_179+11)
  4862  0044B0  0100               	movlb	0	; () banked
  4863  0044B2  6FD0               	movwf	oled_putString@string& (0+255),b
  4864  0044B4  0E7D               	movlw	high (STR_179+11)
  4865  0044B6  0100               	movlb	0	; () banked
  4866  0044B8  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  4867  0044BA  0E00               	movlw	0
  4868  0044BC  0100               	movlb	0	; () banked
  4869  0044BE  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  4870  0044C0  0E08               	movlw	8
  4871  0044C2  0100               	movlb	0	; () banked
  4872  0044C4  6FD3               	movwf	oled_putString@start_page& (0+255),b
  4873  0044C6  EC0D  F027         	call	_oled_putString	;wreg free
  4874                           
  4875                           ;poweruptest.c: 87: oled_putString("Build Date/Time",0,1);
  4876  0044CA  0EAE               	movlw	low STR_7
  4877  0044CC  0100               	movlb	0	; () banked
  4878  0044CE  6FD0               	movwf	oled_putString@string& (0+255),b
  4879  0044D0  0E7C               	movlw	high STR_7
  4880  0044D2  0100               	movlb	0	; () banked
  4881  0044D4  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  4882  0044D6  0E00               	movlw	0
  4883  0044D8  0100               	movlb	0	; () banked
  4884  0044DA  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  4885  0044DC  0E01               	movlw	1
  4886  0044DE  0100               	movlb	0	; () banked
  4887  0044E0  6FD3               	movwf	oled_putString@start_page& (0+255),b
  4888  0044E2  EC0D  F027         	call	_oled_putString	;wreg free
  4889                           
  4890                           ;poweruptest.c: 88: oled_putString("Feb 16 2017",0,2);
  4891  0044E6  0E78               	movlw	low STR_8
  4892  0044E8  0100               	movlb	0	; () banked
  4893  0044EA  6FD0               	movwf	oled_putString@string& (0+255),b
  4894  0044EC  0E7E               	movlw	high STR_8
  4895  0044EE  0100               	movlb	0	; () banked
  4896  0044F0  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  4897  0044F2  0E00               	movlw	0
  4898  0044F4  0100               	movlb	0	; () banked
  4899  0044F6  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  4900  0044F8  0E02               	movlw	2
  4901  0044FA  0100               	movlb	0	; () banked
  4902  0044FC  6FD3               	movwf	oled_putString@start_page& (0+255),b
  4903  0044FE  EC0D  F027         	call	_oled_putString	;wreg free
  4904                           
  4905                           ;poweruptest.c: 89: oled_putString("15:26:17",0,3);
  4906  004502  0E4E               	movlw	low STR_9
  4907  004504  0100               	movlb	0	; () banked
  4908  004506  6FD0               	movwf	oled_putString@string& (0+255),b
  4909  004508  0E7F               	movlw	high STR_9
  4910  00450A  0100               	movlb	0	; () banked
  4911  00450C  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  4912  00450E  0E00               	movlw	0
  4913  004510  0100               	movlb	0	; () banked
  4914  004512  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  4915  004514  0E03               	movlw	3
  4916  004516  0100               	movlb	0	; () banked
  4917  004518  6FD3               	movwf	oled_putString@start_page& (0+255),b
  4918  00451A  EC0D  F027         	call	_oled_putString	;wreg free
  4919  00451E  0012               	return		;funcret
  4920  004520                     __end_of_test_oled:
  4921                           	opt stack 0
  4922                           tblptru	equ	0xFF8
  4923                           tblptrh	equ	0xFF7
  4924                           tblptrl	equ	0xFF6
  4925                           tablat	equ	0xFF5
  4926                           intcon	equ	0xFF2
  4927                           postinc0	equ	0xFEE
  4928                           wreg	equ	0xFE8
  4929                           postdec1	equ	0xFE5
  4930                           fsr1l	equ	0xFE1
  4931                           status	equ	0xFD8
  4932                           
  4933 ;; *************** function _test_leds *****************
  4934 ;; Defined at:
  4935 ;;		line 140 in file "../Includes/Board/poweruptest.c"
  4936 ;; Parameters:    Size  Location     Type
  4937 ;;		None
  4938 ;; Auto vars:     Size  Location     Type
  4939 ;;		None
  4940 ;; Return value:  Size  Location     Type
  4941 ;;		None               void
  4942 ;; Registers used:
  4943 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4944 ;; Tracked objects:
  4945 ;;		On entry : 0/0
  4946 ;;		On exit  : 0/0
  4947 ;;		Unchanged: 0/0
  4948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4949 ;;      Params:         0       0       0       0       0       0       0       0       0
  4950 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4951 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4952 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4953 ;;Total ram usage:        0 bytes
  4954 ;; Hardware stack levels used:    1
  4955 ;; Hardware stack levels required when called:   16
  4956 ;; This function calls:
  4957 ;;		_moteApp_delayms
  4958 ;;		_oled_putString
  4959 ;; This function is called by:
  4960 ;;		_test_powerup
  4961 ;; This function uses a non-reentrant model
  4962 ;;
  4963                           
  4964                           	psect	text4
  4965  004E86                     __ptext4:
  4966                           	opt stack 0
  4967  004E86                     _test_leds:
  4968                           	opt stack 13
  4969                           
  4970                           ;poweruptest.c: 142: oled_putString("LED Test:",0,1);
  4971                           
  4972                           ;incstack = 0
  4973  004E86  0E0E               	movlw	low STR_16
  4974  004E88  0100               	movlb	0	; () banked
  4975  004E8A  6FD0               	movwf	oled_putString@string& (0+255),b
  4976  004E8C  0E7F               	movlw	high STR_16
  4977  004E8E  0100               	movlb	0	; () banked
  4978  004E90  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  4979  004E92  0E00               	movlw	0
  4980  004E94  0100               	movlb	0	; () banked
  4981  004E96  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  4982  004E98  0E01               	movlw	1
  4983  004E9A  0100               	movlb	0	; () banked
  4984  004E9C  6FD3               	movwf	oled_putString@start_page& (0+255),b
  4985  004E9E  EC0D  F027         	call	_oled_putString	;wreg free
  4986                           
  4987                           ;poweruptest.c: 143: LATAbits.LATA6 = 1;
  4988  004EA2  8C89               	bsf	3977,6,c	;volatile
  4989                           
  4990                           ;poweruptest.c: 144: LATAbits.LATA7 = 1;
  4991  004EA4  8E89               	bsf	3977,7,c	;volatile
  4992                           
  4993                           ;poweruptest.c: 145: moteApp_delayms(500);
  4994  004EA6  0E01               	movlw	1
  4995  004EA8  0100               	movlb	0	; () banked
  4996  004EAA  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4997  004EAC  0EF4               	movlw	244
  4998  004EAE  6FC3               	movwf	moteApp_delayms@length& (0+255),b
  4999  004EB0  EC73  F02A         	call	_moteApp_delayms	;wreg free
  5000                           
  5001                           ;poweruptest.c: 146: LATAbits.LATA6 = 0;
  5002  004EB4  9C89               	bcf	3977,6,c	;volatile
  5003                           
  5004                           ;poweruptest.c: 147: LATAbits.LATA7 = 0;
  5005  004EB6  9E89               	bcf	3977,7,c	;volatile
  5006                           
  5007                           ;poweruptest.c: 148: moteApp_delayms(500);
  5008  004EB8  0E01               	movlw	1
  5009  004EBA  0100               	movlb	0	; () banked
  5010  004EBC  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
  5011  004EBE  0EF4               	movlw	244
  5012  004EC0  6FC3               	movwf	moteApp_delayms@length& (0+255),b
  5013  004EC2  EC73  F02A         	call	_moteApp_delayms	;wreg free
  5014                           
  5015                           ;poweruptest.c: 149: LATAbits.LATA6 = 1;
  5016  004EC6  8C89               	bsf	3977,6,c	;volatile
  5017                           
  5018                           ;poweruptest.c: 150: LATAbits.LATA7 = 1;
  5019  004EC8  8E89               	bsf	3977,7,c	;volatile
  5020                           
  5021                           ;poweruptest.c: 151: moteApp_delayms(500);
  5022  004ECA  0E01               	movlw	1
  5023  004ECC  0100               	movlb	0	; () banked
  5024  004ECE  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
  5025  004ED0  0EF4               	movlw	244
  5026  004ED2  6FC3               	movwf	moteApp_delayms@length& (0+255),b
  5027  004ED4  EC73  F02A         	call	_moteApp_delayms	;wreg free
  5028                           
  5029                           ;poweruptest.c: 152: LATAbits.LATA6 = 0;
  5030  004ED8  9C89               	bcf	3977,6,c	;volatile
  5031                           
  5032                           ;poweruptest.c: 153: LATAbits.LATA7 = 0;
  5033  004EDA  9E89               	bcf	3977,7,c	;volatile
  5034                           
  5035                           ;poweruptest.c: 154: moteApp_delayms(500);
  5036  004EDC  0E01               	movlw	1
  5037  004EDE  0100               	movlb	0	; () banked
  5038  004EE0  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
  5039  004EE2  0EF4               	movlw	244
  5040  004EE4  6FC3               	movwf	moteApp_delayms@length& (0+255),b
  5041  004EE6  EC73  F02A         	call	_moteApp_delayms	;wreg free
  5042  004EEA  0012               	return		;funcret
  5043  004EEC                     __end_of_test_leds:
  5044                           	opt stack 0
  5045                           tblptru	equ	0xFF8
  5046                           tblptrh	equ	0xFF7
  5047                           tblptrl	equ	0xFF6
  5048                           tablat	equ	0xFF5
  5049                           intcon	equ	0xFF2
  5050                           postinc0	equ	0xFEE
  5051                           wreg	equ	0xFE8
  5052                           postdec1	equ	0xFE5
  5053                           fsr1l	equ	0xFE1
  5054                           status	equ	0xFD8
  5055                           
  5056 ;; *************** function _test_comms *****************
  5057 ;; Defined at:
  5058 ;;		line 127 in file "../Includes/Board/poweruptest.c"
  5059 ;; Parameters:    Size  Location     Type
  5060 ;;		None
  5061 ;; Auto vars:     Size  Location     Type
  5062 ;;		None
  5063 ;; Return value:  Size  Location     Type
  5064 ;;		None               void
  5065 ;; Registers used:
  5066 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5067 ;; Tracked objects:
  5068 ;;		On entry : 0/0
  5069 ;;		On exit  : 0/0
  5070 ;;		Unchanged: 0/0
  5071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5072 ;;      Params:         0       0       0       0       0       0       0       0       0
  5073 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5074 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5075 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5076 ;;Total ram usage:        0 bytes
  5077 ;; Hardware stack levels used:    1
  5078 ;; Hardware stack levels required when called:   16
  5079 ;; This function calls:
  5080 ;;		_moteApp_delayms
  5081 ;;		_moteApp_toggleLeds
  5082 ;;		_oled_putString
  5083 ;; This function is called by:
  5084 ;;		_test_powerup
  5085 ;; This function uses a non-reentrant model
  5086 ;;
  5087                           
  5088                           	psect	text5
  5089  004D3E                     __ptext5:
  5090                           	opt stack 0
  5091  004D3E                     _test_comms:
  5092                           	opt stack 13
  5093                           
  5094                           ;poweruptest.c: 129: oled_putString("Comm Test:",0,0);
  5095                           
  5096                           ;incstack = 0
  5097  004D3E  0EC7               	movlw	low STR_15
  5098  004D40  0100               	movlb	0	; () banked
  5099  004D42  6FD0               	movwf	oled_putString@string& (0+255),b
  5100  004D44  0E7E               	movlw	high STR_15
  5101  004D46  0100               	movlb	0	; () banked
  5102  004D48  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  5103  004D4A  0E00               	movlw	0
  5104  004D4C  0100               	movlb	0	; () banked
  5105  004D4E  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  5106  004D50  0E00               	movlw	0
  5107  004D52  0100               	movlb	0	; () banked
  5108  004D54  6FD3               	movwf	oled_putString@start_page& (0+255),b
  5109  004D56  EC0D  F027         	call	_oled_putString	;wreg free
  5110                           
  5111                           ;poweruptest.c: 130: moteApp_toggleLeds(1);
  5112  004D5A  0E01               	movlw	1
  5113  004D5C  ECC9  F019         	call	_moteApp_toggleLeds
  5114                           
  5115                           ;poweruptest.c: 131: moteApp_delayms(500);
  5116  004D60  0E01               	movlw	1
  5117  004D62  0100               	movlb	0	; () banked
  5118  004D64  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
  5119  004D66  0EF4               	movlw	244
  5120  004D68  6FC3               	movwf	moteApp_delayms@length& (0+255),b
  5121  004D6A  EC73  F02A         	call	_moteApp_delayms	;wreg free
  5122                           
  5123                           ;poweruptest.c: 132: moteApp_toggleLeds(0);
  5124  004D6E  0E00               	movlw	0
  5125  004D70  ECC9  F019         	call	_moteApp_toggleLeds
  5126                           
  5127                           ;poweruptest.c: 133: moteApp_delayms(500);
  5128  004D74  0E01               	movlw	1
  5129  004D76  0100               	movlb	0	; () banked
  5130  004D78  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
  5131  004D7A  0EF4               	movlw	244
  5132  004D7C  6FC3               	movwf	moteApp_delayms@length& (0+255),b
  5133  004D7E  EC73  F02A         	call	_moteApp_delayms	;wreg free
  5134                           
  5135                           ;poweruptest.c: 134: moteApp_toggleLeds(1);
  5136  004D82  0E01               	movlw	1
  5137  004D84  ECC9  F019         	call	_moteApp_toggleLeds
  5138                           
  5139                           ;poweruptest.c: 135: moteApp_delayms(500);
  5140  004D88  0E01               	movlw	1
  5141  004D8A  0100               	movlb	0	; () banked
  5142  004D8C  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
  5143  004D8E  0EF4               	movlw	244
  5144  004D90  6FC3               	movwf	moteApp_delayms@length& (0+255),b
  5145  004D92  EC73  F02A         	call	_moteApp_delayms	;wreg free
  5146                           
  5147                           ;poweruptest.c: 136: moteApp_toggleLeds(0);
  5148  004D96  0E00               	movlw	0
  5149  004D98  ECC9  F019         	call	_moteApp_toggleLeds
  5150                           
  5151                           ;poweruptest.c: 137: moteApp_delayms(500);
  5152  004D9C  0E01               	movlw	1
  5153  004D9E  0100               	movlb	0	; () banked
  5154  004DA0  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
  5155  004DA2  0EF4               	movlw	244
  5156  004DA4  6FC3               	movwf	moteApp_delayms@length& (0+255),b
  5157  004DA6  EC73  F02A         	call	_moteApp_delayms	;wreg free
  5158  004DAA  0012               	return		;funcret
  5159  004DAC                     __end_of_test_comms:
  5160                           	opt stack 0
  5161                           tblptru	equ	0xFF8
  5162                           tblptrh	equ	0xFF7
  5163                           tblptrl	equ	0xFF6
  5164                           tablat	equ	0xFF5
  5165                           intcon	equ	0xFF2
  5166                           postinc0	equ	0xFEE
  5167                           wreg	equ	0xFE8
  5168                           postdec1	equ	0xFE5
  5169                           fsr1l	equ	0xFE1
  5170                           status	equ	0xFD8
  5171                           
  5172 ;; *************** function _moteApp_toggleLeds *****************
  5173 ;; Defined at:
  5174 ;;		line 1390 in file "../Includes/Board/MOTEapp.c"
  5175 ;; Parameters:    Size  Location     Type
  5176 ;;  state           1    wreg     unsigned char 
  5177 ;; Auto vars:     Size  Location     Type
  5178 ;;  state           1    4[BANK0 ] unsigned char 
  5179 ;; Return value:  Size  Location     Type
  5180 ;;		None               void
  5181 ;; Registers used:
  5182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5183 ;; Tracked objects:
  5184 ;;		On entry : 0/0
  5185 ;;		On exit  : 0/0
  5186 ;;		Unchanged: 0/0
  5187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5188 ;;      Params:         0       0       0       0       0       0       0       0       0
  5189 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5190 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5191 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5192 ;;Total ram usage:        2 bytes
  5193 ;; Hardware stack levels used:    1
  5194 ;; Hardware stack levels required when called:   14
  5195 ;; This function calls:
  5196 ;;		_sendCommand
  5197 ;; This function is called by:
  5198 ;;		_test_comms
  5199 ;; This function uses a non-reentrant model
  5200 ;;
  5201                           
  5202                           	psect	text6
  5203  003392                     __ptext6:
  5204                           	opt stack 0
  5205  003392                     _moteApp_toggleLeds:
  5206                           	opt stack 14
  5207                           
  5208                           ;incstack = 0
  5209                           ;moteApp_toggleLeds@state stored from wreg
  5210  003392  0100               	movlb	0	; () banked
  5211  003394  6FC7               	movwf	moteApp_toggleLeds@state& (0+255),b
  5212                           
  5213                           ;MOTEapp.c: 1392: _delay((unsigned long)((16)*(48000000/4000.0)));
  5214  003396  0EFA               	movlw	250
  5215  003398  0100               	movlb	0	; () banked
  5216  00339A  6FC6               	movwf	??_moteApp_toggleLeds& (0+255),b
  5217  00339C  0E58               	movlw	88
  5218  00339E                     u11827:
  5219  00339E  2EE8               	decfsz	wreg,f,c
  5220  0033A0  D7FE               	goto	u11827
  5221  0033A2  2FC6               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5222  0033A4  D7FC               	goto	u11827
  5223  0033A6  D000               	nop2	
  5224                           
  5225                           ;MOTEapp.c: 1393: _delay((unsigned long)((16)*(48000000/4000.0)));
  5226  0033A8  0EFA               	movlw	250
  5227  0033AA  0100               	movlb	0	; () banked
  5228  0033AC  6FC6               	movwf	??_moteApp_toggleLeds& (0+255),b
  5229  0033AE  0E58               	movlw	88
  5230  0033B0                     u11837:
  5231  0033B0  2EE8               	decfsz	wreg,f,c
  5232  0033B2  D7FE               	goto	u11837
  5233  0033B4  2FC6               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5234  0033B6  D7FC               	goto	u11837
  5235  0033B8  D000               	nop2	
  5236                           
  5237                           ;MOTEapp.c: 1394: _delay((unsigned long)((16)*(48000000/4000.0)));
  5238  0033BA  0EFA               	movlw	250
  5239  0033BC  0100               	movlb	0	; () banked
  5240  0033BE  6FC6               	movwf	??_moteApp_toggleLeds& (0+255),b
  5241  0033C0  0E58               	movlw	88
  5242  0033C2                     u11847:
  5243  0033C2  2EE8               	decfsz	wreg,f,c
  5244  0033C4  D7FE               	goto	u11847
  5245  0033C6  2FC6               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5246  0033C8  D7FC               	goto	u11847
  5247  0033CA  D000               	nop2	
  5248                           
  5249                           ;MOTEapp.c: 1395: if (state)
  5250  0033CC  0100               	movlb	0	; () banked
  5251  0033CE  51C7               	movf	moteApp_toggleLeds@state& (0+255),w,b
  5252  0033D0  0100               	movlb	0	; () banked
  5253  0033D2  B4D8               	btfsc	status,2,c
  5254  0033D4  D02C               	goto	l11028
  5255                           
  5256                           ; BSR set to: 0
  5257                           ;MOTEapp.c: 1396: {
  5258                           ;MOTEapp.c: 1397: sendCommand("sys set pindig GPIO10 1\r\n");
  5259  0033D6  0E80               	movlw	low STR_190
  5260  0033D8  0100               	movlb	0	; () banked
  5261  0033DA  6FC4               	movwf	sendCommand@string& (0+255),b
  5262  0033DC  0E79               	movlw	high STR_190
  5263  0033DE  0100               	movlb	0	; () banked
  5264  0033E0  6FC5               	movwf	(sendCommand@string+1)& (0+255),b
  5265  0033E2  EC2F  F02B         	call	_sendCommand	;wreg free
  5266                           
  5267                           ;MOTEapp.c: 1398: _delay((unsigned long)((16)*(48000000/4000.0)));
  5268  0033E6  0EFA               	movlw	250
  5269  0033E8  0100               	movlb	0	; () banked
  5270  0033EA  6FC6               	movwf	??_moteApp_toggleLeds& (0+255),b
  5271  0033EC  0E58               	movlw	88
  5272  0033EE                     u11857:
  5273  0033EE  2EE8               	decfsz	wreg,f,c
  5274  0033F0  D7FE               	goto	u11857
  5275  0033F2  2FC6               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5276  0033F4  D7FC               	goto	u11857
  5277  0033F6  D000               	nop2	
  5278                           
  5279                           ;MOTEapp.c: 1399: _delay((unsigned long)((16)*(48000000/4000.0)));
  5280  0033F8  0EFA               	movlw	250
  5281  0033FA  0100               	movlb	0	; () banked
  5282  0033FC  6FC6               	movwf	??_moteApp_toggleLeds& (0+255),b
  5283  0033FE  0E58               	movlw	88
  5284  003400                     u11867:
  5285  003400  2EE8               	decfsz	wreg,f,c
  5286  003402  D7FE               	goto	u11867
  5287  003404  2FC6               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5288  003406  D7FC               	goto	u11867
  5289  003408  D000               	nop2	
  5290                           
  5291                           ;MOTEapp.c: 1400: _delay((unsigned long)((16)*(48000000/4000.0)));
  5292  00340A  0EFA               	movlw	250
  5293  00340C  0100               	movlb	0	; () banked
  5294  00340E  6FC6               	movwf	??_moteApp_toggleLeds& (0+255),b
  5295  003410  0E58               	movlw	88
  5296  003412                     u11877:
  5297  003412  2EE8               	decfsz	wreg,f,c
  5298  003414  D7FE               	goto	u11877
  5299  003416  2FC6               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5300  003418  D7FC               	goto	u11877
  5301  00341A  D000               	nop2	
  5302                           
  5303                           ;MOTEapp.c: 1401: sendCommand("sys set pindig GPIO11 1\r\n");
  5304  00341C  0E9A               	movlw	low STR_191
  5305  00341E  0100               	movlb	0	; () banked
  5306  003420  6FC4               	movwf	sendCommand@string& (0+255),b
  5307  003422  0E79               	movlw	high STR_191
  5308  003424  0100               	movlb	0	; () banked
  5309  003426  6FC5               	movwf	(sendCommand@string+1)& (0+255),b
  5310  003428  EC2F  F02B         	call	_sendCommand	;wreg free
  5311                           
  5312                           ;MOTEapp.c: 1402: }
  5313  00342C  0012               	return	
  5314  00342E                     l11028:
  5315                           
  5316                           ;MOTEapp.c: 1403: else
  5317                           ;MOTEapp.c: 1404: {
  5318                           ;MOTEapp.c: 1405: sendCommand("sys set pindig GPIO10 0\r\n");
  5319  00342E  0E4C               	movlw	low STR_192
  5320  003430  0100               	movlb	0	; () banked
  5321  003432  6FC4               	movwf	sendCommand@string& (0+255),b
  5322  003434  0E79               	movlw	high STR_192
  5323  003436  0100               	movlb	0	; () banked
  5324  003438  6FC5               	movwf	(sendCommand@string+1)& (0+255),b
  5325  00343A  EC2F  F02B         	call	_sendCommand	;wreg free
  5326                           
  5327                           ;MOTEapp.c: 1406: _delay((unsigned long)((16)*(48000000/4000.0)));
  5328  00343E  0EFA               	movlw	250
  5329  003440  0100               	movlb	0	; () banked
  5330  003442  6FC6               	movwf	??_moteApp_toggleLeds& (0+255),b
  5331  003444  0E58               	movlw	88
  5332  003446                     u11887:
  5333  003446  2EE8               	decfsz	wreg,f,c
  5334  003448  D7FE               	goto	u11887
  5335  00344A  2FC6               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5336  00344C  D7FC               	goto	u11887
  5337  00344E  D000               	nop2	
  5338                           
  5339                           ;MOTEapp.c: 1407: _delay((unsigned long)((16)*(48000000/4000.0)));
  5340  003450  0EFA               	movlw	250
  5341  003452  0100               	movlb	0	; () banked
  5342  003454  6FC6               	movwf	??_moteApp_toggleLeds& (0+255),b
  5343  003456  0E58               	movlw	88
  5344  003458                     u11897:
  5345  003458  2EE8               	decfsz	wreg,f,c
  5346  00345A  D7FE               	goto	u11897
  5347  00345C  2FC6               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5348  00345E  D7FC               	goto	u11897
  5349  003460  D000               	nop2	
  5350                           
  5351                           ;MOTEapp.c: 1408: _delay((unsigned long)((16)*(48000000/4000.0)));
  5352  003462  0EFA               	movlw	250
  5353  003464  0100               	movlb	0	; () banked
  5354  003466  6FC6               	movwf	??_moteApp_toggleLeds& (0+255),b
  5355  003468  0E58               	movlw	88
  5356  00346A                     u11907:
  5357  00346A  2EE8               	decfsz	wreg,f,c
  5358  00346C  D7FE               	goto	u11907
  5359  00346E  2FC6               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5360  003470  D7FC               	goto	u11907
  5361  003472  D000               	nop2	
  5362                           
  5363                           ;MOTEapp.c: 1409: sendCommand("sys set pindig GPIO11 0\r\n");
  5364  003474  0E66               	movlw	low STR_193
  5365  003476  0100               	movlb	0	; () banked
  5366  003478  6FC4               	movwf	sendCommand@string& (0+255),b
  5367  00347A  0E79               	movlw	high STR_193
  5368  00347C  0100               	movlb	0	; () banked
  5369  00347E  6FC5               	movwf	(sendCommand@string+1)& (0+255),b
  5370  003480  EC2F  F02B         	call	_sendCommand	;wreg free
  5371  003484  0012               	return	
  5372  003486                     __end_of_moteApp_toggleLeds:
  5373                           	opt stack 0
  5374                           tblptru	equ	0xFF8
  5375                           tblptrh	equ	0xFF7
  5376                           tblptrl	equ	0xFF6
  5377                           tablat	equ	0xFF5
  5378                           intcon	equ	0xFF2
  5379                           postinc0	equ	0xFEE
  5380                           wreg	equ	0xFE8
  5381                           postdec1	equ	0xFE5
  5382                           fsr1l	equ	0xFE1
  5383                           status	equ	0xFD8
  5384                           
  5385 ;; *************** function _test_adc *****************
  5386 ;; Defined at:
  5387 ;;		line 157 in file "../Includes/Board/poweruptest.c"
  5388 ;; Parameters:    Size  Location     Type
  5389 ;;		None
  5390 ;; Auto vars:     Size  Location     Type
  5391 ;;  Traw            2   30[BANK0 ] unsigned int 
  5392 ;;  L               2   28[BANK0 ] unsigned int 
  5393 ;;  F               2    0        unsigned int 
  5394 ;;  count           1   33[BANK0 ] unsigned char 
  5395 ;;  T               1   32[BANK0 ] unsigned char 
  5396 ;; Return value:  Size  Location     Type
  5397 ;;		None               void
  5398 ;; Registers used:
  5399 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5400 ;; Tracked objects:
  5401 ;;		On entry : 0/0
  5402 ;;		On exit  : 0/0
  5403 ;;		Unchanged: 0/0
  5404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5405 ;;      Params:         0       0       0       0       0       0       0       0       0
  5406 ;;      Locals:         0       6       0       0       0       0       0       0       0
  5407 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5408 ;;      Totals:         0       6       0       0       0       0       0       0       0
  5409 ;;Total ram usage:        6 bytes
  5410 ;; Hardware stack levels used:    1
  5411 ;; Hardware stack levels required when called:   17
  5412 ;; This function calls:
  5413 ;;		_ADC_GetConversion
  5414 ;;		_ADC_TempConversion
  5415 ;;		_moteApp_delayms
  5416 ;;		_oled_clear
  5417 ;;		_oled_putChar
  5418 ;;		_oled_putString
  5419 ;;		_oled_putUint16
  5420 ;;		_oled_putUint8
  5421 ;; This function is called by:
  5422 ;;		_test_powerup
  5423 ;; This function uses a non-reentrant model
  5424 ;;
  5425                           
  5426                           	psect	text7
  5427  003578                     __ptext7:
  5428                           	opt stack 0
  5429  003578                     _test_adc:
  5430                           	opt stack 12
  5431                           
  5432                           ;poweruptest.c: 159: uint16_t L,Traw,F;
  5433                           ;poweruptest.c: 160: uint8_t count, T;
  5434                           ;poweruptest.c: 162: oled_clear();
  5435                           
  5436                           ;incstack = 0
  5437  003578  EC26  F02C         	call	_oled_clear	;wreg free
  5438                           
  5439                           ;poweruptest.c: 163: oled_putString("ADC Test",0,0);
  5440  00357C  0E60               	movlw	low STR_17
  5441  00357E  0100               	movlb	0	; () banked
  5442  003580  6FD0               	movwf	oled_putString@string& (0+255),b
  5443  003582  0E7F               	movlw	high STR_17
  5444  003584  0100               	movlb	0	; () banked
  5445  003586  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  5446  003588  0E00               	movlw	0
  5447  00358A  0100               	movlb	0	; () banked
  5448  00358C  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  5449  00358E  0E00               	movlw	0
  5450  003590  0100               	movlb	0	; () banked
  5451  003592  6FD3               	movwf	oled_putString@start_page& (0+255),b
  5452  003594  EC0D  F027         	call	_oled_putString	;wreg free
  5453                           
  5454                           ;poweruptest.c: 164: oled_putString("Temp  =",0,1);
  5455  003598  0E71               	movlw	low STR_18
  5456  00359A  0100               	movlb	0	; () banked
  5457  00359C  6FD0               	movwf	oled_putString@string& (0+255),b
  5458  00359E  0E7F               	movlw	high STR_18
  5459  0035A0  0100               	movlb	0	; () banked
  5460  0035A2  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  5461  0035A4  0E00               	movlw	0
  5462  0035A6  0100               	movlb	0	; () banked
  5463  0035A8  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  5464  0035AA  0E01               	movlw	1
  5465  0035AC  0100               	movlb	0	; () banked
  5466  0035AE  6FD3               	movwf	oled_putString@start_page& (0+255),b
  5467  0035B0  EC0D  F027         	call	_oled_putString	;wreg free
  5468                           
  5469                           ;poweruptest.c: 165: oled_putChar('C',14,1);
  5470  0035B4  0E0E               	movlw	14
  5471  0035B6  0100               	movlb	0	; () banked
  5472  0035B8  6FC6               	movwf	oled_putChar@station_dot& (0+255),b
  5473  0035BA  0E01               	movlw	1
  5474  0035BC  0100               	movlb	0	; () banked
  5475  0035BE  6FC7               	movwf	oled_putChar@start_page& (0+255),b
  5476  0035C0  0E43               	movlw	67
  5477  0035C2  EC90  F022         	call	_oled_putChar
  5478                           
  5479                           ;poweruptest.c: 166: oled_putString("Light =",0,2);
  5480  0035C6  0E79               	movlw	low STR_19
  5481  0035C8  0100               	movlb	0	; () banked
  5482  0035CA  6FD0               	movwf	oled_putString@string& (0+255),b
  5483  0035CC  0E7F               	movlw	high STR_19
  5484  0035CE  0100               	movlb	0	; () banked
  5485  0035D0  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  5486  0035D2  0E00               	movlw	0
  5487  0035D4  0100               	movlb	0	; () banked
  5488  0035D6  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  5489  0035D8  0E02               	movlw	2
  5490  0035DA  0100               	movlb	0	; () banked
  5491  0035DC  6FD3               	movwf	oled_putString@start_page& (0+255),b
  5492  0035DE  EC0D  F027         	call	_oled_putString	;wreg free
  5493                           
  5494                           ;poweruptest.c: 168: for(count=0;count< 50;count++)
  5495  0035E2  0E00               	movlw	0
  5496  0035E4  0100               	movlb	0	; () banked
  5497  0035E6  6FE4               	movwf	test_adc@count& (0+255),b
  5498  0035E8                     l11646:
  5499                           
  5500                           ; BSR set to: 0
  5501  0035E8  0E31               	movlw	49
  5502  0035EA  0100               	movlb	0	; () banked
  5503  0035EC  65E4               	cpfsgt	test_adc@count& (0+255),b
  5504  0035EE  D001               	goto	l11650
  5505  0035F0  0012               	return	
  5506  0035F2                     l11650:
  5507                           
  5508                           ; BSR set to: 0
  5509                           ;poweruptest.c: 169: {
  5510                           ;poweruptest.c: 170: moteApp_delayms(50);
  5511  0035F2  0E00               	movlw	0
  5512  0035F4  0100               	movlb	0	; () banked
  5513  0035F6  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
  5514  0035F8  0E32               	movlw	50
  5515  0035FA  6FC3               	movwf	moteApp_delayms@length& (0+255),b
  5516  0035FC  EC73  F02A         	call	_moteApp_delayms	;wreg free
  5517                           
  5518                           ;poweruptest.c: 171: Traw = ADC_GetConversion(Temp_channel);
  5519  003600  0E02               	movlw	2
  5520  003602  EC37  F029         	call	_ADC_GetConversion
  5521  003606  C0C3  F0E1         	movff	?_ADC_GetConversion,test_adc@Traw
  5522  00360A  C0C4  F0E2         	movff	?_ADC_GetConversion+1,test_adc@Traw+1
  5523                           
  5524                           ;poweruptest.c: 172: T = ADC_TempConversion(Traw);
  5525  00360E  0100               	movlb	0	; () banked
  5526  003610  51E1               	movf	test_adc@Traw& (0+255),w,b
  5527  003612  EC16  F02B         	call	_ADC_TempConversion
  5528  003616  0100               	movlb	0	; () banked
  5529  003618  6FE3               	movwf	test_adc@T& (0+255),b
  5530                           
  5531                           ;poweruptest.c: 174: moteApp_delayms(50);
  5532  00361A  0E00               	movlw	0
  5533  00361C  0100               	movlb	0	; () banked
  5534  00361E  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
  5535  003620  0E32               	movlw	50
  5536  003622  6FC3               	movwf	moteApp_delayms@length& (0+255),b
  5537  003624  EC73  F02A         	call	_moteApp_delayms	;wreg free
  5538                           
  5539                           ;poweruptest.c: 175: L = ADC_GetConversion(Light_channel);
  5540  003628  0E03               	movlw	3
  5541  00362A  EC37  F029         	call	_ADC_GetConversion
  5542  00362E  C0C3  F0DF         	movff	?_ADC_GetConversion,test_adc@L
  5543  003632  C0C4  F0E0         	movff	?_ADC_GetConversion+1,test_adc@L+1
  5544                           
  5545                           ;poweruptest.c: 177: oled_putUint8(T,10,1);
  5546  003636  0E0A               	movlw	10
  5547  003638  0100               	movlb	0	; () banked
  5548  00363A  6FD5               	movwf	oled_putUint8@station_dot& (0+255),b
  5549  00363C  0E01               	movlw	1
  5550  00363E  0100               	movlb	0	; () banked
  5551  003640  6FD6               	movwf	oled_putUint8@start_page& (0+255),b
  5552  003642  0100               	movlb	0	; () banked
  5553  003644  51E3               	movf	test_adc@T& (0+255),w,b
  5554  003646  EC92  F023         	call	_oled_putUint8
  5555                           
  5556                           ;poweruptest.c: 178: oled_putUint16(L,10,2);
  5557  00364A  C0DF  F0D5         	movff	test_adc@L,oled_putUint16@number
  5558  00364E  C0E0  F0D6         	movff	test_adc@L+1,oled_putUint16@number+1
  5559  003652  0E0A               	movlw	10
  5560  003654  0100               	movlb	0	; () banked
  5561  003656  6FD7               	movwf	oled_putUint16@station_dot& (0+255),b
  5562  003658  0E02               	movlw	2
  5563  00365A  0100               	movlb	0	; () banked
  5564  00365C  6FD8               	movwf	oled_putUint16@start_page& (0+255),b
  5565  00365E  EC46  F015         	call	_oled_putUint16	;wreg free
  5566  003662  0100               	movlb	0	; () banked
  5567  003664  2BE4               	incf	test_adc@count& (0+255),f,b
  5568  003666  D7C0               	goto	l11646
  5569  003668                     __end_of_test_adc:
  5570                           	opt stack 0
  5571                           tblptru	equ	0xFF8
  5572                           tblptrh	equ	0xFF7
  5573                           tblptrl	equ	0xFF6
  5574                           tablat	equ	0xFF5
  5575                           intcon	equ	0xFF2
  5576                           postinc0	equ	0xFEE
  5577                           wreg	equ	0xFE8
  5578                           postdec1	equ	0xFE5
  5579                           fsr1l	equ	0xFE1
  5580                           status	equ	0xFD8
  5581                           
  5582 ;; *************** function _moteHandler *****************
  5583 ;; Defined at:
  5584 ;;		line 182 in file "../Includes/Board/MOTEapp.c"
  5585 ;; Parameters:    Size  Location     Type
  5586 ;;		None
  5587 ;; Auto vars:     Size  Location     Type
  5588 ;;  i               1    7[BANK1 ] unsigned char 
  5589 ;;  i               1    6[BANK1 ] unsigned char 
  5590 ;;  Traw            2    1[BANK1 ] unsigned int 
  5591 ;;  readMessage     1    8[BANK1 ] unsigned char 
  5592 ;;  buttonPress     1    5[BANK1 ] enum E6421
  5593 ;;  s2Button        1    4[BANK1 ] unsigned char 
  5594 ;;  gotoNextStat    1    3[BANK1 ] unsigned char 
  5595 ;;  gotoSleep       1    0[BANK1 ] unsigned char 
  5596 ;; Return value:  Size  Location     Type
  5597 ;;                  1    wreg      enum E7396
  5598 ;; Registers used:
  5599 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5600 ;; Tracked objects:
  5601 ;;		On entry : 0/0
  5602 ;;		On exit  : 0/0
  5603 ;;		Unchanged: 0/0
  5604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5605 ;;      Params:         0       0       0       0       0       0       0       0       0
  5606 ;;      Locals:         0       0       9       0       0       0       0       0       0
  5607 ;;      Temps:          0       2       0       0       0       0       0       0       0
  5608 ;;      Totals:         0       2       9       0       0       0       0       0       0
  5609 ;;Total ram usage:       11 bytes
  5610 ;; Hardware stack levels used:    1
  5611 ;; Hardware stack levels required when called:   20
  5612 ;; This function calls:
  5613 ;;		_ADC_GetConversion
  5614 ;;		_ADC_TempConversion
  5615 ;;		_MOTEapp_TimerBasedTask
  5616 ;;		_MOTEapp_getModuleResponse
  5617 ;;		_TMRapp_ClearBitFlags
  5618 ;;		_TMRapp_Handler
  5619 ;;		_USBapp_exitCDC
  5620 ;;		_USBapp_exitCDCState
  5621 ;;		_moteApp_delayms
  5622 ;;		_moteJoiningProcess
  5623 ;;		_moteRunningProcess
  5624 ;;		_oled_clear
  5625 ;;		_oled_putString
  5626 ;;		_service_pushbutton
  5627 ;; This function is called by:
  5628 ;;		_main
  5629 ;; This function uses a non-reentrant model
  5630 ;;
  5631                           
  5632                           	psect	text8
  5633  001DFE                     __ptext8:
  5634                           	opt stack 0
  5635  001DFE                     _moteHandler:
  5636                           	opt stack 10
  5637                           
  5638                           ;MOTEapp.c: 184: bool gotoSleep = 0;
  5639                           
  5640                           ; BSR set to: 0
  5641                           ;incstack = 0
  5642  001DFE  0E00               	movlw	0
  5643  001E00  0101               	movlb	1	; () banked
  5644  001E02  6FE6               	movwf	moteHandler@gotoSleep& (0+255),b
  5645                           
  5646                           ;MOTEapp.c: 185: bool gotoNextState = 0;
  5647  001E04  0E00               	movlw	0
  5648  001E06  0101               	movlb	1	; () banked
  5649  001E08  6FE9               	movwf	moteHandler@gotoNextState& (0+255),b
  5650                           
  5651                           ;MOTEapp.c: 186: bool s2Button = 0;
  5652  001E0A  0E00               	movlw	0
  5653  001E0C  0101               	movlb	1	; () banked
  5654  001E0E  6FEA               	movwf	moteHandler@s2Button& (0+255),b
  5655                           
  5656                           ;MOTEapp.c: 187: bool readMessage = 0;
  5657  001E10  0E00               	movlw	0
  5658  001E12  0101               	movlb	1	; () banked
  5659  001E14  6FEE               	movwf	moteHandler@readMessage& (0+255),b
  5660                           
  5661                           ;MOTEapp.c: 188: buttonStates_t buttonPress = Released;
  5662  001E16  0E03               	movlw	3
  5663  001E18  0101               	movlb	1	; () banked
  5664  001E1A  6FEB               	movwf	moteHandler@buttonPress& (0+255),b
  5665                           
  5666                           ; BSR set to: 1
  5667                           ;MOTEapp.c: 191: if (PORTAbits.RA0)
  5668  001E1C  A080               	btfss	3968,0,c	;volatile
  5669  001E1E  D009               	goto	l12900
  5670                           
  5671                           ; BSR set to: 1
  5672                           ;MOTEapp.c: 192: {
  5673                           ;MOTEapp.c: 193: if (USBapp_exitCDC() == NO_USB)
  5674  001E20  ECD9  F02C         	call	_USBapp_exitCDC	;wreg free
  5675  001E24  0900               	iorlw	0
  5676  001E26  A4D8               	btfss	status,2,c
  5677  001E28  D007               	goto	l12902
  5678                           
  5679                           ;MOTEapp.c: 194: moteState = MOTE_SWAP;
  5680  001E2A  0E04               	movlw	4
  5681  001E2C  0100               	movlb	0	; () banked
  5682  001E2E  6FF7               	movwf	_moteState& (0+255),b
  5683                           
  5684                           ; BSR set to: 0
  5685                           ;MOTEapp.c: 195: } else {
  5686  001E30  D003               	goto	l12902
  5687  001E32                     l12900:
  5688                           
  5689                           ;MOTEapp.c: 196: USBapp_exitCDCState(NO_USB);
  5690  001E32  0E00               	movlw	0
  5691  001E34  ECC2  F02C         	call	_USBapp_exitCDCState
  5692  001E38                     l12902:
  5693                           
  5694                           ;MOTEapp.c: 197: }
  5695                           ;MOTEapp.c: 200: if ( appTimer.mSecTick )
  5696  001E38  0100               	movlb	0	; () banked
  5697  001E3A  A19C               	btfss	_appTimer& (0+255),0,b
  5698  001E3C  D008               	goto	l12910
  5699                           
  5700                           ; BSR set to: 0
  5701                           ;MOTEapp.c: 201: {
  5702                           ;MOTEapp.c: 203: TMRapp_ClearBitFlags();
  5703  001E3E  ECD1  F02C         	call	_TMRapp_ClearBitFlags	;wreg free
  5704                           
  5705                           ;MOTEapp.c: 205: TMRapp_Handler();
  5706  001E42  ECA5  F014         	call	_TMRapp_Handler	;wreg free
  5707                           
  5708                           ;MOTEapp.c: 206: MOTEapp_TimerBasedTask(appTimer);
  5709  001E46  0100               	movlb	0	; () banked
  5710  001E48  519C               	movf	_appTimer& (0+255),w,b
  5711  001E4A  ECC5  F02B         	call	_MOTEapp_TimerBasedTask
  5712  001E4E                     l12910:
  5713                           
  5714                           ;MOTEapp.c: 207: }
  5715                           ;MOTEapp.c: 210: buttonPress = service_pushbutton();
  5716  001E4E  ECEB  F025         	call	_service_pushbutton	;wreg free
  5717  001E52  0101               	movlb	1	; () banked
  5718  001E54  6FEB               	movwf	moteHandler@buttonPress& (0+255),b
  5719                           
  5720                           ; BSR set to: 1
  5721                           ;MOTEapp.c: 211: if (buttonPress == ShortPress1)
  5722  001E56  0101               	movlb	1	; () banked
  5723  001E58  05EB               	decf	moteHandler@buttonPress& (0+255),w,b
  5724  001E5A  A4D8               	btfss	status,2,c
  5725  001E5C  D007               	goto	l12916
  5726                           
  5727                           ; BSR set to: 1
  5728                           ;MOTEapp.c: 212: {
  5729                           ;MOTEapp.c: 213: secTicker = 0;
  5730  001E5E  0E00               	movlw	0
  5731  001E60  0100               	movlb	0	; () banked
  5732  001E62  6FB3               	movwf	_secTicker& (0+255),b
  5733                           
  5734                           ;MOTEapp.c: 214: gotoNextState = 1;
  5735  001E64  0E01               	movlw	1
  5736  001E66  0101               	movlb	1	; () banked
  5737  001E68  6FE9               	movwf	moteHandler@gotoNextState& (0+255),b
  5738                           
  5739                           ;MOTEapp.c: 215: }
  5740  001E6A  D00B               	goto	l12920
  5741  001E6C                     l12916:
  5742                           
  5743                           ; BSR set to: 1
  5744                           ;MOTEapp.c: 216: else if (buttonPress == ShortPress2)
  5745  001E6C  0E02               	movlw	2
  5746  001E6E  0101               	movlb	1	; () banked
  5747  001E70  19EB               	xorwf	moteHandler@buttonPress& (0+255),w,b
  5748  001E72  A4D8               	btfss	status,2,c
  5749  001E74  D006               	goto	l12920
  5750                           
  5751                           ; BSR set to: 1
  5752                           ;MOTEapp.c: 217: {
  5753                           ;MOTEapp.c: 218: secTicker = 0;
  5754  001E76  0E00               	movlw	0
  5755  001E78  0100               	movlb	0	; () banked
  5756  001E7A  6FB3               	movwf	_secTicker& (0+255),b
  5757                           
  5758                           ;MOTEapp.c: 219: s2Button = 1;
  5759  001E7C  0E01               	movlw	1
  5760  001E7E  0101               	movlb	1	; () banked
  5761  001E80  6FEA               	movwf	moteHandler@s2Button& (0+255),b
  5762  001E82                     l12920:
  5763                           
  5764                           ; BSR set to: 1
  5765                           ;MOTEapp.c: 220: }
  5766                           ;MOTEapp.c: 223: if ( MOTEapp_getModuleResponse() )
  5767  001E82  EC65  F026         	call	_MOTEapp_getModuleResponse	;wreg free
  5768  001E86  0900               	iorlw	0
  5769  001E88  B4D8               	btfsc	status,2,c
  5770  001E8A  D002               	goto	l12924
  5771                           
  5772                           ;MOTEapp.c: 224: readMessage = 1;
  5773  001E8C  0E01               	movlw	1
  5774  001E8E  D001               	goto	L1
  5775  001E90                     l12924:
  5776                           
  5777                           ;MOTEapp.c: 225: else
  5778                           ;MOTEapp.c: 226: readMessage = 0;
  5779  001E90  0E00               	movlw	0
  5780  001E92                     L1:
  5781  001E92  0101               	movlb	1	; () banked
  5782  001E94  6FEE               	movwf	moteHandler@readMessage& (0+255),b
  5783                           
  5784                           ; BSR set to: 1
  5785                           ;MOTEapp.c: 229: if ( (runningState == runningUplink) || (runningState == runningSensorM
      +                          enu) )
  5786                           
  5787                           ; BSR set to: 1
  5788  001E96  0E06               	movlw	6
  5789  001E98  0100               	movlb	0	; () banked
  5790  001E9A  19B2               	xorwf	_runningState& (0+255),w,b
  5791  001E9C  B4D8               	btfsc	status,2,c
  5792  001E9E  D005               	goto	l12930
  5793                           
  5794                           ; BSR set to: 0
  5795  001EA0  0E02               	movlw	2
  5796  001EA2  0100               	movlb	0	; () banked
  5797  001EA4  19B2               	xorwf	_runningState& (0+255),w,b
  5798  001EA6  A4D8               	btfss	status,2,c
  5799  001EA8  D06D               	goto	l12966
  5800  001EAA                     l12930:
  5801                           
  5802                           ; BSR set to: 0
  5803                           ;MOTEapp.c: 230: {
  5804                           ;MOTEapp.c: 232: if (m10SecTicker >= 5)
  5805  001EAA  0100               	movlb	0	; () banked
  5806  001EAC  5183               	movf	(_m10SecTicker+1)& (0+255),w,b
  5807  001EAE  E105               	bnz	u11600
  5808  001EB0  0E05               	movlw	5
  5809  001EB2  0100               	movlb	0	; () banked
  5810  001EB4  5D82               	subwf	_m10SecTicker& (0+255),w,b
  5811  001EB6  A0D8               	btfss	status,0,c
  5812  001EB8  D065               	goto	l12966
  5813  001EBA                     u11600:
  5814                           
  5815                           ; BSR set to: 0
  5816                           ;MOTEapp.c: 233: {
  5817                           ;MOTEapp.c: 234: uint16_t Traw = 0;
  5818  001EBA  0E00               	movlw	0
  5819  001EBC  0101               	movlb	1	; () banked
  5820  001EBE  6FE8               	movwf	(moteHandler@Traw+1)& (0+255),b
  5821  001EC0  0E00               	movlw	0
  5822  001EC2  6FE7               	movwf	moteHandler@Traw& (0+255),b
  5823                           
  5824                           ; BSR set to: 1
  5825                           ;MOTEapp.c: 235: moteApp_delayms(10);
  5826  001EC4  0E00               	movlw	0
  5827  001EC6  0100               	movlb	0	; () banked
  5828  001EC8  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
  5829  001ECA  0E0A               	movlw	10
  5830  001ECC  6FC3               	movwf	moteApp_delayms@length& (0+255),b
  5831  001ECE  EC73  F02A         	call	_moteApp_delayms	;wreg free
  5832                           
  5833                           ;MOTEapp.c: 236: for(uint8_t i = 32; i>0; i--)
  5834  001ED2  0E20               	movlw	32
  5835  001ED4  0101               	movlb	1	; () banked
  5836  001ED6  6FEC               	movwf	moteHandler@i& (0+255),b
  5837  001ED8                     l12938:
  5838                           
  5839                           ; BSR set to: 1
  5840  001ED8  0101               	movlb	1	; () banked
  5841  001EDA  51EC               	movf	moteHandler@i& (0+255),w,b
  5842  001EDC  0101               	movlb	1	; () banked
  5843  001EDE  B4D8               	btfsc	status,2,c
  5844  001EE0  D019               	goto	l12948
  5845                           
  5846                           ; BSR set to: 1
  5847                           ;MOTEapp.c: 237: {
  5848                           ;MOTEapp.c: 238: light = (light + ADC_GetConversion(Light_channel)) / 2;
  5849                           
  5850                           ; BSR set to: 1
  5851                           
  5852                           ; BSR set to: 1
  5853  001EE2  0E03               	movlw	3
  5854  001EE4  EC37  F029         	call	_ADC_GetConversion
  5855  001EE8  0100               	movlb	0	; () banked
  5856  001EEA  5180               	movf	_light& (0+255),w,b
  5857  001EEC  0100               	movlb	0	; () banked
  5858  001EEE  27C3               	addwf	?_ADC_GetConversion& (0+255),f,b
  5859  001EF0  0100               	movlb	0	; () banked
  5860  001EF2  5181               	movf	(_light+1)& (0+255),w,b
  5861  001EF4  0100               	movlb	0	; () banked
  5862  001EF6  23C4               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  5863  001EF8  90D8               	bcf	status,0,c
  5864  001EFA  0100               	movlb	0	; () banked
  5865  001EFC  31C4               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  5866  001EFE  0100               	movlb	0	; () banked
  5867  001F00  6FEE               	movwf	??_moteHandler& (0+255),b
  5868  001F02  0100               	movlb	0	; () banked
  5869  001F04  31C3               	rrcf	?_ADC_GetConversion& (0+255),w,b
  5870  001F06  0100               	movlb	0	; () banked
  5871  001F08  6F80               	movwf	_light& (0+255),b
  5872  001F0A  C0EE  F081         	movff	??_moteHandler,_light+1
  5873                           
  5874                           ; BSR set to: 0
  5875  001F0E  0101               	movlb	1	; () banked
  5876  001F10  07EC               	decf	moteHandler@i& (0+255),f,b
  5877  001F12  D7E2               	goto	l12938
  5878  001F14                     l12948:
  5879                           
  5880                           ; BSR set to: 1
  5881                           ;MOTEapp.c: 239: }
  5882                           ;MOTEapp.c: 240: moteApp_delayms(10);
  5883  001F14  0E00               	movlw	0
  5884  001F16  0100               	movlb	0	; () banked
  5885  001F18  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
  5886  001F1A  0E0A               	movlw	10
  5887  001F1C  6FC3               	movwf	moteApp_delayms@length& (0+255),b
  5888  001F1E  EC73  F02A         	call	_moteApp_delayms	;wreg free
  5889                           
  5890                           ;MOTEapp.c: 241: for(uint8_t i = 32; i>0; i--)
  5891  001F22  0E20               	movlw	32
  5892  001F24  0101               	movlb	1	; () banked
  5893  001F26  6FED               	movwf	moteHandler@i_1555& (0+255),b
  5894  001F28                     l12952:
  5895                           
  5896                           ; BSR set to: 1
  5897  001F28  0101               	movlb	1	; () banked
  5898  001F2A  51ED               	movf	moteHandler@i_1555& (0+255),w,b
  5899  001F2C  0101               	movlb	1	; () banked
  5900  001F2E  B4D8               	btfsc	status,2,c
  5901  001F30  D019               	goto	l12962
  5902                           
  5903                           ; BSR set to: 1
  5904                           ;MOTEapp.c: 242: {
  5905                           ;MOTEapp.c: 243: Traw = (Traw + ADC_GetConversion(Temp_channel)) / 2;
  5906                           
  5907                           ; BSR set to: 1
  5908                           
  5909                           ; BSR set to: 1
  5910  001F32  0E02               	movlw	2
  5911  001F34  EC37  F029         	call	_ADC_GetConversion
  5912  001F38  0101               	movlb	1	; () banked
  5913  001F3A  51E7               	movf	moteHandler@Traw& (0+255),w,b
  5914  001F3C  0100               	movlb	0	; () banked
  5915  001F3E  27C3               	addwf	?_ADC_GetConversion& (0+255),f,b
  5916  001F40  0101               	movlb	1	; () banked
  5917  001F42  51E8               	movf	(moteHandler@Traw+1)& (0+255),w,b
  5918  001F44  0100               	movlb	0	; () banked
  5919  001F46  23C4               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  5920  001F48  90D8               	bcf	status,0,c
  5921  001F4A  0100               	movlb	0	; () banked
  5922  001F4C  31C4               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  5923  001F4E  0100               	movlb	0	; () banked
  5924  001F50  6FEE               	movwf	??_moteHandler& (0+255),b
  5925  001F52  0100               	movlb	0	; () banked
  5926  001F54  31C3               	rrcf	?_ADC_GetConversion& (0+255),w,b
  5927  001F56  0101               	movlb	1	; () banked
  5928  001F58  6FE7               	movwf	moteHandler@Traw& (0+255),b
  5929  001F5A  C0EE  F1E8         	movff	??_moteHandler,moteHandler@Traw+1
  5930                           
  5931                           ; BSR set to: 1
  5932  001F5E  0101               	movlb	1	; () banked
  5933  001F60  07ED               	decf	moteHandler@i_1555& (0+255),f,b
  5934  001F62  D7E2               	goto	l12952
  5935  001F64                     l12962:
  5936                           
  5937                           ; BSR set to: 1
  5938                           ;MOTEapp.c: 244: }
  5939                           ;MOTEapp.c: 245: temperature = ADC_TempConversion(Traw);
  5940  001F64  0101               	movlb	1	; () banked
  5941  001F66  51E7               	movf	moteHandler@Traw& (0+255),w,b
  5942  001F68  EC16  F02B         	call	_ADC_TempConversion
  5943  001F6C  0100               	movlb	0	; () banked
  5944  001F6E  6FEE               	movwf	??_moteHandler& (0+255),b
  5945  001F70  0100               	movlb	0	; () banked
  5946  001F72  51EE               	movf	??_moteHandler& (0+255),w,b
  5947  001F74  0100               	movlb	0	; () banked
  5948  001F76  6F86               	movwf	_temperature& (0+255),b
  5949  001F78  6B87               	clrf	(_temperature+1)& (0+255),b
  5950                           
  5951                           ; BSR set to: 0
  5952                           ;MOTEapp.c: 246: m10SecTicker = 0;
  5953  001F7A  0E00               	movlw	0
  5954  001F7C  0100               	movlb	0	; () banked
  5955  001F7E  6F83               	movwf	(_m10SecTicker+1)& (0+255),b
  5956  001F80  0E00               	movlw	0
  5957  001F82  6F82               	movwf	_m10SecTicker& (0+255),b
  5958  001F84                     l12966:
  5959                           
  5960                           ; BSR set to: 0
  5961                           ;MOTEapp.c: 247: }
  5962                           ;MOTEapp.c: 248: }
  5963                           ;MOTEapp.c: 250: if ((secTicker >= SleepTimeOut) && (menuTimeout))
  5964  001F84  0100               	movlb	0	; () banked
  5965  001F86  51F2               	movf	_SleepTimeOut& (0+255),w,b
  5966  001F88  0100               	movlb	0	; () banked
  5967  001F8A  5DB3               	subwf	_secTicker& (0+255),w,b
  5968  001F8C  A0D8               	btfss	status,0,c
  5969  001F8E  D08C               	goto	l13004
  5970                           
  5971                           ; BSR set to: 0
  5972  001F90  0100               	movlb	0	; () banked
  5973  001F92  51F6               	movf	_menuTimeout& (0+255),w,b
  5974  001F94  B4D8               	btfsc	status,2,c
  5975  001F96  D088               	goto	l13004
  5976                           
  5977                           ; BSR set to: 0
  5978                           ;MOTEapp.c: 251: {
  5979                           ;MOTEapp.c: 252: if (secTicker >= SleepTimeOut)
  5980  001F98  0100               	movlb	0	; () banked
  5981  001F9A  51F2               	movf	_SleepTimeOut& (0+255),w,b
  5982  001F9C  0100               	movlb	0	; () banked
  5983  001F9E  5DB3               	subwf	_secTicker& (0+255),w,b
  5984  001FA0  A0D8               	btfss	status,0,c
  5985  001FA2  D082               	goto	l13004
  5986                           
  5987                           ; BSR set to: 0
  5988                           ;MOTEapp.c: 253: {
  5989                           ;MOTEapp.c: 254: gotoSleep = 1;
  5990  001FA4  0E01               	movlw	1
  5991  001FA6  0101               	movlb	1	; () banked
  5992  001FA8  6FE6               	movwf	moteHandler@gotoSleep& (0+255),b
  5993                           
  5994                           ;MOTEapp.c: 255: secTicker = 0;
  5995  001FAA  0E00               	movlw	0
  5996  001FAC  0100               	movlb	0	; () banked
  5997  001FAE  6FB3               	movwf	_secTicker& (0+255),b
  5998                           
  5999                           ; BSR set to: 0
  6000                           ;MOTEapp.c: 256: }
  6001                           ;MOTEapp.c: 257: }
  6002                           ;MOTEapp.c: 259: switch(moteState)
  6003                           
  6004                           ; BSR set to: 0
  6005  001FB0  D07B               	goto	l13004
  6006  001FB2  D7FF               	goto	l393
  6007  001FB4                     l12974:
  6008                           
  6009                           ;MOTEapp.c: 265: oled_clear();
  6010  001FB4  EC26  F02C         	call	_oled_clear	;wreg free
  6011                           
  6012                           ;MOTEapp.c: 266: oled_putString("MOTE Mode",1,0);
  6013  001FB8  0EE6               	movlw	low STR_23
  6014  001FBA  0100               	movlb	0	; () banked
  6015  001FBC  6FD0               	movwf	oled_putString@string& (0+255),b
  6016  001FBE  0E7E               	movlw	high STR_23
  6017  001FC0  0100               	movlb	0	; () banked
  6018  001FC2  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  6019  001FC4  0E01               	movlw	1
  6020  001FC6  0100               	movlb	0	; () banked
  6021  001FC8  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  6022  001FCA  0E00               	movlw	0
  6023  001FCC  0100               	movlb	0	; () banked
  6024  001FCE  6FD3               	movwf	oled_putString@start_page& (0+255),b
  6025  001FD0  EC0D  F027         	call	_oled_putString	;wreg free
  6026                           
  6027                           ;MOTEapp.c: 267: oled_putString("Starting",2,1);
  6028  001FD4  0E3C               	movlw	low STR_24
  6029  001FD6  0100               	movlb	0	; () banked
  6030  001FD8  6FD0               	movwf	oled_putString@string& (0+255),b
  6031  001FDA  0E7F               	movlw	high STR_24
  6032  001FDC  0100               	movlb	0	; () banked
  6033  001FDE  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  6034  001FE0  0E02               	movlw	2
  6035  001FE2  0100               	movlb	0	; () banked
  6036  001FE4  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  6037  001FE6  0E01               	movlw	1
  6038  001FE8  0100               	movlb	0	; () banked
  6039  001FEA  6FD3               	movwf	oled_putString@start_page& (0+255),b
  6040  001FEC  EC0D  F027         	call	_oled_putString	;wreg free
  6041                           
  6042                           ;MOTEapp.c: 268: oled_putString("ReRun PwrTst<S2>",0,3);
  6043  001FF0  0E63               	movlw	low STR_25
  6044  001FF2  0100               	movlb	0	; () banked
  6045  001FF4  6FD0               	movwf	oled_putString@string& (0+255),b
  6046  001FF6  0E7B               	movlw	high STR_25
  6047  001FF8  0100               	movlb	0	; () banked
  6048  001FFA  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  6049  001FFC  0E00               	movlw	0
  6050  001FFE  0100               	movlb	0	; () banked
  6051  002000  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  6052  002002  0E03               	movlw	3
  6053  002004  0100               	movlb	0	; () banked
  6054  002006  6FD3               	movwf	oled_putString@start_page& (0+255),b
  6055  002008  EC0D  F027         	call	_oled_putString	;wreg free
  6056                           
  6057                           ;MOTEapp.c: 269: activeState = moteStartup;
  6058  00200C  0E00               	movlw	0
  6059  00200E  0100               	movlb	0	; () banked
  6060  002010  6F9A               	movwf	_activeState& (0+255),b
  6061                           
  6062                           ; BSR set to: 0
  6063                           ;MOTEapp.c: 270: moteState = MOTE_JOINING;
  6064  002012  0E02               	movlw	2
  6065  002014  D03B               	goto	L2
  6066  002016                     l12986:
  6067                           
  6068                           ; BSR set to: 0
  6069                           ;MOTEapp.c: 273: if ( moteJoiningProcess(readMessage, gotoNextState, s2Button) )
  6070  002016  C1E9  F0D5         	movff	moteHandler@gotoNextState,moteJoiningProcess@changeStates
  6071  00201A  C1EA  F0D6         	movff	moteHandler@s2Button,moteJoiningProcess@selectButton
  6072  00201E  0101               	movlb	1	; () banked
  6073  002020  51EE               	movf	moteHandler@readMessage& (0+255),w,b
  6074  002022  ECC3  F00B         	call	_moteJoiningProcess
  6075  002026  0900               	iorlw	0
  6076  002028  B4D8               	btfsc	status,2,c
  6077  00202A  D04C               	goto	l13006
  6078                           
  6079                           ;MOTEapp.c: 274: {
  6080                           ;MOTEapp.c: 275: oled_clear();
  6081  00202C  EC26  F02C         	call	_oled_clear	;wreg free
  6082                           
  6083                           ;MOTEapp.c: 276: oled_putString("Mobile Mote -App",0,0);
  6084  002030  0EC9               	movlw	low STR_26
  6085  002032  0100               	movlb	0	; () banked
  6086  002034  6FD0               	movwf	oled_putString@string& (0+255),b
  6087  002036  0E7B               	movlw	high STR_26
  6088  002038  0100               	movlb	0	; () banked
  6089  00203A  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  6090  00203C  0E00               	movlw	0
  6091  00203E  0100               	movlb	0	; () banked
  6092  002040  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  6093  002042  0E00               	movlw	0
  6094  002044  0100               	movlb	0	; () banked
  6095  002046  6FD3               	movwf	oled_putString@start_page& (0+255),b
  6096  002048  EC0D  F027         	call	_oled_putString	;wreg free
  6097                           
  6098                           ;MOTEapp.c: 277: oled_putString("Navigate  Select", 0,2);
  6099  00204C  0EEB               	movlw	low STR_27
  6100  00204E  0100               	movlb	0	; () banked
  6101  002050  6FD0               	movwf	oled_putString@string& (0+255),b
  6102  002052  0E7B               	movlw	high STR_27
  6103  002054  0100               	movlb	0	; () banked
  6104  002056  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  6105  002058  0E00               	movlw	0
  6106  00205A  0100               	movlb	0	; () banked
  6107  00205C  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  6108  00205E  0E02               	movlw	2
  6109  002060  0100               	movlb	0	; () banked
  6110  002062  6FD3               	movwf	oled_putString@start_page& (0+255),b
  6111  002064  EC0D  F027         	call	_oled_putString	;wreg free
  6112                           
  6113                           ;MOTEapp.c: 278: oled_putString(" (S1)      (S2) ", 0,3);
  6114  002068  0ECA               	movlw	low STR_28
  6115  00206A  0100               	movlb	0	; () banked
  6116  00206C  6FD0               	movwf	oled_putString@string& (0+255),b
  6117  00206E  0E7A               	movlw	high STR_28
  6118  002070  0100               	movlb	0	; () banked
  6119  002072  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  6120  002074  0E00               	movlw	0
  6121  002076  0100               	movlb	0	; () banked
  6122  002078  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  6123  00207A  0E03               	movlw	3
  6124  00207C  0100               	movlb	0	; () banked
  6125  00207E  6FD3               	movwf	oled_putString@start_page& (0+255),b
  6126  002080  EC0D  F027         	call	_oled_putString	;wreg free
  6127                           
  6128                           ;MOTEapp.c: 279: runningState = runningEnter;
  6129  002084  0E00               	movlw	0
  6130  002086  0100               	movlb	0	; () banked
  6131  002088  6FB2               	movwf	_runningState& (0+255),b
  6132                           
  6133                           ; BSR set to: 0
  6134                           ;MOTEapp.c: 280: moteState = MOTE_RUNNING;
  6135  00208A  0E03               	movlw	3
  6136  00208C                     L2:
  6137  00208C  0100               	movlb	0	; () banked
  6138  00208E  6FF7               	movwf	_moteState& (0+255),b
  6139                           
  6140                           ; BSR set to: 0
  6141                           ;MOTEapp.c: 281: }
  6142                           ;MOTEapp.c: 282: break;
  6143  002090  D019               	goto	l13006
  6144  002092                     l13000:
  6145                           
  6146                           ; BSR set to: 0
  6147                           ;MOTEapp.c: 284: moteRunningProcess(gotoNextState, s2Button, readMessage, gotoSleep);
  6148  002092  C1EA  F0DF         	movff	moteHandler@s2Button,moteRunningProcess@selectButton
  6149  002096  C1EE  F0E0         	movff	moteHandler@readMessage,moteRunningProcess@messageReady
  6150  00209A  C1E6  F0E1         	movff	moteHandler@gotoSleep,moteRunningProcess@sleepEvent
  6151  00209E  0101               	movlb	1	; () banked
  6152  0020A0  51E9               	movf	moteHandler@gotoNextState& (0+255),w,b
  6153  0020A2  EC5F  F000         	call	_moteRunningProcess
  6154                           
  6155                           ;MOTEapp.c: 289: }
  6156                           
  6157                           ;MOTEapp.c: 288: break;
  6158                           
  6159                           ;MOTEapp.c: 286: case MOTE_SWAP:
  6160                           
  6161                           ;MOTEapp.c: 285: break;
  6162  0020A6  D00E               	goto	l13006
  6163  0020A8                     l13004:
  6164  0020A8  0100               	movlb	0	; () banked
  6165  0020AA  51F7               	movf	_moteState& (0+255),w,b
  6166                           
  6167                           ; Switch size 1, requested type "space"
  6168                           ; Number of cases is 4, Range of values is 1 to 4
  6169                           ; switch strategies available:
  6170                           ; Name         Instructions Cycles
  6171                           ; simple_byte           13     7 (average)
  6172                           ;	Chosen strategy is simple_byte
  6173  0020AC  0A01               	xorlw	1	; case 1
  6174  0020AE  B4D8               	btfsc	status,2,c
  6175  0020B0  D781               	goto	l12974
  6176  0020B2  0A03               	xorlw	3	; case 2
  6177  0020B4  B4D8               	btfsc	status,2,c
  6178  0020B6  D7AF               	goto	l12986
  6179  0020B8  0A01               	xorlw	1	; case 3
  6180  0020BA  B4D8               	btfsc	status,2,c
  6181  0020BC  D7EA               	goto	l13000
  6182  0020BE  0A07               	xorlw	7	; case 4
  6183  0020C0  A4D8               	btfss	status,2,c
  6184  0020C2  D777               	goto	l393
  6185  0020C4                     l13006:
  6186                           
  6187                           ;MOTEapp.c: 290: return moteState;
  6188  0020C4  0100               	movlb	0	; () banked
  6189  0020C6  51F7               	movf	_moteState& (0+255),w,b
  6190  0020C8  0012               	return	
  6191  0020CA                     __end_of_moteHandler:
  6192                           	opt stack 0
  6193                           tblptru	equ	0xFF8
  6194                           tblptrh	equ	0xFF7
  6195                           tblptrl	equ	0xFF6
  6196                           tablat	equ	0xFF5
  6197                           intcon	equ	0xFF2
  6198                           postinc0	equ	0xFEE
  6199                           wreg	equ	0xFE8
  6200                           postdec1	equ	0xFE5
  6201                           fsr1l	equ	0xFE1
  6202                           status	equ	0xFD8
  6203                           
  6204 ;; *************** function _moteRunningProcess *****************
  6205 ;; Defined at:
  6206 ;;		line 488 in file "../Includes/Board/MOTEapp.c"
  6207 ;; Parameters:    Size  Location     Type
  6208 ;;  changeStates    1    wreg     unsigned char 
  6209 ;;  selectButton    1   28[BANK0 ] unsigned char 
  6210 ;;  messageReady    1   29[BANK0 ] unsigned char 
  6211 ;;  sleepEvent      1   30[BANK0 ] unsigned char 
  6212 ;; Auto vars:     Size  Location     Type
  6213 ;;  changeStates    1   42[BANK0 ] unsigned char 
  6214 ;;  counter         1   39[BANK0 ] unsigned char 
  6215 ;;  counter         1   38[BANK0 ] unsigned char 
  6216 ;;  bufferReadPo    1   40[BANK0 ] unsigned char 
  6217 ;;  bufferReadPo    1   41[BANK0 ] unsigned char 
  6218 ;;  i               1   37[BANK0 ] unsigned char 
  6219 ;;  i               1   36[BANK0 ] unsigned char 
  6220 ;;  Traw            2   34[BANK0 ] unsigned int 
  6221 ;;  readByte        1   33[BANK0 ] unsigned char 
  6222 ;; Return value:  Size  Location     Type
  6223 ;;                  1    wreg      enum E6674
  6224 ;; Registers used:
  6225 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6226 ;; Tracked objects:
  6227 ;;		On entry : 0/0
  6228 ;;		On exit  : 0/0
  6229 ;;		Unchanged: 0/0
  6230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6231 ;;      Params:         0       3       0       0       0       0       0       0       0
  6232 ;;      Locals:         0      10       0       0       0       0       0       0       0
  6233 ;;      Temps:          0       2       0       0       0       0       0       0       0
  6234 ;;      Totals:         0      15       0       0       0       0       0       0       0
  6235 ;;Total ram usage:       15 bytes
  6236 ;; Hardware stack levels used:    1
  6237 ;; Hardware stack levels required when called:   19
  6238 ;; This function calls:
  6239 ;;		_ADC_GetConversion
  6240 ;;		_ADC_TempConversion
  6241 ;;		_MOTEapp_SetDataRateSetting
  6242 ;;		_TMR2_ReadTimer
  6243 ;;		___awdiv
  6244 ;;		_moteApp_GoToSleep
  6245 ;;		_moteApp_add16bToDataBuffer
  6246 ;;		_moteApp_add8bToDataBuffer
  6247 ;;		_moteApp_clearBuffers
  6248 ;;		_moteApp_delayms
  6249 ;;		_oled_clear
  6250 ;;		_oled_putString
  6251 ;;		_oled_putUint16
  6252 ;;		_oled_putUint8
  6253 ;;		_sendCommand
  6254 ;;		_sendDataCommand
  6255 ;;		_strcmp
  6256 ;;		_strncmp
  6257 ;; This function is called by:
  6258 ;;		_moteHandler
  6259 ;; This function uses a non-reentrant model
  6260 ;;
  6261                           
  6262                           	psect	text9
  6263  0000BE                     __ptext9:
  6264                           	opt stack 0
  6265  0000BE                     _moteRunningProcess:
  6266                           	opt stack 10
  6267                           
  6268                           ; BSR set to: 0
  6269                           ;incstack = 0
  6270                           ;moteRunningProcess@changeStates stored from wreg
  6271  0000BE  0100               	movlb	0	; () banked
  6272  0000C0  6FED               	movwf	moteRunningProcess@changeStates& (0+255),b
  6273                           
  6274                           ;MOTEapp.c: 490: uint8_t readByte = 0;
  6275  0000C2  0E00               	movlw	0
  6276  0000C4  0100               	movlb	0	; () banked
  6277  0000C6  6FE4               	movwf	moteRunningProcess@readByte& (0+255),b
  6278                           
  6279                           ; BSR set to: 0
  6280                           ;MOTEapp.c: 492: if ((sleepEvent) && (periodicState))
  6281  0000C8  0100               	movlb	0	; () banked
  6282  0000CA  51E1               	movf	moteRunningProcess@sleepEvent& (0+255),w,b
  6283  0000CC  0100               	movlb	0	; () banked
  6284  0000CE  B4D8               	btfsc	status,2,c
  6285  0000D0  EF8B  F00B         	goto	l12610
  6286                           
  6287                           ; BSR set to: 0
  6288  0000D4  0100               	movlb	0	; () banked
  6289  0000D6  51F8               	movf	_periodicState& (0+255),w,b
  6290  0000D8  B4D8               	btfsc	status,2,c
  6291  0000DA  EF8B  F00B         	goto	l12610
  6292                           
  6293                           ; BSR set to: 0
  6294                           ;MOTEapp.c: 493: {
  6295                           ;MOTEapp.c: 494: if (sleepTicker >= periodicTimerValue)
  6296  0000DE  0100               	movlb	0	; () banked
  6297  0000E0  51F9               	movf	_periodicTimerValue& (0+255),w,b
  6298  0000E2  0100               	movlb	0	; () banked
  6299  0000E4  5DB4               	subwf	_sleepTicker& (0+255),w,b
  6300  0000E6  A0D8               	btfss	status,0,c
  6301  0000E8  D116               	goto	l12030
  6302                           
  6303                           ; BSR set to: 0
  6304                           ;MOTEapp.c: 495: {
  6305                           ;MOTEapp.c: 497: uint16_t Traw = 0;
  6306  0000EA  0E00               	movlw	0
  6307  0000EC  0100               	movlb	0	; () banked
  6308  0000EE  6FE6               	movwf	(moteRunningProcess@Traw+1)& (0+255),b
  6309  0000F0  0E00               	movlw	0
  6310  0000F2  6FE5               	movwf	moteRunningProcess@Traw& (0+255),b
  6311                           
  6312                           ; BSR set to: 0
  6313                           ;MOTEapp.c: 498: moteApp_delayms(10);
  6314  0000F4  0E00               	movlw	0
  6315  0000F6  0100               	movlb	0	; () banked
  6316  0000F8  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
  6317  0000FA  0E0A               	movlw	10
  6318  0000FC  6FC3               	movwf	moteApp_delayms@length& (0+255),b
  6319  0000FE  EC73  F02A         	call	_moteApp_delayms	;wreg free
  6320                           
  6321                           ;MOTEapp.c: 499: for(uint8_t i = 32; i>0; i--)
  6322  000102  0E20               	movlw	32
  6323  000104  0100               	movlb	0	; () banked
  6324  000106  6FE7               	movwf	moteRunningProcess@i& (0+255),b
  6325  000108                     l11958:
  6326                           
  6327                           ; BSR set to: 0
  6328  000108  0100               	movlb	0	; () banked
  6329  00010A  51E7               	movf	moteRunningProcess@i& (0+255),w,b
  6330  00010C  0100               	movlb	0	; () banked
  6331  00010E  B4D8               	btfsc	status,2,c
  6332  000110  D019               	goto	l11968
  6333                           
  6334                           ; BSR set to: 0
  6335                           ;MOTEapp.c: 500: {
  6336                           ;MOTEapp.c: 501: light = (light + ADC_GetConversion(Light_channel)) / 2;
  6337                           
  6338                           ; BSR set to: 0
  6339                           
  6340                           ; BSR set to: 0
  6341  000112  0E03               	movlw	3
  6342  000114  EC37  F029         	call	_ADC_GetConversion
  6343  000118  0100               	movlb	0	; () banked
  6344  00011A  5180               	movf	_light& (0+255),w,b
  6345  00011C  0100               	movlb	0	; () banked
  6346  00011E  27C3               	addwf	?_ADC_GetConversion& (0+255),f,b
  6347  000120  0100               	movlb	0	; () banked
  6348  000122  5181               	movf	(_light+1)& (0+255),w,b
  6349  000124  0100               	movlb	0	; () banked
  6350  000126  23C4               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  6351  000128  90D8               	bcf	status,0,c
  6352  00012A  0100               	movlb	0	; () banked
  6353  00012C  31C4               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  6354  00012E  0100               	movlb	0	; () banked
  6355  000130  6FE2               	movwf	??_moteRunningProcess& (0+255),b
  6356  000132  0100               	movlb	0	; () banked
  6357  000134  31C3               	rrcf	?_ADC_GetConversion& (0+255),w,b
  6358  000136  0100               	movlb	0	; () banked
  6359  000138  6F80               	movwf	_light& (0+255),b
  6360  00013A  C0E2  F081         	movff	??_moteRunningProcess,_light+1
  6361                           
  6362                           ; BSR set to: 0
  6363  00013E  0100               	movlb	0	; () banked
  6364  000140  07E7               	decf	moteRunningProcess@i& (0+255),f,b
  6365  000142  D7E2               	goto	l11958
  6366  000144                     l11968:
  6367                           
  6368                           ; BSR set to: 0
  6369                           ;MOTEapp.c: 502: }
  6370                           ;MOTEapp.c: 503: moteApp_delayms(10);
  6371  000144  0E00               	movlw	0
  6372  000146  0100               	movlb	0	; () banked
  6373  000148  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
  6374  00014A  0E0A               	movlw	10
  6375  00014C  6FC3               	movwf	moteApp_delayms@length& (0+255),b
  6376  00014E  EC73  F02A         	call	_moteApp_delayms	;wreg free
  6377                           
  6378                           ;MOTEapp.c: 504: for(uint8_t i = 32; i>0; i--)
  6379  000152  0E20               	movlw	32
  6380  000154  0100               	movlb	0	; () banked
  6381  000156  6FE8               	movwf	moteRunningProcess@i_1621& (0+255),b
  6382  000158                     l11972:
  6383                           
  6384                           ; BSR set to: 0
  6385  000158  0100               	movlb	0	; () banked
  6386  00015A  51E8               	movf	moteRunningProcess@i_1621& (0+255),w,b
  6387  00015C  0100               	movlb	0	; () banked
  6388  00015E  B4D8               	btfsc	status,2,c
  6389  000160  D019               	goto	l11982
  6390                           
  6391                           ; BSR set to: 0
  6392                           ;MOTEapp.c: 505: {
  6393                           ;MOTEapp.c: 506: Traw = (Traw + ADC_GetConversion(Temp_channel)) / 2;
  6394                           
  6395                           ; BSR set to: 0
  6396                           
  6397                           ; BSR set to: 0
  6398  000162  0E02               	movlw	2
  6399  000164  EC37  F029         	call	_ADC_GetConversion
  6400  000168  0100               	movlb	0	; () banked
  6401  00016A  51E5               	movf	moteRunningProcess@Traw& (0+255),w,b
  6402  00016C  0100               	movlb	0	; () banked
  6403  00016E  27C3               	addwf	?_ADC_GetConversion& (0+255),f,b
  6404  000170  0100               	movlb	0	; () banked
  6405  000172  51E6               	movf	(moteRunningProcess@Traw+1)& (0+255),w,b
  6406  000174  0100               	movlb	0	; () banked
  6407  000176  23C4               	addwfc	(?_ADC_GetConversion+1)& (0+255),f,b
  6408  000178  90D8               	bcf	status,0,c
  6409  00017A  0100               	movlb	0	; () banked
  6410  00017C  31C4               	rrcf	(?_ADC_GetConversion+1)& (0+255),w,b
  6411  00017E  0100               	movlb	0	; () banked
  6412  000180  6FE2               	movwf	??_moteRunningProcess& (0+255),b
  6413  000182  0100               	movlb	0	; () banked
  6414  000184  31C3               	rrcf	?_ADC_GetConversion& (0+255),w,b
  6415  000186  0100               	movlb	0	; () banked
  6416  000188  6FE5               	movwf	moteRunningProcess@Traw& (0+255),b
  6417  00018A  C0E2  F0E6         	movff	??_moteRunningProcess,moteRunningProcess@Traw+1
  6418                           
  6419                           ; BSR set to: 0
  6420  00018E  0100               	movlb	0	; () banked
  6421  000190  07E8               	decf	moteRunningProcess@i_1621& (0+255),f,b
  6422  000192  D7E2               	goto	l11972
  6423  000194                     l11982:
  6424                           
  6425                           ; BSR set to: 0
  6426                           ;MOTEapp.c: 507: }
  6427                           ;MOTEapp.c: 508: temperature = ADC_TempConversion(Traw);
  6428  000194  0100               	movlb	0	; () banked
  6429  000196  51E5               	movf	moteRunningProcess@Traw& (0+255),w,b
  6430  000198  EC16  F02B         	call	_ADC_TempConversion
  6431  00019C  0100               	movlb	0	; () banked
  6432  00019E  6FE2               	movwf	??_moteRunningProcess& (0+255),b
  6433  0001A0  0100               	movlb	0	; () banked
  6434  0001A2  51E2               	movf	??_moteRunningProcess& (0+255),w,b
  6435  0001A4  0100               	movlb	0	; () banked
  6436  0001A6  6F86               	movwf	_temperature& (0+255),b
  6437  0001A8  6B87               	clrf	(_temperature+1)& (0+255),b
  6438                           
  6439                           ; BSR set to: 0
  6440                           ;MOTEapp.c: 510: sleepTicker = 0;
  6441  0001AA  0E00               	movlw	0
  6442  0001AC  0100               	movlb	0	; () banked
  6443  0001AE  6FB4               	movwf	_sleepTicker& (0+255),b
  6444                           
  6445                           ; BSR set to: 0
  6446                           ;MOTEapp.c: 511: oled_clear();
  6447  0001B0  EC26  F02C         	call	_oled_clear	;wreg free
  6448                           
  6449                           ;MOTEapp.c: 512: oled_putString("Issue Perodic TX",0,0);
  6450  0001B4  0E74               	movlw	low STR_70
  6451  0001B6  0100               	movlb	0	; () banked
  6452  0001B8  6FD0               	movwf	oled_putString@string& (0+255),b
  6453  0001BA  0E7B               	movlw	high STR_70
  6454  0001BC  0100               	movlb	0	; () banked
  6455  0001BE  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  6456  0001C0  0E00               	movlw	0
  6457  0001C2  0100               	movlb	0	; () banked
  6458  0001C4  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  6459  0001C6  0E00               	movlw	0
  6460  0001C8  0100               	movlb	0	; () banked
  6461  0001CA  6FD3               	movwf	oled_putString@start_page& (0+255),b
  6462  0001CC  EC0D  F027         	call	_oled_putString	;wreg free
  6463                           
  6464                           ;MOTEapp.c: 513: oled_putString("On Port #: ",0,1);
  6465  0001D0  0E3C               	movlw	low STR_71
  6466  0001D2  0100               	movlb	0	; () banked
  6467  0001D4  6FD0               	movwf	oled_putString@string& (0+255),b
  6468  0001D6  0E7E               	movlw	high STR_71
  6469  0001D8  0100               	movlb	0	; () banked
  6470  0001DA  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  6471  0001DC  0E00               	movlw	0
  6472  0001DE  0100               	movlb	0	; () banked
  6473  0001E0  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  6474  0001E2  0E01               	movlw	1
  6475  0001E4  0100               	movlb	0	; () banked
  6476  0001E6  6FD3               	movwf	oled_putString@start_page& (0+255),b
  6477  0001E8  EC0D  F027         	call	_oled_putString	;wreg free
  6478                           
  6479                           ;MOTEapp.c: 514: oled_putUint8(randomPortNum,10,1);
  6480  0001EC  0E0A               	movlw	10
  6481  0001EE  0100               	movlb	0	; () banked
  6482  0001F0  6FD5               	movwf	oled_putUint8@station_dot& (0+255),b
  6483  0001F2  0E01               	movlw	1
  6484  0001F4  0100               	movlb	0	; () banked
  6485  0001F6  6FD6               	movwf	oled_putUint8@start_page& (0+255),b
  6486  0001F8  0100               	movlb	0	; () banked
  6487  0001FA  51AE               	movf	_randomPortNum& (0+255),w,b
  6488  0001FC  EC92  F023         	call	_oled_putUint8
  6489                           
  6490                           ;MOTEapp.c: 515: oled_putString("L:       T: ",0,2);
  6491  000200  0E7A               	movlw	low STR_72
  6492  000202  0100               	movlb	0	; () banked
  6493  000204  6FD0               	movwf	oled_putString@string& (0+255),b
  6494  000206  0E7D               	movlw	high STR_72
  6495  000208  0100               	movlb	0	; () banked
  6496  00020A  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  6497  00020C  0E00               	movlw	0
  6498  00020E  0100               	movlb	0	; () banked
  6499  000210  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  6500  000212  0E02               	movlw	2
  6501  000214  0100               	movlb	0	; () banked
  6502  000216  6FD3               	movwf	oled_putString@start_page& (0+255),b
  6503  000218  EC0D  F027         	call	_oled_putString	;wreg free
  6504                           
  6505                           ;MOTEapp.c: 516: oled_putUint16(light,3,2);
  6506  00021C  C080  F0D5         	movff	_light,oled_putUint16@number
  6507  000220  C081  F0D6         	movff	_light+1,oled_putUint16@number+1
  6508  000224  0E03               	movlw	3
  6509  000226  0100               	movlb	0	; () banked
  6510  000228  6FD7               	movwf	oled_putUint16@station_dot& (0+255),b
  6511  00022A  0E02               	movlw	2
  6512  00022C  0100               	movlb	0	; () banked
  6513  00022E  6FD8               	movwf	oled_putUint16@start_page& (0+255),b
  6514  000230  EC46  F015         	call	_oled_putUint16	;wreg free
  6515                           
  6516                           ;MOTEapp.c: 517: oled_putUint8(temperature,12,2);
  6517  000234  0E0C               	movlw	12
  6518  000236  0100               	movlb	0	; () banked
  6519  000238  6FD5               	movwf	oled_putUint8@station_dot& (0+255),b
  6520  00023A  0E02               	movlw	2
  6521  00023C  0100               	movlb	0	; () banked
  6522  00023E  6FD6               	movwf	oled_putUint8@start_page& (0+255),b
  6523  000240  0100               	movlb	0	; () banked
  6524  000242  5186               	movf	_temperature& (0+255),w,b
  6525  000244  EC92  F023         	call	_oled_putUint8
  6526                           
  6527                           ;MOTEapp.c: 518: oled_putString("(NAV)    (SEL) ",0,3);
  6528  000248  0E5E               	movlw	low STR_73
  6529  00024A  0100               	movlb	0	; () banked
  6530  00024C  6FD0               	movwf	oled_putString@string& (0+255),b
  6531  00024E  0E7C               	movlw	high STR_73
  6532  000250  0100               	movlb	0	; () banked
  6533  000252  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  6534  000254  0E00               	movlw	0
  6535  000256  0100               	movlb	0	; () banked
  6536  000258  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  6537  00025A  0E03               	movlw	3
  6538  00025C  0100               	movlb	0	; () banked
  6539  00025E  6FD3               	movwf	oled_putString@start_page& (0+255),b
  6540  000260  EC0D  F027         	call	_oled_putString	;wreg free
  6541                           
  6542                           ;MOTEapp.c: 520: moteApp_clearBuffers();
  6543  000264  ECE1  F021         	call	_moteApp_clearBuffers	;wreg free
  6544                           
  6545                           ;MOTEapp.c: 521: randomPortNum = TMR2_ReadTimer();
  6546  000268  ECBD  F02C         	call	_TMR2_ReadTimer	;wreg free
  6547  00026C  0100               	movlb	0	; () banked
  6548  00026E  6FAE               	movwf	_randomPortNum& (0+255),b
  6549                           
  6550                           ; BSR set to: 0
  6551                           ;MOTEapp.c: 523: if (!randomPortNum)
  6552  000270  0100               	movlb	0	; () banked
  6553  000272  51AE               	movf	_randomPortNum& (0+255),w,b
  6554  000274  0100               	movlb	0	; () banked
  6555  000276  A4D8               	btfss	status,2,c
  6556  000278  D002               	goto	l12010
  6557                           
  6558                           ; BSR set to: 0
  6559                           ;MOTEapp.c: 524: randomPortNum = 5;
  6560  00027A  0E05               	movlw	5
  6561  00027C  D007               	goto	L3
  6562  00027E                     l12010:
  6563                           
  6564                           ; BSR set to: 0
  6565                           ;MOTEapp.c: 525: else if (randomPortNum > 223)
  6566  00027E  0EDF               	movlw	223
  6567  000280  0100               	movlb	0	; () banked
  6568  000282  65AE               	cpfsgt	_randomPortNum& (0+255),b
  6569  000284  D005               	goto	l12014
  6570                           
  6571                           ; BSR set to: 0
  6572                           ;MOTEapp.c: 526: randomPortNum = randomPortNum - 50;
  6573  000286  0100               	movlb	0	; () banked
  6574  000288  51AE               	movf	_randomPortNum& (0+255),w,b
  6575  00028A  0FCE               	addlw	206
  6576  00028C                     L3:
  6577  00028C  0100               	movlb	0	; () banked
  6578  00028E  6FAE               	movwf	_randomPortNum& (0+255),b
  6579  000290                     l12014:
  6580                           
  6581                           ; BSR set to: 0
  6582                           ;MOTEapp.c: 528: moteApp_add8bToDataBuffer(randomPortNum, 0);
  6583  000290  0E00               	movlw	0
  6584  000292  0100               	movlb	0	; () banked
  6585  000294  6FC9               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6586  000296  0100               	movlb	0	; () banked
  6587  000298  51AE               	movf	_randomPortNum& (0+255),w,b
  6588  00029A  ECF9  F01C         	call	_moteApp_add8bToDataBuffer
  6589                           
  6590                           ;MOTEapp.c: 529: dataBuffer[3] = 0x20;
  6591  00029E  0E20               	movlw	32
  6592  0002A0  0101               	movlb	1	; () banked
  6593  0002A2  6FC7               	movwf	(_dataBuffer+3)& (0+255),b
  6594                           
  6595                           ; BSR set to: 1
  6596                           ;MOTEapp.c: 531: moteApp_add16bToDataBuffer(light, 4);
  6597  0002A4  C080  F0CA         	movff	_light,moteApp_add16bToDataBuffer@number
  6598  0002A8  C081  F0CB         	movff	_light+1,moteApp_add16bToDataBuffer@number+1
  6599  0002AC  0E04               	movlw	4
  6600  0002AE  0100               	movlb	0	; () banked
  6601  0002B0  6FCC               	movwf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),b
  6602  0002B2  ECA7  F011         	call	_moteApp_add16bToDataBuffer	;wreg free
  6603                           
  6604                           ;MOTEapp.c: 533: moteApp_add8bToDataBuffer(temperature, 9);
  6605  0002B6  0E09               	movlw	9
  6606  0002B8  0100               	movlb	0	; () banked
  6607  0002BA  6FC9               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6608  0002BC  0100               	movlb	0	; () banked
  6609  0002BE  5186               	movf	_temperature& (0+255),w,b
  6610  0002C0  ECF9  F01C         	call	_moteApp_add8bToDataBuffer
  6611                           
  6612                           ;MOTEapp.c: 535: __nop();
  6613  0002C4  F000               	nop	
  6614                           
  6615                           ;MOTEapp.c: 537: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  6616  0002C6  0E27               	movlw	low STR_74
  6617  0002C8  0100               	movlb	0	; () banked
  6618  0002CA  6FC4               	movwf	sendDataCommand@string& (0+255),b
  6619  0002CC  0E7D               	movlw	high STR_74
  6620  0002CE  0100               	movlb	0	; () banked
  6621  0002D0  6FC5               	movwf	(sendDataCommand@string+1)& (0+255),b
  6622  0002D2  0EC4               	movlw	low _dataBuffer
  6623  0002D4  0100               	movlb	0	; () banked
  6624  0002D6  6FC6               	movwf	sendDataCommand@appData& (0+255),b
  6625  0002D8  0E01               	movlw	high _dataBuffer
  6626  0002DA  0100               	movlb	0	; () banked
  6627  0002DC  6FC7               	movwf	(sendDataCommand@appData+1)& (0+255),b
  6628  0002DE  0E0C               	movlw	12
  6629  0002E0  0100               	movlb	0	; () banked
  6630  0002E2  6FC8               	movwf	sendDataCommand@dataLength& (0+255),b
  6631  0002E4  EC44  F01E         	call	_sendDataCommand	;wreg free
  6632                           
  6633                           ;MOTEapp.c: 538: secTicker = SleepTimeOut - (SleepTimeOut / 3);
  6634  0002E8  C0F2  F0C3         	movff	_SleepTimeOut,___awdiv@dividend
  6635  0002EC  0100               	movlb	0	; () banked
  6636  0002EE  6BC4               	clrf	(___awdiv@dividend+1)& (0+255),b
  6637  0002F0  0E00               	movlw	0
  6638  0002F2  0100               	movlb	0	; () banked
  6639  0002F4  6FC6               	movwf	(___awdiv@divisor+1)& (0+255),b
  6640  0002F6  0E03               	movlw	3
  6641  0002F8  6FC5               	movwf	___awdiv@divisor& (0+255),b
  6642  0002FA  EC25  F021         	call	___awdiv	;wreg free
  6643  0002FE  0100               	movlb	0	; () banked
  6644  000300  51C3               	movf	?___awdiv& (0+255),w,b
  6645  000302  0800               	sublw	0
  6646  000304  0100               	movlb	0	; () banked
  6647  000306  25F2               	addwf	_SleepTimeOut& (0+255),w,b
  6648  000308  0100               	movlb	0	; () banked
  6649  00030A  6FB3               	movwf	_secTicker& (0+255),b
  6650                           
  6651                           ; BSR set to: 0
  6652                           ;MOTEapp.c: 539: runningState = runningUplinkTransmit;
  6653  00030C  0E08               	movlw	8
  6654  00030E  0100               	movlb	0	; () banked
  6655  000310  6FB2               	movwf	_runningState& (0+255),b
  6656                           
  6657                           ;MOTEapp.c: 540: }
  6658  000312  EF8B  F00B         	goto	l12610
  6659  000316                     l12030:
  6660                           
  6661                           ; BSR set to: 0
  6662                           ;MOTEapp.c: 541: else
  6663                           ;MOTEapp.c: 542: {
  6664                           ;MOTEapp.c: 543: if (menuTimeout)
  6665  000316  0100               	movlb	0	; () banked
  6666  000318  51F6               	movf	_menuTimeout& (0+255),w,b
  6667  00031A  B4D8               	btfsc	status,2,c
  6668  00031C  D00A               	goto	l12038
  6669                           
  6670                           ; BSR set to: 0
  6671                           ;MOTEapp.c: 544: {
  6672                           ;MOTEapp.c: 545: sleepTicker++;
  6673  00031E  0100               	movlb	0	; () banked
  6674  000320  2BB4               	incf	_sleepTicker& (0+255),f,b
  6675                           
  6676                           ; BSR set to: 0
  6677                           ;MOTEapp.c: 546: runningState = runningSleep;
  6678  000322  0E11               	movlw	17
  6679  000324  0100               	movlb	0	; () banked
  6680  000326  6FB2               	movwf	_runningState& (0+255),b
  6681                           
  6682                           ; BSR set to: 0
  6683                           ;MOTEapp.c: 547: selectButton = 1;
  6684  000328  0E01               	movlw	1
  6685  00032A  0100               	movlb	0	; () banked
  6686  00032C  6FDF               	movwf	moteRunningProcess@selectButton& (0+255),b
  6687                           
  6688                           ;MOTEapp.c: 548: } else {
  6689  00032E  EF8B  F00B         	goto	l12610
  6690  000332                     l12038:
  6691                           
  6692                           ; BSR set to: 0
  6693                           ;MOTEapp.c: 549: sleepTicker = 0;
  6694  000332  0E00               	movlw	0
  6695  000334  0100               	movlb	0	; () banked
  6696  000336  6FB4               	movwf	_sleepTicker& (0+255),b
  6697                           
  6698                           ; BSR set to: 0
  6699                           ;MOTEapp.c: 550: }
  6700                           ;MOTEapp.c: 551: }
  6701                           ;MOTEapp.c: 552: }
  6702                           ;MOTEapp.c: 555: switch(runningState)
  6703                           
  6704                           ; BSR set to: 0
  6705                           
  6706                           ; BSR set to: 0
  6707  000338  EF8B  F00B         	goto	l12610
  6708  00033C  D7FF               	goto	l487
  6709  00033E                     l12040:
  6710                           
  6711                           ;MOTEapp.c: 561: if ( (changeStates) || (selectButton) )
  6712  00033E  0100               	movlb	0	; () banked
  6713  000340  51ED               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6714  000342  0100               	movlb	0	; () banked
  6715  000344  A4D8               	btfss	status,2,c
  6716  000346  D005               	goto	l12044
  6717                           
  6718                           ; BSR set to: 0
  6719  000348  0100               	movlb	0	; () banked
  6720  00034A  51DF               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6721  00034C  0100               	movlb	0	; () banked
  6722  00034E  B4D8               	btfsc	status,2,c
  6723  000350  0012               	return	
  6724  000352                     l12044:
  6725                           
  6726                           ; BSR set to: 0
  6727                           ;MOTEapp.c: 562: {
  6728                           ;MOTEapp.c: 563: oled_clear();
  6729  000352  EC26  F02C         	call	_oled_clear	;wreg free
  6730                           
  6731                           ;MOTEapp.c: 564: oled_putString("  Issue Uplink  ",0,0);
  6732  000356  0EB9               	movlw	low STR_75
  6733  000358  0100               	movlb	0	; () banked
  6734  00035A  6FD0               	movwf	oled_putString@string& (0+255),b
  6735  00035C  0E7A               	movlw	high STR_75
  6736  00035E  0100               	movlb	0	; () banked
  6737  000360  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  6738  000362  0E00               	movlw	0
  6739  000364  0100               	movlb	0	; () banked
  6740  000366  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  6741  000368  0E00               	movlw	0
  6742  00036A  0100               	movlb	0	; () banked
  6743  00036C  6FD3               	movwf	oled_putString@start_page& (0+255),b
  6744  00036E  EC0D  F027         	call	_oled_putString	;wreg free
  6745                           
  6746                           ;MOTEapp.c: 565: oled_putString(" LoRaWAN Packet ",0,1);
  6747  000372  0E41               	movlw	low STR_76
  6748  000374  0100               	movlb	0	; () banked
  6749  000376  6FD0               	movwf	oled_putString@string& (0+255),b
  6750  000378  0E7B               	movlw	high STR_76
  6751  00037A  0100               	movlb	0	; () banked
  6752  00037C  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  6753  00037E  0E00               	movlw	0
  6754  000380  0100               	movlb	0	; () banked
  6755  000382  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  6756  000384  0E01               	movlw	1
  6757  000386  0100               	movlb	0	; () banked
  6758  000388  6FD3               	movwf	oled_putString@start_page& (0+255),b
  6759  00038A  EC0D  F027         	call	_oled_putString	;wreg free
  6760                           
  6761                           ;MOTEapp.c: 566: oled_putString("(NAV)    (SEL) ",0,3);
  6762  00038E  0E5E               	movlw	low STR_73
  6763  000390  0100               	movlb	0	; () banked
  6764  000392  6FD0               	movwf	oled_putString@string& (0+255),b
  6765  000394  0E7C               	movlw	high STR_73
  6766  000396  0100               	movlb	0	; () banked
  6767  000398  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  6768  00039A  0E00               	movlw	0
  6769  00039C  0100               	movlb	0	; () banked
  6770  00039E  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  6771  0003A0  0E03               	movlw	3
  6772  0003A2  0100               	movlb	0	; () banked
  6773  0003A4  6FD3               	movwf	oled_putString@start_page& (0+255),b
  6774  0003A6  EC0D  F027         	call	_oled_putString	;wreg free
  6775                           
  6776                           ;MOTEapp.c: 567: runningState = runningUplink;
  6777  0003AA  0E06               	movlw	6
  6778  0003AC  0100               	movlb	0	; () banked
  6779  0003AE  6FB2               	movwf	_runningState& (0+255),b
  6780                           
  6781                           ; BSR set to: 0
  6782                           ;MOTEapp.c: 568: }
  6783                           ;MOTEapp.c: 569: break;
  6784  0003B0  0012               	return	
  6785  0003B2                     l12054:
  6786                           
  6787                           ; BSR set to: 0
  6788                           ;MOTEapp.c: 571: if (changeStates)
  6789  0003B2  0100               	movlb	0	; () banked
  6790  0003B4  51ED               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6791  0003B6  0100               	movlb	0	; () banked
  6792  0003B8  B4D8               	btfsc	status,2,c
  6793  0003BA  D030               	goto	l12066
  6794                           
  6795                           ; BSR set to: 0
  6796                           ;MOTEapp.c: 572: {
  6797                           ;MOTEapp.c: 573: oled_clear();
  6798  0003BC  EC26  F02C         	call	_oled_clear	;wreg free
  6799                           
  6800                           ;MOTEapp.c: 574: oled_putString(" View Downlink  ",0,0);
  6801  0003C0  0EA8               	movlw	low STR_78
  6802  0003C2  0100               	movlb	0	; () banked
  6803  0003C4  6FD0               	movwf	oled_putString@string& (0+255),b
  6804  0003C6  0E7A               	movlw	high STR_78
  6805  0003C8  0100               	movlb	0	; () banked
  6806  0003CA  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  6807  0003CC  0E00               	movlw	0
  6808  0003CE  0100               	movlb	0	; () banked
  6809  0003D0  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  6810  0003D2  0E00               	movlw	0
  6811  0003D4  0100               	movlb	0	; () banked
  6812  0003D6  6FD3               	movwf	oled_putString@start_page& (0+255),b
  6813  0003D8  EC0D  F027         	call	_oled_putString	;wreg free
  6814                           
  6815                           ;MOTEapp.c: 575: oled_putString("  Last Message  ",0,1);
  6816  0003DC  0E97               	movlw	low STR_79
  6817  0003DE  0100               	movlb	0	; () banked
  6818  0003E0  6FD0               	movwf	oled_putString@string& (0+255),b
  6819  0003E2  0E7A               	movlw	high STR_79
  6820  0003E4  0100               	movlb	0	; () banked
  6821  0003E6  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  6822  0003E8  0E00               	movlw	0
  6823  0003EA  0100               	movlb	0	; () banked
  6824  0003EC  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  6825  0003EE  0E01               	movlw	1
  6826  0003F0  0100               	movlb	0	; () banked
  6827  0003F2  6FD3               	movwf	oled_putString@start_page& (0+255),b
  6828  0003F4  EC0D  F027         	call	_oled_putString	;wreg free
  6829                           
  6830                           ;MOTEapp.c: 576: oled_putString("(NAV)    (SEL) ",0,3);
  6831  0003F8  0E5E               	movlw	low STR_73
  6832  0003FA  0100               	movlb	0	; () banked
  6833  0003FC  6FD0               	movwf	oled_putString@string& (0+255),b
  6834  0003FE  0E7C               	movlw	high STR_73
  6835  000400  0100               	movlb	0	; () banked
  6836  000402  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  6837  000404  0E00               	movlw	0
  6838  000406  0100               	movlb	0	; () banked
  6839  000408  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  6840  00040A  0E03               	movlw	3
  6841  00040C  0100               	movlb	0	; () banked
  6842  00040E  6FD3               	movwf	oled_putString@start_page& (0+255),b
  6843  000410  EC0D  F027         	call	_oled_putString	;wreg free
  6844                           
  6845                           ;MOTEapp.c: 577: runningState = runningDownlink;
  6846  000414  0E0A               	movlw	10
  6847  000416  0100               	movlb	0	; () banked
  6848  000418  6FB2               	movwf	_runningState& (0+255),b
  6849                           
  6850                           ;MOTEapp.c: 578: }
  6851  00041A  0012               	return	
  6852  00041C                     l12066:
  6853                           
  6854                           ; BSR set to: 0
  6855                           ;MOTEapp.c: 579: else if (selectButton)
  6856  00041C  0100               	movlb	0	; () banked
  6857  00041E  51DF               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6858  000420  0100               	movlb	0	; () banked
  6859  000422  B4D8               	btfsc	status,2,c
  6860  000424  0012               	return	
  6861                           
  6862                           ; BSR set to: 0
  6863                           ;MOTEapp.c: 580: {
  6864                           ;MOTEapp.c: 581: sleepTicker = 0;
  6865  000426  0E00               	movlw	0
  6866  000428  0100               	movlb	0	; () banked
  6867  00042A  6FB4               	movwf	_sleepTicker& (0+255),b
  6868                           
  6869                           ; BSR set to: 0
  6870                           ;MOTEapp.c: 583: oled_clear();
  6871  00042C  EC26  F02C         	call	_oled_clear	;wreg free
  6872                           
  6873                           ;MOTEapp.c: 584: oled_putString("Uplink Pckt Type",0,0);
  6874  000430  0EA7               	movlw	low STR_81
  6875  000432  0100               	movlb	0	; () banked
  6876  000434  6FD0               	movwf	oled_putString@string& (0+255),b
  6877  000436  0E7B               	movlw	high STR_81
  6878  000438  0100               	movlb	0	; () banked
  6879  00043A  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  6880  00043C  0E00               	movlw	0
  6881  00043E  0100               	movlb	0	; () banked
  6882  000440  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  6883  000442  0E00               	movlw	0
  6884  000444  0100               	movlb	0	; () banked
  6885  000446  6FD3               	movwf	oled_putString@start_page& (0+255),b
  6886  000448  EC0D  F027         	call	_oled_putString	;wreg free
  6887                           
  6888                           ;MOTEapp.c: 585: oled_putString("Throu Port# ",0,1);
  6889  00044C  0E6D               	movlw	low STR_82
  6890  00044E  0100               	movlb	0	; () banked
  6891  000450  6FD0               	movwf	oled_putString@string& (0+255),b
  6892  000452  0E7D               	movlw	high STR_82
  6893  000454  0100               	movlb	0	; () banked
  6894  000456  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  6895  000458  0E00               	movlw	0
  6896  00045A  0100               	movlb	0	; () banked
  6897  00045C  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  6898  00045E  0E01               	movlw	1
  6899  000460  0100               	movlb	0	; () banked
  6900  000462  6FD3               	movwf	oled_putString@start_page& (0+255),b
  6901  000464  EC0D  F027         	call	_oled_putString	;wreg free
  6902                           
  6903                           ;MOTEapp.c: 586: oled_putString("(UNCNF)    (CNF) ",0,3);
  6904  000468  0EC8               	movlw	low STR_83
  6905  00046A  0100               	movlb	0	; () banked
  6906  00046C  6FD0               	movwf	oled_putString@string& (0+255),b
  6907  00046E  0E79               	movlw	high STR_83
  6908  000470  0100               	movlb	0	; () banked
  6909  000472  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  6910  000474  0E00               	movlw	0
  6911  000476  0100               	movlb	0	; () banked
  6912  000478  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  6913  00047A  0E03               	movlw	3
  6914  00047C  0100               	movlb	0	; () banked
  6915  00047E  6FD3               	movwf	oled_putString@start_page& (0+255),b
  6916  000480  EC0D  F027         	call	_oled_putString	;wreg free
  6917                           
  6918                           ;MOTEapp.c: 588: moteApp_clearBuffers();
  6919  000484  ECE1  F021         	call	_moteApp_clearBuffers	;wreg free
  6920                           
  6921                           ;MOTEapp.c: 589: randomPortNum = TMR2_ReadTimer();
  6922  000488  ECBD  F02C         	call	_TMR2_ReadTimer	;wreg free
  6923  00048C  0100               	movlb	0	; () banked
  6924  00048E  6FAE               	movwf	_randomPortNum& (0+255),b
  6925                           
  6926                           ; BSR set to: 0
  6927                           ;MOTEapp.c: 591: if (!randomPortNum)
  6928  000490  0100               	movlb	0	; () banked
  6929  000492  51AE               	movf	_randomPortNum& (0+255),w,b
  6930  000494  0100               	movlb	0	; () banked
  6931  000496  A4D8               	btfss	status,2,c
  6932  000498  D002               	goto	l12086
  6933                           
  6934                           ; BSR set to: 0
  6935                           ;MOTEapp.c: 592: randomPortNum = 5;
  6936  00049A  0E05               	movlw	5
  6937  00049C  D007               	goto	L4
  6938  00049E                     l12086:
  6939                           
  6940                           ; BSR set to: 0
  6941                           ;MOTEapp.c: 593: else if (randomPortNum > 223)
  6942  00049E  0EDF               	movlw	223
  6943  0004A0  0100               	movlb	0	; () banked
  6944  0004A2  65AE               	cpfsgt	_randomPortNum& (0+255),b
  6945  0004A4  D005               	goto	l12090
  6946                           
  6947                           ; BSR set to: 0
  6948                           ;MOTEapp.c: 594: randomPortNum = randomPortNum - 50;
  6949  0004A6  0100               	movlb	0	; () banked
  6950  0004A8  51AE               	movf	_randomPortNum& (0+255),w,b
  6951  0004AA  0FCE               	addlw	206
  6952  0004AC                     L4:
  6953  0004AC  0100               	movlb	0	; () banked
  6954  0004AE  6FAE               	movwf	_randomPortNum& (0+255),b
  6955  0004B0                     l12090:
  6956                           
  6957                           ; BSR set to: 0
  6958                           ;MOTEapp.c: 595: oled_putUint8(randomPortNum,12,1);
  6959  0004B0  0E0C               	movlw	12
  6960  0004B2  0100               	movlb	0	; () banked
  6961  0004B4  6FD5               	movwf	oled_putUint8@station_dot& (0+255),b
  6962  0004B6  0E01               	movlw	1
  6963  0004B8  0100               	movlb	0	; () banked
  6964  0004BA  6FD6               	movwf	oled_putUint8@start_page& (0+255),b
  6965  0004BC  0100               	movlb	0	; () banked
  6966  0004BE  51AE               	movf	_randomPortNum& (0+255),w,b
  6967  0004C0  EC92  F023         	call	_oled_putUint8
  6968                           
  6969                           ;MOTEapp.c: 597: moteApp_add8bToDataBuffer(randomPortNum, 0);
  6970  0004C4  0E00               	movlw	0
  6971  0004C6  0100               	movlb	0	; () banked
  6972  0004C8  6FC9               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6973  0004CA  0100               	movlb	0	; () banked
  6974  0004CC  51AE               	movf	_randomPortNum& (0+255),w,b
  6975  0004CE  ECF9  F01C         	call	_moteApp_add8bToDataBuffer
  6976                           
  6977                           ;MOTEapp.c: 598: dataBuffer[3] = 0x20;
  6978  0004D2  0E20               	movlw	32
  6979  0004D4  0101               	movlb	1	; () banked
  6980  0004D6  6FC7               	movwf	(_dataBuffer+3)& (0+255),b
  6981                           
  6982                           ; BSR set to: 1
  6983                           ;MOTEapp.c: 600: moteApp_add16bToDataBuffer(light, 4);
  6984  0004D8  C080  F0CA         	movff	_light,moteApp_add16bToDataBuffer@number
  6985  0004DC  C081  F0CB         	movff	_light+1,moteApp_add16bToDataBuffer@number+1
  6986  0004E0  0E04               	movlw	4
  6987  0004E2  0100               	movlb	0	; () banked
  6988  0004E4  6FCC               	movwf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),b
  6989  0004E6  ECA7  F011         	call	_moteApp_add16bToDataBuffer	;wreg free
  6990                           
  6991                           ;MOTEapp.c: 602: moteApp_add8bToDataBuffer(temperature, 9);
  6992  0004EA  0E09               	movlw	9
  6993  0004EC  0100               	movlb	0	; () banked
  6994  0004EE  6FC9               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6995  0004F0  0100               	movlb	0	; () banked
  6996  0004F2  5186               	movf	_temperature& (0+255),w,b
  6997  0004F4  ECF9  F01C         	call	_moteApp_add8bToDataBuffer
  6998                           
  6999                           ;MOTEapp.c: 604: __nop();
  7000  0004F8  F000               	nop	
  7001                           
  7002                           ;MOTEapp.c: 606: runningState = runningUplinkSelect;
  7003  0004FA  0E07               	movlw	7
  7004  0004FC  0100               	movlb	0	; () banked
  7005  0004FE  6FB2               	movwf	_runningState& (0+255),b
  7006                           
  7007                           ; BSR set to: 0
  7008                           ;MOTEapp.c: 607: }
  7009                           ;MOTEapp.c: 608: break;
  7010                           
  7011                           ; BSR set to: 0
  7012  000500  0012               	return	
  7013  000502                     l12104:
  7014                           
  7015                           ; BSR set to: 0
  7016                           ;MOTEapp.c: 610: if (changeStates)
  7017  000502  0100               	movlb	0	; () banked
  7018  000504  51ED               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7019  000506  0100               	movlb	0	; () banked
  7020  000508  B4D8               	btfsc	status,2,c
  7021  00050A  D011               	goto	l12108
  7022                           
  7023                           ; BSR set to: 0
  7024                           ;MOTEapp.c: 611: {
  7025                           ;MOTEapp.c: 612: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  7026  00050C  0E27               	movlw	low STR_74
  7027  00050E  0100               	movlb	0	; () banked
  7028  000510  6FC4               	movwf	sendDataCommand@string& (0+255),b
  7029  000512  0E7D               	movlw	high STR_74
  7030  000514  0100               	movlb	0	; () banked
  7031  000516  6FC5               	movwf	(sendDataCommand@string+1)& (0+255),b
  7032  000518  0EC4               	movlw	low _dataBuffer
  7033  00051A  0100               	movlb	0	; () banked
  7034  00051C  6FC6               	movwf	sendDataCommand@appData& (0+255),b
  7035  00051E  0E01               	movlw	high _dataBuffer
  7036  000520  0100               	movlb	0	; () banked
  7037  000522  6FC7               	movwf	(sendDataCommand@appData+1)& (0+255),b
  7038  000524  0E0C               	movlw	12
  7039  000526  0100               	movlb	0	; () banked
  7040  000528  6FC8               	movwf	sendDataCommand@dataLength& (0+255),b
  7041  00052A  EC44  F01E         	call	_sendDataCommand	;wreg free
  7042  00052E                     l12108:
  7043                           
  7044                           ;MOTEapp.c: 613: }
  7045                           ;MOTEapp.c: 614: if (selectButton)
  7046  00052E  0100               	movlb	0	; () banked
  7047  000530  51DF               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7048  000532  0100               	movlb	0	; () banked
  7049  000534  B4D8               	btfsc	status,2,c
  7050  000536  D011               	goto	l12112
  7051                           
  7052                           ; BSR set to: 0
  7053                           ;MOTEapp.c: 615: {
  7054                           ;MOTEapp.c: 616: sendDataCommand("mac tx cnf ", dataBuffer, 12);
  7055  000538  0E6C               	movlw	low STR_85
  7056  00053A  0100               	movlb	0	; () banked
  7057  00053C  6FC4               	movwf	sendDataCommand@string& (0+255),b
  7058  00053E  0E7E               	movlw	high STR_85
  7059  000540  0100               	movlb	0	; () banked
  7060  000542  6FC5               	movwf	(sendDataCommand@string+1)& (0+255),b
  7061  000544  0EC4               	movlw	low _dataBuffer
  7062  000546  0100               	movlb	0	; () banked
  7063  000548  6FC6               	movwf	sendDataCommand@appData& (0+255),b
  7064  00054A  0E01               	movlw	high _dataBuffer
  7065  00054C  0100               	movlb	0	; () banked
  7066  00054E  6FC7               	movwf	(sendDataCommand@appData+1)& (0+255),b
  7067  000550  0E0C               	movlw	12
  7068  000552  0100               	movlb	0	; () banked
  7069  000554  6FC8               	movwf	sendDataCommand@dataLength& (0+255),b
  7070  000556  EC44  F01E         	call	_sendDataCommand	;wreg free
  7071  00055A                     l12112:
  7072                           
  7073                           ;MOTEapp.c: 617: }
  7074                           ;MOTEapp.c: 618: if ( (changeStates) || (selectButton) )
  7075  00055A  0100               	movlb	0	; () banked
  7076  00055C  51ED               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7077  00055E  0100               	movlb	0	; () banked
  7078  000560  A4D8               	btfss	status,2,c
  7079  000562  D005               	goto	l12116
  7080                           
  7081                           ; BSR set to: 0
  7082  000564  0100               	movlb	0	; () banked
  7083  000566  51DF               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7084  000568  0100               	movlb	0	; () banked
  7085  00056A  B4D8               	btfsc	status,2,c
  7086  00056C  0012               	return	
  7087  00056E                     l12116:
  7088                           
  7089                           ; BSR set to: 0
  7090                           ;MOTEapp.c: 619: {
  7091                           ;MOTEapp.c: 620: oled_clear();
  7092  00056E  EC26  F02C         	call	_oled_clear	;wreg free
  7093                           
  7094                           ;MOTEapp.c: 621: oled_putString("Sent Data: ",0,0);
  7095  000572  0E54               	movlw	low STR_86
  7096  000574  0100               	movlb	0	; () banked
  7097  000576  6FD0               	movwf	oled_putString@string& (0+255),b
  7098  000578  0E7E               	movlw	high STR_86
  7099  00057A  0100               	movlb	0	; () banked
  7100  00057C  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  7101  00057E  0E00               	movlw	0
  7102  000580  0100               	movlb	0	; () banked
  7103  000582  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  7104  000584  0E00               	movlw	0
  7105  000586  0100               	movlb	0	; () banked
  7106  000588  6FD3               	movwf	oled_putString@start_page& (0+255),b
  7107  00058A  EC0D  F027         	call	_oled_putString	;wreg free
  7108                           
  7109                           ;MOTEapp.c: 622: oled_putString("L:       T: ",0,1);
  7110  00058E  0E7A               	movlw	low STR_72
  7111  000590  0100               	movlb	0	; () banked
  7112  000592  6FD0               	movwf	oled_putString@string& (0+255),b
  7113  000594  0E7D               	movlw	high STR_72
  7114  000596  0100               	movlb	0	; () banked
  7115  000598  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  7116  00059A  0E00               	movlw	0
  7117  00059C  0100               	movlb	0	; () banked
  7118  00059E  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  7119  0005A0  0E01               	movlw	1
  7120  0005A2  0100               	movlb	0	; () banked
  7121  0005A4  6FD3               	movwf	oled_putString@start_page& (0+255),b
  7122  0005A6  EC0D  F027         	call	_oled_putString	;wreg free
  7123                           
  7124                           ;MOTEapp.c: 623: oled_putUint16(light,3,2);
  7125  0005AA  C080  F0D5         	movff	_light,oled_putUint16@number
  7126  0005AE  C081  F0D6         	movff	_light+1,oled_putUint16@number+1
  7127  0005B2  0E03               	movlw	3
  7128  0005B4  0100               	movlb	0	; () banked
  7129  0005B6  6FD7               	movwf	oled_putUint16@station_dot& (0+255),b
  7130  0005B8  0E02               	movlw	2
  7131  0005BA  0100               	movlb	0	; () banked
  7132  0005BC  6FD8               	movwf	oled_putUint16@start_page& (0+255),b
  7133  0005BE  EC46  F015         	call	_oled_putUint16	;wreg free
  7134                           
  7135                           ;MOTEapp.c: 624: oled_putUint8(temperature,12,2);
  7136  0005C2  0E0C               	movlw	12
  7137  0005C4  0100               	movlb	0	; () banked
  7138  0005C6  6FD5               	movwf	oled_putUint8@station_dot& (0+255),b
  7139  0005C8  0E02               	movlw	2
  7140  0005CA  0100               	movlb	0	; () banked
  7141  0005CC  6FD6               	movwf	oled_putUint8@start_page& (0+255),b
  7142  0005CE  0100               	movlb	0	; () banked
  7143  0005D0  5186               	movf	_temperature& (0+255),w,b
  7144  0005D2  EC92  F023         	call	_oled_putUint8
  7145                           
  7146                           ;MOTEapp.c: 625: oled_putString("Tx Port #: ",0,1);
  7147  0005D6  0E48               	movlw	low STR_88
  7148  0005D8  0100               	movlb	0	; () banked
  7149  0005DA  6FD0               	movwf	oled_putString@string& (0+255),b
  7150  0005DC  0E7E               	movlw	high STR_88
  7151  0005DE  0100               	movlb	0	; () banked
  7152  0005E0  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  7153  0005E2  0E00               	movlw	0
  7154  0005E4  0100               	movlb	0	; () banked
  7155  0005E6  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  7156  0005E8  0E01               	movlw	1
  7157  0005EA  0100               	movlb	0	; () banked
  7158  0005EC  6FD3               	movwf	oled_putString@start_page& (0+255),b
  7159  0005EE  EC0D  F027         	call	_oled_putString	;wreg free
  7160                           
  7161                           ;MOTEapp.c: 626: oled_putUint8(randomPortNum,12,1);
  7162  0005F2  0E0C               	movlw	12
  7163  0005F4  0100               	movlb	0	; () banked
  7164  0005F6  6FD5               	movwf	oled_putUint8@station_dot& (0+255),b
  7165  0005F8  0E01               	movlw	1
  7166  0005FA  0100               	movlb	0	; () banked
  7167  0005FC  6FD6               	movwf	oled_putUint8@start_page& (0+255),b
  7168  0005FE  0100               	movlb	0	; () banked
  7169  000600  51AE               	movf	_randomPortNum& (0+255),w,b
  7170  000602  EC92  F023         	call	_oled_putUint8
  7171                           
  7172                           ;MOTEapp.c: 627: LATAbits.LATA6 = 0;
  7173  000606  9C89               	bcf	3977,6,c	;volatile
  7174                           
  7175                           ;MOTEapp.c: 628: runningState = runningUplinkTransmit;
  7176  000608  0E08               	movlw	8
  7177  00060A  0100               	movlb	0	; () banked
  7178  00060C  6FB2               	movwf	_runningState& (0+255),b
  7179                           
  7180                           ; BSR set to: 0
  7181                           ;MOTEapp.c: 629: }
  7182                           ;MOTEapp.c: 630: break;
  7183  00060E  0012               	return	
  7184  000610                     l12134:
  7185                           
  7186                           ; BSR set to: 0
  7187                           ;MOTEapp.c: 632: if ( messageReady )
  7188  000610  0100               	movlb	0	; () banked
  7189  000612  51E0               	movf	moteRunningProcess@messageReady& (0+255),w,b
  7190  000614  0100               	movlb	0	; () banked
  7191  000616  B4D8               	btfsc	status,2,c
  7192  000618  D13D               	goto	l12200
  7193                           
  7194                           ; BSR set to: 0
  7195                           ;MOTEapp.c: 633: {
  7196                           ;MOTEapp.c: 634: if(strcmp(moduleResonseBuffer, "ok") == 0)
  7197  00061A  0E64               	movlw	low _moduleResonseBuffer
  7198  00061C  0100               	movlb	0	; () banked
  7199  00061E  6FC3               	movwf	strcmp@s1& (0+255),b
  7200  000620  0E01               	movlw	high _moduleResonseBuffer
  7201  000622  0100               	movlb	0	; () banked
  7202  000624  6FC4               	movwf	(strcmp@s1+1)& (0+255),b
  7203  000626  0EF9               	movlw	low STR_43
  7204  000628  0100               	movlb	0	; () banked
  7205  00062A  6FC5               	movwf	strcmp@s2& (0+255),b
  7206  00062C  0E7F               	movlw	high STR_43
  7207  00062E  0100               	movlb	0	; () banked
  7208  000630  6FC6               	movwf	(strcmp@s2+1)& (0+255),b
  7209  000632  ECBC  F028         	call	_strcmp	;wreg free
  7210  000636  0100               	movlb	0	; () banked
  7211  000638  51C3               	movf	?_strcmp& (0+255),w,b
  7212  00063A  0100               	movlb	0	; () banked
  7213  00063C  11C4               	iorwf	(?_strcmp+1)& (0+255),w,b
  7214  00063E  A4D8               	btfss	status,2,c
  7215  000640  D004               	goto	l12142
  7216                           
  7217                           ; BSR set to: 0
  7218                           ;MOTEapp.c: 635: {
  7219                           ;MOTEapp.c: 636: LATAbits.LATA6 = 1;
  7220  000642  8C89               	bsf	3977,6,c	;volatile
  7221                           
  7222                           ; BSR set to: 0
  7223                           ;MOTEapp.c: 637: runningState = runningUplinkTransmit;
  7224  000644  0E08               	movlw	8
  7225  000646  0100               	movlb	0	; () banked
  7226  000648  6FB2               	movwf	_runningState& (0+255),b
  7227  00064A                     l12142:
  7228                           
  7229                           ; BSR set to: 0
  7230                           ;MOTEapp.c: 638: }
  7231                           ;MOTEapp.c: 639: if(strncmp(moduleResonseBuffer, "mac_rx", 6) == 0)
  7232  00064A  0E64               	movlw	low _moduleResonseBuffer
  7233  00064C  0100               	movlb	0	; () banked
  7234  00064E  6FC3               	movwf	strncmp@s1& (0+255),b
  7235  000650  0E01               	movlw	high _moduleResonseBuffer
  7236  000652  0100               	movlb	0	; () banked
  7237  000654  6FC4               	movwf	(strncmp@s1+1)& (0+255),b
  7238  000656  0EA4               	movlw	low STR_90
  7239  000658  0100               	movlb	0	; () banked
  7240  00065A  6FC5               	movwf	strncmp@s2& (0+255),b
  7241  00065C  0E7F               	movlw	high STR_90
  7242  00065E  0100               	movlb	0	; () banked
  7243  000660  6FC6               	movwf	(strncmp@s2+1)& (0+255),b
  7244  000662  0E00               	movlw	0
  7245  000664  0100               	movlb	0	; () banked
  7246  000666  6FC8               	movwf	(strncmp@len+1)& (0+255),b
  7247  000668  0E06               	movlw	6
  7248  00066A  6FC7               	movwf	strncmp@len& (0+255),b
  7249  00066C  EC37  F024         	call	_strncmp	;wreg free
  7250  000670  0100               	movlb	0	; () banked
  7251  000672  51C3               	movf	?_strncmp& (0+255),w,b
  7252  000674  0100               	movlb	0	; () banked
  7253  000676  11C4               	iorwf	(?_strncmp+1)& (0+255),w,b
  7254  000678  A4D8               	btfss	status,2,c
  7255  00067A  D08B               	goto	l12184
  7256                           
  7257                           ; BSR set to: 0
  7258                           ;MOTEapp.c: 640: {
  7259                           ;MOTEapp.c: 641: uint8_t bufferReadPos = 7;
  7260  00067C  0E07               	movlw	7
  7261  00067E  0100               	movlb	0	; () banked
  7262  000680  6FEC               	movwf	moteRunningProcess@bufferReadPos& (0+255),b
  7263                           
  7264                           ; BSR set to: 0
  7265                           ;MOTEapp.c: 644: responsePortNum[0] = moduleResonseBuffer[bufferReadPos++];
  7266  000682  0100               	movlb	0	; () banked
  7267  000684  51EC               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7268  000686  0D01               	mullw	1
  7269  000688  0E64               	movlw	low _moduleResonseBuffer
  7270  00068A  24F3               	addwf	prodl,w,c
  7271  00068C  6ED9               	movwf	fsr2l,c
  7272  00068E  0E01               	movlw	high _moduleResonseBuffer
  7273  000690  20F4               	addwfc	prodh,w,c
  7274  000692  6EDA               	movwf	fsr2h,c
  7275  000694  50DF               	movf	indf2,w,c
  7276  000696  0100               	movlb	0	; () banked
  7277  000698  6FBE               	movwf	_responsePortNum& (0+255),b
  7278                           
  7279                           ; BSR set to: 0
  7280  00069A  0100               	movlb	0	; () banked
  7281  00069C  2BEC               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7282                           
  7283                           ; BSR set to: 0
  7284                           ;MOTEapp.c: 645: responsePortNum[1] = moduleResonseBuffer[bufferReadPos++];
  7285  00069E  0100               	movlb	0	; () banked
  7286  0006A0  51EC               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7287  0006A2  0D01               	mullw	1
  7288  0006A4  0E64               	movlw	low _moduleResonseBuffer
  7289  0006A6  24F3               	addwf	prodl,w,c
  7290  0006A8  6ED9               	movwf	fsr2l,c
  7291  0006AA  0E01               	movlw	high _moduleResonseBuffer
  7292  0006AC  20F4               	addwfc	prodh,w,c
  7293  0006AE  6EDA               	movwf	fsr2h,c
  7294  0006B0  50DF               	movf	indf2,w,c
  7295  0006B2  0100               	movlb	0	; () banked
  7296  0006B4  6FBF               	movwf	(_responsePortNum+1)& (0+255),b
  7297                           
  7298                           ; BSR set to: 0
  7299  0006B6  0100               	movlb	0	; () banked
  7300  0006B8  2BEC               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7301                           
  7302                           ; BSR set to: 0
  7303                           ;MOTEapp.c: 646: if (responsePortNum[1] != ' ')
  7304  0006BA  0E20               	movlw	32
  7305  0006BC  0100               	movlb	0	; () banked
  7306  0006BE  19BF               	xorwf	(_responsePortNum+1)& (0+255),w,b
  7307  0006C0  B4D8               	btfsc	status,2,c
  7308  0006C2  D015               	goto	l511
  7309                           
  7310                           ; BSR set to: 0
  7311                           ;MOTEapp.c: 647: {
  7312                           ;MOTEapp.c: 648: responsePortNum[2] = moduleResonseBuffer[bufferReadPos++];
  7313  0006C4  0100               	movlb	0	; () banked
  7314  0006C6  51EC               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7315  0006C8  0D01               	mullw	1
  7316  0006CA  0E64               	movlw	low _moduleResonseBuffer
  7317  0006CC  24F3               	addwf	prodl,w,c
  7318  0006CE  6ED9               	movwf	fsr2l,c
  7319  0006D0  0E01               	movlw	high _moduleResonseBuffer
  7320  0006D2  20F4               	addwfc	prodh,w,c
  7321  0006D4  6EDA               	movwf	fsr2h,c
  7322  0006D6  50DF               	movf	indf2,w,c
  7323  0006D8  0100               	movlb	0	; () banked
  7324  0006DA  6FC0               	movwf	(_responsePortNum+2)& (0+255),b
  7325                           
  7326                           ; BSR set to: 0
  7327  0006DC  0100               	movlb	0	; () banked
  7328  0006DE  2BEC               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7329                           
  7330                           ; BSR set to: 0
  7331                           ;MOTEapp.c: 649: if (responsePortNum[2] != ' ')
  7332  0006E0  0E20               	movlw	32
  7333  0006E2  0100               	movlb	0	; () banked
  7334  0006E4  19C0               	xorwf	(_responsePortNum+2)& (0+255),w,b
  7335  0006E6  B4D8               	btfsc	status,2,c
  7336  0006E8  D002               	goto	l511
  7337                           
  7338                           ; BSR set to: 0
  7339                           ;MOTEapp.c: 650: {
  7340                           ;MOTEapp.c: 651: bufferReadPos++;
  7341  0006EA  0100               	movlb	0	; () banked
  7342  0006EC  2BEC               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7343  0006EE                     l511:
  7344                           
  7345                           ; BSR set to: 0
  7346                           ;MOTEapp.c: 652: }
  7347                           ;MOTEapp.c: 653: }
  7348                           ;MOTEapp.c: 655: bufferReadPos++;
  7349  0006EE  0100               	movlb	0	; () banked
  7350  0006F0  2BEC               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7351                           
  7352                           ; BSR set to: 0
  7353                           ;MOTEapp.c: 657: for (uint8_t counter = 0; counter < sizeof(moduleResonseBuffer); counte
      +                          r++)
  7354  0006F2  0E00               	movlw	0
  7355  0006F4  0100               	movlb	0	; () banked
  7356  0006F6  6FE9               	movwf	moteRunningProcess@counter& (0+255),b
  7357  0006F8                     l12166:
  7358                           
  7359                           ; BSR set to: 0
  7360  0006F8  0E3F               	movlw	63
  7361  0006FA  0100               	movlb	0	; () banked
  7362  0006FC  65E9               	cpfsgt	moteRunningProcess@counter& (0+255),b
  7363  0006FE  D001               	goto	l12170
  7364  000700  D029               	goto	l514
  7365  000702                     l12170:
  7366                           
  7367                           ; BSR set to: 0
  7368                           ;MOTEapp.c: 658: {
  7369                           ;MOTEapp.c: 659: responseData[counter] = moduleResonseBuffer[bufferReadPos];
  7370  000702  0100               	movlb	0	; () banked
  7371  000704  51EC               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7372  000706  0D01               	mullw	1
  7373  000708  0E64               	movlw	low _moduleResonseBuffer
  7374  00070A  24F3               	addwf	prodl,w,c
  7375  00070C  6ED9               	movwf	fsr2l,c
  7376  00070E  0E01               	movlw	high _moduleResonseBuffer
  7377  000710  20F4               	addwfc	prodh,w,c
  7378  000712  6EDA               	movwf	fsr2h,c
  7379  000714  0100               	movlb	0	; () banked
  7380  000716  51E9               	movf	moteRunningProcess@counter& (0+255),w,b
  7381  000718  0D01               	mullw	1
  7382  00071A  0EA4               	movlw	low _responseData
  7383  00071C  24F3               	addwf	prodl,w,c
  7384  00071E  6EE1               	movwf	fsr1l,c
  7385  000720  0E01               	movlw	high _responseData
  7386  000722  20F4               	addwfc	prodh,w,c
  7387  000724  6EE2               	movwf	fsr1h,c
  7388  000726  CFDF FFE7          	movff	indf2,indf1
  7389                           
  7390                           ; BSR set to: 0
  7391                           ;MOTEapp.c: 661: if (responseData[counter] != 0x00)
  7392  00072A  0100               	movlb	0	; () banked
  7393  00072C  51E9               	movf	moteRunningProcess@counter& (0+255),w,b
  7394  00072E  0D01               	mullw	1
  7395  000730  0EA4               	movlw	low _responseData
  7396  000732  24F3               	addwf	prodl,w,c
  7397  000734  6ED9               	movwf	fsr2l,c
  7398  000736  0E01               	movlw	high _responseData
  7399  000738  20F4               	addwfc	prodh,w,c
  7400  00073A  6EDA               	movwf	fsr2h,c
  7401  00073C  50DF               	movf	indf2,w,c
  7402  00073E  B4D8               	btfsc	status,2,c
  7403  000740  D003               	goto	l12176
  7404                           
  7405                           ; BSR set to: 0
  7406                           ;MOTEapp.c: 662: {
  7407                           ;MOTEapp.c: 663: bufferReadPos++;
  7408  000742  0100               	movlb	0	; () banked
  7409  000744  2BEC               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7410                           
  7411                           ;MOTEapp.c: 664: } else {
  7412  000746  D003               	goto	l12178
  7413  000748                     l12176:
  7414                           
  7415                           ; BSR set to: 0
  7416                           ;MOTEapp.c: 665: counter = sizeof(moduleResonseBuffer);
  7417  000748  0E40               	movlw	64
  7418  00074A  0100               	movlb	0	; () banked
  7419  00074C  6FE9               	movwf	moteRunningProcess@counter& (0+255),b
  7420  00074E                     l12178:
  7421                           
  7422                           ; BSR set to: 0
  7423  00074E  0100               	movlb	0	; () banked
  7424  000750  2BE9               	incf	moteRunningProcess@counter& (0+255),f,b
  7425  000752  D7D2               	goto	l12166
  7426  000754                     l514:
  7427                           
  7428                           ; BSR set to: 0
  7429                           ;MOTEapp.c: 666: }
  7430                           ;MOTEapp.c: 667: }
  7431                           ;MOTEapp.c: 669: LATAbits.LATA7 = 1;
  7432  000754  8E89               	bsf	3977,7,c	;volatile
  7433                           
  7434                           ;MOTEapp.c: 670: LATAbits.LATA6 = 0;
  7435  000756  9C89               	bcf	3977,6,c	;volatile
  7436                           
  7437                           ; BSR set to: 0
  7438                           ;MOTEapp.c: 672: oled_putString("Server Response ",0,2);
  7439  000758  0EFD               	movlw	low STR_91
  7440  00075A  0100               	movlb	0	; () banked
  7441  00075C  6FD0               	movwf	oled_putString@string& (0+255),b
  7442  00075E  0E7A               	movlw	high STR_91
  7443  000760  0100               	movlb	0	; () banked
  7444  000762  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  7445  000764  0E00               	movlw	0
  7446  000766  0100               	movlb	0	; () banked
  7447  000768  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  7448  00076A  0E02               	movlw	2
  7449  00076C  0100               	movlb	0	; () banked
  7450  00076E  6FD3               	movwf	oled_putString@start_page& (0+255),b
  7451  000770  EC0D  F027         	call	_oled_putString	;wreg free
  7452                           
  7453                           ;MOTEapp.c: 673: oled_putString("    Received    ",0,3);
  7454  000774  0E42               	movlw	low STR_92
  7455  000776  0100               	movlb	0	; () banked
  7456  000778  6FD0               	movwf	oled_putString@string& (0+255),b
  7457  00077A  0E7A               	movlw	high STR_92
  7458  00077C  0100               	movlb	0	; () banked
  7459  00077E  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  7460  000780  0E00               	movlw	0
  7461  000782  0100               	movlb	0	; () banked
  7462  000784  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  7463  000786  0E03               	movlw	3
  7464  000788  0100               	movlb	0	; () banked
  7465  00078A  6FD3               	movwf	oled_putString@start_page& (0+255),b
  7466  00078C  EC0D  F027         	call	_oled_putString	;wreg free
  7467                           
  7468                           ;MOTEapp.c: 674: }
  7469  000790  D078               	goto	l12198
  7470  000792                     l12184:
  7471                           
  7472                           ;MOTEapp.c: 675: else if(strncmp(moduleResonseBuffer, "mac_tx", 6) == 0)
  7473  000792  0E64               	movlw	low _moduleResonseBuffer
  7474  000794  0100               	movlb	0	; () banked
  7475  000796  6FC3               	movwf	strncmp@s1& (0+255),b
  7476  000798  0E01               	movlw	high _moduleResonseBuffer
  7477  00079A  0100               	movlb	0	; () banked
  7478  00079C  6FC4               	movwf	(strncmp@s1+1)& (0+255),b
  7479  00079E  0EAB               	movlw	low STR_93
  7480  0007A0  0100               	movlb	0	; () banked
  7481  0007A2  6FC5               	movwf	strncmp@s2& (0+255),b
  7482  0007A4  0E7F               	movlw	high STR_93
  7483  0007A6  0100               	movlb	0	; () banked
  7484  0007A8  6FC6               	movwf	(strncmp@s2+1)& (0+255),b
  7485  0007AA  0E00               	movlw	0
  7486  0007AC  0100               	movlb	0	; () banked
  7487  0007AE  6FC8               	movwf	(strncmp@len+1)& (0+255),b
  7488  0007B0  0E06               	movlw	6
  7489  0007B2  6FC7               	movwf	strncmp@len& (0+255),b
  7490  0007B4  EC37  F024         	call	_strncmp	;wreg free
  7491  0007B8  0100               	movlb	0	; () banked
  7492  0007BA  51C3               	movf	?_strncmp& (0+255),w,b
  7493  0007BC  0100               	movlb	0	; () banked
  7494  0007BE  11C4               	iorwf	(?_strncmp+1)& (0+255),w,b
  7495  0007C0  A4D8               	btfss	status,2,c
  7496  0007C2  D010               	goto	l12190
  7497                           
  7498                           ; BSR set to: 0
  7499                           ;MOTEapp.c: 676: {
  7500                           ;MOTEapp.c: 677: LATAbits.LATA6 = 0;
  7501  0007C4  9C89               	bcf	3977,6,c	;volatile
  7502                           
  7503                           ; BSR set to: 0
  7504                           ;MOTEapp.c: 678: oled_putString("Data Transmitted",0,3);
  7505  0007C6  0E85               	movlw	low STR_94
  7506  0007C8  0100               	movlb	0	; () banked
  7507  0007CA  6FD0               	movwf	oled_putString@string& (0+255),b
  7508  0007CC  0E7B               	movlw	high STR_94
  7509  0007CE  0100               	movlb	0	; () banked
  7510  0007D0  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  7511  0007D2  0E00               	movlw	0
  7512  0007D4  0100               	movlb	0	; () banked
  7513  0007D6  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  7514  0007D8  0E03               	movlw	3
  7515  0007DA  0100               	movlb	0	; () banked
  7516  0007DC  6FD3               	movwf	oled_putString@start_page& (0+255),b
  7517  0007DE  EC0D  F027         	call	_oled_putString	;wreg free
  7518                           
  7519                           ;MOTEapp.c: 679: }
  7520  0007E2  D04F               	goto	l12198
  7521  0007E4                     l12190:
  7522                           
  7523                           ;MOTEapp.c: 680: else if(strncmp(moduleResonseBuffer, "mac_er", 6) == 0)
  7524  0007E4  0E64               	movlw	low _moduleResonseBuffer
  7525  0007E6  0100               	movlb	0	; () banked
  7526  0007E8  6FC3               	movwf	strncmp@s1& (0+255),b
  7527  0007EA  0E01               	movlw	high _moduleResonseBuffer
  7528  0007EC  0100               	movlb	0	; () banked
  7529  0007EE  6FC4               	movwf	(strncmp@s1+1)& (0+255),b
  7530  0007F0  0E9D               	movlw	low STR_95
  7531  0007F2  0100               	movlb	0	; () banked
  7532  0007F4  6FC5               	movwf	strncmp@s2& (0+255),b
  7533  0007F6  0E7F               	movlw	high STR_95
  7534  0007F8  0100               	movlb	0	; () banked
  7535  0007FA  6FC6               	movwf	(strncmp@s2+1)& (0+255),b
  7536  0007FC  0E00               	movlw	0
  7537  0007FE  0100               	movlb	0	; () banked
  7538  000800  6FC8               	movwf	(strncmp@len+1)& (0+255),b
  7539  000802  0E06               	movlw	6
  7540  000804  6FC7               	movwf	strncmp@len& (0+255),b
  7541  000806  EC37  F024         	call	_strncmp	;wreg free
  7542  00080A  0100               	movlb	0	; () banked
  7543  00080C  51C3               	movf	?_strncmp& (0+255),w,b
  7544  00080E  0100               	movlb	0	; () banked
  7545  000810  11C4               	iorwf	(?_strncmp+1)& (0+255),w,b
  7546  000812  A4D8               	btfss	status,2,c
  7547  000814  D00F               	goto	l12194
  7548                           
  7549                           ; BSR set to: 0
  7550                           ;MOTEapp.c: 681: {
  7551                           ;MOTEapp.c: 682: oled_putString("Mac Error Occured",0,3);
  7552  000816  0EDA               	movlw	low STR_96
  7553  000818  0100               	movlb	0	; () banked
  7554  00081A  6FD0               	movwf	oled_putString@string& (0+255),b
  7555  00081C  0E79               	movlw	high STR_96
  7556  00081E  0100               	movlb	0	; () banked
  7557  000820  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  7558  000822  0E00               	movlw	0
  7559  000824  0100               	movlb	0	; () banked
  7560  000826  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  7561  000828  0E03               	movlw	3
  7562  00082A  0100               	movlb	0	; () banked
  7563  00082C  6FD3               	movwf	oled_putString@start_page& (0+255),b
  7564  00082E  EC0D  F027         	call	_oled_putString	;wreg free
  7565                           
  7566                           ;MOTEapp.c: 683: }
  7567  000832  D027               	goto	l12198
  7568  000834                     l12194:
  7569                           
  7570                           ;MOTEapp.c: 684: else if(strncmp(moduleResonseBuffer, "no_fre", 6) == 0)
  7571  000834  0E64               	movlw	low _moduleResonseBuffer
  7572  000836  0100               	movlb	0	; () banked
  7573  000838  6FC3               	movwf	strncmp@s1& (0+255),b
  7574  00083A  0E01               	movlw	high _moduleResonseBuffer
  7575  00083C  0100               	movlb	0	; () banked
  7576  00083E  6FC4               	movwf	(strncmp@s1+1)& (0+255),b
  7577  000840  0E96               	movlw	low STR_97
  7578  000842  0100               	movlb	0	; () banked
  7579  000844  6FC5               	movwf	strncmp@s2& (0+255),b
  7580  000846  0E7F               	movlw	high STR_97
  7581  000848  0100               	movlb	0	; () banked
  7582  00084A  6FC6               	movwf	(strncmp@s2+1)& (0+255),b
  7583  00084C  0E00               	movlw	0
  7584  00084E  0100               	movlb	0	; () banked
  7585  000850  6FC8               	movwf	(strncmp@len+1)& (0+255),b
  7586  000852  0E06               	movlw	6
  7587  000854  6FC7               	movwf	strncmp@len& (0+255),b
  7588  000856  EC37  F024         	call	_strncmp	;wreg free
  7589  00085A  0100               	movlb	0	; () banked
  7590  00085C  51C3               	movf	?_strncmp& (0+255),w,b
  7591  00085E  0100               	movlb	0	; () banked
  7592  000860  11C4               	iorwf	(?_strncmp+1)& (0+255),w,b
  7593  000862  A4D8               	btfss	status,2,c
  7594  000864  D00E               	goto	l12198
  7595                           
  7596                           ; BSR set to: 0
  7597                           ;MOTEapp.c: 685: {
  7598                           ;MOTEapp.c: 686: oled_putString("No Free Channel",0,3);
  7599  000866  0E9E               	movlw	low STR_98
  7600  000868  0100               	movlb	0	; () banked
  7601  00086A  6FD0               	movwf	oled_putString@string& (0+255),b
  7602  00086C  0E7C               	movlw	high STR_98
  7603  00086E  0100               	movlb	0	; () banked
  7604  000870  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  7605  000872  0E00               	movlw	0
  7606  000874  0100               	movlb	0	; () banked
  7607  000876  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  7608  000878  0E03               	movlw	3
  7609  00087A  0100               	movlb	0	; () banked
  7610  00087C  6FD3               	movwf	oled_putString@start_page& (0+255),b
  7611  00087E  EC0D  F027         	call	_oled_putString	;wreg free
  7612  000882                     l12198:
  7613                           
  7614                           ;MOTEapp.c: 687: }
  7615                           ;MOTEapp.c: 688: _delay((unsigned long)((16)*(48000000/4000.0)));
  7616  000882  0EFA               	movlw	250
  7617  000884  0100               	movlb	0	; () banked
  7618  000886  6FE2               	movwf	??_moteRunningProcess& (0+255),b
  7619  000888  0E58               	movlw	88
  7620  00088A                     u11917:
  7621  00088A  2EE8               	decfsz	wreg,f,c
  7622  00088C  D7FE               	goto	u11917
  7623  00088E  2FE2               	decfsz	??_moteRunningProcess& (0+255),f,b
  7624  000890  D7FC               	goto	u11917
  7625  000892  D000               	nop2	
  7626  000894                     l12200:
  7627                           
  7628                           ;MOTEapp.c: 689: }
  7629                           ;MOTEapp.c: 690: if ( (changeStates) || (selectButton) )
  7630  000894  0100               	movlb	0	; () banked
  7631  000896  51ED               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7632  000898  0100               	movlb	0	; () banked
  7633  00089A  A4D8               	btfss	status,2,c
  7634  00089C  D005               	goto	l12204
  7635                           
  7636                           ; BSR set to: 0
  7637  00089E  0100               	movlb	0	; () banked
  7638  0008A0  51DF               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7639  0008A2  0100               	movlb	0	; () banked
  7640  0008A4  B4D8               	btfsc	status,2,c
  7641  0008A6  0012               	return	
  7642  0008A8                     l12204:
  7643                           
  7644                           ; BSR set to: 0
  7645                           ;MOTEapp.c: 691: {
  7646                           ;MOTEapp.c: 692: oled_clear();
  7647  0008A8  EC26  F02C         	call	_oled_clear	;wreg free
  7648                           
  7649                           ;MOTEapp.c: 693: oled_putString("  Issue Uplink  ",0,0);
  7650  0008AC  0EB9               	movlw	low STR_75
  7651  0008AE  0100               	movlb	0	; () banked
  7652  0008B0  6FD0               	movwf	oled_putString@string& (0+255),b
  7653  0008B2  0E7A               	movlw	high STR_75
  7654  0008B4  0100               	movlb	0	; () banked
  7655  0008B6  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  7656  0008B8  0E00               	movlw	0
  7657  0008BA  0100               	movlb	0	; () banked
  7658  0008BC  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  7659  0008BE  0E00               	movlw	0
  7660  0008C0  0100               	movlb	0	; () banked
  7661  0008C2  6FD3               	movwf	oled_putString@start_page& (0+255),b
  7662  0008C4  EC0D  F027         	call	_oled_putString	;wreg free
  7663                           
  7664                           ;MOTEapp.c: 694: oled_putString(" LoRaWAN Packet ",0,1);
  7665  0008C8  0E41               	movlw	low STR_76
  7666  0008CA  0100               	movlb	0	; () banked
  7667  0008CC  6FD0               	movwf	oled_putString@string& (0+255),b
  7668  0008CE  0E7B               	movlw	high STR_76
  7669  0008D0  0100               	movlb	0	; () banked
  7670  0008D2  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  7671  0008D4  0E00               	movlw	0
  7672  0008D6  0100               	movlb	0	; () banked
  7673  0008D8  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  7674  0008DA  0E01               	movlw	1
  7675  0008DC  0100               	movlb	0	; () banked
  7676  0008DE  6FD3               	movwf	oled_putString@start_page& (0+255),b
  7677  0008E0  EC0D  F027         	call	_oled_putString	;wreg free
  7678                           
  7679                           ;MOTEapp.c: 695: oled_putString("(NAV)    (SEL) ",0,3);
  7680  0008E4  0E5E               	movlw	low STR_73
  7681  0008E6  0100               	movlb	0	; () banked
  7682  0008E8  6FD0               	movwf	oled_putString@string& (0+255),b
  7683  0008EA  0E7C               	movlw	high STR_73
  7684  0008EC  0100               	movlb	0	; () banked
  7685  0008EE  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  7686  0008F0  0E00               	movlw	0
  7687  0008F2  0100               	movlb	0	; () banked
  7688  0008F4  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  7689  0008F6  0E03               	movlw	3
  7690  0008F8  0100               	movlb	0	; () banked
  7691  0008FA  6FD3               	movwf	oled_putString@start_page& (0+255),b
  7692  0008FC  EC0D  F027         	call	_oled_putString	;wreg free
  7693                           
  7694                           ;MOTEapp.c: 696: runningState = runningUplink;
  7695  000900  0E06               	movlw	6
  7696  000902  0100               	movlb	0	; () banked
  7697  000904  6FB2               	movwf	_runningState& (0+255),b
  7698                           
  7699                           ; BSR set to: 0
  7700                           ;MOTEapp.c: 697: }
  7701                           ;MOTEapp.c: 698: break;
  7702  000906  0012               	return	
  7703  000908                     l12214:
  7704                           
  7705                           ; BSR set to: 0
  7706                           ;MOTEapp.c: 700: if (changeStates)
  7707  000908  0100               	movlb	0	; () banked
  7708  00090A  51ED               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7709  00090C  0100               	movlb	0	; () banked
  7710  00090E  B4D8               	btfsc	status,2,c
  7711  000910  D030               	goto	l12226
  7712                           
  7713                           ; BSR set to: 0
  7714                           ;MOTEapp.c: 701: {
  7715                           ;MOTEapp.c: 702: oled_clear();
  7716  000912  EC26  F02C         	call	_oled_clear	;wreg free
  7717                           
  7718                           ;MOTEapp.c: 703: oled_putString("  Sensor Data  ",0,0);
  7719  000916  0E3E               	movlw	low STR_102
  7720  000918  0100               	movlb	0	; () banked
  7721  00091A  6FD0               	movwf	oled_putString@string& (0+255),b
  7722  00091C  0E7C               	movlw	high STR_102
  7723  00091E  0100               	movlb	0	; () banked
  7724  000920  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  7725  000922  0E00               	movlw	0
  7726  000924  0100               	movlb	0	; () banked
  7727  000926  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  7728  000928  0E00               	movlw	0
  7729  00092A  0100               	movlb	0	; () banked
  7730  00092C  6FD3               	movwf	oled_putString@start_page& (0+255),b
  7731  00092E  EC0D  F027         	call	_oled_putString	;wreg free
  7732                           
  7733                           ;MOTEapp.c: 704: oled_putString("    Display    ",0,1);
  7734  000932  0E2E               	movlw	low STR_103
  7735  000934  0100               	movlb	0	; () banked
  7736  000936  6FD0               	movwf	oled_putString@string& (0+255),b
  7737  000938  0E7C               	movlw	high STR_103
  7738  00093A  0100               	movlb	0	; () banked
  7739  00093C  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  7740  00093E  0E00               	movlw	0
  7741  000940  0100               	movlb	0	; () banked
  7742  000942  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  7743  000944  0E01               	movlw	1
  7744  000946  0100               	movlb	0	; () banked
  7745  000948  6FD3               	movwf	oled_putString@start_page& (0+255),b
  7746  00094A  EC0D  F027         	call	_oled_putString	;wreg free
  7747                           
  7748                           ;MOTEapp.c: 705: oled_putString("(NAV)    (SEL) ",0,3);
  7749  00094E  0E5E               	movlw	low STR_73
  7750  000950  0100               	movlb	0	; () banked
  7751  000952  6FD0               	movwf	oled_putString@string& (0+255),b
  7752  000954  0E7C               	movlw	high STR_73
  7753  000956  0100               	movlb	0	; () banked
  7754  000958  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  7755  00095A  0E00               	movlw	0
  7756  00095C  0100               	movlb	0	; () banked
  7757  00095E  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  7758  000960  0E03               	movlw	3
  7759  000962  0100               	movlb	0	; () banked
  7760  000964  6FD3               	movwf	oled_putString@start_page& (0+255),b
  7761  000966  EC0D  F027         	call	_oled_putString	;wreg free
  7762                           
  7763                           ;MOTEapp.c: 706: runningState = runningSensor;
  7764  00096A  0E01               	movlw	1
  7765  00096C  0100               	movlb	0	; () banked
  7766  00096E  6FB2               	movwf	_runningState& (0+255),b
  7767                           
  7768                           ;MOTEapp.c: 707: }
  7769  000970  0012               	return	
  7770  000972                     l12226:
  7771                           
  7772                           ; BSR set to: 0
  7773                           ;MOTEapp.c: 708: else if (selectButton)
  7774  000972  0100               	movlb	0	; () banked
  7775  000974  51DF               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7776  000976  0100               	movlb	0	; () banked
  7777  000978  B4D8               	btfsc	status,2,c
  7778  00097A  0012               	return	
  7779  00097C                     l12228:
  7780                           
  7781                           ; BSR set to: 0
  7782                           ;MOTEapp.c: 711: oled_clear();
  7783  00097C  EC26  F02C         	call	_oled_clear	;wreg free
  7784                           
  7785                           ;MOTEapp.c: 713: LATAbits.LATA7 = 0;
  7786  000980  9E89               	bcf	3977,7,c	;volatile
  7787                           
  7788                           ;MOTEapp.c: 715: oled_putString("Downlink Display",0,0);
  7789  000982  0E0D               	movlw	low STR_105
  7790  000984  0100               	movlb	0	; () banked
  7791  000986  6FD0               	movwf	oled_putString@string& (0+255),b
  7792  000988  0E7C               	movlw	high STR_105
  7793  00098A  0100               	movlb	0	; () banked
  7794  00098C  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  7795  00098E  0E00               	movlw	0
  7796  000990  0100               	movlb	0	; () banked
  7797  000992  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  7798  000994  0E00               	movlw	0
  7799  000996  0100               	movlb	0	; () banked
  7800  000998  6FD3               	movwf	oled_putString@start_page& (0+255),b
  7801  00099A  EC0D  F027         	call	_oled_putString	;wreg free
  7802                           
  7803                           ;MOTEapp.c: 717: oled_putString("Rx Port# ",0,1);
  7804  00099E  0ED2               	movlw	low STR_106
  7805  0009A0  0100               	movlb	0	; () banked
  7806  0009A2  6FD0               	movwf	oled_putString@string& (0+255),b
  7807  0009A4  0E7E               	movlw	high STR_106
  7808  0009A6  0100               	movlb	0	; () banked
  7809  0009A8  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  7810  0009AA  0E00               	movlw	0
  7811  0009AC  0100               	movlb	0	; () banked
  7812  0009AE  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  7813  0009B0  0E01               	movlw	1
  7814  0009B2  0100               	movlb	0	; () banked
  7815  0009B4  6FD3               	movwf	oled_putString@start_page& (0+255),b
  7816  0009B6  EC0D  F027         	call	_oled_putString	;wreg free
  7817                           
  7818                           ;MOTEapp.c: 718: oled_putString(&responsePortNum,9,1);
  7819  0009BA  0EBE               	movlw	low _responsePortNum
  7820  0009BC  0100               	movlb	0	; () banked
  7821  0009BE  6FD0               	movwf	oled_putString@string& (0+255),b
  7822  0009C0  0E00               	movlw	high _responsePortNum
  7823  0009C2  0100               	movlb	0	; () banked
  7824  0009C4  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  7825  0009C6  0E09               	movlw	9
  7826  0009C8  0100               	movlb	0	; () banked
  7827  0009CA  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  7828  0009CC  0E01               	movlw	1
  7829  0009CE  0100               	movlb	0	; () banked
  7830  0009D0  6FD3               	movwf	oled_putString@start_page& (0+255),b
  7831  0009D2  EC0D  F027         	call	_oled_putString	;wreg free
  7832                           
  7833                           ;MOTEapp.c: 720: oled_putString("Data: ",0,2);
  7834  0009D6  0E59               	movlw	low (STR_86+5)
  7835  0009D8  0100               	movlb	0	; () banked
  7836  0009DA  6FD0               	movwf	oled_putString@string& (0+255),b
  7837  0009DC  0E7E               	movlw	high (STR_86+5)
  7838  0009DE  0100               	movlb	0	; () banked
  7839  0009E0  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  7840  0009E2  0E00               	movlw	0
  7841  0009E4  0100               	movlb	0	; () banked
  7842  0009E6  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  7843  0009E8  0E02               	movlw	2
  7844  0009EA  0100               	movlb	0	; () banked
  7845  0009EC  6FD3               	movwf	oled_putString@start_page& (0+255),b
  7846  0009EE  EC0D  F027         	call	_oled_putString	;wreg free
  7847                           
  7848                           ;MOTEapp.c: 721: oled_putString(&responseData[0],6,2);
  7849  0009F2  0EA4               	movlw	low _responseData
  7850  0009F4  0100               	movlb	0	; () banked
  7851  0009F6  6FD0               	movwf	oled_putString@string& (0+255),b
  7852  0009F8  0E01               	movlw	high _responseData
  7853  0009FA  0100               	movlb	0	; () banked
  7854  0009FC  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  7855  0009FE  0E06               	movlw	6
  7856  000A00  0100               	movlb	0	; () banked
  7857  000A02  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  7858  000A04  0E02               	movlw	2
  7859  000A06  0100               	movlb	0	; () banked
  7860  000A08  6FD3               	movwf	oled_putString@start_page& (0+255),b
  7861  000A0A  EC0D  F027         	call	_oled_putString	;wreg free
  7862                           
  7863                           ;MOTEapp.c: 723: oled_putString(&responseData[10],0,3);
  7864  000A0E  0EAE               	movlw	low (_responseData+10)
  7865  000A10  0100               	movlb	0	; () banked
  7866  000A12  6FD0               	movwf	oled_putString@string& (0+255),b
  7867  000A14  0E01               	movlw	high (_responseData+10)
  7868  000A16  0100               	movlb	0	; () banked
  7869  000A18  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  7870  000A1A  0E00               	movlw	0
  7871  000A1C  0100               	movlb	0	; () banked
  7872  000A1E  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  7873  000A20  0E03               	movlw	3
  7874  000A22  0100               	movlb	0	; () banked
  7875  000A24  6FD3               	movwf	oled_putString@start_page& (0+255),b
  7876  000A26  EC0D  F027         	call	_oled_putString	;wreg free
  7877                           
  7878                           ;MOTEapp.c: 725: runningState = runningDownlinkDisplay;
  7879  000A2A  0E0B               	movlw	11
  7880  000A2C  0100               	movlb	0	; () banked
  7881  000A2E  6FB2               	movwf	_runningState& (0+255),b
  7882                           
  7883                           ; BSR set to: 0
  7884                           ;MOTEapp.c: 726: if (inClassCMode) {
  7885  000A30  0100               	movlb	0	; () banked
  7886  000A32  51A7               	movf	_inClassCMode& (0+255),w,b
  7887  000A34  0100               	movlb	0	; () banked
  7888  000A36  B4D8               	btfsc	status,2,c
  7889  000A38  0012               	return	
  7890                           
  7891                           ; BSR set to: 0
  7892                           ;MOTEapp.c: 727: inClassCMode = 0;
  7893  000A3A  0E00               	movlw	0
  7894  000A3C  0100               	movlb	0	; () banked
  7895  000A3E  6FA7               	movwf	_inClassCMode& (0+255),b
  7896                           
  7897                           ; BSR set to: 0
  7898                           ;MOTEapp.c: 728: moteApp_delayms(4000);
  7899  000A40  0E0F               	movlw	15
  7900  000A42  0100               	movlb	0	; () banked
  7901  000A44  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
  7902  000A46  0EA0               	movlw	160
  7903  000A48  6FC3               	movwf	moteApp_delayms@length& (0+255),b
  7904  000A4A  EC73  F02A         	call	_moteApp_delayms	;wreg free
  7905                           
  7906                           ;MOTEapp.c: 729: SleepTimeOut = 10;
  7907  000A4E  0E0A               	movlw	10
  7908  000A50  0100               	movlb	0	; () banked
  7909  000A52  6FF2               	movwf	_SleepTimeOut& (0+255),b
  7910                           
  7911                           ; BSR set to: 0
  7912                           ;MOTEapp.c: 731: }
  7913                           ;MOTEapp.c: 732: }
  7914                           ;MOTEapp.c: 733: break;
  7915                           
  7916                           ; BSR set to: 0
  7917                           
  7918                           ; BSR set to: 0
  7919  000A54  0012               	return	
  7920  000A56                     l12254:
  7921                           
  7922                           ; BSR set to: 0
  7923                           ;MOTEapp.c: 735: if ( (changeStates) || (selectButton) )
  7924  000A56  0100               	movlb	0	; () banked
  7925  000A58  51ED               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7926  000A5A  0100               	movlb	0	; () banked
  7927  000A5C  A4D8               	btfss	status,2,c
  7928  000A5E  D005               	goto	l12258
  7929                           
  7930                           ; BSR set to: 0
  7931  000A60  0100               	movlb	0	; () banked
  7932  000A62  51DF               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7933  000A64  0100               	movlb	0	; () banked
  7934  000A66  B4D8               	btfsc	status,2,c
  7935  000A68  0012               	return	
  7936  000A6A                     l12258:
  7937                           
  7938                           ; BSR set to: 0
  7939                           ;MOTEapp.c: 736: {
  7940                           ;MOTEapp.c: 737: oled_clear();
  7941  000A6A  EC26  F02C         	call	_oled_clear	;wreg free
  7942                           
  7943                           ;MOTEapp.c: 738: oled_putString(" View Downlink  ",0,0);
  7944  000A6E  0EA8               	movlw	low STR_78
  7945  000A70  0100               	movlb	0	; () banked
  7946  000A72  6FD0               	movwf	oled_putString@string& (0+255),b
  7947  000A74  0E7A               	movlw	high STR_78
  7948  000A76  0100               	movlb	0	; () banked
  7949  000A78  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  7950  000A7A  0E00               	movlw	0
  7951  000A7C  0100               	movlb	0	; () banked
  7952  000A7E  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  7953  000A80  0E00               	movlw	0
  7954  000A82  0100               	movlb	0	; () banked
  7955  000A84  6FD3               	movwf	oled_putString@start_page& (0+255),b
  7956  000A86  EC0D  F027         	call	_oled_putString	;wreg free
  7957                           
  7958                           ;MOTEapp.c: 739: oled_putString("  Last Message  ",0,1);
  7959  000A8A  0E97               	movlw	low STR_79
  7960  000A8C  0100               	movlb	0	; () banked
  7961  000A8E  6FD0               	movwf	oled_putString@string& (0+255),b
  7962  000A90  0E7A               	movlw	high STR_79
  7963  000A92  0100               	movlb	0	; () banked
  7964  000A94  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  7965  000A96  0E00               	movlw	0
  7966  000A98  0100               	movlb	0	; () banked
  7967  000A9A  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  7968  000A9C  0E01               	movlw	1
  7969  000A9E  0100               	movlb	0	; () banked
  7970  000AA0  6FD3               	movwf	oled_putString@start_page& (0+255),b
  7971  000AA2  EC0D  F027         	call	_oled_putString	;wreg free
  7972                           
  7973                           ;MOTEapp.c: 740: oled_putString("(NAV)    (SEL) ",0,3);
  7974  000AA6  0E5E               	movlw	low STR_73
  7975  000AA8  0100               	movlb	0	; () banked
  7976  000AAA  6FD0               	movwf	oled_putString@string& (0+255),b
  7977  000AAC  0E7C               	movlw	high STR_73
  7978  000AAE  0100               	movlb	0	; () banked
  7979  000AB0  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  7980  000AB2  0E00               	movlw	0
  7981  000AB4  0100               	movlb	0	; () banked
  7982  000AB6  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  7983  000AB8  0E03               	movlw	3
  7984  000ABA  0100               	movlb	0	; () banked
  7985  000ABC  6FD3               	movwf	oled_putString@start_page& (0+255),b
  7986  000ABE  EC0D  F027         	call	_oled_putString	;wreg free
  7987                           
  7988                           ;MOTEapp.c: 741: runningState = runningDownlink;
  7989  000AC2  0E0A               	movlw	10
  7990  000AC4  0100               	movlb	0	; () banked
  7991  000AC6  6FB2               	movwf	_runningState& (0+255),b
  7992                           
  7993                           ; BSR set to: 0
  7994                           ;MOTEapp.c: 742: }
  7995                           ;MOTEapp.c: 743: break;
  7996  000AC8  0012               	return	
  7997  000ACA                     l12268:
  7998                           
  7999                           ; BSR set to: 0
  8000                           ;MOTEapp.c: 745: if (changeStates)
  8001  000ACA  0100               	movlb	0	; () banked
  8002  000ACC  51ED               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8003  000ACE  0100               	movlb	0	; () banked
  8004  000AD0  B4D8               	btfsc	status,2,c
  8005  000AD2  D043               	goto	l12282
  8006                           
  8007                           ; BSR set to: 0
  8008                           ;MOTEapp.c: 746: {
  8009                           ;MOTEapp.c: 747: oled_clear();
  8010  000AD4  EC26  F02C         	call	_oled_clear	;wreg free
  8011                           
  8012                           ;MOTEapp.c: 748: oled_putString("Menu Has Timeout", 0, 0);
  8013  000AD8  0EFC               	movlw	low STR_111
  8014  000ADA  0100               	movlb	0	; () banked
  8015  000ADC  6FD0               	movwf	oled_putString@string& (0+255),b
  8016  000ADE  0E7B               	movlw	high STR_111
  8017  000AE0  0100               	movlb	0	; () banked
  8018  000AE2  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  8019  000AE4  0E00               	movlw	0
  8020  000AE6  0100               	movlb	0	; () banked
  8021  000AE8  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  8022  000AEA  0E00               	movlw	0
  8023  000AEC  0100               	movlb	0	; () banked
  8024  000AEE  6FD3               	movwf	oled_putString@start_page& (0+255),b
  8025  000AF0  EC0D  F027         	call	_oled_putString	;wreg free
  8026                           
  8027                           ;MOTEapp.c: 749: if (menuTimeout)
  8028  000AF4  0100               	movlb	0	; () banked
  8029  000AF6  51F6               	movf	_menuTimeout& (0+255),w,b
  8030  000AF8  B4D8               	btfsc	status,2,c
  8031  000AFA  D00F               	goto	l12278
  8032                           
  8033                           ; BSR set to: 0
  8034                           ;MOTEapp.c: 750: oled_putString("    Enabled   ", 0,2);
  8035  000AFC  0EBE               	movlw	low STR_112
  8036  000AFE  0100               	movlb	0	; () banked
  8037  000B00  6FD0               	movwf	oled_putString@string& (0+255),b
  8038  000B02  0E7C               	movlw	high STR_112
  8039  000B04  0100               	movlb	0	; () banked
  8040  000B06  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  8041  000B08  0E00               	movlw	0
  8042  000B0A  0100               	movlb	0	; () banked
  8043  000B0C  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  8044  000B0E  0E02               	movlw	2
  8045  000B10  0100               	movlb	0	; () banked
  8046  000B12  6FD3               	movwf	oled_putString@start_page& (0+255),b
  8047  000B14  EC0D  F027         	call	_oled_putString	;wreg free
  8048  000B18  D00E               	goto	l539
  8049  000B1A                     l12278:
  8050                           
  8051                           ;MOTEapp.c: 751: else
  8052                           ;MOTEapp.c: 752: oled_putString("    Disabled  ", 0,2);
  8053  000B1A  0EDC               	movlw	low STR_113
  8054  000B1C  0100               	movlb	0	; () banked
  8055  000B1E  6FD0               	movwf	oled_putString@string& (0+255),b
  8056  000B20  0E7C               	movlw	high STR_113
  8057  000B22  0100               	movlb	0	; () banked
  8058  000B24  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  8059  000B26  0E00               	movlw	0
  8060  000B28  0100               	movlb	0	; () banked
  8061  000B2A  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  8062  000B2C  0E02               	movlw	2
  8063  000B2E  0100               	movlb	0	; () banked
  8064  000B30  6FD3               	movwf	oled_putString@start_page& (0+255),b
  8065  000B32  EC0D  F027         	call	_oled_putString	;wreg free
  8066  000B36                     l539:
  8067                           
  8068                           ;MOTEapp.c: 753: oled_putString("(NAV)    (CNG) ",0,3);
  8069  000B36  0E4E               	movlw	low STR_114
  8070  000B38  0100               	movlb	0	; () banked
  8071  000B3A  6FD0               	movwf	oled_putString@string& (0+255),b
  8072  000B3C  0E7C               	movlw	high STR_114
  8073  000B3E  0100               	movlb	0	; () banked
  8074  000B40  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  8075  000B42  0E00               	movlw	0
  8076  000B44  0100               	movlb	0	; () banked
  8077  000B46  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  8078  000B48  0E03               	movlw	3
  8079  000B4A  0100               	movlb	0	; () banked
  8080  000B4C  6FD3               	movwf	oled_putString@start_page& (0+255),b
  8081  000B4E  EC0D  F027         	call	_oled_putString	;wreg free
  8082                           
  8083                           ;MOTEapp.c: 754: runningState = runningMenuTimeout;
  8084  000B52  0E0E               	movlw	14
  8085  000B54  0100               	movlb	0	; () banked
  8086  000B56  6FB2               	movwf	_runningState& (0+255),b
  8087                           
  8088                           ;MOTEapp.c: 755: }
  8089  000B58  0012               	return	
  8090  000B5A                     l12282:
  8091                           
  8092                           ; BSR set to: 0
  8093                           ;MOTEapp.c: 756: else if (selectButton)
  8094  000B5A  0100               	movlb	0	; () banked
  8095  000B5C  51DF               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8096  000B5E  0100               	movlb	0	; () banked
  8097  000B60  B4D8               	btfsc	status,2,c
  8098  000B62  0012               	return	
  8099                           
  8100                           ; BSR set to: 0
  8101                           ;MOTEapp.c: 757: {
  8102                           ;MOTEapp.c: 758: oled_clear();
  8103  000B64  EC26  F02C         	call	_oled_clear	;wreg free
  8104                           
  8105                           ;MOTEapp.c: 759: oled_putString("  Sensor Data  ",0,0);
  8106  000B68  0E3E               	movlw	low STR_102
  8107  000B6A  0100               	movlb	0	; () banked
  8108  000B6C  6FD0               	movwf	oled_putString@string& (0+255),b
  8109  000B6E  0E7C               	movlw	high STR_102
  8110  000B70  0100               	movlb	0	; () banked
  8111  000B72  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  8112  000B74  0E00               	movlw	0
  8113  000B76  0100               	movlb	0	; () banked
  8114  000B78  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  8115  000B7A  0E00               	movlw	0
  8116  000B7C  0100               	movlb	0	; () banked
  8117  000B7E  6FD3               	movwf	oled_putString@start_page& (0+255),b
  8118  000B80  EC0D  F027         	call	_oled_putString	;wreg free
  8119                           
  8120                           ;MOTEapp.c: 763: if (temperature)
  8121  000B84  0100               	movlb	0	; () banked
  8122  000B86  5186               	movf	_temperature& (0+255),w,b
  8123  000B88  0100               	movlb	0	; () banked
  8124  000B8A  1187               	iorwf	(_temperature+1)& (0+255),w,b
  8125  000B8C  B4D8               	btfsc	status,2,c
  8126  000B8E  D018               	goto	l12292
  8127                           
  8128                           ; BSR set to: 0
  8129                           ;MOTEapp.c: 764: {
  8130                           ;MOTEapp.c: 765: oled_putUint16(light,6,1);
  8131  000B90  C080  F0D5         	movff	_light,oled_putUint16@number
  8132  000B94  C081  F0D6         	movff	_light+1,oled_putUint16@number+1
  8133  000B98  0E06               	movlw	6
  8134  000B9A  0100               	movlb	0	; () banked
  8135  000B9C  6FD7               	movwf	oled_putUint16@station_dot& (0+255),b
  8136  000B9E  0E01               	movlw	1
  8137  000BA0  0100               	movlb	0	; () banked
  8138  000BA2  6FD8               	movwf	oled_putUint16@start_page& (0+255),b
  8139  000BA4  EC46  F015         	call	_oled_putUint16	;wreg free
  8140                           
  8141                           ;MOTEapp.c: 766: oled_putUint16(temperature,6,2);
  8142  000BA8  C086  F0D5         	movff	_temperature,oled_putUint16@number
  8143  000BAC  C087  F0D6         	movff	_temperature+1,oled_putUint16@number+1
  8144  000BB0  0E06               	movlw	6
  8145  000BB2  0100               	movlb	0	; () banked
  8146  000BB4  6FD7               	movwf	oled_putUint16@station_dot& (0+255),b
  8147  000BB6  0E02               	movlw	2
  8148  000BB8  0100               	movlb	0	; () banked
  8149  000BBA  6FD8               	movwf	oled_putUint16@start_page& (0+255),b
  8150  000BBC  EC46  F015         	call	_oled_putUint16	;wreg free
  8151  000BC0                     l12292:
  8152                           
  8153                           ;MOTEapp.c: 767: }
  8154                           ;MOTEapp.c: 768: runningState = runningSensorMenu;
  8155  000BC0  0E02               	movlw	2
  8156  000BC2  0100               	movlb	0	; () banked
  8157  000BC4  6FB2               	movwf	_runningState& (0+255),b
  8158                           
  8159                           ; BSR set to: 0
  8160                           ;MOTEapp.c: 770: moteApp_delayms(3000);
  8161  000BC6  0E0B               	movlw	11
  8162  000BC8  0100               	movlb	0	; () banked
  8163  000BCA  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
  8164  000BCC  0EB8               	movlw	184
  8165  000BCE  6FC3               	movwf	moteApp_delayms@length& (0+255),b
  8166  000BD0  EC73  F02A         	call	_moteApp_delayms	;wreg free
  8167                           
  8168                           ;MOTEapp.c: 771: }
  8169                           ;MOTEapp.c: 772: break;
  8170  000BD4  0012               	return	
  8171  000BD6                     l12296:
  8172                           
  8173                           ;MOTEapp.c: 774: if (changeStates)
  8174  000BD6  0100               	movlb	0	; () banked
  8175  000BD8  51ED               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8176  000BDA  0100               	movlb	0	; () banked
  8177  000BDC  B4D8               	btfsc	status,2,c
  8178  000BDE  D022               	goto	l12306
  8179                           
  8180                           ; BSR set to: 0
  8181                           ;MOTEapp.c: 775: {
  8182                           ;MOTEapp.c: 776: oled_clear();
  8183  000BE0  EC26  F02C         	call	_oled_clear	;wreg free
  8184                           
  8185                           ;MOTEapp.c: 777: oled_putString(" Allow Class C  ",0,0);
  8186  000BE4  0E86               	movlw	low STR_116
  8187  000BE6  0100               	movlb	0	; () banked
  8188  000BE8  6FD0               	movwf	oled_putString@string& (0+255),b
  8189  000BEA  0E7A               	movlw	high STR_116
  8190  000BEC  0100               	movlb	0	; () banked
  8191  000BEE  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  8192  000BF0  0E00               	movlw	0
  8193  000BF2  0100               	movlb	0	; () banked
  8194  000BF4  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  8195  000BF6  0E00               	movlw	0
  8196  000BF8  0100               	movlb	0	; () banked
  8197  000BFA  6FD3               	movwf	oled_putString@start_page& (0+255),b
  8198  000BFC  EC0D  F027         	call	_oled_putString	;wreg free
  8199                           
  8200                           ;MOTEapp.c: 778: oled_putString("(NAV)    (SEL) ",0,3);
  8201  000C00  0E5E               	movlw	low STR_73
  8202  000C02  0100               	movlb	0	; () banked
  8203  000C04  6FD0               	movwf	oled_putString@string& (0+255),b
  8204  000C06  0E7C               	movlw	high STR_73
  8205  000C08  0100               	movlb	0	; () banked
  8206  000C0A  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  8207  000C0C  0E00               	movlw	0
  8208  000C0E  0100               	movlb	0	; () banked
  8209  000C10  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  8210  000C12  0E03               	movlw	3
  8211  000C14  0100               	movlb	0	; () banked
  8212  000C16  6FD3               	movwf	oled_putString@start_page& (0+255),b
  8213  000C18  EC0D  F027         	call	_oled_putString	;wreg free
  8214                           
  8215                           ;MOTEapp.c: 783: runningState = runningMenuAux;
  8216  000C1C  0E0C               	movlw	12
  8217  000C1E  0100               	movlb	0	; () banked
  8218  000C20  6FB2               	movwf	_runningState& (0+255),b
  8219                           
  8220                           ;MOTEapp.c: 784: }
  8221  000C22  0012               	return	
  8222  000C24                     l12306:
  8223                           
  8224                           ; BSR set to: 0
  8225                           ;MOTEapp.c: 785: else if (selectButton)
  8226  000C24  0100               	movlb	0	; () banked
  8227  000C26  51DF               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8228  000C28  0100               	movlb	0	; () banked
  8229  000C2A  B4D8               	btfsc	status,2,c
  8230  000C2C  0012               	return	
  8231                           
  8232                           ; BSR set to: 0
  8233                           ;MOTEapp.c: 786: {
  8234                           ;MOTEapp.c: 787: if (menuTimeout)
  8235  000C2E  0100               	movlb	0	; () banked
  8236  000C30  51F6               	movf	_menuTimeout& (0+255),w,b
  8237  000C32  B4D8               	btfsc	status,2,c
  8238  000C34  D012               	goto	l12314
  8239                           
  8240                           ; BSR set to: 0
  8241                           ;MOTEapp.c: 788: {
  8242                           ;MOTEapp.c: 789: menuTimeout = 0;
  8243  000C36  0E00               	movlw	0
  8244  000C38  0100               	movlb	0	; () banked
  8245  000C3A  6FF6               	movwf	_menuTimeout& (0+255),b
  8246                           
  8247                           ; BSR set to: 0
  8248                           ;MOTEapp.c: 790: oled_putString("    Disabled  ", 0,2);
  8249  000C3C  0EDC               	movlw	low STR_113
  8250  000C3E  0100               	movlb	0	; () banked
  8251  000C40  6FD0               	movwf	oled_putString@string& (0+255),b
  8252  000C42  0E7C               	movlw	high STR_113
  8253  000C44  0100               	movlb	0	; () banked
  8254  000C46  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  8255  000C48  0E00               	movlw	0
  8256  000C4A  0100               	movlb	0	; () banked
  8257  000C4C  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  8258  000C4E  0E02               	movlw	2
  8259  000C50  0100               	movlb	0	; () banked
  8260  000C52  6FD3               	movwf	oled_putString@start_page& (0+255),b
  8261  000C54  EC0D  F027         	call	_oled_putString	;wreg free
  8262                           
  8263                           ;MOTEapp.c: 791: }
  8264  000C58  0012               	return	
  8265  000C5A                     l12314:
  8266                           
  8267                           ;MOTEapp.c: 792: else
  8268                           ;MOTEapp.c: 793: {
  8269                           ;MOTEapp.c: 794: menuTimeout = 1;
  8270  000C5A  0E01               	movlw	1
  8271  000C5C  0100               	movlb	0	; () banked
  8272  000C5E  6FF6               	movwf	_menuTimeout& (0+255),b
  8273                           
  8274                           ; BSR set to: 0
  8275                           ;MOTEapp.c: 795: oled_putString("    Enabled   ", 0,2);
  8276  000C60  0EBE               	movlw	low STR_112
  8277  000C62  0100               	movlb	0	; () banked
  8278  000C64  6FD0               	movwf	oled_putString@string& (0+255),b
  8279  000C66  0E7C               	movlw	high STR_112
  8280  000C68  0100               	movlb	0	; () banked
  8281  000C6A  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  8282  000C6C  0E00               	movlw	0
  8283  000C6E  0100               	movlb	0	; () banked
  8284  000C70  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  8285  000C72  0E02               	movlw	2
  8286  000C74  0100               	movlb	0	; () banked
  8287  000C76  6FD3               	movwf	oled_putString@start_page& (0+255),b
  8288  000C78  EC0D  F027         	call	_oled_putString	;wreg free
  8289                           
  8290                           ;MOTEapp.c: 796: }
  8291                           ;MOTEapp.c: 797: }
  8292                           ;MOTEapp.c: 798: break;
  8293  000C7C  0012               	return	
  8294  000C7E                     l12318:
  8295                           
  8296                           ;MOTEapp.c: 801: if (changeStates)
  8297  000C7E  0100               	movlb	0	; () banked
  8298  000C80  51ED               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8299  000C82  0100               	movlb	0	; () banked
  8300  000C84  B4D8               	btfsc	status,2,c
  8301  000C86  D0BC               	goto	l12350
  8302                           
  8303                           ; BSR set to: 0
  8304                           ;MOTEapp.c: 802: {
  8305                           ;MOTEapp.c: 803: oled_clear();
  8306  000C88  EC26  F02C         	call	_oled_clear	;wreg free
  8307                           
  8308                           ;MOTEapp.c: 804: oled_putString("Periodic Uplink ",0,0);
  8309  000C8C  0E1F               	movlw	low STR_120
  8310  000C8E  0100               	movlb	0	; () banked
  8311  000C90  6FD0               	movwf	oled_putString@string& (0+255),b
  8312  000C92  0E7B               	movlw	high STR_120
  8313  000C94  0100               	movlb	0	; () banked
  8314  000C96  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  8315  000C98  0E00               	movlw	0
  8316  000C9A  0100               	movlb	0	; () banked
  8317  000C9C  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  8318  000C9E  0E00               	movlw	0
  8319  000CA0  0100               	movlb	0	; () banked
  8320  000CA2  6FD3               	movwf	oled_putString@start_page& (0+255),b
  8321  000CA4  EC0D  F027         	call	_oled_putString	;wreg free
  8322                           
  8323                           ;MOTEapp.c: 805: oled_putString("Tx Event Timing ",0,1);
  8324  000CA8  0E0E               	movlw	low STR_121
  8325  000CAA  0100               	movlb	0	; () banked
  8326  000CAC  6FD0               	movwf	oled_putString@string& (0+255),b
  8327  000CAE  0E7B               	movlw	high STR_121
  8328  000CB0  0100               	movlb	0	; () banked
  8329  000CB2  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  8330  000CB4  0E00               	movlw	0
  8331  000CB6  0100               	movlb	0	; () banked
  8332  000CB8  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  8333  000CBA  0E01               	movlw	1
  8334  000CBC  0100               	movlb	0	; () banked
  8335  000CBE  6FD3               	movwf	oled_putString@start_page& (0+255),b
  8336  000CC0  EC0D  F027         	call	_oled_putString	;wreg free
  8337                           
  8338                           ;MOTEapp.c: 806: oled_putString("Every:",0,2);
  8339  000CC4  0E81               	movlw	low STR_122
  8340  000CC6  0100               	movlb	0	; () banked
  8341  000CC8  6FD0               	movwf	oled_putString@string& (0+255),b
  8342  000CCA  0E7F               	movlw	high STR_122
  8343  000CCC  0100               	movlb	0	; () banked
  8344  000CCE  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  8345  000CD0  0E00               	movlw	0
  8346  000CD2  0100               	movlb	0	; () banked
  8347  000CD4  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  8348  000CD6  0E02               	movlw	2
  8349  000CD8  0100               	movlb	0	; () banked
  8350  000CDA  6FD3               	movwf	oled_putString@start_page& (0+255),b
  8351  000CDC  EC0D  F027         	call	_oled_putString	;wreg free
  8352                           
  8353                           ;MOTEapp.c: 807: oled_putString("Mins",12,2);
  8354  000CE0  0EBC               	movlw	low STR_123
  8355  000CE2  0100               	movlb	0	; () banked
  8356  000CE4  6FD0               	movwf	oled_putString@string& (0+255),b
  8357  000CE6  0E7F               	movlw	high STR_123
  8358  000CE8  0100               	movlb	0	; () banked
  8359  000CEA  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  8360  000CEC  0E0C               	movlw	12
  8361  000CEE  0100               	movlb	0	; () banked
  8362  000CF0  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  8363  000CF2  0E02               	movlw	2
  8364  000CF4  0100               	movlb	0	; () banked
  8365  000CF6  6FD3               	movwf	oled_putString@start_page& (0+255),b
  8366  000CF8  EC0D  F027         	call	_oled_putString	;wreg free
  8367                           
  8368                           ;MOTEapp.c: 809: switch (periodicUpValue)
  8369  000CFC  D05A               	goto	l12344
  8370  000CFE                     l12330:
  8371                           
  8372                           ;MOTEapp.c: 813: oled_putString("5",7,2);
  8373  000CFE  0ED3               	movlw	low (STR_184+11)
  8374  000D00  0100               	movlb	0	; () banked
  8375  000D02  6FD0               	movwf	oled_putString@string& (0+255),b
  8376  000D04  0E7D               	movlw	high (STR_184+11)
  8377  000D06  0100               	movlb	0	; () banked
  8378  000D08  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  8379  000D0A  0E07               	movlw	7
  8380  000D0C  0100               	movlb	0	; () banked
  8381  000D0E  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  8382  000D10  0E02               	movlw	2
  8383  000D12  0100               	movlb	0	; () banked
  8384  000D14  6FD3               	movwf	oled_putString@start_page& (0+255),b
  8385  000D16  EC0D  F027         	call	_oled_putString	;wreg free
  8386                           
  8387                           ;MOTEapp.c: 814: break;
  8388  000D1A  D060               	goto	l12346
  8389  000D1C                     l12332:
  8390                           
  8391                           ;MOTEapp.c: 816: oled_putString("10",7,2);
  8392  000D1C  0EE2               	movlw	low (STR_159+1)
  8393  000D1E  0100               	movlb	0	; () banked
  8394  000D20  6FD0               	movwf	oled_putString@string& (0+255),b
  8395  000D22  0E7F               	movlw	high (STR_159+1)
  8396  000D24  0100               	movlb	0	; () banked
  8397  000D26  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  8398  000D28  0E07               	movlw	7
  8399  000D2A  0100               	movlb	0	; () banked
  8400  000D2C  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  8401  000D2E  0E02               	movlw	2
  8402  000D30  0100               	movlb	0	; () banked
  8403  000D32  6FD3               	movwf	oled_putString@start_page& (0+255),b
  8404  000D34  EC0D  F027         	call	_oled_putString	;wreg free
  8405                           
  8406                           ;MOTEapp.c: 817: break;
  8407  000D38  D051               	goto	l12346
  8408  000D3A                     l12334:
  8409                           
  8410                           ;MOTEapp.c: 819: oled_putString("15",7,2);
  8411  000D3A  0EEE               	movlw	low (STR_160+1)
  8412  000D3C  0100               	movlb	0	; () banked
  8413  000D3E  6FD0               	movwf	oled_putString@string& (0+255),b
  8414  000D40  0E7F               	movlw	high (STR_160+1)
  8415  000D42  0100               	movlb	0	; () banked
  8416  000D44  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  8417  000D46  0E07               	movlw	7
  8418  000D48  0100               	movlb	0	; () banked
  8419  000D4A  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  8420  000D4C  0E02               	movlw	2
  8421  000D4E  0100               	movlb	0	; () banked
  8422  000D50  6FD3               	movwf	oled_putString@start_page& (0+255),b
  8423  000D52  EC0D  F027         	call	_oled_putString	;wreg free
  8424                           
  8425                           ;MOTEapp.c: 820: break;
  8426  000D56  D042               	goto	l12346
  8427  000D58                     l12336:
  8428                           
  8429                           ;MOTEapp.c: 822: oled_putString("30",7,2);
  8430  000D58  0EE6               	movlw	low (STR_161+1)
  8431  000D5A  0100               	movlb	0	; () banked
  8432  000D5C  6FD0               	movwf	oled_putString@string& (0+255),b
  8433  000D5E  0E7F               	movlw	high (STR_161+1)
  8434  000D60  0100               	movlb	0	; () banked
  8435  000D62  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  8436  000D64  0E07               	movlw	7
  8437  000D66  0100               	movlb	0	; () banked
  8438  000D68  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  8439  000D6A  0E02               	movlw	2
  8440  000D6C  0100               	movlb	0	; () banked
  8441  000D6E  6FD3               	movwf	oled_putString@start_page& (0+255),b
  8442  000D70  EC0D  F027         	call	_oled_putString	;wreg free
  8443                           
  8444                           ;MOTEapp.c: 823: break;
  8445  000D74  D033               	goto	l12346
  8446  000D76                     l12338:
  8447                           
  8448                           ;MOTEapp.c: 825: oled_putString("60",7,2);
  8449  000D76  0EEA               	movlw	low (STR_162+1)
  8450  000D78  0100               	movlb	0	; () banked
  8451  000D7A  6FD0               	movwf	oled_putString@string& (0+255),b
  8452  000D7C  0E7F               	movlw	high (STR_162+1)
  8453  000D7E  0100               	movlb	0	; () banked
  8454  000D80  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  8455  000D82  0E07               	movlw	7
  8456  000D84  0100               	movlb	0	; () banked
  8457  000D86  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  8458  000D88  0E02               	movlw	2
  8459  000D8A  0100               	movlb	0	; () banked
  8460  000D8C  6FD3               	movwf	oled_putString@start_page& (0+255),b
  8461  000D8E  EC0D  F027         	call	_oled_putString	;wreg free
  8462                           
  8463                           ;MOTEapp.c: 826: break;
  8464  000D92  D024               	goto	l12346
  8465  000D94                     l12340:
  8466                           
  8467                           ;MOTEapp.c: 828: oled_putString("OFF",7,2);
  8468  000D94  0EF1               	movlw	low STR_129
  8469  000D96  0100               	movlb	0	; () banked
  8470  000D98  6FD0               	movwf	oled_putString@string& (0+255),b
  8471  000D9A  0E7F               	movlw	high STR_129
  8472  000D9C  0100               	movlb	0	; () banked
  8473  000D9E  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  8474  000DA0  0E07               	movlw	7
  8475  000DA2  0100               	movlb	0	; () banked
  8476  000DA4  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  8477  000DA6  0E02               	movlw	2
  8478  000DA8  0100               	movlb	0	; () banked
  8479  000DAA  6FD3               	movwf	oled_putString@start_page& (0+255),b
  8480  000DAC  EC0D  F027         	call	_oled_putString	;wreg free
  8481                           
  8482                           ;MOTEapp.c: 830: }
  8483                           
  8484                           ;MOTEapp.c: 829: break;
  8485  000DB0  D015               	goto	l12346
  8486  000DB2                     l12344:
  8487  000DB2  0100               	movlb	0	; () banked
  8488  000DB4  51FA               	movf	_periodicUpValue& (0+255),w,b
  8489                           
  8490                           ; Switch size 1, requested type "space"
  8491                           ; Number of cases is 6, Range of values is 0 to 5
  8492                           ; switch strategies available:
  8493                           ; Name         Instructions Cycles
  8494                           ; simple_byte           19    10 (average)
  8495                           ;	Chosen strategy is simple_byte
  8496  000DB6  0A00               	xorlw	0	; case 0
  8497  000DB8  B4D8               	btfsc	status,2,c
  8498  000DBA  D7A1               	goto	l12330
  8499  000DBC  0A01               	xorlw	1	; case 1
  8500  000DBE  B4D8               	btfsc	status,2,c
  8501  000DC0  D7AD               	goto	l12332
  8502  000DC2  0A03               	xorlw	3	; case 2
  8503  000DC4  B4D8               	btfsc	status,2,c
  8504  000DC6  D7B9               	goto	l12334
  8505  000DC8  0A01               	xorlw	1	; case 3
  8506  000DCA  B4D8               	btfsc	status,2,c
  8507  000DCC  D7C5               	goto	l12336
  8508  000DCE  0A07               	xorlw	7	; case 4
  8509  000DD0  B4D8               	btfsc	status,2,c
  8510  000DD2  D7D1               	goto	l12338
  8511  000DD4  0A01               	xorlw	1	; case 5
  8512  000DD6  B4D8               	btfsc	status,2,c
  8513  000DD8  D7DD               	goto	l12340
  8514  000DDA  D791               	goto	l12330
  8515  000DDC                     l12346:
  8516                           
  8517                           ;MOTEapp.c: 831: oled_putString("(NAV)    (CNG) ",0,3);
  8518  000DDC  0E4E               	movlw	low STR_114
  8519  000DDE  0100               	movlb	0	; () banked
  8520  000DE0  6FD0               	movwf	oled_putString@string& (0+255),b
  8521  000DE2  0E7C               	movlw	high STR_114
  8522  000DE4  0100               	movlb	0	; () banked
  8523  000DE6  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  8524  000DE8  0E00               	movlw	0
  8525  000DEA  0100               	movlb	0	; () banked
  8526  000DEC  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  8527  000DEE  0E03               	movlw	3
  8528  000DF0  0100               	movlb	0	; () banked
  8529  000DF2  6FD3               	movwf	oled_putString@start_page& (0+255),b
  8530  000DF4  EC0D  F027         	call	_oled_putString	;wreg free
  8531                           
  8532                           ;MOTEapp.c: 832: runningState = runningPeriodicWakeUpLength;
  8533  000DF8  0E0F               	movlw	15
  8534  000DFA  0100               	movlb	0	; () banked
  8535  000DFC  6FB2               	movwf	_runningState& (0+255),b
  8536                           
  8537                           ;MOTEapp.c: 833: }
  8538  000DFE  0012               	return	
  8539  000E00                     l12350:
  8540                           
  8541                           ; BSR set to: 0
  8542                           ;MOTEapp.c: 834: else if (selectButton)
  8543  000E00  0100               	movlb	0	; () banked
  8544  000E02  51DF               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8545  000E04  0100               	movlb	0	; () banked
  8546  000E06  B4D8               	btfsc	status,2,c
  8547  000E08  0012               	return	
  8548                           
  8549                           ; BSR set to: 0
  8550                           ;MOTEapp.c: 835: {
  8551                           ;MOTEapp.c: 836: oled_putString("    Running   ", 0,2);
  8552  000E0A  0ECD               	movlw	low STR_131
  8553  000E0C  0100               	movlb	0	; () banked
  8554  000E0E  6FD0               	movwf	oled_putString@string& (0+255),b
  8555  000E10  0E7C               	movlw	high STR_131
  8556  000E12  0100               	movlb	0	; () banked
  8557  000E14  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  8558  000E16  0E00               	movlw	0
  8559  000E18  0100               	movlb	0	; () banked
  8560  000E1A  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  8561  000E1C  0E02               	movlw	2
  8562  000E1E  0100               	movlb	0	; () banked
  8563  000E20  6FD3               	movwf	oled_putString@start_page& (0+255),b
  8564  000E22  EC0D  F027         	call	_oled_putString	;wreg free
  8565                           
  8566                           ;MOTEapp.c: 837: oled_putString("               ",0,3);
  8567  000E26  0E1E               	movlw	low STR_132
  8568  000E28  0100               	movlb	0	; () banked
  8569  000E2A  6FD0               	movwf	oled_putString@string& (0+255),b
  8570  000E2C  0E7C               	movlw	high STR_132
  8571  000E2E  0100               	movlb	0	; () banked
  8572  000E30  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  8573  000E32  0E00               	movlw	0
  8574  000E34  0100               	movlb	0	; () banked
  8575  000E36  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  8576  000E38  0E03               	movlw	3
  8577  000E3A  0100               	movlb	0	; () banked
  8578  000E3C  6FD3               	movwf	oled_putString@start_page& (0+255),b
  8579  000E3E  EC0D  F027         	call	_oled_putString	;wreg free
  8580                           
  8581                           ;MOTEapp.c: 839: sendCommand("radio set wdt 0");
  8582  000E42  0E7E               	movlw	low STR_133
  8583  000E44  0100               	movlb	0	; () banked
  8584  000E46  6FC4               	movwf	sendCommand@string& (0+255),b
  8585  000E48  0E7C               	movlw	high STR_133
  8586  000E4A  0100               	movlb	0	; () banked
  8587  000E4C  6FC5               	movwf	(sendCommand@string+1)& (0+255),b
  8588  000E4E  EC2F  F02B         	call	_sendCommand	;wreg free
  8589                           
  8590                           ;MOTEapp.c: 840: moteApp_delayms(500);
  8591  000E52  0E01               	movlw	1
  8592  000E54  0100               	movlb	0	; () banked
  8593  000E56  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
  8594  000E58  0EF4               	movlw	244
  8595  000E5A  6FC3               	movwf	moteApp_delayms@length& (0+255),b
  8596  000E5C  EC73  F02A         	call	_moteApp_delayms	;wreg free
  8597                           
  8598                           ;MOTEapp.c: 842: _delay((unsigned long)((16)*(48000000/4000.0)));
  8599  000E60  0EFA               	movlw	250
  8600  000E62  0100               	movlb	0	; () banked
  8601  000E64  6FE2               	movwf	??_moteRunningProcess& (0+255),b
  8602  000E66  0E58               	movlw	88
  8603  000E68                     u11927:
  8604  000E68  2EE8               	decfsz	wreg,f,c
  8605  000E6A  D7FE               	goto	u11927
  8606  000E6C  2FE2               	decfsz	??_moteRunningProcess& (0+255),f,b
  8607  000E6E  D7FC               	goto	u11927
  8608  000E70  D000               	nop2	
  8609                           
  8610                           ;MOTEapp.c: 843: _delay((unsigned long)((16)*(48000000/4000.0)));
  8611  000E72  0EFA               	movlw	250
  8612  000E74  0100               	movlb	0	; () banked
  8613  000E76  6FE2               	movwf	??_moteRunningProcess& (0+255),b
  8614  000E78  0E58               	movlw	88
  8615  000E7A                     u11937:
  8616  000E7A  2EE8               	decfsz	wreg,f,c
  8617  000E7C  D7FE               	goto	u11937
  8618  000E7E  2FE2               	decfsz	??_moteRunningProcess& (0+255),f,b
  8619  000E80  D7FC               	goto	u11937
  8620  000E82  D000               	nop2	
  8621                           
  8622                           ;MOTEapp.c: 844: _delay((unsigned long)((16)*(48000000/4000.0)));
  8623  000E84  0EFA               	movlw	250
  8624  000E86  0100               	movlb	0	; () banked
  8625  000E88  6FE2               	movwf	??_moteRunningProcess& (0+255),b
  8626  000E8A  0E58               	movlw	88
  8627  000E8C                     u11947:
  8628  000E8C  2EE8               	decfsz	wreg,f,c
  8629  000E8E  D7FE               	goto	u11947
  8630  000E90  2FE2               	decfsz	??_moteRunningProcess& (0+255),f,b
  8631  000E92  D7FC               	goto	u11947
  8632  000E94  D000               	nop2	
  8633                           
  8634                           ;MOTEapp.c: 845: sendCommand("radio rx 9800");
  8635  000E96  0E35               	movlw	low STR_134
  8636  000E98  0100               	movlb	0	; () banked
  8637  000E9A  6FC4               	movwf	sendCommand@string& (0+255),b
  8638  000E9C  0E7D               	movlw	high STR_134
  8639  000E9E  0100               	movlb	0	; () banked
  8640  000EA0  6FC5               	movwf	(sendCommand@string+1)& (0+255),b
  8641  000EA2  EC2F  F02B         	call	_sendCommand	;wreg free
  8642                           
  8643                           ;MOTEapp.c: 846: moteApp_delayms(500);
  8644  000EA6  0E01               	movlw	1
  8645  000EA8  0100               	movlb	0	; () banked
  8646  000EAA  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
  8647  000EAC  0EF4               	movlw	244
  8648  000EAE  6FC3               	movwf	moteApp_delayms@length& (0+255),b
  8649  000EB0  EC73  F02A         	call	_moteApp_delayms	;wreg free
  8650                           
  8651                           ;MOTEapp.c: 848: runningState = runningClassCReception;
  8652  000EB4  0E0D               	movlw	13
  8653  000EB6  0100               	movlb	0	; () banked
  8654  000EB8  6FB2               	movwf	_runningState& (0+255),b
  8655                           
  8656                           ; BSR set to: 0
  8657                           ;MOTEapp.c: 849: }
  8658                           ;MOTEapp.c: 850: break;
  8659                           
  8660                           ; BSR set to: 0
  8661  000EBA  0012               	return	
  8662  000EBC                     l12370:
  8663                           
  8664                           ; BSR set to: 0
  8665                           ;MOTEapp.c: 854: if ( messageReady )
  8666  000EBC  0100               	movlb	0	; () banked
  8667  000EBE  51E0               	movf	moteRunningProcess@messageReady& (0+255),w,b
  8668  000EC0  0100               	movlb	0	; () banked
  8669  000EC2  B4D8               	btfsc	status,2,c
  8670  000EC4  0012               	return	
  8671                           
  8672                           ; BSR set to: 0
  8673                           ;MOTEapp.c: 855: {
  8674                           ;MOTEapp.c: 857: SleepTimeOut = 30;
  8675  000EC6  0E1E               	movlw	30
  8676  000EC8  0100               	movlb	0	; () banked
  8677  000ECA  6FF2               	movwf	_SleepTimeOut& (0+255),b
  8678                           
  8679                           ; BSR set to: 0
  8680                           ;MOTEapp.c: 858: if(strcmp(moduleResonseBuffer, "ok") == 0)
  8681  000ECC  0E64               	movlw	low _moduleResonseBuffer
  8682  000ECE  0100               	movlb	0	; () banked
  8683  000ED0  6FC3               	movwf	strcmp@s1& (0+255),b
  8684  000ED2  0E01               	movlw	high _moduleResonseBuffer
  8685  000ED4  0100               	movlb	0	; () banked
  8686  000ED6  6FC4               	movwf	(strcmp@s1+1)& (0+255),b
  8687  000ED8  0EF9               	movlw	low STR_43
  8688  000EDA  0100               	movlb	0	; () banked
  8689  000EDC  6FC5               	movwf	strcmp@s2& (0+255),b
  8690  000EDE  0E7F               	movlw	high STR_43
  8691  000EE0  0100               	movlb	0	; () banked
  8692  000EE2  6FC6               	movwf	(strcmp@s2+1)& (0+255),b
  8693  000EE4  ECBC  F028         	call	_strcmp	;wreg free
  8694  000EE8  0100               	movlb	0	; () banked
  8695  000EEA  51C3               	movf	?_strcmp& (0+255),w,b
  8696  000EEC  0100               	movlb	0	; () banked
  8697  000EEE  11C4               	iorwf	(?_strcmp+1)& (0+255),w,b
  8698  000EF0  A4D8               	btfss	status,2,c
  8699  000EF2  D004               	goto	l12380
  8700                           
  8701                           ; BSR set to: 0
  8702                           ;MOTEapp.c: 859: {
  8703                           ;MOTEapp.c: 860: LATAbits.LATA6 = 1;
  8704  000EF4  8C89               	bsf	3977,6,c	;volatile
  8705                           
  8706                           ; BSR set to: 0
  8707                           ;MOTEapp.c: 861: runningState = runningClassCReception;
  8708  000EF6  0E0D               	movlw	13
  8709  000EF8  0100               	movlb	0	; () banked
  8710  000EFA  6FB2               	movwf	_runningState& (0+255),b
  8711  000EFC                     l12380:
  8712                           
  8713                           ; BSR set to: 0
  8714                           ;MOTEapp.c: 862: }
  8715                           ;MOTEapp.c: 863: if(strncmp(moduleResonseBuffer, "mac_rx", 6) == 0)
  8716  000EFC  0E64               	movlw	low _moduleResonseBuffer
  8717  000EFE  0100               	movlb	0	; () banked
  8718  000F00  6FC3               	movwf	strncmp@s1& (0+255),b
  8719  000F02  0E01               	movlw	high _moduleResonseBuffer
  8720  000F04  0100               	movlb	0	; () banked
  8721  000F06  6FC4               	movwf	(strncmp@s1+1)& (0+255),b
  8722  000F08  0EA4               	movlw	low STR_90
  8723  000F0A  0100               	movlb	0	; () banked
  8724  000F0C  6FC5               	movwf	strncmp@s2& (0+255),b
  8725  000F0E  0E7F               	movlw	high STR_90
  8726  000F10  0100               	movlb	0	; () banked
  8727  000F12  6FC6               	movwf	(strncmp@s2+1)& (0+255),b
  8728  000F14  0E00               	movlw	0
  8729  000F16  0100               	movlb	0	; () banked
  8730  000F18  6FC8               	movwf	(strncmp@len+1)& (0+255),b
  8731  000F1A  0E06               	movlw	6
  8732  000F1C  6FC7               	movwf	strncmp@len& (0+255),b
  8733  000F1E  EC37  F024         	call	_strncmp	;wreg free
  8734  000F22  0100               	movlb	0	; () banked
  8735  000F24  51C3               	movf	?_strncmp& (0+255),w,b
  8736  000F26  0100               	movlb	0	; () banked
  8737  000F28  11C4               	iorwf	(?_strncmp+1)& (0+255),w,b
  8738  000F2A  A4D8               	btfss	status,2,c
  8739  000F2C  D096               	goto	l12430
  8740                           
  8741                           ; BSR set to: 0
  8742                           ;MOTEapp.c: 864: {
  8743                           ;MOTEapp.c: 865: uint8_t bufferReadPos = 7;
  8744  000F2E  0E07               	movlw	7
  8745  000F30  0100               	movlb	0	; () banked
  8746  000F32  6FEB               	movwf	moteRunningProcess@bufferReadPos_1691& (0+255),b
  8747                           
  8748                           ; BSR set to: 0
  8749                           ;MOTEapp.c: 868: responsePortNum[0] = moduleResonseBuffer[bufferReadPos++];
  8750  000F34  0100               	movlb	0	; () banked
  8751  000F36  51EB               	movf	moteRunningProcess@bufferReadPos_1691& (0+255),w,b
  8752  000F38  0D01               	mullw	1
  8753  000F3A  0E64               	movlw	low _moduleResonseBuffer
  8754  000F3C  24F3               	addwf	prodl,w,c
  8755  000F3E  6ED9               	movwf	fsr2l,c
  8756  000F40  0E01               	movlw	high _moduleResonseBuffer
  8757  000F42  20F4               	addwfc	prodh,w,c
  8758  000F44  6EDA               	movwf	fsr2h,c
  8759  000F46  50DF               	movf	indf2,w,c
  8760  000F48  0100               	movlb	0	; () banked
  8761  000F4A  6FBE               	movwf	_responsePortNum& (0+255),b
  8762                           
  8763                           ; BSR set to: 0
  8764  000F4C  0100               	movlb	0	; () banked
  8765  000F4E  2BEB               	incf	moteRunningProcess@bufferReadPos_1691& (0+255),f,b
  8766                           
  8767                           ; BSR set to: 0
  8768                           ;MOTEapp.c: 869: responsePortNum[1] = moduleResonseBuffer[bufferReadPos++];
  8769  000F50  0100               	movlb	0	; () banked
  8770  000F52  51EB               	movf	moteRunningProcess@bufferReadPos_1691& (0+255),w,b
  8771  000F54  0D01               	mullw	1
  8772  000F56  0E64               	movlw	low _moduleResonseBuffer
  8773  000F58  24F3               	addwf	prodl,w,c
  8774  000F5A  6ED9               	movwf	fsr2l,c
  8775  000F5C  0E01               	movlw	high _moduleResonseBuffer
  8776  000F5E  20F4               	addwfc	prodh,w,c
  8777  000F60  6EDA               	movwf	fsr2h,c
  8778  000F62  50DF               	movf	indf2,w,c
  8779  000F64  0100               	movlb	0	; () banked
  8780  000F66  6FBF               	movwf	(_responsePortNum+1)& (0+255),b
  8781                           
  8782                           ; BSR set to: 0
  8783  000F68  0100               	movlb	0	; () banked
  8784  000F6A  2BEB               	incf	moteRunningProcess@bufferReadPos_1691& (0+255),f,b
  8785                           
  8786                           ; BSR set to: 0
  8787                           ;MOTEapp.c: 870: if (responsePortNum[1] != ' ')
  8788  000F6C  0E20               	movlw	32
  8789  000F6E  0100               	movlb	0	; () banked
  8790  000F70  19BF               	xorwf	(_responsePortNum+1)& (0+255),w,b
  8791  000F72  B4D8               	btfsc	status,2,c
  8792  000F74  D015               	goto	l12402
  8793                           
  8794                           ; BSR set to: 0
  8795                           ;MOTEapp.c: 871: {
  8796                           ;MOTEapp.c: 872: responsePortNum[2] = moduleResonseBuffer[bufferReadPos++];
  8797  000F76  0100               	movlb	0	; () banked
  8798  000F78  51EB               	movf	moteRunningProcess@bufferReadPos_1691& (0+255),w,b
  8799  000F7A  0D01               	mullw	1
  8800  000F7C  0E64               	movlw	low _moduleResonseBuffer
  8801  000F7E  24F3               	addwf	prodl,w,c
  8802  000F80  6ED9               	movwf	fsr2l,c
  8803  000F82  0E01               	movlw	high _moduleResonseBuffer
  8804  000F84  20F4               	addwfc	prodh,w,c
  8805  000F86  6EDA               	movwf	fsr2h,c
  8806  000F88  50DF               	movf	indf2,w,c
  8807  000F8A  0100               	movlb	0	; () banked
  8808  000F8C  6FC0               	movwf	(_responsePortNum+2)& (0+255),b
  8809                           
  8810                           ; BSR set to: 0
  8811  000F8E  0100               	movlb	0	; () banked
  8812  000F90  2BEB               	incf	moteRunningProcess@bufferReadPos_1691& (0+255),f,b
  8813                           
  8814                           ; BSR set to: 0
  8815                           ;MOTEapp.c: 873: if (responsePortNum[2] != ' ')
  8816  000F92  0E20               	movlw	32
  8817  000F94  0100               	movlb	0	; () banked
  8818  000F96  19C0               	xorwf	(_responsePortNum+2)& (0+255),w,b
  8819  000F98  B4D8               	btfsc	status,2,c
  8820  000F9A  D002               	goto	l12402
  8821                           
  8822                           ; BSR set to: 0
  8823                           ;MOTEapp.c: 874: {
  8824                           ;MOTEapp.c: 875: bufferReadPos++;
  8825  000F9C  0100               	movlb	0	; () banked
  8826  000F9E  2BEB               	incf	moteRunningProcess@bufferReadPos_1691& (0+255),f,b
  8827  000FA0                     l12402:
  8828                           
  8829                           ; BSR set to: 0
  8830                           ;MOTEapp.c: 876: }
  8831                           ;MOTEapp.c: 878: }
  8832                           ;MOTEapp.c: 882: for (uint8_t counter = 0; counter < sizeof(moduleResonseBuffer); counte
      +                          r++)
  8833  000FA0  0E00               	movlw	0
  8834  000FA2  0100               	movlb	0	; () banked
  8835  000FA4  6FEA               	movwf	moteRunningProcess@counter_1692& (0+255),b
  8836  000FA6                     l12404:
  8837                           
  8838                           ; BSR set to: 0
  8839  000FA6  0E3F               	movlw	63
  8840  000FA8  0100               	movlb	0	; () banked
  8841  000FAA  65EA               	cpfsgt	moteRunningProcess@counter_1692& (0+255),b
  8842  000FAC  D001               	goto	l12408
  8843  000FAE  D029               	goto	l569
  8844  000FB0                     l12408:
  8845                           
  8846                           ; BSR set to: 0
  8847                           ;MOTEapp.c: 883: {
  8848                           ;MOTEapp.c: 884: responseData[counter] = moduleResonseBuffer[bufferReadPos];
  8849  000FB0  0100               	movlb	0	; () banked
  8850  000FB2  51EB               	movf	moteRunningProcess@bufferReadPos_1691& (0+255),w,b
  8851  000FB4  0D01               	mullw	1
  8852  000FB6  0E64               	movlw	low _moduleResonseBuffer
  8853  000FB8  24F3               	addwf	prodl,w,c
  8854  000FBA  6ED9               	movwf	fsr2l,c
  8855  000FBC  0E01               	movlw	high _moduleResonseBuffer
  8856  000FBE  20F4               	addwfc	prodh,w,c
  8857  000FC0  6EDA               	movwf	fsr2h,c
  8858  000FC2  0100               	movlb	0	; () banked
  8859  000FC4  51EA               	movf	moteRunningProcess@counter_1692& (0+255),w,b
  8860  000FC6  0D01               	mullw	1
  8861  000FC8  0EA4               	movlw	low _responseData
  8862  000FCA  24F3               	addwf	prodl,w,c
  8863  000FCC  6EE1               	movwf	fsr1l,c
  8864  000FCE  0E01               	movlw	high _responseData
  8865  000FD0  20F4               	addwfc	prodh,w,c
  8866  000FD2  6EE2               	movwf	fsr1h,c
  8867  000FD4  CFDF FFE7          	movff	indf2,indf1
  8868                           
  8869                           ; BSR set to: 0
  8870                           ;MOTEapp.c: 886: if (responseData[counter] != 0x00)
  8871  000FD8  0100               	movlb	0	; () banked
  8872  000FDA  51EA               	movf	moteRunningProcess@counter_1692& (0+255),w,b
  8873  000FDC  0D01               	mullw	1
  8874  000FDE  0EA4               	movlw	low _responseData
  8875  000FE0  24F3               	addwf	prodl,w,c
  8876  000FE2  6ED9               	movwf	fsr2l,c
  8877  000FE4  0E01               	movlw	high _responseData
  8878  000FE6  20F4               	addwfc	prodh,w,c
  8879  000FE8  6EDA               	movwf	fsr2h,c
  8880  000FEA  50DF               	movf	indf2,w,c
  8881  000FEC  B4D8               	btfsc	status,2,c
  8882  000FEE  D003               	goto	l12414
  8883                           
  8884                           ; BSR set to: 0
  8885                           ;MOTEapp.c: 887: {
  8886                           ;MOTEapp.c: 888: bufferReadPos++;
  8887  000FF0  0100               	movlb	0	; () banked
  8888  000FF2  2BEB               	incf	moteRunningProcess@bufferReadPos_1691& (0+255),f,b
  8889                           
  8890                           ;MOTEapp.c: 889: } else {
  8891  000FF4  D003               	goto	l12416
  8892  000FF6                     l12414:
  8893                           
  8894                           ; BSR set to: 0
  8895                           ;MOTEapp.c: 890: counter = sizeof(moduleResonseBuffer);
  8896  000FF6  0E40               	movlw	64
  8897  000FF8  0100               	movlb	0	; () banked
  8898  000FFA  6FEA               	movwf	moteRunningProcess@counter_1692& (0+255),b
  8899  000FFC                     l12416:
  8900                           
  8901                           ; BSR set to: 0
  8902  000FFC  0100               	movlb	0	; () banked
  8903  000FFE  2BEA               	incf	moteRunningProcess@counter_1692& (0+255),f,b
  8904  001000  D7D2               	goto	l12404
  8905  001002                     l569:
  8906                           
  8907                           ; BSR set to: 0
  8908                           ;MOTEapp.c: 891: }
  8909                           ;MOTEapp.c: 892: }
  8910                           ;MOTEapp.c: 894: LATAbits.LATA7 = 1;
  8911  001002  8E89               	bsf	3977,7,c	;volatile
  8912                           
  8913                           ;MOTEapp.c: 895: LATAbits.LATA6 = 0;
  8914  001004  9C89               	bcf	3977,6,c	;volatile
  8915                           
  8916                           ; BSR set to: 0
  8917                           ;MOTEapp.c: 897: oled_putString("C Class Message ",0,2);
  8918  001006  0EEC               	movlw	low STR_137
  8919  001008  0100               	movlb	0	; () banked
  8920  00100A  6FD0               	movwf	oled_putString@string& (0+255),b
  8921  00100C  0E7A               	movlw	high STR_137
  8922  00100E  0100               	movlb	0	; () banked
  8923  001010  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  8924  001012  0E00               	movlw	0
  8925  001014  0100               	movlb	0	; () banked
  8926  001016  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  8927  001018  0E02               	movlw	2
  8928  00101A  0100               	movlb	0	; () banked
  8929  00101C  6FD3               	movwf	oled_putString@start_page& (0+255),b
  8930  00101E  EC0D  F027         	call	_oled_putString	;wreg free
  8931                           
  8932                           ;MOTEapp.c: 898: oled_putString("    Received    ",0,3);
  8933  001022  0E42               	movlw	low STR_92
  8934  001024  0100               	movlb	0	; () banked
  8935  001026  6FD0               	movwf	oled_putString@string& (0+255),b
  8936  001028  0E7A               	movlw	high STR_92
  8937  00102A  0100               	movlb	0	; () banked
  8938  00102C  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  8939  00102E  0E00               	movlw	0
  8940  001030  0100               	movlb	0	; () banked
  8941  001032  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  8942  001034  0E03               	movlw	3
  8943  001036  0100               	movlb	0	; () banked
  8944  001038  6FD3               	movwf	oled_putString@start_page& (0+255),b
  8945  00103A  EC0D  F027         	call	_oled_putString	;wreg free
  8946                           
  8947                           ;MOTEapp.c: 899: runningState = runningDownlink;
  8948  00103E  0E0A               	movlw	10
  8949  001040  0100               	movlb	0	; () banked
  8950  001042  6FB2               	movwf	_runningState& (0+255),b
  8951                           
  8952                           ; BSR set to: 0
  8953                           ;MOTEapp.c: 900: moteApp_delayms(3000);
  8954  001044  0E0B               	movlw	11
  8955  001046  0100               	movlb	0	; () banked
  8956  001048  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
  8957  00104A  0EB8               	movlw	184
  8958  00104C  6FC3               	movwf	moteApp_delayms@length& (0+255),b
  8959  00104E  EC73  F02A         	call	_moteApp_delayms	;wreg free
  8960                           
  8961                           ;MOTEapp.c: 902: inClassCMode = 1;
  8962  001052  0E01               	movlw	1
  8963  001054  0100               	movlb	0	; () banked
  8964  001056  6FA7               	movwf	_inClassCMode& (0+255),b
  8965                           
  8966                           ;MOTEapp.c: 903: goto showDownlink;
  8967  001058  D491               	goto	l12228
  8968  00105A                     l12430:
  8969                           
  8970                           ; BSR set to: 0
  8971                           ;MOTEapp.c: 905: else if(strncmp(moduleResonseBuffer, "mac_er", 6) == 0)
  8972  00105A  0E64               	movlw	low _moduleResonseBuffer
  8973  00105C  0100               	movlb	0	; () banked
  8974  00105E  6FC3               	movwf	strncmp@s1& (0+255),b
  8975  001060  0E01               	movlw	high _moduleResonseBuffer
  8976  001062  0100               	movlb	0	; () banked
  8977  001064  6FC4               	movwf	(strncmp@s1+1)& (0+255),b
  8978  001066  0E9D               	movlw	low STR_95
  8979  001068  0100               	movlb	0	; () banked
  8980  00106A  6FC5               	movwf	strncmp@s2& (0+255),b
  8981  00106C  0E7F               	movlw	high STR_95
  8982  00106E  0100               	movlb	0	; () banked
  8983  001070  6FC6               	movwf	(strncmp@s2+1)& (0+255),b
  8984  001072  0E00               	movlw	0
  8985  001074  0100               	movlb	0	; () banked
  8986  001076  6FC8               	movwf	(strncmp@len+1)& (0+255),b
  8987  001078  0E06               	movlw	6
  8988  00107A  6FC7               	movwf	strncmp@len& (0+255),b
  8989  00107C  EC37  F024         	call	_strncmp	;wreg free
  8990  001080  0100               	movlb	0	; () banked
  8991  001082  51C3               	movf	?_strncmp& (0+255),w,b
  8992  001084  0100               	movlb	0	; () banked
  8993  001086  11C4               	iorwf	(?_strncmp+1)& (0+255),w,b
  8994  001088  A4D8               	btfss	status,2,c
  8995  00108A  D01A               	goto	l12442
  8996                           
  8997                           ; BSR set to: 0
  8998                           ;MOTEapp.c: 906: {
  8999                           ;MOTEapp.c: 907: oled_putString("Mac Error Occured",0,3);
  9000  00108C  0EDA               	movlw	low STR_96
  9001  00108E  0100               	movlb	0	; () banked
  9002  001090  6FD0               	movwf	oled_putString@string& (0+255),b
  9003  001092  0E79               	movlw	high STR_96
  9004  001094  0100               	movlb	0	; () banked
  9005  001096  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  9006  001098  0E00               	movlw	0
  9007  00109A  0100               	movlb	0	; () banked
  9008  00109C  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  9009  00109E  0E03               	movlw	3
  9010  0010A0  0100               	movlb	0	; () banked
  9011  0010A2  6FD3               	movwf	oled_putString@start_page& (0+255),b
  9012  0010A4  EC0D  F027         	call	_oled_putString	;wreg free
  9013                           
  9014                           ;MOTEapp.c: 908: LATAbits.LATA6 = 0;
  9015  0010A8  9C89               	bcf	3977,6,c	;volatile
  9016                           
  9017                           ;MOTEapp.c: 909: runningState = runningUplink;
  9018  0010AA  0E06               	movlw	6
  9019  0010AC  0100               	movlb	0	; () banked
  9020  0010AE  6FB2               	movwf	_runningState& (0+255),b
  9021                           
  9022                           ; BSR set to: 0
  9023                           ;MOTEapp.c: 910: moteApp_delayms(4000);
  9024  0010B0  0E0F               	movlw	15
  9025  0010B2  0100               	movlb	0	; () banked
  9026  0010B4  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
  9027  0010B6  0EA0               	movlw	160
  9028  0010B8  6FC3               	movwf	moteApp_delayms@length& (0+255),b
  9029  0010BA  EC73  F02A         	call	_moteApp_delayms	;wreg free
  9030  0010BE  D032               	goto	l12452
  9031  0010C0                     l12442:
  9032                           
  9033                           ; BSR set to: 0
  9034                           ;MOTEapp.c: 914: else if(strncmp(moduleResonseBuffer, "mac_tx", 6) == 0)
  9035  0010C0  0E64               	movlw	low _moduleResonseBuffer
  9036  0010C2  0100               	movlb	0	; () banked
  9037  0010C4  6FC3               	movwf	strncmp@s1& (0+255),b
  9038  0010C6  0E01               	movlw	high _moduleResonseBuffer
  9039  0010C8  0100               	movlb	0	; () banked
  9040  0010CA  6FC4               	movwf	(strncmp@s1+1)& (0+255),b
  9041  0010CC  0EAB               	movlw	low STR_93
  9042  0010CE  0100               	movlb	0	; () banked
  9043  0010D0  6FC5               	movwf	strncmp@s2& (0+255),b
  9044  0010D2  0E7F               	movlw	high STR_93
  9045  0010D4  0100               	movlb	0	; () banked
  9046  0010D6  6FC6               	movwf	(strncmp@s2+1)& (0+255),b
  9047  0010D8  0E00               	movlw	0
  9048  0010DA  0100               	movlb	0	; () banked
  9049  0010DC  6FC8               	movwf	(strncmp@len+1)& (0+255),b
  9050  0010DE  0E06               	movlw	6
  9051  0010E0  6FC7               	movwf	strncmp@len& (0+255),b
  9052  0010E2  EC37  F024         	call	_strncmp	;wreg free
  9053  0010E6  0100               	movlb	0	; () banked
  9054  0010E8  51C3               	movf	?_strncmp& (0+255),w,b
  9055  0010EA  0100               	movlb	0	; () banked
  9056  0010EC  11C4               	iorwf	(?_strncmp+1)& (0+255),w,b
  9057  0010EE  A4D8               	btfss	status,2,c
  9058  0010F0  D01C               	goto	l12454
  9059                           
  9060                           ; BSR set to: 0
  9061                           ;MOTEapp.c: 915: {
  9062                           ;MOTEapp.c: 916: oled_putString("Reception timeout",0,3);
  9063  0010F2  0EEC               	movlw	low STR_142
  9064  0010F4  0100               	movlb	0	; () banked
  9065  0010F6  6FD0               	movwf	oled_putString@string& (0+255),b
  9066  0010F8  0E79               	movlw	high STR_142
  9067  0010FA  0100               	movlb	0	; () banked
  9068  0010FC  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  9069  0010FE  0E00               	movlw	0
  9070  001100  0100               	movlb	0	; () banked
  9071  001102  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  9072  001104  0E03               	movlw	3
  9073  001106  0100               	movlb	0	; () banked
  9074  001108  6FD3               	movwf	oled_putString@start_page& (0+255),b
  9075  00110A  EC0D  F027         	call	_oled_putString	;wreg free
  9076                           
  9077                           ;MOTEapp.c: 917: LATAbits.LATA6 = 0;
  9078  00110E  9C89               	bcf	3977,6,c	;volatile
  9079                           
  9080                           ;MOTEapp.c: 919: runningState = runningUplink;
  9081  001110  0E06               	movlw	6
  9082  001112  0100               	movlb	0	; () banked
  9083  001114  6FB2               	movwf	_runningState& (0+255),b
  9084                           
  9085                           ; BSR set to: 0
  9086                           ;MOTEapp.c: 920: moteApp_delayms(4000);
  9087  001116  0E0F               	movlw	15
  9088  001118  0100               	movlb	0	; () banked
  9089  00111A  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
  9090  00111C  0EA0               	movlw	160
  9091  00111E  6FC3               	movwf	moteApp_delayms@length& (0+255),b
  9092  001120  EC73  F02A         	call	_moteApp_delayms	;wreg free
  9093  001124                     l12452:
  9094                           
  9095                           ;MOTEapp.c: 922: SleepTimeOut = 10;
  9096  001124  0E0A               	movlw	10
  9097  001126  0100               	movlb	0	; () banked
  9098  001128  6FF2               	movwf	_SleepTimeOut& (0+255),b
  9099  00112A                     l12454:
  9100                           
  9101                           ; BSR set to: 0
  9102                           ;MOTEapp.c: 923: }
  9103                           ;MOTEapp.c: 924: _delay((unsigned long)((16)*(48000000/4000.0)));
  9104  00112A  0EFA               	movlw	250
  9105  00112C  0100               	movlb	0	; () banked
  9106  00112E  6FE2               	movwf	??_moteRunningProcess& (0+255),b
  9107  001130  0E58               	movlw	88
  9108  001132                     u11957:
  9109  001132  2EE8               	decfsz	wreg,f,c
  9110  001134  D7FE               	goto	u11957
  9111  001136  2FE2               	decfsz	??_moteRunningProcess& (0+255),f,b
  9112  001138  D7FC               	goto	u11957
  9113  00113A  D000               	nop2	
  9114                           
  9115                           ;MOTEapp.c: 926: }
  9116                           ;MOTEapp.c: 927: break;
  9117                           
  9118                           ;MOTEapp.c: 925: break;
  9119  00113C  0012               	return	
  9120  00113E                     l12456:
  9121                           
  9122                           ;MOTEapp.c: 932: oled_putUint16(light,6,1);
  9123  00113E  C080  F0D5         	movff	_light,oled_putUint16@number
  9124  001142  C081  F0D6         	movff	_light+1,oled_putUint16@number+1
  9125  001146  0E06               	movlw	6
  9126  001148  0100               	movlb	0	; () banked
  9127  00114A  6FD7               	movwf	oled_putUint16@station_dot& (0+255),b
  9128  00114C  0E01               	movlw	1
  9129  00114E  0100               	movlb	0	; () banked
  9130  001150  6FD8               	movwf	oled_putUint16@start_page& (0+255),b
  9131  001152  EC46  F015         	call	_oled_putUint16	;wreg free
  9132                           
  9133                           ;MOTEapp.c: 933: oled_putUint16(temperature,6,2);
  9134  001156  C086  F0D5         	movff	_temperature,oled_putUint16@number
  9135  00115A  C087  F0D6         	movff	_temperature+1,oled_putUint16@number+1
  9136  00115E  0E06               	movlw	6
  9137  001160  0100               	movlb	0	; () banked
  9138  001162  6FD7               	movwf	oled_putUint16@station_dot& (0+255),b
  9139  001164  0E02               	movlw	2
  9140  001166  0100               	movlb	0	; () banked
  9141  001168  6FD8               	movwf	oled_putUint16@start_page& (0+255),b
  9142  00116A  EC46  F015         	call	_oled_putUint16	;wreg free
  9143                           
  9144                           ;MOTEapp.c: 934: if ( (changeStates) || (selectButton) )
  9145  00116E  0100               	movlb	0	; () banked
  9146  001170  51ED               	movf	moteRunningProcess@changeStates& (0+255),w,b
  9147  001172  0100               	movlb	0	; () banked
  9148  001174  A4D8               	btfss	status,2,c
  9149  001176  D005               	goto	l12462
  9150                           
  9151                           ; BSR set to: 0
  9152  001178  0100               	movlb	0	; () banked
  9153  00117A  51DF               	movf	moteRunningProcess@selectButton& (0+255),w,b
  9154  00117C  0100               	movlb	0	; () banked
  9155  00117E  B4D8               	btfsc	status,2,c
  9156  001180  0012               	return	
  9157  001182                     l12462:
  9158                           
  9159                           ; BSR set to: 0
  9160                           ;MOTEapp.c: 935: {
  9161                           ;MOTEapp.c: 936: oled_clear();
  9162  001182  EC26  F02C         	call	_oled_clear	;wreg free
  9163                           
  9164                           ;MOTEapp.c: 937: oled_putString("  Sensor Data  ",0,0);
  9165  001186  0E3E               	movlw	low STR_102
  9166  001188  0100               	movlb	0	; () banked
  9167  00118A  6FD0               	movwf	oled_putString@string& (0+255),b
  9168  00118C  0E7C               	movlw	high STR_102
  9169  00118E  0100               	movlb	0	; () banked
  9170  001190  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  9171  001192  0E00               	movlw	0
  9172  001194  0100               	movlb	0	; () banked
  9173  001196  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  9174  001198  0E00               	movlw	0
  9175  00119A  0100               	movlb	0	; () banked
  9176  00119C  6FD3               	movwf	oled_putString@start_page& (0+255),b
  9177  00119E  EC0D  F027         	call	_oled_putString	;wreg free
  9178                           
  9179                           ;MOTEapp.c: 938: oled_putString("    Display    ",0,1);
  9180  0011A2  0E2E               	movlw	low STR_103
  9181  0011A4  0100               	movlb	0	; () banked
  9182  0011A6  6FD0               	movwf	oled_putString@string& (0+255),b
  9183  0011A8  0E7C               	movlw	high STR_103
  9184  0011AA  0100               	movlb	0	; () banked
  9185  0011AC  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  9186  0011AE  0E00               	movlw	0
  9187  0011B0  0100               	movlb	0	; () banked
  9188  0011B2  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  9189  0011B4  0E01               	movlw	1
  9190  0011B6  0100               	movlb	0	; () banked
  9191  0011B8  6FD3               	movwf	oled_putString@start_page& (0+255),b
  9192  0011BA  EC0D  F027         	call	_oled_putString	;wreg free
  9193                           
  9194                           ;MOTEapp.c: 939: oled_putString("(NAV)    (SEL) ",0,3);
  9195  0011BE  0E5E               	movlw	low STR_73
  9196  0011C0  0100               	movlb	0	; () banked
  9197  0011C2  6FD0               	movwf	oled_putString@string& (0+255),b
  9198  0011C4  0E7C               	movlw	high STR_73
  9199  0011C6  0100               	movlb	0	; () banked
  9200  0011C8  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  9201  0011CA  0E00               	movlw	0
  9202  0011CC  0100               	movlb	0	; () banked
  9203  0011CE  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  9204  0011D0  0E03               	movlw	3
  9205  0011D2  0100               	movlb	0	; () banked
  9206  0011D4  6FD3               	movwf	oled_putString@start_page& (0+255),b
  9207  0011D6  EC0D  F027         	call	_oled_putString	;wreg free
  9208                           
  9209                           ;MOTEapp.c: 940: runningState = runningSensor;
  9210  0011DA  0E01               	movlw	1
  9211  0011DC  0100               	movlb	0	; () banked
  9212  0011DE  6FB2               	movwf	_runningState& (0+255),b
  9213                           
  9214                           ; BSR set to: 0
  9215                           ;MOTEapp.c: 941: }
  9216                           ;MOTEapp.c: 942: break;
  9217  0011E0  0012               	return	
  9218  0011E2                     l12472:
  9219                           
  9220                           ; BSR set to: 0
  9221                           ;MOTEapp.c: 944: if (changeStates)
  9222  0011E2  0100               	movlb	0	; () banked
  9223  0011E4  51ED               	movf	moteRunningProcess@changeStates& (0+255),w,b
  9224  0011E6  0100               	movlb	0	; () banked
  9225  0011E8  B4D8               	btfsc	status,2,c
  9226  0011EA  D0D5               	goto	l12506
  9227                           
  9228                           ; BSR set to: 0
  9229                           ;MOTEapp.c: 945: {
  9230                           ;MOTEapp.c: 946: oled_clear();
  9231  0011EC  EC26  F02C         	call	_oled_clear	;wreg free
  9232                           
  9233                           ;MOTEapp.c: 947: oled_putString("Select Data Rate",0,0);
  9234  0011F0  0EB8               	movlw	low STR_146
  9235  0011F2  0100               	movlb	0	; () banked
  9236  0011F4  6FD0               	movwf	oled_putString@string& (0+255),b
  9237  0011F6  0E7B               	movlw	high STR_146
  9238  0011F8  0100               	movlb	0	; () banked
  9239  0011FA  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  9240  0011FC  0E00               	movlw	0
  9241  0011FE  0100               	movlb	0	; () banked
  9242  001200  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  9243  001202  0E00               	movlw	0
  9244  001204  0100               	movlb	0	; () banked
  9245  001206  6FD3               	movwf	oled_putString@start_page& (0+255),b
  9246  001208  EC0D  F027         	call	_oled_putString	;wreg free
  9247                           
  9248                           ;MOTEapp.c: 948: oled_putString("Data Rate: ",0,2);
  9249  00120C  0E60               	movlw	low STR_147
  9250  00120E  0100               	movlb	0	; () banked
  9251  001210  6FD0               	movwf	oled_putString@string& (0+255),b
  9252  001212  0E7E               	movlw	high STR_147
  9253  001214  0100               	movlb	0	; () banked
  9254  001216  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  9255  001218  0E00               	movlw	0
  9256  00121A  0100               	movlb	0	; () banked
  9257  00121C  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  9258  00121E  0E02               	movlw	2
  9259  001220  0100               	movlb	0	; () banked
  9260  001222  6FD3               	movwf	oled_putString@start_page& (0+255),b
  9261  001224  EC0D  F027         	call	_oled_putString	;wreg free
  9262                           
  9263                           ;MOTEapp.c: 949: oled_putString("(NAV)    (CNG) ",0,3);
  9264  001228  0E4E               	movlw	low STR_114
  9265  00122A  0100               	movlb	0	; () banked
  9266  00122C  6FD0               	movwf	oled_putString@string& (0+255),b
  9267  00122E  0E7C               	movlw	high STR_114
  9268  001230  0100               	movlb	0	; () banked
  9269  001232  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  9270  001234  0E00               	movlw	0
  9271  001236  0100               	movlb	0	; () banked
  9272  001238  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  9273  00123A  0E03               	movlw	3
  9274  00123C  0100               	movlb	0	; () banked
  9275  00123E  6FD3               	movwf	oled_putString@start_page& (0+255),b
  9276  001240  EC0D  F027         	call	_oled_putString	;wreg free
  9277                           
  9278                           ;MOTEapp.c: 950: runningState = runningDataRateDisplay;
  9279  001244  0E03               	movlw	3
  9280  001246  0100               	movlb	0	; () banked
  9281  001248  6FB2               	movwf	_runningState& (0+255),b
  9282                           
  9283                           ;MOTEapp.c: 953: switch (dataRateValue)
  9284  00124A  D087               	goto	l12504
  9285  00124C                     l12484:
  9286                           
  9287                           ; BSR set to: 0
  9288                           ;MOTEapp.c: 957: oled_putString(" 0 ",10,2);
  9289  00124C  0EC1               	movlw	low STR_149
  9290  00124E  0100               	movlb	0	; () banked
  9291  001250  6FD0               	movwf	oled_putString@string& (0+255),b
  9292  001252  0E7F               	movlw	high STR_149
  9293  001254  0100               	movlb	0	; () banked
  9294  001256  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  9295  001258  0E0A               	movlw	10
  9296  00125A  0100               	movlb	0	; () banked
  9297  00125C  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  9298  00125E  0E02               	movlw	2
  9299  001260  0100               	movlb	0	; () banked
  9300  001262  6FD3               	movwf	oled_putString@start_page& (0+255),b
  9301  001264  EC0D  F027         	call	_oled_putString	;wreg free
  9302                           
  9303                           ;MOTEapp.c: 958: break;
  9304  001268  D096               	goto	l12506
  9305  00126A                     l12486:
  9306                           
  9307                           ;MOTEapp.c: 960: oled_putString(" 1 ",10,2);
  9308  00126A  0EC5               	movlw	low STR_150
  9309  00126C  0100               	movlb	0	; () banked
  9310  00126E  6FD0               	movwf	oled_putString@string& (0+255),b
  9311  001270  0E7F               	movlw	high STR_150
  9312  001272  0100               	movlb	0	; () banked
  9313  001274  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  9314  001276  0E0A               	movlw	10
  9315  001278  0100               	movlb	0	; () banked
  9316  00127A  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  9317  00127C  0E02               	movlw	2
  9318  00127E  0100               	movlb	0	; () banked
  9319  001280  6FD3               	movwf	oled_putString@start_page& (0+255),b
  9320  001282  EC0D  F027         	call	_oled_putString	;wreg free
  9321                           
  9322                           ;MOTEapp.c: 961: break;
  9323  001286  D087               	goto	l12506
  9324  001288                     l12488:
  9325                           
  9326                           ;MOTEapp.c: 963: oled_putString(" 2 ",10,2);
  9327  001288  0EC9               	movlw	low STR_151
  9328  00128A  0100               	movlb	0	; () banked
  9329  00128C  6FD0               	movwf	oled_putString@string& (0+255),b
  9330  00128E  0E7F               	movlw	high STR_151
  9331  001290  0100               	movlb	0	; () banked
  9332  001292  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  9333  001294  0E0A               	movlw	10
  9334  001296  0100               	movlb	0	; () banked
  9335  001298  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  9336  00129A  0E02               	movlw	2
  9337  00129C  0100               	movlb	0	; () banked
  9338  00129E  6FD3               	movwf	oled_putString@start_page& (0+255),b
  9339  0012A0  EC0D  F027         	call	_oled_putString	;wreg free
  9340                           
  9341                           ;MOTEapp.c: 964: break;
  9342  0012A4  D078               	goto	l12506
  9343  0012A6                     l12490:
  9344                           
  9345                           ;MOTEapp.c: 966: oled_putString(" 3 ",10,2);
  9346  0012A6  0ECD               	movlw	low STR_152
  9347  0012A8  0100               	movlb	0	; () banked
  9348  0012AA  6FD0               	movwf	oled_putString@string& (0+255),b
  9349  0012AC  0E7F               	movlw	high STR_152
  9350  0012AE  0100               	movlb	0	; () banked
  9351  0012B0  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  9352  0012B2  0E0A               	movlw	10
  9353  0012B4  0100               	movlb	0	; () banked
  9354  0012B6  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  9355  0012B8  0E02               	movlw	2
  9356  0012BA  0100               	movlb	0	; () banked
  9357  0012BC  6FD3               	movwf	oled_putString@start_page& (0+255),b
  9358  0012BE  EC0D  F027         	call	_oled_putString	;wreg free
  9359                           
  9360                           ;MOTEapp.c: 967: break;
  9361  0012C2  D069               	goto	l12506
  9362  0012C4                     l12492:
  9363                           
  9364                           ;MOTEapp.c: 969: oled_putString(" 4 ",10,2);
  9365  0012C4  0ED1               	movlw	low STR_153
  9366  0012C6  0100               	movlb	0	; () banked
  9367  0012C8  6FD0               	movwf	oled_putString@string& (0+255),b
  9368  0012CA  0E7F               	movlw	high STR_153
  9369  0012CC  0100               	movlb	0	; () banked
  9370  0012CE  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  9371  0012D0  0E0A               	movlw	10
  9372  0012D2  0100               	movlb	0	; () banked
  9373  0012D4  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  9374  0012D6  0E02               	movlw	2
  9375  0012D8  0100               	movlb	0	; () banked
  9376  0012DA  6FD3               	movwf	oled_putString@start_page& (0+255),b
  9377  0012DC  EC0D  F027         	call	_oled_putString	;wreg free
  9378                           
  9379                           ;MOTEapp.c: 970: break;
  9380  0012E0  D05A               	goto	l12506
  9381  0012E2                     l12494:
  9382                           
  9383                           ;MOTEapp.c: 972: oled_putString(" 5 ",10,2);
  9384  0012E2  0ED5               	movlw	low STR_154
  9385  0012E4  0100               	movlb	0	; () banked
  9386  0012E6  6FD0               	movwf	oled_putString@string& (0+255),b
  9387  0012E8  0E7F               	movlw	high STR_154
  9388  0012EA  0100               	movlb	0	; () banked
  9389  0012EC  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  9390  0012EE  0E0A               	movlw	10
  9391  0012F0  0100               	movlb	0	; () banked
  9392  0012F2  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  9393  0012F4  0E02               	movlw	2
  9394  0012F6  0100               	movlb	0	; () banked
  9395  0012F8  6FD3               	movwf	oled_putString@start_page& (0+255),b
  9396  0012FA  EC0D  F027         	call	_oled_putString	;wreg free
  9397                           
  9398                           ;MOTEapp.c: 973: break;
  9399  0012FE  D04B               	goto	l12506
  9400  001300                     l12496:
  9401                           
  9402                           ;MOTEapp.c: 975: oled_putString(" 6 ",10,2);
  9403  001300  0ED9               	movlw	low STR_155
  9404  001302  0100               	movlb	0	; () banked
  9405  001304  6FD0               	movwf	oled_putString@string& (0+255),b
  9406  001306  0E7F               	movlw	high STR_155
  9407  001308  0100               	movlb	0	; () banked
  9408  00130A  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  9409  00130C  0E0A               	movlw	10
  9410  00130E  0100               	movlb	0	; () banked
  9411  001310  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  9412  001312  0E02               	movlw	2
  9413  001314  0100               	movlb	0	; () banked
  9414  001316  6FD3               	movwf	oled_putString@start_page& (0+255),b
  9415  001318  EC0D  F027         	call	_oled_putString	;wreg free
  9416                           
  9417                           ;MOTEapp.c: 976: break;
  9418  00131C  D03C               	goto	l12506
  9419  00131E                     l12498:
  9420                           
  9421                           ;MOTEapp.c: 978: oled_putString(" 7 ",10,2);
  9422  00131E  0EDD               	movlw	low STR_156
  9423  001320  0100               	movlb	0	; () banked
  9424  001322  6FD0               	movwf	oled_putString@string& (0+255),b
  9425  001324  0E7F               	movlw	high STR_156
  9426  001326  0100               	movlb	0	; () banked
  9427  001328  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  9428  00132A  0E0A               	movlw	10
  9429  00132C  0100               	movlb	0	; () banked
  9430  00132E  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  9431  001330  0E02               	movlw	2
  9432  001332  0100               	movlb	0	; () banked
  9433  001334  6FD3               	movwf	oled_putString@start_page& (0+255),b
  9434  001336  EC0D  F027         	call	_oled_putString	;wreg free
  9435                           
  9436                           ;MOTEapp.c: 979: break;
  9437  00133A  D02D               	goto	l12506
  9438  00133C                     l12500:
  9439                           
  9440                           ;MOTEapp.c: 981: oled_putString("ADR",10,2);
  9441  00133C  0EF5               	movlw	low STR_157
  9442  00133E  0100               	movlb	0	; () banked
  9443  001340  6FD0               	movwf	oled_putString@string& (0+255),b
  9444  001342  0E7F               	movlw	high STR_157
  9445  001344  0100               	movlb	0	; () banked
  9446  001346  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  9447  001348  0E0A               	movlw	10
  9448  00134A  0100               	movlb	0	; () banked
  9449  00134C  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  9450  00134E  0E02               	movlw	2
  9451  001350  0100               	movlb	0	; () banked
  9452  001352  6FD3               	movwf	oled_putString@start_page& (0+255),b
  9453  001354  EC0D  F027         	call	_oled_putString	;wreg free
  9454                           
  9455                           ;MOTEapp.c: 983: }
  9456                           
  9457                           ;MOTEapp.c: 982: break;
  9458  001358  D01E               	goto	l12506
  9459  00135A                     l12504:
  9460  00135A  0100               	movlb	0	; () banked
  9461  00135C  51F4               	movf	_dataRateValue& (0+255),w,b
  9462                           
  9463                           ; Switch size 1, requested type "space"
  9464                           ; Number of cases is 9, Range of values is 0 to 8
  9465                           ; switch strategies available:
  9466                           ; Name         Instructions Cycles
  9467                           ; simple_byte           28    15 (average)
  9468                           ;	Chosen strategy is simple_byte
  9469  00135E  0A00               	xorlw	0	; case 0
  9470  001360  B4D8               	btfsc	status,2,c
  9471  001362  D774               	goto	l12484
  9472  001364  0A01               	xorlw	1	; case 1
  9473  001366  B4D8               	btfsc	status,2,c
  9474  001368  D780               	goto	l12486
  9475  00136A  0A03               	xorlw	3	; case 2
  9476  00136C  B4D8               	btfsc	status,2,c
  9477  00136E  D78C               	goto	l12488
  9478  001370  0A01               	xorlw	1	; case 3
  9479  001372  B4D8               	btfsc	status,2,c
  9480  001374  D798               	goto	l12490
  9481  001376  0A07               	xorlw	7	; case 4
  9482  001378  B4D8               	btfsc	status,2,c
  9483  00137A  D7A4               	goto	l12492
  9484  00137C  0A01               	xorlw	1	; case 5
  9485  00137E  B4D8               	btfsc	status,2,c
  9486  001380  D7B0               	goto	l12494
  9487  001382  0A03               	xorlw	3	; case 6
  9488  001384  B4D8               	btfsc	status,2,c
  9489  001386  D7BC               	goto	l12496
  9490  001388  0A01               	xorlw	1	; case 7
  9491  00138A  B4D8               	btfsc	status,2,c
  9492  00138C  D7C8               	goto	l12498
  9493  00138E  0A0F               	xorlw	15	; case 8
  9494  001390  B4D8               	btfsc	status,2,c
  9495  001392  D7D4               	goto	l12500
  9496  001394  D75B               	goto	l12484
  9497  001396                     l12506:
  9498                           
  9499                           ;MOTEapp.c: 984: }
  9500                           ;MOTEapp.c: 985: if (selectButton)
  9501  001396  0100               	movlb	0	; () banked
  9502  001398  51DF               	movf	moteRunningProcess@selectButton& (0+255),w,b
  9503  00139A  0100               	movlb	0	; () banked
  9504  00139C  B4D8               	btfsc	status,2,c
  9505  00139E  0012               	return	
  9506                           
  9507                           ; BSR set to: 0
  9508                           ;MOTEapp.c: 986: {
  9509                           ;MOTEapp.c: 987: if (periodicUpValue < 5)
  9510  0013A0  0E05               	movlw	5
  9511  0013A2  0100               	movlb	0	; () banked
  9512  0013A4  61FA               	cpfslt	_periodicUpValue& (0+255),b
  9513  0013A6  D003               	goto	l12512
  9514                           
  9515                           ; BSR set to: 0
  9516                           ;MOTEapp.c: 988: {
  9517                           ;MOTEapp.c: 989: periodicUpValue++;
  9518  0013A8  0100               	movlb	0	; () banked
  9519  0013AA  2BFA               	incf	_periodicUpValue& (0+255),f,b
  9520                           
  9521                           ;MOTEapp.c: 990: } else {
  9522  0013AC  D06F               	goto	l12538
  9523  0013AE                     l12512:
  9524                           
  9525                           ; BSR set to: 0
  9526                           ;MOTEapp.c: 991: periodicUpValue = 0;
  9527  0013AE  0E00               	movlw	0
  9528  0013B0  0100               	movlb	0	; () banked
  9529  0013B2  6FFA               	movwf	_periodicUpValue& (0+255),b
  9530                           
  9531                           ; BSR set to: 0
  9532                           ;MOTEapp.c: 992: }
  9533                           ;MOTEapp.c: 994: switch (periodicUpValue)
  9534  0013B4  D06B               	goto	l12538
  9535  0013B6                     l12514:
  9536                           
  9537                           ; BSR set to: 0
  9538                           ;MOTEapp.c: 998: periodicTimerValue = 9;
  9539  0013B6  0E09               	movlw	9
  9540  0013B8  0100               	movlb	0	; () banked
  9541  0013BA  6FF9               	movwf	_periodicTimerValue& (0+255),b
  9542                           
  9543                           ; BSR set to: 0
  9544                           ;MOTEapp.c: 999: oled_putString(" 5 ",7,2);
  9545  0013BC  0ED5               	movlw	low STR_154
  9546  0013BE  0100               	movlb	0	; () banked
  9547  0013C0  6FD0               	movwf	oled_putString@string& (0+255),b
  9548  0013C2  0E7F               	movlw	high STR_154
  9549  0013C4  0100               	movlb	0	; () banked
  9550  0013C6  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  9551  0013C8  0E07               	movlw	7
  9552  0013CA  0100               	movlb	0	; () banked
  9553  0013CC  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  9554  0013CE  0E02               	movlw	2
  9555  0013D0  0100               	movlb	0	; () banked
  9556  0013D2  6FD3               	movwf	oled_putString@start_page& (0+255),b
  9557  0013D4  EC0D  F027         	call	_oled_putString	;wreg free
  9558                           
  9559                           ;MOTEapp.c: 1000: break;
  9560  0013D8  0012               	return	
  9561  0013DA                     l12518:
  9562                           
  9563                           ;MOTEapp.c: 1002: periodicTimerValue = 18;
  9564  0013DA  0E12               	movlw	18
  9565  0013DC  0100               	movlb	0	; () banked
  9566  0013DE  6FF9               	movwf	_periodicTimerValue& (0+255),b
  9567                           
  9568                           ; BSR set to: 0
  9569                           ;MOTEapp.c: 1003: oled_putString(" 10",7,2);
  9570  0013E0  0EE1               	movlw	low STR_159
  9571  0013E2  0100               	movlb	0	; () banked
  9572  0013E4  6FD0               	movwf	oled_putString@string& (0+255),b
  9573  0013E6  0E7F               	movlw	high STR_159
  9574  0013E8  0100               	movlb	0	; () banked
  9575  0013EA  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  9576  0013EC  0E07               	movlw	7
  9577  0013EE  0100               	movlb	0	; () banked
  9578  0013F0  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  9579  0013F2  0E02               	movlw	2
  9580  0013F4  0100               	movlb	0	; () banked
  9581  0013F6  6FD3               	movwf	oled_putString@start_page& (0+255),b
  9582  0013F8  EC0D  F027         	call	_oled_putString	;wreg free
  9583                           
  9584                           ;MOTEapp.c: 1004: break;
  9585  0013FC  0012               	return	
  9586  0013FE                     l12522:
  9587                           
  9588                           ;MOTEapp.c: 1006: periodicTimerValue = 27;
  9589  0013FE  0E1B               	movlw	27
  9590  001400  0100               	movlb	0	; () banked
  9591  001402  6FF9               	movwf	_periodicTimerValue& (0+255),b
  9592                           
  9593                           ; BSR set to: 0
  9594                           ;MOTEapp.c: 1007: oled_putString(" 15",7,2);
  9595  001404  0EED               	movlw	low STR_160
  9596  001406  0100               	movlb	0	; () banked
  9597  001408  6FD0               	movwf	oled_putString@string& (0+255),b
  9598  00140A  0E7F               	movlw	high STR_160
  9599  00140C  0100               	movlb	0	; () banked
  9600  00140E  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  9601  001410  0E07               	movlw	7
  9602  001412  0100               	movlb	0	; () banked
  9603  001414  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  9604  001416  0E02               	movlw	2
  9605  001418  0100               	movlb	0	; () banked
  9606  00141A  6FD3               	movwf	oled_putString@start_page& (0+255),b
  9607  00141C  EC0D  F027         	call	_oled_putString	;wreg free
  9608                           
  9609                           ;MOTEapp.c: 1008: break;
  9610  001420  0012               	return	
  9611  001422                     l12526:
  9612                           
  9613                           ;MOTEapp.c: 1010: periodicTimerValue = 54;
  9614  001422  0E36               	movlw	54
  9615  001424  0100               	movlb	0	; () banked
  9616  001426  6FF9               	movwf	_periodicTimerValue& (0+255),b
  9617                           
  9618                           ; BSR set to: 0
  9619                           ;MOTEapp.c: 1011: oled_putString(" 30",7,2);
  9620  001428  0EE5               	movlw	low STR_161
  9621  00142A  0100               	movlb	0	; () banked
  9622  00142C  6FD0               	movwf	oled_putString@string& (0+255),b
  9623  00142E  0E7F               	movlw	high STR_161
  9624  001430  0100               	movlb	0	; () banked
  9625  001432  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  9626  001434  0E07               	movlw	7
  9627  001436  0100               	movlb	0	; () banked
  9628  001438  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  9629  00143A  0E02               	movlw	2
  9630  00143C  0100               	movlb	0	; () banked
  9631  00143E  6FD3               	movwf	oled_putString@start_page& (0+255),b
  9632  001440  EC0D  F027         	call	_oled_putString	;wreg free
  9633                           
  9634                           ;MOTEapp.c: 1012: break;
  9635  001444  0012               	return	
  9636  001446                     l12530:
  9637                           
  9638                           ;MOTEapp.c: 1014: periodicTimerValue = 108;
  9639  001446  0E6C               	movlw	108
  9640  001448  0100               	movlb	0	; () banked
  9641  00144A  6FF9               	movwf	_periodicTimerValue& (0+255),b
  9642                           
  9643                           ; BSR set to: 0
  9644                           ;MOTEapp.c: 1015: oled_putString(" 60",7,2);
  9645  00144C  0EE9               	movlw	low STR_162
  9646  00144E  0100               	movlb	0	; () banked
  9647  001450  6FD0               	movwf	oled_putString@string& (0+255),b
  9648  001452  0E7F               	movlw	high STR_162
  9649  001454  0100               	movlb	0	; () banked
  9650  001456  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  9651  001458  0E07               	movlw	7
  9652  00145A  0100               	movlb	0	; () banked
  9653  00145C  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  9654  00145E  0E02               	movlw	2
  9655  001460  0100               	movlb	0	; () banked
  9656  001462  6FD3               	movwf	oled_putString@start_page& (0+255),b
  9657  001464  EC0D  F027         	call	_oled_putString	;wreg free
  9658                           
  9659                           ;MOTEapp.c: 1016: break;
  9660  001468  0012               	return	
  9661  00146A                     l605:
  9662                           
  9663                           ; BSR set to: 0
  9664                           ;MOTEapp.c: 1018: periodicTimerValue = 255;
  9665  00146A  0100               	movlb	0	; () banked
  9666  00146C  69F9               	setf	_periodicTimerValue& (0+255),b
  9667                           
  9668                           ; BSR set to: 0
  9669                           ;MOTEapp.c: 1019: oled_putString("OFF",7,2);
  9670  00146E  0EF1               	movlw	low STR_129
  9671  001470  0100               	movlb	0	; () banked
  9672  001472  6FD0               	movwf	oled_putString@string& (0+255),b
  9673  001474  0E7F               	movlw	high STR_129
  9674  001476  0100               	movlb	0	; () banked
  9675  001478  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  9676  00147A  0E07               	movlw	7
  9677  00147C  0100               	movlb	0	; () banked
  9678  00147E  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  9679  001480  0E02               	movlw	2
  9680  001482  0100               	movlb	0	; () banked
  9681  001484  6FD3               	movwf	oled_putString@start_page& (0+255),b
  9682  001486  EC0D  F027         	call	_oled_putString	;wreg free
  9683                           
  9684                           ;MOTEapp.c: 1021: }
  9685                           
  9686                           ;MOTEapp.c: 1020: break;
  9687  00148A  0012               	return	
  9688  00148C                     l12538:
  9689  00148C  0100               	movlb	0	; () banked
  9690  00148E  51FA               	movf	_periodicUpValue& (0+255),w,b
  9691                           
  9692                           ; Switch size 1, requested type "space"
  9693                           ; Number of cases is 6, Range of values is 0 to 5
  9694                           ; switch strategies available:
  9695                           ; Name         Instructions Cycles
  9696                           ; simple_byte           19    10 (average)
  9697                           ;	Chosen strategy is simple_byte
  9698  001490  0A00               	xorlw	0	; case 0
  9699  001492  B4D8               	btfsc	status,2,c
  9700  001494  D790               	goto	l12514
  9701  001496  0A01               	xorlw	1	; case 1
  9702  001498  B4D8               	btfsc	status,2,c
  9703  00149A  D79F               	goto	l12518
  9704  00149C  0A03               	xorlw	3	; case 2
  9705  00149E  B4D8               	btfsc	status,2,c
  9706  0014A0  D7AE               	goto	l12522
  9707  0014A2  0A01               	xorlw	1	; case 3
  9708  0014A4  B4D8               	btfsc	status,2,c
  9709  0014A6  D7BD               	goto	l12526
  9710  0014A8  0A07               	xorlw	7	; case 4
  9711  0014AA  B4D8               	btfsc	status,2,c
  9712  0014AC  D7CC               	goto	l12530
  9713  0014AE  0A01               	xorlw	1	; case 5
  9714  0014B0  B4D8               	btfsc	status,2,c
  9715  0014B2  D7DB               	goto	l605
  9716  0014B4  D780               	goto	l12514
  9717  0014B6                     l12540:
  9718                           
  9719                           ; BSR set to: 0
  9720                           ;MOTEapp.c: 1025: if (changeStates)
  9721  0014B6  0100               	movlb	0	; () banked
  9722  0014B8  51ED               	movf	moteRunningProcess@changeStates& (0+255),w,b
  9723  0014BA  0100               	movlb	0	; () banked
  9724  0014BC  B4D8               	btfsc	status,2,c
  9725  0014BE  D025               	goto	l12552
  9726                           
  9727                           ; BSR set to: 0
  9728                           ;MOTEapp.c: 1026: {
  9729                           ;MOTEapp.c: 1028: MOTEapp_SetDataRateSetting(dataRateValue);
  9730  0014C0  0100               	movlb	0	; () banked
  9731  0014C2  51F4               	movf	_dataRateValue& (0+255),w,b
  9732  0014C4  EC80  F012         	call	_MOTEapp_SetDataRateSetting
  9733                           
  9734                           ;MOTEapp.c: 1030: oled_clear();
  9735  0014C8  EC26  F02C         	call	_oled_clear	;wreg free
  9736                           
  9737                           ;MOTEapp.c: 1031: oled_putString("Enter Sleep Mode",0,0);
  9738  0014CC  0E96               	movlw	low STR_164
  9739  0014CE  0100               	movlb	0	; () banked
  9740  0014D0  6FD0               	movwf	oled_putString@string& (0+255),b
  9741  0014D2  0E7B               	movlw	high STR_164
  9742  0014D4  0100               	movlb	0	; () banked
  9743  0014D6  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  9744  0014D8  0E00               	movlw	0
  9745  0014DA  0100               	movlb	0	; () banked
  9746  0014DC  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  9747  0014DE  0E00               	movlw	0
  9748  0014E0  0100               	movlb	0	; () banked
  9749  0014E2  6FD3               	movwf	oled_putString@start_page& (0+255),b
  9750  0014E4  EC0D  F027         	call	_oled_putString	;wreg free
  9751                           
  9752                           ;MOTEapp.c: 1032: oled_putString("(NAV)    (SLP) ",0,3);
  9753  0014E8  0E6E               	movlw	low STR_165
  9754  0014EA  0100               	movlb	0	; () banked
  9755  0014EC  6FD0               	movwf	oled_putString@string& (0+255),b
  9756  0014EE  0E7C               	movlw	high STR_165
  9757  0014F0  0100               	movlb	0	; () banked
  9758  0014F2  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  9759  0014F4  0E00               	movlw	0
  9760  0014F6  0100               	movlb	0	; () banked
  9761  0014F8  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  9762  0014FA  0E03               	movlw	3
  9763  0014FC  0100               	movlb	0	; () banked
  9764  0014FE  6FD3               	movwf	oled_putString@start_page& (0+255),b
  9765  001500  EC0D  F027         	call	_oled_putString	;wreg free
  9766                           
  9767                           ;MOTEapp.c: 1034: runningState = runningSleep;
  9768  001504  0E11               	movlw	17
  9769  001506  0100               	movlb	0	; () banked
  9770  001508  6FB2               	movwf	_runningState& (0+255),b
  9771  00150A                     l12552:
  9772                           
  9773                           ; BSR set to: 0
  9774                           ;MOTEapp.c: 1035: }
  9775                           ;MOTEapp.c: 1036: if (selectButton)
  9776  00150A  0100               	movlb	0	; () banked
  9777  00150C  51DF               	movf	moteRunningProcess@selectButton& (0+255),w,b
  9778  00150E  0100               	movlb	0	; () banked
  9779  001510  B4D8               	btfsc	status,2,c
  9780  001512  0012               	return	
  9781                           
  9782                           ; BSR set to: 0
  9783                           ;MOTEapp.c: 1037: {
  9784                           ;MOTEapp.c: 1038: if (dataRateValue < 8)
  9785  001514  0E08               	movlw	8
  9786  001516  0100               	movlb	0	; () banked
  9787  001518  61F4               	cpfslt	_dataRateValue& (0+255),b
  9788  00151A  D00D               	goto	l12564
  9789                           
  9790                           ; BSR set to: 0
  9791                           ;MOTEapp.c: 1039: {
  9792                           ;MOTEapp.c: 1040: if ((rnModule == rn2903) && (dataRateValue > 3))
  9793  00151C  0100               	movlb	0	; () banked
  9794  00151E  05B1               	decf	_rnModule& (0+255),w,b
  9795  001520  A4D8               	btfss	status,2,c
  9796  001522  D006               	goto	l12562
  9797                           
  9798                           ; BSR set to: 0
  9799  001524  0E03               	movlw	3
  9800  001526  0100               	movlb	0	; () banked
  9801  001528  65F4               	cpfsgt	_dataRateValue& (0+255),b
  9802  00152A  D002               	goto	l12562
  9803                           
  9804                           ; BSR set to: 0
  9805                           ;MOTEapp.c: 1041: dataRateValue = 8;
  9806  00152C  0E08               	movlw	8
  9807  00152E  D004               	goto	L5
  9808  001530                     l12562:
  9809                           
  9810                           ; BSR set to: 0
  9811                           ;MOTEapp.c: 1042: else
  9812                           ;MOTEapp.c: 1043: dataRateValue++;
  9813  001530  0100               	movlb	0	; () banked
  9814  001532  2BF4               	incf	_dataRateValue& (0+255),f,b
  9815                           
  9816                           ; BSR set to: 0
  9817                           ;MOTEapp.c: 1044: }
  9818  001534  D08B               	goto	l12586
  9819  001536                     l12564:
  9820                           
  9821                           ; BSR set to: 0
  9822                           ;MOTEapp.c: 1045: else {
  9823                           ;MOTEapp.c: 1046: dataRateValue = 0;
  9824  001536  0E00               	movlw	0
  9825  001538                     L5:
  9826  001538  0100               	movlb	0	; () banked
  9827  00153A  6FF4               	movwf	_dataRateValue& (0+255),b
  9828                           
  9829                           ; BSR set to: 0
  9830                           ;MOTEapp.c: 1047: }
  9831                           ;MOTEapp.c: 1049: switch (dataRateValue)
  9832  00153C  D087               	goto	l12586
  9833  00153E                     l12566:
  9834                           
  9835                           ; BSR set to: 0
  9836                           ;MOTEapp.c: 1053: oled_putString(" 0 ",10,2);
  9837  00153E  0EC1               	movlw	low STR_149
  9838  001540  0100               	movlb	0	; () banked
  9839  001542  6FD0               	movwf	oled_putString@string& (0+255),b
  9840  001544  0E7F               	movlw	high STR_149
  9841  001546  0100               	movlb	0	; () banked
  9842  001548  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  9843  00154A  0E0A               	movlw	10
  9844  00154C  0100               	movlb	0	; () banked
  9845  00154E  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  9846  001550  0E02               	movlw	2
  9847  001552  0100               	movlb	0	; () banked
  9848  001554  6FD3               	movwf	oled_putString@start_page& (0+255),b
  9849  001556  EC0D  F027         	call	_oled_putString	;wreg free
  9850                           
  9851                           ;MOTEapp.c: 1054: break;
  9852  00155A  0012               	return	
  9853  00155C                     l12568:
  9854                           
  9855                           ;MOTEapp.c: 1056: oled_putString(" 1 ",10,2);
  9856  00155C  0EC5               	movlw	low STR_150
  9857  00155E  0100               	movlb	0	; () banked
  9858  001560  6FD0               	movwf	oled_putString@string& (0+255),b
  9859  001562  0E7F               	movlw	high STR_150
  9860  001564  0100               	movlb	0	; () banked
  9861  001566  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  9862  001568  0E0A               	movlw	10
  9863  00156A  0100               	movlb	0	; () banked
  9864  00156C  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  9865  00156E  0E02               	movlw	2
  9866  001570  0100               	movlb	0	; () banked
  9867  001572  6FD3               	movwf	oled_putString@start_page& (0+255),b
  9868  001574  EC0D  F027         	call	_oled_putString	;wreg free
  9869                           
  9870                           ;MOTEapp.c: 1057: break;
  9871  001578  0012               	return	
  9872  00157A                     l12570:
  9873                           
  9874                           ;MOTEapp.c: 1059: oled_putString(" 2 ",10,2);
  9875  00157A  0EC9               	movlw	low STR_151
  9876  00157C  0100               	movlb	0	; () banked
  9877  00157E  6FD0               	movwf	oled_putString@string& (0+255),b
  9878  001580  0E7F               	movlw	high STR_151
  9879  001582  0100               	movlb	0	; () banked
  9880  001584  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  9881  001586  0E0A               	movlw	10
  9882  001588  0100               	movlb	0	; () banked
  9883  00158A  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  9884  00158C  0E02               	movlw	2
  9885  00158E  0100               	movlb	0	; () banked
  9886  001590  6FD3               	movwf	oled_putString@start_page& (0+255),b
  9887  001592  EC0D  F027         	call	_oled_putString	;wreg free
  9888                           
  9889                           ;MOTEapp.c: 1060: break;
  9890  001596  0012               	return	
  9891  001598                     l12572:
  9892                           
  9893                           ;MOTEapp.c: 1062: oled_putString(" 3 ",10,2);
  9894  001598  0ECD               	movlw	low STR_152
  9895  00159A  0100               	movlb	0	; () banked
  9896  00159C  6FD0               	movwf	oled_putString@string& (0+255),b
  9897  00159E  0E7F               	movlw	high STR_152
  9898  0015A0  0100               	movlb	0	; () banked
  9899  0015A2  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  9900  0015A4  0E0A               	movlw	10
  9901  0015A6  0100               	movlb	0	; () banked
  9902  0015A8  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  9903  0015AA  0E02               	movlw	2
  9904  0015AC  0100               	movlb	0	; () banked
  9905  0015AE  6FD3               	movwf	oled_putString@start_page& (0+255),b
  9906  0015B0  EC0D  F027         	call	_oled_putString	;wreg free
  9907                           
  9908                           ;MOTEapp.c: 1063: break;
  9909  0015B4  0012               	return	
  9910  0015B6                     l12574:
  9911                           
  9912                           ;MOTEapp.c: 1065: oled_putString(" 4 ",10,2);
  9913  0015B6  0ED1               	movlw	low STR_153
  9914  0015B8  0100               	movlb	0	; () banked
  9915  0015BA  6FD0               	movwf	oled_putString@string& (0+255),b
  9916  0015BC  0E7F               	movlw	high STR_153
  9917  0015BE  0100               	movlb	0	; () banked
  9918  0015C0  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  9919  0015C2  0E0A               	movlw	10
  9920  0015C4  0100               	movlb	0	; () banked
  9921  0015C6  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  9922  0015C8  0E02               	movlw	2
  9923  0015CA  0100               	movlb	0	; () banked
  9924  0015CC  6FD3               	movwf	oled_putString@start_page& (0+255),b
  9925  0015CE  EC0D  F027         	call	_oled_putString	;wreg free
  9926                           
  9927                           ;MOTEapp.c: 1066: break;
  9928  0015D2  0012               	return	
  9929  0015D4                     l12576:
  9930                           
  9931                           ;MOTEapp.c: 1068: oled_putString(" 5 ",10,2);
  9932  0015D4  0ED5               	movlw	low STR_154
  9933  0015D6  0100               	movlb	0	; () banked
  9934  0015D8  6FD0               	movwf	oled_putString@string& (0+255),b
  9935  0015DA  0E7F               	movlw	high STR_154
  9936  0015DC  0100               	movlb	0	; () banked
  9937  0015DE  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  9938  0015E0  0E0A               	movlw	10
  9939  0015E2  0100               	movlb	0	; () banked
  9940  0015E4  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  9941  0015E6  0E02               	movlw	2
  9942  0015E8  0100               	movlb	0	; () banked
  9943  0015EA  6FD3               	movwf	oled_putString@start_page& (0+255),b
  9944  0015EC  EC0D  F027         	call	_oled_putString	;wreg free
  9945                           
  9946                           ;MOTEapp.c: 1069: break;
  9947  0015F0  0012               	return	
  9948  0015F2                     l12578:
  9949                           
  9950                           ;MOTEapp.c: 1071: oled_putString(" 6 ",10,2);
  9951  0015F2  0ED9               	movlw	low STR_155
  9952  0015F4  0100               	movlb	0	; () banked
  9953  0015F6  6FD0               	movwf	oled_putString@string& (0+255),b
  9954  0015F8  0E7F               	movlw	high STR_155
  9955  0015FA  0100               	movlb	0	; () banked
  9956  0015FC  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  9957  0015FE  0E0A               	movlw	10
  9958  001600  0100               	movlb	0	; () banked
  9959  001602  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  9960  001604  0E02               	movlw	2
  9961  001606  0100               	movlb	0	; () banked
  9962  001608  6FD3               	movwf	oled_putString@start_page& (0+255),b
  9963  00160A  EC0D  F027         	call	_oled_putString	;wreg free
  9964                           
  9965                           ;MOTEapp.c: 1072: break;
  9966  00160E  0012               	return	
  9967  001610                     l12580:
  9968                           
  9969                           ;MOTEapp.c: 1074: oled_putString(" 7 ",10,2);
  9970  001610  0EDD               	movlw	low STR_156
  9971  001612  0100               	movlb	0	; () banked
  9972  001614  6FD0               	movwf	oled_putString@string& (0+255),b
  9973  001616  0E7F               	movlw	high STR_156
  9974  001618  0100               	movlb	0	; () banked
  9975  00161A  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  9976  00161C  0E0A               	movlw	10
  9977  00161E  0100               	movlb	0	; () banked
  9978  001620  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  9979  001622  0E02               	movlw	2
  9980  001624  0100               	movlb	0	; () banked
  9981  001626  6FD3               	movwf	oled_putString@start_page& (0+255),b
  9982  001628  EC0D  F027         	call	_oled_putString	;wreg free
  9983                           
  9984                           ;MOTEapp.c: 1075: break;
  9985  00162C  0012               	return	
  9986  00162E                     l12582:
  9987                           
  9988                           ;MOTEapp.c: 1077: oled_putString("ADR",10,2);
  9989  00162E  0EF5               	movlw	low STR_157
  9990  001630  0100               	movlb	0	; () banked
  9991  001632  6FD0               	movwf	oled_putString@string& (0+255),b
  9992  001634  0E7F               	movlw	high STR_157
  9993  001636  0100               	movlb	0	; () banked
  9994  001638  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
  9995  00163A  0E0A               	movlw	10
  9996  00163C  0100               	movlb	0	; () banked
  9997  00163E  6FD2               	movwf	oled_putString@station_dot& (0+255),b
  9998  001640  0E02               	movlw	2
  9999  001642  0100               	movlb	0	; () banked
 10000  001644  6FD3               	movwf	oled_putString@start_page& (0+255),b
 10001  001646  EC0D  F027         	call	_oled_putString	;wreg free
 10002                           
 10003                           ;MOTEapp.c: 1078: break; }
 10004  00164A  0012               	return	
 10005  00164C                     l12586:
 10006  00164C  0100               	movlb	0	; () banked
 10007  00164E  51F4               	movf	_dataRateValue& (0+255),w,b
 10008                           
 10009                           ; Switch size 1, requested type "space"
 10010                           ; Number of cases is 9, Range of values is 0 to 8
 10011                           ; switch strategies available:
 10012                           ; Name         Instructions Cycles
 10013                           ; simple_byte           28    15 (average)
 10014                           ;	Chosen strategy is simple_byte
 10015  001650  0A00               	xorlw	0	; case 0
 10016  001652  B4D8               	btfsc	status,2,c
 10017  001654  D774               	goto	l12566
 10018  001656  0A01               	xorlw	1	; case 1
 10019  001658  B4D8               	btfsc	status,2,c
 10020  00165A  D780               	goto	l12568
 10021  00165C  0A03               	xorlw	3	; case 2
 10022  00165E  B4D8               	btfsc	status,2,c
 10023  001660  D78C               	goto	l12570
 10024  001662  0A01               	xorlw	1	; case 3
 10025  001664  B4D8               	btfsc	status,2,c
 10026  001666  D798               	goto	l12572
 10027  001668  0A07               	xorlw	7	; case 4
 10028  00166A  B4D8               	btfsc	status,2,c
 10029  00166C  D7A4               	goto	l12574
 10030  00166E  0A01               	xorlw	1	; case 5
 10031  001670  B4D8               	btfsc	status,2,c
 10032  001672  D7B0               	goto	l12576
 10033  001674  0A03               	xorlw	3	; case 6
 10034  001676  B4D8               	btfsc	status,2,c
 10035  001678  D7BC               	goto	l12578
 10036  00167A  0A01               	xorlw	1	; case 7
 10037  00167C  B4D8               	btfsc	status,2,c
 10038  00167E  D7C8               	goto	l12580
 10039  001680  0A0F               	xorlw	15	; case 8
 10040  001682  B4D8               	btfsc	status,2,c
 10041  001684  D7D4               	goto	l12582
 10042  001686  D75B               	goto	l12566
 10043  001688                     l12588:
 10044                           
 10045                           ; BSR set to: 0
 10046                           ;MOTEapp.c: 1082: if (selectButton)
 10047  001688  0100               	movlb	0	; () banked
 10048  00168A  51DF               	movf	moteRunningProcess@selectButton& (0+255),w,b
 10049  00168C  0100               	movlb	0	; () banked
 10050  00168E  B4D8               	btfsc	status,2,c
 10051  001690  D00D               	goto	l12596
 10052                           
 10053                           ; BSR set to: 0
 10054                           ;MOTEapp.c: 1083: {
 10055                           ;MOTEapp.c: 1085: if( moteApp_GoToSleep() )
 10056  001692  EC68  F01D         	call	_moteApp_GoToSleep	;wreg free
 10057  001696  0900               	iorlw	0
 10058  001698  B4D8               	btfsc	status,2,c
 10059  00169A  D004               	goto	l12594
 10060                           
 10061                           ;MOTEapp.c: 1086: {
 10062                           ;MOTEapp.c: 1087: changeStates = 1;
 10063  00169C  0E01               	movlw	1
 10064  00169E  0100               	movlb	0	; () banked
 10065  0016A0  6FED               	movwf	moteRunningProcess@changeStates& (0+255),b
 10066                           
 10067                           ;MOTEapp.c: 1088: }
 10068  0016A2  D004               	goto	l12596
 10069  0016A4                     l12594:
 10070                           
 10071                           ;MOTEapp.c: 1089: else
 10072                           ;MOTEapp.c: 1090: {
 10073                           ;MOTEapp.c: 1091: secTicker = SleepTimeOut - 1;
 10074  0016A4  0100               	movlb	0	; () banked
 10075  0016A6  05F2               	decf	_SleepTimeOut& (0+255),w,b
 10076  0016A8  0100               	movlb	0	; () banked
 10077  0016AA  6FB3               	movwf	_secTicker& (0+255),b
 10078  0016AC                     l12596:
 10079                           
 10080                           ; BSR set to: 0
 10081                           ;MOTEapp.c: 1092: }
 10082                           ;MOTEapp.c: 1093: }
 10083                           ;MOTEapp.c: 1094: if (changeStates)
 10084  0016AC  0100               	movlb	0	; () banked
 10085  0016AE  51ED               	movf	moteRunningProcess@changeStates& (0+255),w,b
 10086  0016B0  0100               	movlb	0	; () banked
 10087  0016B2  B4D8               	btfsc	status,2,c
 10088  0016B4  0012               	return	
 10089                           
 10090                           ; BSR set to: 0
 10091                           ;MOTEapp.c: 1095: {
 10092                           ;MOTEapp.c: 1096: oled_clear();
 10093  0016B6  EC26  F02C         	call	_oled_clear	;wreg free
 10094                           
 10095                           ;MOTEapp.c: 1097: oled_putString("  Issue Uplink  ",0,0);
 10096  0016BA  0EB9               	movlw	low STR_75
 10097  0016BC  0100               	movlb	0	; () banked
 10098  0016BE  6FD0               	movwf	oled_putString@string& (0+255),b
 10099  0016C0  0E7A               	movlw	high STR_75
 10100  0016C2  0100               	movlb	0	; () banked
 10101  0016C4  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
 10102  0016C6  0E00               	movlw	0
 10103  0016C8  0100               	movlb	0	; () banked
 10104  0016CA  6FD2               	movwf	oled_putString@station_dot& (0+255),b
 10105  0016CC  0E00               	movlw	0
 10106  0016CE  0100               	movlb	0	; () banked
 10107  0016D0  6FD3               	movwf	oled_putString@start_page& (0+255),b
 10108  0016D2  EC0D  F027         	call	_oled_putString	;wreg free
 10109                           
 10110                           ;MOTEapp.c: 1098: oled_putString(" LoRaWAN Packet ",0,1);
 10111  0016D6  0E41               	movlw	low STR_76
 10112  0016D8  0100               	movlb	0	; () banked
 10113  0016DA  6FD0               	movwf	oled_putString@string& (0+255),b
 10114  0016DC  0E7B               	movlw	high STR_76
 10115  0016DE  0100               	movlb	0	; () banked
 10116  0016E0  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
 10117  0016E2  0E00               	movlw	0
 10118  0016E4  0100               	movlb	0	; () banked
 10119  0016E6  6FD2               	movwf	oled_putString@station_dot& (0+255),b
 10120  0016E8  0E01               	movlw	1
 10121  0016EA  0100               	movlb	0	; () banked
 10122  0016EC  6FD3               	movwf	oled_putString@start_page& (0+255),b
 10123  0016EE  EC0D  F027         	call	_oled_putString	;wreg free
 10124                           
 10125                           ;MOTEapp.c: 1099: oled_putString("(NAV)    (SEL) ",0,3);
 10126  0016F2  0E5E               	movlw	low STR_73
 10127  0016F4  0100               	movlb	0	; () banked
 10128  0016F6  6FD0               	movwf	oled_putString@string& (0+255),b
 10129  0016F8  0E7C               	movlw	high STR_73
 10130  0016FA  0100               	movlb	0	; () banked
 10131  0016FC  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
 10132  0016FE  0E00               	movlw	0
 10133  001700  0100               	movlb	0	; () banked
 10134  001702  6FD2               	movwf	oled_putString@station_dot& (0+255),b
 10135  001704  0E03               	movlw	3
 10136  001706  0100               	movlb	0	; () banked
 10137  001708  6FD3               	movwf	oled_putString@start_page& (0+255),b
 10138  00170A  EC0D  F027         	call	_oled_putString	;wreg free
 10139                           
 10140                           ;MOTEapp.c: 1100: runningState = runningUplink;
 10141  00170E  0E06               	movlw	6
 10142  001710  0100               	movlb	0	; () banked
 10143  001712  6FB2               	movwf	_runningState& (0+255),b
 10144                           
 10145                           ; BSR set to: 0
 10146                           ;MOTEapp.c: 1103: }
 10147                           
 10148                           ; BSR set to: 0
 10149                           ;MOTEapp.c: 1101: }
 10150                           ;MOTEapp.c: 1102: break;
 10151  001714  0012               	return	
 10152  001716                     l12610:
 10153                           
 10154                           ; BSR set to: 0
 10155  001716  0100               	movlb	0	; () banked
 10156  001718  51B2               	movf	_runningState& (0+255),w,b
 10157                           
 10158                           ; Switch size 1, requested type "space"
 10159                           ; Number of cases is 14, Range of values is 0 to 17
 10160                           ; switch strategies available:
 10161                           ; Name         Instructions Cycles
 10162                           ; simple_byte           43    22 (average)
 10163                           ;	Chosen strategy is simple_byte
 10164  00171A  0A00               	xorlw	0	; case 0
 10165  00171C  B4D8               	btfsc	status,2,c
 10166  00171E  EF9F  F001         	goto	l12040
 10167  001722  0A01               	xorlw	1	; case 1
 10168  001724  B4D8               	btfsc	status,2,c
 10169  001726  EF65  F005         	goto	l12268
 10170  00172A  0A03               	xorlw	3	; case 2
 10171  00172C  B4D8               	btfsc	status,2,c
 10172  00172E  D507               	goto	l12456
 10173  001730  0A01               	xorlw	1	; case 3
 10174  001732  B4D8               	btfsc	status,2,c
 10175  001734  D6C0               	goto	l12540
 10176  001736  0A05               	xorlw	5	; case 6
 10177  001738  B4D8               	btfsc	status,2,c
 10178  00173A  EFD9  F001         	goto	l12054
 10179  00173E  0A01               	xorlw	1	; case 7
 10180  001740  B4D8               	btfsc	status,2,c
 10181  001742  EF81  F002         	goto	l12104
 10182  001746  0A0F               	xorlw	15	; case 8
 10183  001748  B4D8               	btfsc	status,2,c
 10184  00174A  EF08  F003         	goto	l12134
 10185  00174E  0A02               	xorlw	2	; case 10
 10186  001750  B4D8               	btfsc	status,2,c
 10187  001752  EF84  F004         	goto	l12214
 10188  001756  0A01               	xorlw	1	; case 11
 10189  001758  B4D8               	btfsc	status,2,c
 10190  00175A  EF2B  F005         	goto	l12254
 10191  00175E  0A07               	xorlw	7	; case 12
 10192  001760  B4D8               	btfsc	status,2,c
 10193  001762  EF3F  F006         	goto	l12318
 10194  001766  0A01               	xorlw	1	; case 13
 10195  001768  B4D8               	btfsc	status,2,c
 10196  00176A  EF5E  F007         	goto	l12370
 10197  00176E  0A03               	xorlw	3	; case 14
 10198  001770  B4D8               	btfsc	status,2,c
 10199  001772  EFEB  F005         	goto	l12296
 10200  001776  0A01               	xorlw	1	; case 15
 10201  001778  B4D8               	btfsc	status,2,c
 10202  00177A  D533               	goto	l12472
 10203  00177C  0A1E               	xorlw	30	; case 17
 10204  00177E  B4D8               	btfsc	status,2,c
 10205  001780  D783               	goto	l12588
 10206  001782  EF9E  F001         	goto	l487
 10207  001786                     __end_of_moteRunningProcess:
 10208                           	opt stack 0
 10209                           tblptru	equ	0xFF8
 10210                           tblptrh	equ	0xFF7
 10211                           tblptrl	equ	0xFF6
 10212                           tablat	equ	0xFF5
 10213                           prodh	equ	0xFF4
 10214                           prodl	equ	0xFF3
 10215                           intcon	equ	0xFF2
 10216                           postinc0	equ	0xFEE
 10217                           wreg	equ	0xFE8
 10218                           indf1	equ	0xFE7
 10219                           postdec1	equ	0xFE5
 10220                           fsr1h	equ	0xFE2
 10221                           fsr1l	equ	0xFE1
 10222                           indf2	equ	0xFDF
 10223                           fsr2h	equ	0xFDA
 10224                           fsr2l	equ	0xFD9
 10225                           status	equ	0xFD8
 10226                           
 10227 ;; *************** function _sendDataCommand *****************
 10228 ;; Defined at:
 10229 ;;		line 1249 in file "../Includes/Board/MOTEapp.c"
 10230 ;; Parameters:    Size  Location     Type
 10231 ;;  string          2    1[BANK0 ] PTR const unsigned char 
 10232 ;;		 -> STR_85(12), STR_84(14), STR_74(14), 
 10233 ;;  appData         2    3[BANK0 ] PTR unsigned char 
 10234 ;;		 -> dataBuffer(16), 
 10235 ;;  dataLength      1    5[BANK0 ] unsigned char 
 10236 ;; Auto vars:     Size  Location     Type
 10237 ;;  byteCount       1    8[BANK0 ] unsigned char 
 10238 ;;  byteCount       1    7[BANK0 ] unsigned char 
 10239 ;; Return value:  Size  Location     Type
 10240 ;;		None               void
 10241 ;; Registers used:
 10242 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10243 ;; Tracked objects:
 10244 ;;		On entry : 0/0
 10245 ;;		On exit  : 0/0
 10246 ;;		Unchanged: 0/0
 10247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10248 ;;      Params:         0       5       0       0       0       0       0       0       0
 10249 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10250 ;;      Temps:          0       1       0       0       0       0       0       0       0
 10251 ;;      Totals:         0       8       0       0       0       0       0       0       0
 10252 ;;Total ram usage:        8 bytes
 10253 ;; Hardware stack levels used:    1
 10254 ;; Hardware stack levels required when called:   13
 10255 ;; This function calls:
 10256 ;;		_EUSART_Write
 10257 ;;		_EndLine
 10258 ;;		_hexToStr
 10259 ;; This function is called by:
 10260 ;;		_moteRunningProcess
 10261 ;; This function uses a non-reentrant model
 10262 ;;
 10263                           
 10264                           	psect	text10
 10265  003C88                     __ptext10:
 10266                           	opt stack 0
 10267  003C88                     _sendDataCommand:
 10268                           	opt stack 15
 10269                           
 10270                           ;MOTEapp.c: 1252: while (*string)
 10271                           
 10272                           ;incstack = 0
 10273  003C88  D00B               	goto	l11180
 10274  003C8A                     l11176:
 10275                           
 10276                           ;MOTEapp.c: 1253: {
 10277                           ;MOTEapp.c: 1254: EUSART_Write(*string++);
 10278  003C8A  C0C4  FFF6         	movff	sendDataCommand@string,tblptrl
 10279  003C8E  C0C5  FFF7         	movff	sendDataCommand@string+1,tblptrh
 10280  003C92                     	if	0	;tblptru may be non-zero
 10281  003C92                     	endif
 10282  003C92                     	if	0	;tblptru may be non-zero
 10283  003C92                     	endif
 10284  003C92  0008               	tblrd		*
 10285  003C94  50F5               	movf	tablat,w,c
 10286  003C96  ECDE  F029         	call	_EUSART_Write
 10287  003C9A  0100               	movlb	0	; () banked
 10288  003C9C  4BC4               	infsnz	sendDataCommand@string& (0+255),f,b
 10289  003C9E  2BC5               	incf	(sendDataCommand@string+1)& (0+255),f,b
 10290  003CA0                     l11180:
 10291  003CA0  C0C4  FFF6         	movff	sendDataCommand@string,tblptrl
 10292  003CA4  C0C5  FFF7         	movff	sendDataCommand@string+1,tblptrh
 10293  003CA8                     	if	0	;tblptru may be non-zero
 10294  003CA8                     	endif
 10295  003CA8                     	if	0	;tblptru may be non-zero
 10296  003CA8                     	endif
 10297  003CA8  0008               	tblrd		*
 10298  003CAA  50F5               	movf	tablat,w,c
 10299  003CAC  0900               	iorlw	0
 10300  003CAE  A4D8               	btfss	status,2,c
 10301  003CB0  D7EC               	goto	l11176
 10302                           
 10303                           ;MOTEapp.c: 1255: }
 10304                           ;MOTEapp.c: 1257: for (uint8_t byteCount = 0; byteCount < 3; byteCount++)
 10305  003CB2  0E00               	movlw	0
 10306  003CB4  0100               	movlb	0	; () banked
 10307  003CB6  6FCA               	movwf	sendDataCommand@byteCount& (0+255),b
 10308  003CB8                     l11184:
 10309                           
 10310                           ; BSR set to: 0
 10311  003CB8  0E02               	movlw	2
 10312  003CBA  0100               	movlb	0	; () banked
 10313  003CBC  65CA               	cpfsgt	sendDataCommand@byteCount& (0+255),b
 10314  003CBE  D001               	goto	l11188
 10315  003CC0  D011               	goto	l11194
 10316  003CC2                     l11188:
 10317                           
 10318                           ; BSR set to: 0
 10319                           ;MOTEapp.c: 1258: {
 10320                           ;MOTEapp.c: 1259: EUSART_Write(appData[byteCount]);
 10321  003CC2  0100               	movlb	0	; () banked
 10322  003CC4  51CA               	movf	sendDataCommand@byteCount& (0+255),w,b
 10323  003CC6  0D01               	mullw	1
 10324  003CC8  50F3               	movf	prodl,w,c
 10325  003CCA  0100               	movlb	0	; () banked
 10326  003CCC  25C6               	addwf	sendDataCommand@appData& (0+255),w,b
 10327  003CCE  6ED9               	movwf	fsr2l,c
 10328  003CD0  50F4               	movf	prodh,w,c
 10329  003CD2  0100               	movlb	0	; () banked
 10330  003CD4  21C7               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
 10331  003CD6  6EDA               	movwf	fsr2h,c
 10332  003CD8  50DF               	movf	indf2,w,c
 10333  003CDA  ECDE  F029         	call	_EUSART_Write
 10334  003CDE  0100               	movlb	0	; () banked
 10335  003CE0  2BCA               	incf	sendDataCommand@byteCount& (0+255),f,b
 10336  003CE2  D7EA               	goto	l11184
 10337  003CE4                     l11194:
 10338                           
 10339                           ; BSR set to: 0
 10340                           ;MOTEapp.c: 1260: }
 10341                           ;MOTEapp.c: 1262: EUSART_Write(appData[3]);
 10342  003CE4  0100               	movlb	0	; () banked
 10343  003CE6  EE20 F003          	lfsr	2,3
 10344  003CEA  51C6               	movf	sendDataCommand@appData& (0+255),w,b
 10345  003CEC  26D9               	addwf	fsr2l,f,c
 10346  003CEE  51C7               	movf	(sendDataCommand@appData+1)& (0+255),w,b
 10347  003CF0  22DA               	addwfc	fsr2h,f,c
 10348  003CF2  50DF               	movf	indf2,w,c
 10349  003CF4  ECDE  F029         	call	_EUSART_Write
 10350                           
 10351                           ;MOTEapp.c: 1264: for (uint8_t byteCount = 4; byteCount < dataLength; byteCount++)
 10352  003CF8  0E04               	movlw	4
 10353  003CFA  0100               	movlb	0	; () banked
 10354  003CFC  6FCB               	movwf	sendDataCommand@byteCount_1782& (0+255),b
 10355  003CFE  D028               	goto	l11202
 10356  003D00                     l11198:
 10357                           
 10358                           ; BSR set to: 0
 10359                           ;MOTEapp.c: 1265: {
 10360                           ;MOTEapp.c: 1266: EUSART_Write(hexToStr(appData[byteCount] >> 4));
 10361  003D00  0100               	movlb	0	; () banked
 10362  003D02  51CB               	movf	sendDataCommand@byteCount_1782& (0+255),w,b
 10363  003D04  0D01               	mullw	1
 10364  003D06  50F3               	movf	prodl,w,c
 10365  003D08  0100               	movlb	0	; () banked
 10366  003D0A  25C6               	addwf	sendDataCommand@appData& (0+255),w,b
 10367  003D0C  6ED9               	movwf	fsr2l,c
 10368  003D0E  50F4               	movf	prodh,w,c
 10369  003D10  0100               	movlb	0	; () banked
 10370  003D12  21C7               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
 10371  003D14  6EDA               	movwf	fsr2h,c
 10372  003D16  50DF               	movf	indf2,w,c
 10373  003D18  0100               	movlb	0	; () banked
 10374  003D1A  6FC9               	movwf	??_sendDataCommand& (0+255),b
 10375  003D1C  0100               	movlb	0	; () banked
 10376  003D1E  39C9               	swapf	??_sendDataCommand& (0+255),w,b
 10377  003D20  0B0F               	andlw	15
 10378  003D22  EC56  F02A         	call	_hexToStr
 10379  003D26  ECDE  F029         	call	_EUSART_Write
 10380                           
 10381                           ;MOTEapp.c: 1267: EUSART_Write(hexToStr(appData[byteCount] & 0x0F));
 10382  003D2A  0100               	movlb	0	; () banked
 10383  003D2C  51CB               	movf	sendDataCommand@byteCount_1782& (0+255),w,b
 10384  003D2E  0D01               	mullw	1
 10385  003D30  50F3               	movf	prodl,w,c
 10386  003D32  0100               	movlb	0	; () banked
 10387  003D34  25C6               	addwf	sendDataCommand@appData& (0+255),w,b
 10388  003D36  6ED9               	movwf	fsr2l,c
 10389  003D38  50F4               	movf	prodh,w,c
 10390  003D3A  0100               	movlb	0	; () banked
 10391  003D3C  21C7               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
 10392  003D3E  6EDA               	movwf	fsr2h,c
 10393  003D40  50DF               	movf	indf2,w,c
 10394  003D42  0B0F               	andlw	15
 10395  003D44  EC56  F02A         	call	_hexToStr
 10396  003D48  ECDE  F029         	call	_EUSART_Write
 10397  003D4C  0100               	movlb	0	; () banked
 10398  003D4E  2BCB               	incf	sendDataCommand@byteCount_1782& (0+255),f,b
 10399  003D50                     l11202:
 10400                           
 10401                           ; BSR set to: 0
 10402  003D50  0100               	movlb	0	; () banked
 10403  003D52  51C8               	movf	sendDataCommand@dataLength& (0+255),w,b
 10404  003D54  0100               	movlb	0	; () banked
 10405  003D56  5DCB               	subwf	sendDataCommand@byteCount_1782& (0+255),w,b
 10406  003D58  A0D8               	btfss	status,0,c
 10407  003D5A  D7D2               	goto	l11198
 10408                           
 10409                           ; BSR set to: 0
 10410                           ;MOTEapp.c: 1268: }
 10411                           ;MOTEapp.c: 1269: EndLine();
 10412                           
 10413                           ; BSR set to: 0
 10414  003D5C  ECAA  F02C         	call	_EndLine	;wreg free
 10415  003D60  0012               	return		;funcret
 10416  003D62                     __end_of_sendDataCommand:
 10417                           	opt stack 0
 10418                           tblptru	equ	0xFF8
 10419                           tblptrh	equ	0xFF7
 10420                           tblptrl	equ	0xFF6
 10421                           tablat	equ	0xFF5
 10422                           prodh	equ	0xFF4
 10423                           prodl	equ	0xFF3
 10424                           intcon	equ	0xFF2
 10425                           postinc0	equ	0xFEE
 10426                           wreg	equ	0xFE8
 10427                           indf1	equ	0xFE7
 10428                           postdec1	equ	0xFE5
 10429                           fsr1h	equ	0xFE2
 10430                           fsr1l	equ	0xFE1
 10431                           indf2	equ	0xFDF
 10432                           fsr2h	equ	0xFDA
 10433                           fsr2l	equ	0xFD9
 10434                           status	equ	0xFD8
 10435                           
 10436 ;; *************** function _hexToStr *****************
 10437 ;; Defined at:
 10438 ;;		line 1281 in file "../Includes/Board/MOTEapp.c"
 10439 ;; Parameters:    Size  Location     Type
 10440 ;;  character       1    wreg     unsigned char 
 10441 ;; Auto vars:     Size  Location     Type
 10442 ;;  character       1    0[BANK0 ] unsigned char 
 10443 ;; Return value:  Size  Location     Type
 10444 ;;                  1    wreg      unsigned char 
 10445 ;; Registers used:
 10446 ;;		wreg, status,2, status,0
 10447 ;; Tracked objects:
 10448 ;;		On entry : 0/0
 10449 ;;		On exit  : 0/0
 10450 ;;		Unchanged: 0/0
 10451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10452 ;;      Params:         0       0       0       0       0       0       0       0       0
 10453 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10454 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10455 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10456 ;;Total ram usage:        1 bytes
 10457 ;; Hardware stack levels used:    1
 10458 ;; Hardware stack levels required when called:   11
 10459 ;; This function calls:
 10460 ;;		Nothing
 10461 ;; This function is called by:
 10462 ;;		_sendDataCommand
 10463 ;; This function uses a non-reentrant model
 10464 ;;
 10465                           
 10466                           	psect	text11
 10467  0054AC                     __ptext11:
 10468                           	opt stack 0
 10469  0054AC                     _hexToStr:
 10470                           	opt stack 16
 10471                           
 10472                           ;incstack = 0
 10473                           ;hexToStr@character stored from wreg
 10474  0054AC  0100               	movlb	0	; () banked
 10475  0054AE  6FC3               	movwf	hexToStr@character& (0+255),b
 10476                           
 10477                           ;MOTEapp.c: 1284: character = character & 0x0F;
 10478  0054B0  0100               	movlb	0	; () banked
 10479  0054B2  51C3               	movf	hexToStr@character& (0+255),w,b
 10480  0054B4  0B0F               	andlw	15
 10481  0054B6  0100               	movlb	0	; () banked
 10482  0054B8  6FC3               	movwf	hexToStr@character& (0+255),b
 10483                           
 10484                           ;MOTEapp.c: 1286: if (character < 0x0A)
 10485  0054BA  0E0A               	movlw	10
 10486  0054BC  0100               	movlb	0	; () banked
 10487  0054BE  61C3               	cpfslt	hexToStr@character& (0+255),b
 10488  0054C0  D004               	goto	l10826
 10489                           
 10490                           ; BSR set to: 0
 10491                           ;MOTEapp.c: 1287: {
 10492                           ;MOTEapp.c: 1288: return character + '0';
 10493  0054C2  0100               	movlb	0	; () banked
 10494  0054C4  51C3               	movf	hexToStr@character& (0+255),w,b
 10495  0054C6  0F30               	addlw	48
 10496                           
 10497                           ; BSR set to: 0
 10498                           ;MOTEapp.c: 1289: }
 10499                           
 10500                           ; BSR set to: 0
 10501  0054C8  0012               	return	
 10502  0054CA                     l10826:
 10503                           
 10504                           ; BSR set to: 0
 10505                           ;MOTEapp.c: 1290: else if ( (character >= 0x0A) && (character <= 0x0F) )
 10506  0054CA  0E09               	movlw	9
 10507  0054CC  0100               	movlb	0	; () banked
 10508  0054CE  65C3               	cpfsgt	hexToStr@character& (0+255),b
 10509  0054D0  D008               	goto	l10836
 10510                           
 10511                           ; BSR set to: 0
 10512  0054D2  0E10               	movlw	16
 10513  0054D4  0100               	movlb	0	; () banked
 10514  0054D6  61C3               	cpfslt	hexToStr@character& (0+255),b
 10515  0054D8  D004               	goto	l10836
 10516                           
 10517                           ; BSR set to: 0
 10518                           ;MOTEapp.c: 1291: {
 10519                           ;MOTEapp.c: 1292: return character + '0' + 7;
 10520  0054DA  0100               	movlb	0	; () banked
 10521  0054DC  51C3               	movf	hexToStr@character& (0+255),w,b
 10522  0054DE  0F37               	addlw	55
 10523                           
 10524                           ; BSR set to: 0
 10525                           ;MOTEapp.c: 1293: }
 10526                           
 10527                           ; BSR set to: 0
 10528  0054E0  0012               	return	
 10529  0054E2                     l10836:
 10530                           
 10531                           ; BSR set to: 0
 10532                           ;MOTEapp.c: 1294: else
 10533                           ;MOTEapp.c: 1295: {
 10534                           ;MOTEapp.c: 1296: return 0;
 10535  0054E2  0E00               	movlw	0
 10536                           
 10537                           ; BSR set to: 0
 10538                           
 10539                           ; BSR set to: 0
 10540  0054E4  0012               	return	
 10541  0054E6                     __end_of_hexToStr:
 10542                           	opt stack 0
 10543                           tblptru	equ	0xFF8
 10544                           tblptrh	equ	0xFF7
 10545                           tblptrl	equ	0xFF6
 10546                           tablat	equ	0xFF5
 10547                           prodh	equ	0xFF4
 10548                           prodl	equ	0xFF3
 10549                           intcon	equ	0xFF2
 10550                           postinc0	equ	0xFEE
 10551                           wreg	equ	0xFE8
 10552                           indf1	equ	0xFE7
 10553                           postdec1	equ	0xFE5
 10554                           fsr1h	equ	0xFE2
 10555                           fsr1l	equ	0xFE1
 10556                           indf2	equ	0xFDF
 10557                           fsr2h	equ	0xFDA
 10558                           fsr2l	equ	0xFD9
 10559                           status	equ	0xFD8
 10560                           
 10561 ;; *************** function _oled_putUint8 *****************
 10562 ;; Defined at:
 10563 ;;		line 256 in file "../Includes/Drivers/SSD1306oLED.c"
 10564 ;; Parameters:    Size  Location     Type
 10565 ;;  number          1    wreg     unsigned char 
 10566 ;;  station_dot     1   18[BANK0 ] unsigned char 
 10567 ;;  start_page      1   19[BANK0 ] unsigned char 
 10568 ;; Auto vars:     Size  Location     Type
 10569 ;;  number          1   20[BANK0 ] unsigned char 
 10570 ;;  numData         6   21[BANK0 ] struct .
 10571 ;; Return value:  Size  Location     Type
 10572 ;;		None               void
 10573 ;; Registers used:
 10574 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10575 ;; Tracked objects:
 10576 ;;		On entry : 0/0
 10577 ;;		On exit  : 0/0
 10578 ;;		Unchanged: 0/0
 10579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10580 ;;      Params:         0       2       0       0       0       0       0       0       0
 10581 ;;      Locals:         0       7       0       0       0       0       0       0       0
 10582 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10583 ;;      Totals:         0       9       0       0       0       0       0       0       0
 10584 ;;Total ram usage:        9 bytes
 10585 ;; Hardware stack levels used:    1
 10586 ;; Hardware stack levels required when called:   16
 10587 ;; This function calls:
 10588 ;;		___awmod
 10589 ;;		___lbdiv
 10590 ;;		_oled_putString
 10591 ;; This function is called by:
 10592 ;;		_test_adc
 10593 ;;		_moteRunningProcess
 10594 ;; This function uses a non-reentrant model
 10595 ;;
 10596                           
 10597                           	psect	text12
 10598  004724                     __ptext12:
 10599                           	opt stack 0
 10600  004724                     _oled_putUint8:
 10601                           	opt stack 12
 10602                           
 10603                           ; BSR set to: 0
 10604                           ;incstack = 0
 10605                           ;oled_putUint8@number stored from wreg
 10606  004724  0100               	movlb	0	; () banked
 10607  004726  6FD7               	movwf	oled_putUint8@number& (0+255),b
 10608                           
 10609                           ;SSD1306oLED.c: 258: display_data_t numData;
 10610                           ;SSD1306oLED.c: 259: numData.d2 = '0' + (number % 10);
 10611  004728  C0D7  F0C3         	movff	oled_putUint8@number,___awmod@dividend
 10612  00472C  0100               	movlb	0	; () banked
 10613  00472E  6BC4               	clrf	(___awmod@dividend+1)& (0+255),b
 10614  004730  0E00               	movlw	0
 10615  004732  0100               	movlb	0	; () banked
 10616  004734  6FC6               	movwf	(___awmod@divisor+1)& (0+255),b
 10617  004736  0E0A               	movlw	10
 10618  004738  6FC5               	movwf	___awmod@divisor& (0+255),b
 10619  00473A  ECE6  F023         	call	___awmod	;wreg free
 10620  00473E  0100               	movlb	0	; () banked
 10621  004740  51C3               	movf	?___awmod& (0+255),w,b
 10622  004742  0F30               	addlw	48
 10623  004744  0100               	movlb	0	; () banked
 10624  004746  6FDA               	movwf	(oled_putUint8@numData+2)& (0+255),b
 10625                           
 10626                           ;SSD1306oLED.c: 260: number /= 10;
 10627  004748  0E0A               	movlw	10
 10628  00474A  0100               	movlb	0	; () banked
 10629  00474C  6FC3               	movwf	___lbdiv@divisor& (0+255),b
 10630  00474E  0100               	movlb	0	; () banked
 10631  004750  51D7               	movf	oled_putUint8@number& (0+255),w,b
 10632  004752  EC06  F028         	call	___lbdiv
 10633  004756  0100               	movlb	0	; () banked
 10634  004758  6FD7               	movwf	oled_putUint8@number& (0+255),b
 10635                           
 10636                           ;SSD1306oLED.c: 261: numData.d1 = '0' + (number % 10);
 10637  00475A  C0D7  F0C3         	movff	oled_putUint8@number,___awmod@dividend
 10638  00475E  0100               	movlb	0	; () banked
 10639  004760  6BC4               	clrf	(___awmod@dividend+1)& (0+255),b
 10640  004762  0E00               	movlw	0
 10641  004764  0100               	movlb	0	; () banked
 10642  004766  6FC6               	movwf	(___awmod@divisor+1)& (0+255),b
 10643  004768  0E0A               	movlw	10
 10644  00476A  6FC5               	movwf	___awmod@divisor& (0+255),b
 10645  00476C  ECE6  F023         	call	___awmod	;wreg free
 10646  004770  0100               	movlb	0	; () banked
 10647  004772  51C3               	movf	?___awmod& (0+255),w,b
 10648  004774  0F30               	addlw	48
 10649  004776  0100               	movlb	0	; () banked
 10650  004778  6FD9               	movwf	(oled_putUint8@numData+1)& (0+255),b
 10651                           
 10652                           ;SSD1306oLED.c: 262: number /= 10;
 10653  00477A  0E0A               	movlw	10
 10654  00477C  0100               	movlb	0	; () banked
 10655  00477E  6FC3               	movwf	___lbdiv@divisor& (0+255),b
 10656  004780  0100               	movlb	0	; () banked
 10657  004782  51D7               	movf	oled_putUint8@number& (0+255),w,b
 10658  004784  EC06  F028         	call	___lbdiv
 10659  004788  0100               	movlb	0	; () banked
 10660  00478A  6FD7               	movwf	oled_putUint8@number& (0+255),b
 10661                           
 10662                           ;SSD1306oLED.c: 263: numData.d0 = '0' + (number % 10);
 10663  00478C  C0D7  F0C3         	movff	oled_putUint8@number,___awmod@dividend
 10664  004790  0100               	movlb	0	; () banked
 10665  004792  6BC4               	clrf	(___awmod@dividend+1)& (0+255),b
 10666  004794  0E00               	movlw	0
 10667  004796  0100               	movlb	0	; () banked
 10668  004798  6FC6               	movwf	(___awmod@divisor+1)& (0+255),b
 10669  00479A  0E0A               	movlw	10
 10670  00479C  6FC5               	movwf	___awmod@divisor& (0+255),b
 10671  00479E  ECE6  F023         	call	___awmod	;wreg free
 10672  0047A2  0100               	movlb	0	; () banked
 10673  0047A4  51C3               	movf	?___awmod& (0+255),w,b
 10674  0047A6  0F30               	addlw	48
 10675  0047A8  0100               	movlb	0	; () banked
 10676  0047AA  6FD8               	movwf	oled_putUint8@numData& (0+255),b
 10677                           
 10678                           ; BSR set to: 0
 10679                           ;SSD1306oLED.c: 265: numData.b[3]=0;
 10680  0047AC  0E00               	movlw	0
 10681  0047AE  0100               	movlb	0	; () banked
 10682  0047B0  6FDB               	movwf	(oled_putUint8@numData+3)& (0+255),b
 10683                           
 10684                           ; BSR set to: 0
 10685                           ;SSD1306oLED.c: 267: oled_putString(numData.b,station_dot,start_page);
 10686  0047B2  0ED8               	movlw	low oled_putUint8@numData
 10687  0047B4  0100               	movlb	0	; () banked
 10688  0047B6  6FD0               	movwf	oled_putString@string& (0+255),b
 10689  0047B8  0E00               	movlw	high oled_putUint8@numData
 10690  0047BA  0100               	movlb	0	; () banked
 10691  0047BC  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
 10692  0047BE  C0D5  F0D2         	movff	oled_putUint8@station_dot,oled_putString@station_dot
 10693  0047C2  C0D6  F0D3         	movff	oled_putUint8@start_page,oled_putString@start_page
 10694  0047C6  EC0D  F027         	call	_oled_putString	;wreg free
 10695  0047CA  0012               	return		;funcret
 10696  0047CC                     __end_of_oled_putUint8:
 10697                           	opt stack 0
 10698                           tblptru	equ	0xFF8
 10699                           tblptrh	equ	0xFF7
 10700                           tblptrl	equ	0xFF6
 10701                           tablat	equ	0xFF5
 10702                           prodh	equ	0xFF4
 10703                           prodl	equ	0xFF3
 10704                           intcon	equ	0xFF2
 10705                           postinc0	equ	0xFEE
 10706                           wreg	equ	0xFE8
 10707                           indf1	equ	0xFE7
 10708                           postdec1	equ	0xFE5
 10709                           fsr1h	equ	0xFE2
 10710                           fsr1l	equ	0xFE1
 10711                           indf2	equ	0xFDF
 10712                           fsr2h	equ	0xFDA
 10713                           fsr2l	equ	0xFD9
 10714                           status	equ	0xFD8
 10715                           
 10716 ;; *************** function _oled_putUint16 *****************
 10717 ;; Defined at:
 10718 ;;		line 270 in file "../Includes/Drivers/SSD1306oLED.c"
 10719 ;; Parameters:    Size  Location     Type
 10720 ;;  number          2   18[BANK0 ] unsigned int 
 10721 ;;  station_dot     1   20[BANK0 ] unsigned char 
 10722 ;;  start_page      1   21[BANK0 ] unsigned char 
 10723 ;; Auto vars:     Size  Location     Type
 10724 ;;  numData         6   22[BANK0 ] struct .
 10725 ;; Return value:  Size  Location     Type
 10726 ;;		None               void
 10727 ;; Registers used:
 10728 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10729 ;; Tracked objects:
 10730 ;;		On entry : 0/0
 10731 ;;		On exit  : 0/0
 10732 ;;		Unchanged: 0/0
 10733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10734 ;;      Params:         0       4       0       0       0       0       0       0       0
 10735 ;;      Locals:         0       6       0       0       0       0       0       0       0
 10736 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10737 ;;      Totals:         0      10       0       0       0       0       0       0       0
 10738 ;;Total ram usage:       10 bytes
 10739 ;; Hardware stack levels used:    1
 10740 ;; Hardware stack levels required when called:   16
 10741 ;; This function calls:
 10742 ;;		___lwdiv
 10743 ;;		___lwmod
 10744 ;;		_oled_putString
 10745 ;; This function is called by:
 10746 ;;		_test_adc
 10747 ;;		_moteRunningProcess
 10748 ;;		_ReadAndProcessDHT22
 10749 ;; This function uses a non-reentrant model
 10750 ;;
 10751                           
 10752                           	psect	text13
 10753  002A8C                     __ptext13:
 10754                           	opt stack 0
 10755  002A8C                     _oled_putUint16:
 10756                           	opt stack 12
 10757                           
 10758                           ;SSD1306oLED.c: 272: display_data_t numData;
 10759                           ;SSD1306oLED.c: 273: numData.d4 = '0' + (number % 10);
 10760                           
 10761                           ;incstack = 0
 10762  002A8C  C0D5  F0C3         	movff	oled_putUint16@number,___lwmod@dividend
 10763  002A90  C0D6  F0C4         	movff	oled_putUint16@number+1,___lwmod@dividend+1
 10764  002A94  0E00               	movlw	0
 10765  002A96  0100               	movlb	0	; () banked
 10766  002A98  6FC6               	movwf	(___lwmod@divisor+1)& (0+255),b
 10767  002A9A  0E0A               	movlw	10
 10768  002A9C  6FC5               	movwf	___lwmod@divisor& (0+255),b
 10769  002A9E  EC76  F027         	call	___lwmod	;wreg free
 10770  002AA2  0100               	movlb	0	; () banked
 10771  002AA4  51C3               	movf	?___lwmod& (0+255),w,b
 10772  002AA6  0F30               	addlw	48
 10773  002AA8  0100               	movlb	0	; () banked
 10774  002AAA  6FDD               	movwf	(oled_putUint16@numData+4)& (0+255),b
 10775                           
 10776                           ;SSD1306oLED.c: 274: number /= 10;
 10777  002AAC  C0D5  F0C3         	movff	oled_putUint16@number,___lwdiv@dividend
 10778  002AB0  C0D6  F0C4         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
 10779  002AB4  0E00               	movlw	0
 10780  002AB6  0100               	movlb	0	; () banked
 10781  002AB8  6FC6               	movwf	(___lwdiv@divisor+1)& (0+255),b
 10782  002ABA  0E0A               	movlw	10
 10783  002ABC  6FC5               	movwf	___lwdiv@divisor& (0+255),b
 10784  002ABE  EC29  F026         	call	___lwdiv	;wreg free
 10785  002AC2  C0C3  F0D5         	movff	?___lwdiv,oled_putUint16@number
 10786  002AC6  C0C4  F0D6         	movff	?___lwdiv+1,oled_putUint16@number+1
 10787                           
 10788                           ;SSD1306oLED.c: 275: numData.d3 = '0' + (number % 10);
 10789  002ACA  C0D5  F0C3         	movff	oled_putUint16@number,___lwmod@dividend
 10790  002ACE  C0D6  F0C4         	movff	oled_putUint16@number+1,___lwmod@dividend+1
 10791  002AD2  0E00               	movlw	0
 10792  002AD4  0100               	movlb	0	; () banked
 10793  002AD6  6FC6               	movwf	(___lwmod@divisor+1)& (0+255),b
 10794  002AD8  0E0A               	movlw	10
 10795  002ADA  6FC5               	movwf	___lwmod@divisor& (0+255),b
 10796  002ADC  EC76  F027         	call	___lwmod	;wreg free
 10797  002AE0  0100               	movlb	0	; () banked
 10798  002AE2  51C3               	movf	?___lwmod& (0+255),w,b
 10799  002AE4  0F30               	addlw	48
 10800  002AE6  0100               	movlb	0	; () banked
 10801  002AE8  6FDC               	movwf	(oled_putUint16@numData+3)& (0+255),b
 10802                           
 10803                           ;SSD1306oLED.c: 276: number /= 10;
 10804  002AEA  C0D5  F0C3         	movff	oled_putUint16@number,___lwdiv@dividend
 10805  002AEE  C0D6  F0C4         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
 10806  002AF2  0E00               	movlw	0
 10807  002AF4  0100               	movlb	0	; () banked
 10808  002AF6  6FC6               	movwf	(___lwdiv@divisor+1)& (0+255),b
 10809  002AF8  0E0A               	movlw	10
 10810  002AFA  6FC5               	movwf	___lwdiv@divisor& (0+255),b
 10811  002AFC  EC29  F026         	call	___lwdiv	;wreg free
 10812  002B00  C0C3  F0D5         	movff	?___lwdiv,oled_putUint16@number
 10813  002B04  C0C4  F0D6         	movff	?___lwdiv+1,oled_putUint16@number+1
 10814                           
 10815                           ;SSD1306oLED.c: 277: numData.d2 = '0' + (number % 10);
 10816  002B08  C0D5  F0C3         	movff	oled_putUint16@number,___lwmod@dividend
 10817  002B0C  C0D6  F0C4         	movff	oled_putUint16@number+1,___lwmod@dividend+1
 10818  002B10  0E00               	movlw	0
 10819  002B12  0100               	movlb	0	; () banked
 10820  002B14  6FC6               	movwf	(___lwmod@divisor+1)& (0+255),b
 10821  002B16  0E0A               	movlw	10
 10822  002B18  6FC5               	movwf	___lwmod@divisor& (0+255),b
 10823  002B1A  EC76  F027         	call	___lwmod	;wreg free
 10824  002B1E  0100               	movlb	0	; () banked
 10825  002B20  51C3               	movf	?___lwmod& (0+255),w,b
 10826  002B22  0F30               	addlw	48
 10827  002B24  0100               	movlb	0	; () banked
 10828  002B26  6FDB               	movwf	(oled_putUint16@numData+2)& (0+255),b
 10829                           
 10830                           ;SSD1306oLED.c: 278: number /= 10;
 10831  002B28  C0D5  F0C3         	movff	oled_putUint16@number,___lwdiv@dividend
 10832  002B2C  C0D6  F0C4         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
 10833  002B30  0E00               	movlw	0
 10834  002B32  0100               	movlb	0	; () banked
 10835  002B34  6FC6               	movwf	(___lwdiv@divisor+1)& (0+255),b
 10836  002B36  0E0A               	movlw	10
 10837  002B38  6FC5               	movwf	___lwdiv@divisor& (0+255),b
 10838  002B3A  EC29  F026         	call	___lwdiv	;wreg free
 10839  002B3E  C0C3  F0D5         	movff	?___lwdiv,oled_putUint16@number
 10840  002B42  C0C4  F0D6         	movff	?___lwdiv+1,oled_putUint16@number+1
 10841                           
 10842                           ;SSD1306oLED.c: 279: numData.d1 = '0' + (number % 10);
 10843  002B46  C0D5  F0C3         	movff	oled_putUint16@number,___lwmod@dividend
 10844  002B4A  C0D6  F0C4         	movff	oled_putUint16@number+1,___lwmod@dividend+1
 10845  002B4E  0E00               	movlw	0
 10846  002B50  0100               	movlb	0	; () banked
 10847  002B52  6FC6               	movwf	(___lwmod@divisor+1)& (0+255),b
 10848  002B54  0E0A               	movlw	10
 10849  002B56  6FC5               	movwf	___lwmod@divisor& (0+255),b
 10850  002B58  EC76  F027         	call	___lwmod	;wreg free
 10851  002B5C  0100               	movlb	0	; () banked
 10852  002B5E  51C3               	movf	?___lwmod& (0+255),w,b
 10853  002B60  0F30               	addlw	48
 10854  002B62  0100               	movlb	0	; () banked
 10855  002B64  6FDA               	movwf	(oled_putUint16@numData+1)& (0+255),b
 10856                           
 10857                           ;SSD1306oLED.c: 280: number /= 10;
 10858  002B66  C0D5  F0C3         	movff	oled_putUint16@number,___lwdiv@dividend
 10859  002B6A  C0D6  F0C4         	movff	oled_putUint16@number+1,___lwdiv@dividend+1
 10860  002B6E  0E00               	movlw	0
 10861  002B70  0100               	movlb	0	; () banked
 10862  002B72  6FC6               	movwf	(___lwdiv@divisor+1)& (0+255),b
 10863  002B74  0E0A               	movlw	10
 10864  002B76  6FC5               	movwf	___lwdiv@divisor& (0+255),b
 10865  002B78  EC29  F026         	call	___lwdiv	;wreg free
 10866  002B7C  C0C3  F0D5         	movff	?___lwdiv,oled_putUint16@number
 10867  002B80  C0C4  F0D6         	movff	?___lwdiv+1,oled_putUint16@number+1
 10868                           
 10869                           ;SSD1306oLED.c: 281: numData.d0 = '0' + (number % 10);
 10870  002B84  C0D5  F0C3         	movff	oled_putUint16@number,___lwmod@dividend
 10871  002B88  C0D6  F0C4         	movff	oled_putUint16@number+1,___lwmod@dividend+1
 10872  002B8C  0E00               	movlw	0
 10873  002B8E  0100               	movlb	0	; () banked
 10874  002B90  6FC6               	movwf	(___lwmod@divisor+1)& (0+255),b
 10875  002B92  0E0A               	movlw	10
 10876  002B94  6FC5               	movwf	___lwmod@divisor& (0+255),b
 10877  002B96  EC76  F027         	call	___lwmod	;wreg free
 10878  002B9A  0100               	movlb	0	; () banked
 10879  002B9C  51C3               	movf	?___lwmod& (0+255),w,b
 10880  002B9E  0F30               	addlw	48
 10881  002BA0  0100               	movlb	0	; () banked
 10882  002BA2  6FD9               	movwf	oled_putUint16@numData& (0+255),b
 10883                           
 10884                           ; BSR set to: 0
 10885                           ;SSD1306oLED.c: 283: numData.b[5]=0;
 10886  002BA4  0E00               	movlw	0
 10887  002BA6  0100               	movlb	0	; () banked
 10888  002BA8  6FDE               	movwf	(oled_putUint16@numData+5)& (0+255),b
 10889                           
 10890                           ; BSR set to: 0
 10891                           ;SSD1306oLED.c: 285: oled_putString(numData.b,station_dot,start_page);
 10892  002BAA  0ED9               	movlw	low oled_putUint16@numData
 10893  002BAC  0100               	movlb	0	; () banked
 10894  002BAE  6FD0               	movwf	oled_putString@string& (0+255),b
 10895  002BB0  0E00               	movlw	high oled_putUint16@numData
 10896  002BB2  0100               	movlb	0	; () banked
 10897  002BB4  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
 10898  002BB6  C0D7  F0D2         	movff	oled_putUint16@station_dot,oled_putString@station_dot
 10899  002BBA  C0D8  F0D3         	movff	oled_putUint16@start_page,oled_putString@start_page
 10900  002BBE  EC0D  F027         	call	_oled_putString	;wreg free
 10901  002BC2  0012               	return		;funcret
 10902  002BC4                     __end_of_oled_putUint16:
 10903                           	opt stack 0
 10904                           tblptru	equ	0xFF8
 10905                           tblptrh	equ	0xFF7
 10906                           tblptrl	equ	0xFF6
 10907                           tablat	equ	0xFF5
 10908                           prodh	equ	0xFF4
 10909                           prodl	equ	0xFF3
 10910                           intcon	equ	0xFF2
 10911                           postinc0	equ	0xFEE
 10912                           wreg	equ	0xFE8
 10913                           indf1	equ	0xFE7
 10914                           postdec1	equ	0xFE5
 10915                           fsr1h	equ	0xFE2
 10916                           fsr1l	equ	0xFE1
 10917                           indf2	equ	0xFDF
 10918                           fsr2h	equ	0xFDA
 10919                           fsr2l	equ	0xFD9
 10920                           status	equ	0xFD8
 10921                           
 10922 ;; *************** function _moteApp_clearBuffers *****************
 10923 ;; Defined at:
 10924 ;;		line 1413 in file "../Includes/Board/MOTEapp.c"
 10925 ;; Parameters:    Size  Location     Type
 10926 ;;		None
 10927 ;; Auto vars:     Size  Location     Type
 10928 ;;  counter         1    3[BANK0 ] unsigned char 
 10929 ;;  counter         1    2[BANK0 ] unsigned char 
 10930 ;;  counter         1    1[BANK0 ] unsigned char 
 10931 ;;  counter         1    0[BANK0 ] unsigned char 
 10932 ;; Return value:  Size  Location     Type
 10933 ;;		None               void
 10934 ;; Registers used:
 10935 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10936 ;; Tracked objects:
 10937 ;;		On entry : 0/0
 10938 ;;		On exit  : 0/0
 10939 ;;		Unchanged: 0/0
 10940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10941 ;;      Params:         0       0       0       0       0       0       0       0       0
 10942 ;;      Locals:         0       4       0       0       0       0       0       0       0
 10943 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10944 ;;      Totals:         0       4       0       0       0       0       0       0       0
 10945 ;;Total ram usage:        4 bytes
 10946 ;; Hardware stack levels used:    1
 10947 ;; Hardware stack levels required when called:   11
 10948 ;; This function calls:
 10949 ;;		Nothing
 10950 ;; This function is called by:
 10951 ;;		_moteRunningProcess
 10952 ;; This function uses a non-reentrant model
 10953 ;;
 10954                           
 10955                           	psect	text14
 10956  0043C2                     __ptext14:
 10957                           	opt stack 0
 10958  0043C2                     _moteApp_clearBuffers:
 10959                           	opt stack 17
 10960                           
 10961                           ;MOTEapp.c: 1415: for (uint8_t counter = 0; counter < 3; counter++)
 10962                           
 10963                           ;incstack = 0
 10964  0043C2  0E00               	movlw	0
 10965  0043C4  0100               	movlb	0	; () banked
 10966  0043C6  6FC3               	movwf	moteApp_clearBuffers@counter& (0+255),b
 10967  0043C8                     l11100:
 10968                           
 10969                           ; BSR set to: 0
 10970  0043C8  0E02               	movlw	2
 10971  0043CA  0100               	movlb	0	; () banked
 10972  0043CC  65C3               	cpfsgt	moteApp_clearBuffers@counter& (0+255),b
 10973  0043CE  D001               	goto	l11104
 10974  0043D0  D00E               	goto	l11110
 10975  0043D2                     l11104:
 10976                           
 10977                           ; BSR set to: 0
 10978                           ;MOTEapp.c: 1416: {
 10979                           ;MOTEapp.c: 1417: responsePortNum[counter] = 0;
 10980  0043D2  0100               	movlb	0	; () banked
 10981  0043D4  51C3               	movf	moteApp_clearBuffers@counter& (0+255),w,b
 10982  0043D6  0D01               	mullw	1
 10983  0043D8  0EBE               	movlw	low _responsePortNum
 10984  0043DA  24F3               	addwf	prodl,w,c
 10985  0043DC  6ED9               	movwf	fsr2l,c
 10986  0043DE  0E00               	movlw	high _responsePortNum
 10987  0043E0  20F4               	addwfc	prodh,w,c
 10988  0043E2  6EDA               	movwf	fsr2h,c
 10989  0043E4  0E00               	movlw	0
 10990  0043E6  6EDF               	movwf	indf2,c
 10991                           
 10992                           ; BSR set to: 0
 10993  0043E8  0100               	movlb	0	; () banked
 10994  0043EA  2BC3               	incf	moteApp_clearBuffers@counter& (0+255),f,b
 10995  0043EC  D7ED               	goto	l11100
 10996  0043EE                     l11110:
 10997                           
 10998                           ; BSR set to: 0
 10999                           ;MOTEapp.c: 1418: }
 11000                           ;MOTEapp.c: 1419: for (uint8_t counter = 0; counter < 34; counter++)
 11001  0043EE  0E00               	movlw	0
 11002  0043F0  0100               	movlb	0	; () banked
 11003  0043F2  6FC4               	movwf	moteApp_clearBuffers@counter_1853& (0+255),b
 11004  0043F4                     l11112:
 11005                           
 11006                           ; BSR set to: 0
 11007  0043F4  0E21               	movlw	33
 11008  0043F6  0100               	movlb	0	; () banked
 11009  0043F8  65C4               	cpfsgt	moteApp_clearBuffers@counter_1853& (0+255),b
 11010  0043FA  D001               	goto	l11116
 11011  0043FC  D00E               	goto	l11122
 11012  0043FE                     l11116:
 11013                           
 11014                           ; BSR set to: 0
 11015                           ;MOTEapp.c: 1420: {
 11016                           ;MOTEapp.c: 1421: responseId[counter] = 0;
 11017  0043FE  0100               	movlb	0	; () banked
 11018  004400  51C4               	movf	moteApp_clearBuffers@counter_1853& (0+255),w,b
 11019  004402  0D01               	mullw	1
 11020  004404  0E10               	movlw	low _responseId
 11021  004406  24F3               	addwf	prodl,w,c
 11022  004408  6ED9               	movwf	fsr2l,c
 11023  00440A  0E01               	movlw	high _responseId
 11024  00440C  20F4               	addwfc	prodh,w,c
 11025  00440E  6EDA               	movwf	fsr2h,c
 11026  004410  0E00               	movlw	0
 11027  004412  6EDF               	movwf	indf2,c
 11028                           
 11029                           ; BSR set to: 0
 11030  004414  0100               	movlb	0	; () banked
 11031  004416  2BC4               	incf	moteApp_clearBuffers@counter_1853& (0+255),f,b
 11032  004418  D7ED               	goto	l11112
 11033  00441A                     l11122:
 11034                           
 11035                           ; BSR set to: 0
 11036                           ;MOTEapp.c: 1422: }
 11037                           ;MOTEapp.c: 1423: for (uint8_t counter = 0; counter < 32; counter++)
 11038  00441A  0E00               	movlw	0
 11039  00441C  0100               	movlb	0	; () banked
 11040  00441E  6FC5               	movwf	moteApp_clearBuffers@counter_1854& (0+255),b
 11041  004420                     l11124:
 11042                           
 11043                           ; BSR set to: 0
 11044  004420  0E1F               	movlw	31
 11045  004422  0100               	movlb	0	; () banked
 11046  004424  65C5               	cpfsgt	moteApp_clearBuffers@counter_1854& (0+255),b
 11047  004426  D001               	goto	l11128
 11048  004428  D00E               	goto	l11134
 11049  00442A                     l11128:
 11050                           
 11051                           ; BSR set to: 0
 11052                           ;MOTEapp.c: 1424: {
 11053                           ;MOTEapp.c: 1425: responseData[counter] = 0;
 11054  00442A  0100               	movlb	0	; () banked
 11055  00442C  51C5               	movf	moteApp_clearBuffers@counter_1854& (0+255),w,b
 11056  00442E  0D01               	mullw	1
 11057  004430  0EA4               	movlw	low _responseData
 11058  004432  24F3               	addwf	prodl,w,c
 11059  004434  6ED9               	movwf	fsr2l,c
 11060  004436  0E01               	movlw	high _responseData
 11061  004438  20F4               	addwfc	prodh,w,c
 11062  00443A  6EDA               	movwf	fsr2h,c
 11063  00443C  0E00               	movlw	0
 11064  00443E  6EDF               	movwf	indf2,c
 11065                           
 11066                           ; BSR set to: 0
 11067  004440  0100               	movlb	0	; () banked
 11068  004442  2BC5               	incf	moteApp_clearBuffers@counter_1854& (0+255),f,b
 11069  004444  D7ED               	goto	l11124
 11070  004446                     l11134:
 11071                           
 11072                           ; BSR set to: 0
 11073                           ;MOTEapp.c: 1426: }
 11074                           ;MOTEapp.c: 1427: for (uint8_t counter = 0; counter < sizeof(dataBuffer); counter++)
 11075  004446  0E00               	movlw	0
 11076  004448  0100               	movlb	0	; () banked
 11077  00444A  6FC6               	movwf	moteApp_clearBuffers@counter_1855& (0+255),b
 11078  00444C                     l11136:
 11079                           
 11080                           ; BSR set to: 0
 11081  00444C  0E0F               	movlw	15
 11082  00444E  0100               	movlb	0	; () banked
 11083  004450  65C6               	cpfsgt	moteApp_clearBuffers@counter_1855& (0+255),b
 11084  004452  D001               	goto	l11140
 11085  004454  0012               	return	
 11086  004456                     l11140:
 11087                           
 11088                           ; BSR set to: 0
 11089                           ;MOTEapp.c: 1428: {
 11090                           ;MOTEapp.c: 1429: dataBuffer[counter] = 0;
 11091  004456  0100               	movlb	0	; () banked
 11092  004458  51C6               	movf	moteApp_clearBuffers@counter_1855& (0+255),w,b
 11093  00445A  0D01               	mullw	1
 11094  00445C  0EC4               	movlw	low _dataBuffer
 11095  00445E  24F3               	addwf	prodl,w,c
 11096  004460  6ED9               	movwf	fsr2l,c
 11097  004462  0E01               	movlw	high _dataBuffer
 11098  004464  20F4               	addwfc	prodh,w,c
 11099  004466  6EDA               	movwf	fsr2h,c
 11100  004468  0E00               	movlw	0
 11101  00446A  6EDF               	movwf	indf2,c
 11102                           
 11103                           ; BSR set to: 0
 11104  00446C  0100               	movlb	0	; () banked
 11105  00446E  2BC6               	incf	moteApp_clearBuffers@counter_1855& (0+255),f,b
 11106  004470  D7ED               	goto	l11136
 11107  004472                     __end_of_moteApp_clearBuffers:
 11108                           	opt stack 0
 11109                           tblptru	equ	0xFF8
 11110                           tblptrh	equ	0xFF7
 11111                           tblptrl	equ	0xFF6
 11112                           tablat	equ	0xFF5
 11113                           prodh	equ	0xFF4
 11114                           prodl	equ	0xFF3
 11115                           intcon	equ	0xFF2
 11116                           postinc0	equ	0xFEE
 11117                           wreg	equ	0xFE8
 11118                           indf1	equ	0xFE7
 11119                           postdec1	equ	0xFE5
 11120                           fsr1h	equ	0xFE2
 11121                           fsr1l	equ	0xFE1
 11122                           indf2	equ	0xFDF
 11123                           fsr2h	equ	0xFDA
 11124                           fsr2l	equ	0xFD9
 11125                           status	equ	0xFD8
 11126                           
 11127 ;; *************** function _moteApp_add8bToDataBuffer *****************
 11128 ;; Defined at:
 11129 ;;		line 1433 in file "../Includes/Board/MOTEapp.c"
 11130 ;; Parameters:    Size  Location     Type
 11131 ;;  number          1    wreg     unsigned char 
 11132 ;;  bufferLocati    1    6[BANK0 ] unsigned char 
 11133 ;; Auto vars:     Size  Location     Type
 11134 ;;  number          1    9[BANK0 ] unsigned char 
 11135 ;; Return value:  Size  Location     Type
 11136 ;;		None               void
 11137 ;; Registers used:
 11138 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11139 ;; Tracked objects:
 11140 ;;		On entry : 0/0
 11141 ;;		On exit  : 0/0
 11142 ;;		Unchanged: 0/0
 11143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11144 ;;      Params:         0       1       0       0       0       0       0       0       0
 11145 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11146 ;;      Temps:          0       2       0       0       0       0       0       0       0
 11147 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11148 ;;Total ram usage:        4 bytes
 11149 ;; Hardware stack levels used:    1
 11150 ;; Hardware stack levels required when called:   12
 11151 ;; This function calls:
 11152 ;;		___awmod
 11153 ;;		___lbdiv
 11154 ;; This function is called by:
 11155 ;;		_moteRunningProcess
 11156 ;; This function uses a non-reentrant model
 11157 ;;
 11158                           
 11159                           	psect	text15
 11160  0039F2                     __ptext15:
 11161                           	opt stack 0
 11162  0039F2                     _moteApp_add8bToDataBuffer:
 11163                           	opt stack 16
 11164                           
 11165                           ; BSR set to: 0
 11166                           ;incstack = 0
 11167                           ;moteApp_add8bToDataBuffer@number stored from wreg
 11168  0039F2  0100               	movlb	0	; () banked
 11169  0039F4  6FCC               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 11170                           
 11171                           ;MOTEapp.c: 1435: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
 11172  0039F6  0100               	movlb	0	; () banked
 11173  0039F8  51C9               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 11174  0039FA  0100               	movlb	0	; () banked
 11175  0039FC  6FCA               	movwf	??_moteApp_add8bToDataBuffer& (0+255),b
 11176  0039FE  6BCB               	clrf	(??_moteApp_add8bToDataBuffer+1)& (0+255),b
 11177  003A00  0E02               	movlw	2
 11178  003A02  0100               	movlb	0	; () banked
 11179  003A04  27CA               	addwf	??_moteApp_add8bToDataBuffer& (0+255),f,b
 11180  003A06  0E00               	movlw	0
 11181  003A08  23CB               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),f,b
 11182  003A0A  0EC4               	movlw	low _dataBuffer
 11183  003A0C  0100               	movlb	0	; () banked
 11184  003A0E  25CA               	addwf	??_moteApp_add8bToDataBuffer& (0+255),w,b
 11185  003A10  6ED9               	movwf	fsr2l,c
 11186  003A12  0E01               	movlw	high _dataBuffer
 11187  003A14  0100               	movlb	0	; () banked
 11188  003A16  21CB               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),w,b
 11189  003A18  6EDA               	movwf	fsr2h,c
 11190  003A1A  C0CC  F0C3         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 11191  003A1E  0100               	movlb	0	; () banked
 11192  003A20  6BC4               	clrf	(___awmod@dividend+1)& (0+255),b
 11193  003A22  0E00               	movlw	0
 11194  003A24  0100               	movlb	0	; () banked
 11195  003A26  6FC6               	movwf	(___awmod@divisor+1)& (0+255),b
 11196  003A28  0E0A               	movlw	10
 11197  003A2A  6FC5               	movwf	___awmod@divisor& (0+255),b
 11198  003A2C  ECE6  F023         	call	___awmod	;wreg free
 11199  003A30  0100               	movlb	0	; () banked
 11200  003A32  51C3               	movf	?___awmod& (0+255),w,b
 11201  003A34  0F30               	addlw	48
 11202  003A36  6EDF               	movwf	indf2,c
 11203                           
 11204                           ; BSR set to: 0
 11205                           ;MOTEapp.c: 1436: number /= 10;
 11206  003A38  0E0A               	movlw	10
 11207  003A3A  0100               	movlb	0	; () banked
 11208  003A3C  6FC3               	movwf	___lbdiv@divisor& (0+255),b
 11209  003A3E  0100               	movlb	0	; () banked
 11210  003A40  51CC               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
 11211  003A42  EC06  F028         	call	___lbdiv
 11212  003A46  0100               	movlb	0	; () banked
 11213  003A48  6FCC               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 11214                           
 11215                           ; BSR set to: 0
 11216                           ;MOTEapp.c: 1437: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
 11217  003A4A  0100               	movlb	0	; () banked
 11218  003A4C  51C9               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 11219  003A4E  0100               	movlb	0	; () banked
 11220  003A50  6FCA               	movwf	??_moteApp_add8bToDataBuffer& (0+255),b
 11221  003A52  6BCB               	clrf	(??_moteApp_add8bToDataBuffer+1)& (0+255),b
 11222  003A54  0E01               	movlw	1
 11223  003A56  0100               	movlb	0	; () banked
 11224  003A58  27CA               	addwf	??_moteApp_add8bToDataBuffer& (0+255),f,b
 11225  003A5A  0E00               	movlw	0
 11226  003A5C  23CB               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),f,b
 11227  003A5E  0EC4               	movlw	low _dataBuffer
 11228  003A60  0100               	movlb	0	; () banked
 11229  003A62  25CA               	addwf	??_moteApp_add8bToDataBuffer& (0+255),w,b
 11230  003A64  6ED9               	movwf	fsr2l,c
 11231  003A66  0E01               	movlw	high _dataBuffer
 11232  003A68  0100               	movlb	0	; () banked
 11233  003A6A  21CB               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),w,b
 11234  003A6C  6EDA               	movwf	fsr2h,c
 11235  003A6E  C0CC  F0C3         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 11236  003A72  0100               	movlb	0	; () banked
 11237  003A74  6BC4               	clrf	(___awmod@dividend+1)& (0+255),b
 11238  003A76  0E00               	movlw	0
 11239  003A78  0100               	movlb	0	; () banked
 11240  003A7A  6FC6               	movwf	(___awmod@divisor+1)& (0+255),b
 11241  003A7C  0E0A               	movlw	10
 11242  003A7E  6FC5               	movwf	___awmod@divisor& (0+255),b
 11243  003A80  ECE6  F023         	call	___awmod	;wreg free
 11244  003A84  0100               	movlb	0	; () banked
 11245  003A86  51C3               	movf	?___awmod& (0+255),w,b
 11246  003A88  0F30               	addlw	48
 11247  003A8A  6EDF               	movwf	indf2,c
 11248                           
 11249                           ;MOTEapp.c: 1438: number /= 10;
 11250  003A8C  0E0A               	movlw	10
 11251  003A8E  0100               	movlb	0	; () banked
 11252  003A90  6FC3               	movwf	___lbdiv@divisor& (0+255),b
 11253  003A92  0100               	movlb	0	; () banked
 11254  003A94  51CC               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
 11255  003A96  EC06  F028         	call	___lbdiv
 11256  003A9A  0100               	movlb	0	; () banked
 11257  003A9C  6FCC               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 11258                           
 11259                           ; BSR set to: 0
 11260                           ;MOTEapp.c: 1439: dataBuffer[bufferLocation] = '0' + (number % 10);
 11261  003A9E  0100               	movlb	0	; () banked
 11262  003AA0  51C9               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 11263  003AA2  0D01               	mullw	1
 11264  003AA4  0EC4               	movlw	low _dataBuffer
 11265  003AA6  24F3               	addwf	prodl,w,c
 11266  003AA8  6ED9               	movwf	fsr2l,c
 11267  003AAA  0E01               	movlw	high _dataBuffer
 11268  003AAC  20F4               	addwfc	prodh,w,c
 11269  003AAE  6EDA               	movwf	fsr2h,c
 11270  003AB0  C0CC  F0C3         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 11271  003AB4  0100               	movlb	0	; () banked
 11272  003AB6  6BC4               	clrf	(___awmod@dividend+1)& (0+255),b
 11273  003AB8  0E00               	movlw	0
 11274  003ABA  0100               	movlb	0	; () banked
 11275  003ABC  6FC6               	movwf	(___awmod@divisor+1)& (0+255),b
 11276  003ABE  0E0A               	movlw	10
 11277  003AC0  6FC5               	movwf	___awmod@divisor& (0+255),b
 11278  003AC2  ECE6  F023         	call	___awmod	;wreg free
 11279  003AC6  0100               	movlb	0	; () banked
 11280  003AC8  51C3               	movf	?___awmod& (0+255),w,b
 11281  003ACA  0F30               	addlw	48
 11282  003ACC  6EDF               	movwf	indf2,c
 11283                           
 11284                           ; BSR set to: 0
 11285  003ACE  0012               	return		;funcret
 11286  003AD0                     __end_of_moteApp_add8bToDataBuffer:
 11287                           	opt stack 0
 11288                           tblptru	equ	0xFF8
 11289                           tblptrh	equ	0xFF7
 11290                           tblptrl	equ	0xFF6
 11291                           tablat	equ	0xFF5
 11292                           prodh	equ	0xFF4
 11293                           prodl	equ	0xFF3
 11294                           intcon	equ	0xFF2
 11295                           postinc0	equ	0xFEE
 11296                           wreg	equ	0xFE8
 11297                           indf1	equ	0xFE7
 11298                           postdec1	equ	0xFE5
 11299                           fsr1h	equ	0xFE2
 11300                           fsr1l	equ	0xFE1
 11301                           indf2	equ	0xFDF
 11302                           fsr2h	equ	0xFDA
 11303                           fsr2l	equ	0xFD9
 11304                           status	equ	0xFD8
 11305                           
 11306 ;; *************** function ___lbdiv *****************
 11307 ;; Defined at:
 11308 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lbdiv.c"
 11309 ;; Parameters:    Size  Location     Type
 11310 ;;  dividend        1    wreg     unsigned char 
 11311 ;;  divisor         1    0[BANK0 ] unsigned char 
 11312 ;; Auto vars:     Size  Location     Type
 11313 ;;  dividend        1    1[BANK0 ] unsigned char 
 11314 ;;  quotient        1    3[BANK0 ] unsigned char 
 11315 ;;  counter         1    2[BANK0 ] unsigned char 
 11316 ;; Return value:  Size  Location     Type
 11317 ;;                  1    wreg      unsigned char 
 11318 ;; Registers used:
 11319 ;;		wreg, status,2, status,0
 11320 ;; Tracked objects:
 11321 ;;		On entry : 0/0
 11322 ;;		On exit  : 0/0
 11323 ;;		Unchanged: 0/0
 11324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11325 ;;      Params:         0       1       0       0       0       0       0       0       0
 11326 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11327 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11328 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11329 ;;Total ram usage:        4 bytes
 11330 ;; Hardware stack levels used:    1
 11331 ;; Hardware stack levels required when called:   11
 11332 ;; This function calls:
 11333 ;;		Nothing
 11334 ;; This function is called by:
 11335 ;;		_moteApp_add8bToDataBuffer
 11336 ;;		_oled_putUint8
 11337 ;; This function uses a non-reentrant model
 11338 ;;
 11339                           
 11340                           	psect	text16
 11341  00500C                     __ptext16:
 11342                           	opt stack 0
 11343  00500C                     ___lbdiv:
 11344                           	opt stack 16
 11345                           
 11346                           ; BSR set to: 0
 11347                           ;incstack = 0
 11348                           ;___lbdiv@dividend stored from wreg
 11349  00500C  0100               	movlb	0	; () banked
 11350  00500E  6FC4               	movwf	___lbdiv@dividend& (0+255),b
 11351  005010  0E00               	movlw	0
 11352  005012  0100               	movlb	0	; () banked
 11353  005014  6FC6               	movwf	___lbdiv@quotient& (0+255),b
 11354                           
 11355                           ; BSR set to: 0
 11356  005016  0100               	movlb	0	; () banked
 11357  005018  51C3               	movf	___lbdiv@divisor& (0+255),w,b
 11358  00501A  0100               	movlb	0	; () banked
 11359  00501C  B4D8               	btfsc	status,2,c
 11360  00501E  D021               	goto	l10952
 11361                           
 11362                           ; BSR set to: 0
 11363  005020  0E01               	movlw	1
 11364  005022  0100               	movlb	0	; () banked
 11365  005024  6FC5               	movwf	___lbdiv@counter& (0+255),b
 11366  005026  D005               	goto	l10940
 11367  005028                     l10936:
 11368                           
 11369                           ; BSR set to: 0
 11370  005028  0100               	movlb	0	; () banked
 11371  00502A  90D8               	bcf	status,0,c
 11372  00502C  37C3               	rlcf	___lbdiv@divisor& (0+255),f,b
 11373                           
 11374                           ; BSR set to: 0
 11375  00502E  0100               	movlb	0	; () banked
 11376  005030  2BC5               	incf	___lbdiv@counter& (0+255),f,b
 11377  005032                     l10940:
 11378                           
 11379                           ; BSR set to: 0
 11380  005032  0100               	movlb	0	; () banked
 11381  005034  AFC3               	btfss	___lbdiv@divisor& (0+255),7,b
 11382  005036  D7F8               	goto	l10936
 11383  005038                     l10942:
 11384                           
 11385                           ; BSR set to: 0
 11386  005038  0100               	movlb	0	; () banked
 11387  00503A  90D8               	bcf	status,0,c
 11388  00503C  37C6               	rlcf	___lbdiv@quotient& (0+255),f,b
 11389  00503E  0100               	movlb	0	; () banked
 11390  005040  51C3               	movf	___lbdiv@divisor& (0+255),w,b
 11391  005042  0100               	movlb	0	; () banked
 11392  005044  5DC4               	subwf	___lbdiv@dividend& (0+255),w,b
 11393  005046  A0D8               	btfss	status,0,c
 11394  005048  D006               	goto	l10948
 11395                           
 11396                           ; BSR set to: 0
 11397  00504A  0100               	movlb	0	; () banked
 11398  00504C  51C3               	movf	___lbdiv@divisor& (0+255),w,b
 11399  00504E  0100               	movlb	0	; () banked
 11400  005050  5FC4               	subwf	___lbdiv@dividend& (0+255),f,b
 11401                           
 11402                           ; BSR set to: 0
 11403  005052  0100               	movlb	0	; () banked
 11404  005054  81C6               	bsf	___lbdiv@quotient& (0+255),0,b
 11405  005056                     l10948:
 11406                           
 11407                           ; BSR set to: 0
 11408  005056  0100               	movlb	0	; () banked
 11409  005058  90D8               	bcf	status,0,c
 11410  00505A  33C3               	rrcf	___lbdiv@divisor& (0+255),f,b
 11411                           
 11412                           ; BSR set to: 0
 11413  00505C  0100               	movlb	0	; () banked
 11414  00505E  2FC5               	decfsz	___lbdiv@counter& (0+255),f,b
 11415  005060  D7EB               	goto	l10942
 11416  005062                     l10952:
 11417                           
 11418                           ; BSR set to: 0
 11419  005062  0100               	movlb	0	; () banked
 11420  005064  51C6               	movf	___lbdiv@quotient& (0+255),w,b
 11421  005066  0012               	return	
 11422  005068                     __end_of___lbdiv:
 11423                           	opt stack 0
 11424                           tblptru	equ	0xFF8
 11425                           tblptrh	equ	0xFF7
 11426                           tblptrl	equ	0xFF6
 11427                           tablat	equ	0xFF5
 11428                           prodh	equ	0xFF4
 11429                           prodl	equ	0xFF3
 11430                           intcon	equ	0xFF2
 11431                           postinc0	equ	0xFEE
 11432                           wreg	equ	0xFE8
 11433                           indf1	equ	0xFE7
 11434                           postdec1	equ	0xFE5
 11435                           fsr1h	equ	0xFE2
 11436                           fsr1l	equ	0xFE1
 11437                           indf2	equ	0xFDF
 11438                           fsr2h	equ	0xFDA
 11439                           fsr2l	equ	0xFD9
 11440                           status	equ	0xFD8
 11441                           
 11442 ;; *************** function ___awmod *****************
 11443 ;; Defined at:
 11444 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 11445 ;; Parameters:    Size  Location     Type
 11446 ;;  dividend        2    0[BANK0 ] int 
 11447 ;;  divisor         2    2[BANK0 ] int 
 11448 ;; Auto vars:     Size  Location     Type
 11449 ;;  sign            1    5[BANK0 ] unsigned char 
 11450 ;;  counter         1    4[BANK0 ] unsigned char 
 11451 ;; Return value:  Size  Location     Type
 11452 ;;                  2    0[BANK0 ] int 
 11453 ;; Registers used:
 11454 ;;		wreg, status,2, status,0
 11455 ;; Tracked objects:
 11456 ;;		On entry : 0/0
 11457 ;;		On exit  : 0/0
 11458 ;;		Unchanged: 0/0
 11459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11460 ;;      Params:         0       4       0       0       0       0       0       0       0
 11461 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11462 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11463 ;;      Totals:         0       6       0       0       0       0       0       0       0
 11464 ;;Total ram usage:        6 bytes
 11465 ;; Hardware stack levels used:    1
 11466 ;; Hardware stack levels required when called:   11
 11467 ;; This function calls:
 11468 ;;		Nothing
 11469 ;; This function is called by:
 11470 ;;		_moteApp_add8bToDataBuffer
 11471 ;;		_oled_putUint8
 11472 ;; This function uses a non-reentrant model
 11473 ;;
 11474                           
 11475                           	psect	text17
 11476  0047CC                     __ptext17:
 11477                           	opt stack 0
 11478  0047CC                     ___awmod:
 11479                           	opt stack 16
 11480                           
 11481                           ; BSR set to: 0
 11482                           ;incstack = 0
 11483  0047CC  0E00               	movlw	0
 11484  0047CE  0100               	movlb	0	; () banked
 11485  0047D0  6FC8               	movwf	___awmod@sign& (0+255),b
 11486                           
 11487                           ; BSR set to: 0
 11488  0047D2  0100               	movlb	0	; () banked
 11489  0047D4  AFC4               	btfss	(___awmod@dividend+1)& (0+255),7,b
 11490  0047D6  D008               	goto	l10902
 11491                           
 11492                           ; BSR set to: 0
 11493  0047D8  0100               	movlb	0	; () banked
 11494  0047DA  6DC3               	negf	___awmod@dividend& (0+255),b
 11495  0047DC  1FC4               	comf	(___awmod@dividend+1)& (0+255),f,b
 11496  0047DE  B0D8               	btfsc	status,0,c
 11497  0047E0  2BC4               	incf	(___awmod@dividend+1)& (0+255),f,b
 11498                           
 11499                           ; BSR set to: 0
 11500  0047E2  0E01               	movlw	1
 11501  0047E4  0100               	movlb	0	; () banked
 11502  0047E6  6FC8               	movwf	___awmod@sign& (0+255),b
 11503  0047E8                     l10902:
 11504                           
 11505                           ; BSR set to: 0
 11506  0047E8  0100               	movlb	0	; () banked
 11507  0047EA  AFC6               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11508  0047EC  D005               	goto	l10906
 11509                           
 11510                           ; BSR set to: 0
 11511  0047EE  0100               	movlb	0	; () banked
 11512  0047F0  6DC5               	negf	___awmod@divisor& (0+255),b
 11513  0047F2  1FC6               	comf	(___awmod@divisor+1)& (0+255),f,b
 11514  0047F4  B0D8               	btfsc	status,0,c
 11515  0047F6  2BC6               	incf	(___awmod@divisor+1)& (0+255),f,b
 11516  0047F8                     l10906:
 11517                           
 11518                           ; BSR set to: 0
 11519  0047F8  0100               	movlb	0	; () banked
 11520  0047FA  51C5               	movf	___awmod@divisor& (0+255),w,b
 11521  0047FC  0100               	movlb	0	; () banked
 11522  0047FE  11C6               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 11523  004800  B4D8               	btfsc	status,2,c
 11524  004802  D026               	goto	l10922
 11525                           
 11526                           ; BSR set to: 0
 11527  004804  0E01               	movlw	1
 11528  004806  0100               	movlb	0	; () banked
 11529  004808  6FC7               	movwf	___awmod@counter& (0+255),b
 11530  00480A  D006               	goto	l10912
 11531  00480C                     l10910:
 11532                           
 11533                           ; BSR set to: 0
 11534  00480C  0100               	movlb	0	; () banked
 11535  00480E  90D8               	bcf	status,0,c
 11536  004810  37C5               	rlcf	___awmod@divisor& (0+255),f,b
 11537  004812  37C6               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 11538  004814  0100               	movlb	0	; () banked
 11539  004816  2BC7               	incf	___awmod@counter& (0+255),f,b
 11540  004818                     l10912:
 11541                           
 11542                           ; BSR set to: 0
 11543  004818  0100               	movlb	0	; () banked
 11544  00481A  AFC6               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11545  00481C  D7F7               	goto	l10910
 11546  00481E                     l10914:
 11547                           
 11548                           ; BSR set to: 0
 11549  00481E  0100               	movlb	0	; () banked
 11550  004820  51C5               	movf	___awmod@divisor& (0+255),w,b
 11551  004822  0100               	movlb	0	; () banked
 11552  004824  5DC3               	subwf	___awmod@dividend& (0+255),w,b
 11553  004826  0100               	movlb	0	; () banked
 11554  004828  51C6               	movf	(___awmod@divisor+1)& (0+255),w,b
 11555  00482A  0100               	movlb	0	; () banked
 11556  00482C  59C4               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 11557  00482E  A0D8               	btfss	status,0,c
 11558  004830  D008               	goto	l10918
 11559                           
 11560                           ; BSR set to: 0
 11561  004832  0100               	movlb	0	; () banked
 11562  004834  51C5               	movf	___awmod@divisor& (0+255),w,b
 11563  004836  0100               	movlb	0	; () banked
 11564  004838  5FC3               	subwf	___awmod@dividend& (0+255),f,b
 11565  00483A  0100               	movlb	0	; () banked
 11566  00483C  51C6               	movf	(___awmod@divisor+1)& (0+255),w,b
 11567  00483E  0100               	movlb	0	; () banked
 11568  004840  5BC4               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 11569  004842                     l10918:
 11570                           
 11571                           ; BSR set to: 0
 11572  004842  0100               	movlb	0	; () banked
 11573  004844  90D8               	bcf	status,0,c
 11574  004846  33C6               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 11575  004848  33C5               	rrcf	___awmod@divisor& (0+255),f,b
 11576                           
 11577                           ; BSR set to: 0
 11578  00484A  0100               	movlb	0	; () banked
 11579  00484C  2FC7               	decfsz	___awmod@counter& (0+255),f,b
 11580  00484E  D7E7               	goto	l10914
 11581  004850                     l10922:
 11582                           
 11583                           ; BSR set to: 0
 11584  004850  0100               	movlb	0	; () banked
 11585  004852  51C8               	movf	___awmod@sign& (0+255),w,b
 11586  004854  0100               	movlb	0	; () banked
 11587  004856  B4D8               	btfsc	status,2,c
 11588  004858  D005               	goto	l10926
 11589                           
 11590                           ; BSR set to: 0
 11591  00485A  0100               	movlb	0	; () banked
 11592  00485C  6DC3               	negf	___awmod@dividend& (0+255),b
 11593  00485E  1FC4               	comf	(___awmod@dividend+1)& (0+255),f,b
 11594  004860  B0D8               	btfsc	status,0,c
 11595  004862  2BC4               	incf	(___awmod@dividend+1)& (0+255),f,b
 11596  004864                     l10926:
 11597                           
 11598                           ; BSR set to: 0
 11599  004864  C0C3  F0C3         	movff	___awmod@dividend,?___awmod
 11600  004868  C0C4  F0C4         	movff	___awmod@dividend+1,?___awmod+1
 11601  00486C  0012               	return	
 11602  00486E                     __end_of___awmod:
 11603                           	opt stack 0
 11604                           tblptru	equ	0xFF8
 11605                           tblptrh	equ	0xFF7
 11606                           tblptrl	equ	0xFF6
 11607                           tablat	equ	0xFF5
 11608                           prodh	equ	0xFF4
 11609                           prodl	equ	0xFF3
 11610                           intcon	equ	0xFF2
 11611                           postinc0	equ	0xFEE
 11612                           wreg	equ	0xFE8
 11613                           indf1	equ	0xFE7
 11614                           postdec1	equ	0xFE5
 11615                           fsr1h	equ	0xFE2
 11616                           fsr1l	equ	0xFE1
 11617                           indf2	equ	0xFDF
 11618                           fsr2h	equ	0xFDA
 11619                           fsr2l	equ	0xFD9
 11620                           status	equ	0xFD8
 11621                           
 11622 ;; *************** function _moteApp_add16bToDataBuffer *****************
 11623 ;; Defined at:
 11624 ;;		line 1442 in file "../Includes/Board/MOTEapp.c"
 11625 ;; Parameters:    Size  Location     Type
 11626 ;;  number          2    7[BANK0 ] unsigned int 
 11627 ;;  bufferLocati    1    9[BANK0 ] unsigned char 
 11628 ;; Auto vars:     Size  Location     Type
 11629 ;;		None
 11630 ;; Return value:  Size  Location     Type
 11631 ;;		None               void
 11632 ;; Registers used:
 11633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11634 ;; Tracked objects:
 11635 ;;		On entry : 0/0
 11636 ;;		On exit  : 0/0
 11637 ;;		Unchanged: 0/0
 11638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11639 ;;      Params:         0       3       0       0       0       0       0       0       0
 11640 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11641 ;;      Temps:          0       2       0       0       0       0       0       0       0
 11642 ;;      Totals:         0       5       0       0       0       0       0       0       0
 11643 ;;Total ram usage:        5 bytes
 11644 ;; Hardware stack levels used:    1
 11645 ;; Hardware stack levels required when called:   12
 11646 ;; This function calls:
 11647 ;;		___lwdiv
 11648 ;;		___lwmod
 11649 ;; This function is called by:
 11650 ;;		_moteRunningProcess
 11651 ;; This function uses a non-reentrant model
 11652 ;;
 11653                           
 11654                           	psect	text18
 11655  00234E                     __ptext18:
 11656                           	opt stack 0
 11657  00234E                     _moteApp_add16bToDataBuffer:
 11658                           	opt stack 16
 11659                           
 11660                           ;MOTEapp.c: 1444: dataBuffer[bufferLocation + 4] = '0' + (number % 10);
 11661                           
 11662                           ; BSR set to: 0
 11663                           ;incstack = 0
 11664  00234E  0100               	movlb	0	; () banked
 11665  002350  51CC               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 11666  002352  0100               	movlb	0	; () banked
 11667  002354  6FCD               	movwf	??_moteApp_add16bToDataBuffer& (0+255),b
 11668  002356  6BCE               	clrf	(??_moteApp_add16bToDataBuffer+1)& (0+255),b
 11669  002358  0E04               	movlw	4
 11670  00235A  0100               	movlb	0	; () banked
 11671  00235C  27CD               	addwf	??_moteApp_add16bToDataBuffer& (0+255),f,b
 11672  00235E  0E00               	movlw	0
 11673  002360  23CE               	addwfc	(??_moteApp_add16bToDataBuffer+1)& (0+255),f,b
 11674  002362  0EC4               	movlw	low _dataBuffer
 11675  002364  0100               	movlb	0	; () banked
 11676  002366  25CD               	addwf	??_moteApp_add16bToDataBuffer& (0+255),w,b
 11677  002368  6ED9               	movwf	fsr2l,c
 11678  00236A  0E01               	movlw	high _dataBuffer
 11679  00236C  0100               	movlb	0	; () banked
 11680  00236E  21CE               	addwfc	(??_moteApp_add16bToDataBuffer+1)& (0+255),w,b
 11681  002370  6EDA               	movwf	fsr2h,c
 11682  002372  C0CA  F0C3         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 11683  002376  C0CB  F0C4         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 11684  00237A  0E00               	movlw	0
 11685  00237C  0100               	movlb	0	; () banked
 11686  00237E  6FC6               	movwf	(___lwmod@divisor+1)& (0+255),b
 11687  002380  0E0A               	movlw	10
 11688  002382  6FC5               	movwf	___lwmod@divisor& (0+255),b
 11689  002384  EC76  F027         	call	___lwmod	;wreg free
 11690  002388  0100               	movlb	0	; () banked
 11691  00238A  51C3               	movf	?___lwmod& (0+255),w,b
 11692  00238C  0F30               	addlw	48
 11693  00238E  6EDF               	movwf	indf2,c
 11694                           
 11695                           ; BSR set to: 0
 11696                           ;MOTEapp.c: 1445: number /= 10;
 11697  002390  C0CA  F0C3         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
 11698  002394  C0CB  F0C4         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
 11699  002398  0E00               	movlw	0
 11700  00239A  0100               	movlb	0	; () banked
 11701  00239C  6FC6               	movwf	(___lwdiv@divisor+1)& (0+255),b
 11702  00239E  0E0A               	movlw	10
 11703  0023A0  6FC5               	movwf	___lwdiv@divisor& (0+255),b
 11704  0023A2  EC29  F026         	call	___lwdiv	;wreg free
 11705  0023A6  C0C3  F0CA         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
 11706  0023AA  C0C4  F0CB         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
 11707                           
 11708                           ;MOTEapp.c: 1446: dataBuffer[bufferLocation + 3] = '0' + (number % 10);
 11709  0023AE  0100               	movlb	0	; () banked
 11710  0023B0  51CC               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 11711  0023B2  0100               	movlb	0	; () banked
 11712  0023B4  6FCD               	movwf	??_moteApp_add16bToDataBuffer& (0+255),b
 11713  0023B6  6BCE               	clrf	(??_moteApp_add16bToDataBuffer+1)& (0+255),b
 11714  0023B8  0E03               	movlw	3
 11715  0023BA  0100               	movlb	0	; () banked
 11716  0023BC  27CD               	addwf	??_moteApp_add16bToDataBuffer& (0+255),f,b
 11717  0023BE  0E00               	movlw	0
 11718  0023C0  23CE               	addwfc	(??_moteApp_add16bToDataBuffer+1)& (0+255),f,b
 11719  0023C2  0EC4               	movlw	low _dataBuffer
 11720  0023C4  0100               	movlb	0	; () banked
 11721  0023C6  25CD               	addwf	??_moteApp_add16bToDataBuffer& (0+255),w,b
 11722  0023C8  6ED9               	movwf	fsr2l,c
 11723  0023CA  0E01               	movlw	high _dataBuffer
 11724  0023CC  0100               	movlb	0	; () banked
 11725  0023CE  21CE               	addwfc	(??_moteApp_add16bToDataBuffer+1)& (0+255),w,b
 11726  0023D0  6EDA               	movwf	fsr2h,c
 11727  0023D2  C0CA  F0C3         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 11728  0023D6  C0CB  F0C4         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 11729  0023DA  0E00               	movlw	0
 11730  0023DC  0100               	movlb	0	; () banked
 11731  0023DE  6FC6               	movwf	(___lwmod@divisor+1)& (0+255),b
 11732  0023E0  0E0A               	movlw	10
 11733  0023E2  6FC5               	movwf	___lwmod@divisor& (0+255),b
 11734  0023E4  EC76  F027         	call	___lwmod	;wreg free
 11735  0023E8  0100               	movlb	0	; () banked
 11736  0023EA  51C3               	movf	?___lwmod& (0+255),w,b
 11737  0023EC  0F30               	addlw	48
 11738  0023EE  6EDF               	movwf	indf2,c
 11739                           
 11740                           ;MOTEapp.c: 1447: number /= 10;
 11741  0023F0  C0CA  F0C3         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
 11742  0023F4  C0CB  F0C4         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
 11743  0023F8  0E00               	movlw	0
 11744  0023FA  0100               	movlb	0	; () banked
 11745  0023FC  6FC6               	movwf	(___lwdiv@divisor+1)& (0+255),b
 11746  0023FE  0E0A               	movlw	10
 11747  002400  6FC5               	movwf	___lwdiv@divisor& (0+255),b
 11748  002402  EC29  F026         	call	___lwdiv	;wreg free
 11749  002406  C0C3  F0CA         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
 11750  00240A  C0C4  F0CB         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
 11751                           
 11752                           ;MOTEapp.c: 1448: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
 11753  00240E  0100               	movlb	0	; () banked
 11754  002410  51CC               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 11755  002412  0100               	movlb	0	; () banked
 11756  002414  6FCD               	movwf	??_moteApp_add16bToDataBuffer& (0+255),b
 11757  002416  6BCE               	clrf	(??_moteApp_add16bToDataBuffer+1)& (0+255),b
 11758  002418  0E02               	movlw	2
 11759  00241A  0100               	movlb	0	; () banked
 11760  00241C  27CD               	addwf	??_moteApp_add16bToDataBuffer& (0+255),f,b
 11761  00241E  0E00               	movlw	0
 11762  002420  23CE               	addwfc	(??_moteApp_add16bToDataBuffer+1)& (0+255),f,b
 11763  002422  0EC4               	movlw	low _dataBuffer
 11764  002424  0100               	movlb	0	; () banked
 11765  002426  25CD               	addwf	??_moteApp_add16bToDataBuffer& (0+255),w,b
 11766  002428  6ED9               	movwf	fsr2l,c
 11767  00242A  0E01               	movlw	high _dataBuffer
 11768  00242C  0100               	movlb	0	; () banked
 11769  00242E  21CE               	addwfc	(??_moteApp_add16bToDataBuffer+1)& (0+255),w,b
 11770  002430  6EDA               	movwf	fsr2h,c
 11771  002432  C0CA  F0C3         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 11772  002436  C0CB  F0C4         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 11773  00243A  0E00               	movlw	0
 11774  00243C  0100               	movlb	0	; () banked
 11775  00243E  6FC6               	movwf	(___lwmod@divisor+1)& (0+255),b
 11776  002440  0E0A               	movlw	10
 11777  002442  6FC5               	movwf	___lwmod@divisor& (0+255),b
 11778  002444  EC76  F027         	call	___lwmod	;wreg free
 11779  002448  0100               	movlb	0	; () banked
 11780  00244A  51C3               	movf	?___lwmod& (0+255),w,b
 11781  00244C  0F30               	addlw	48
 11782  00244E  6EDF               	movwf	indf2,c
 11783                           
 11784                           ; BSR set to: 0
 11785                           ;MOTEapp.c: 1449: number /= 10;
 11786  002450  C0CA  F0C3         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
 11787  002454  C0CB  F0C4         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
 11788  002458  0E00               	movlw	0
 11789  00245A  0100               	movlb	0	; () banked
 11790  00245C  6FC6               	movwf	(___lwdiv@divisor+1)& (0+255),b
 11791  00245E  0E0A               	movlw	10
 11792  002460  6FC5               	movwf	___lwdiv@divisor& (0+255),b
 11793  002462  EC29  F026         	call	___lwdiv	;wreg free
 11794  002466  C0C3  F0CA         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
 11795  00246A  C0C4  F0CB         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
 11796                           
 11797                           ;MOTEapp.c: 1450: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
 11798  00246E  0100               	movlb	0	; () banked
 11799  002470  51CC               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 11800  002472  0100               	movlb	0	; () banked
 11801  002474  6FCD               	movwf	??_moteApp_add16bToDataBuffer& (0+255),b
 11802  002476  6BCE               	clrf	(??_moteApp_add16bToDataBuffer+1)& (0+255),b
 11803  002478  0E01               	movlw	1
 11804  00247A  0100               	movlb	0	; () banked
 11805  00247C  27CD               	addwf	??_moteApp_add16bToDataBuffer& (0+255),f,b
 11806  00247E  0E00               	movlw	0
 11807  002480  23CE               	addwfc	(??_moteApp_add16bToDataBuffer+1)& (0+255),f,b
 11808  002482  0EC4               	movlw	low _dataBuffer
 11809  002484  0100               	movlb	0	; () banked
 11810  002486  25CD               	addwf	??_moteApp_add16bToDataBuffer& (0+255),w,b
 11811  002488  6ED9               	movwf	fsr2l,c
 11812  00248A  0E01               	movlw	high _dataBuffer
 11813  00248C  0100               	movlb	0	; () banked
 11814  00248E  21CE               	addwfc	(??_moteApp_add16bToDataBuffer+1)& (0+255),w,b
 11815  002490  6EDA               	movwf	fsr2h,c
 11816  002492  C0CA  F0C3         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 11817  002496  C0CB  F0C4         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 11818  00249A  0E00               	movlw	0
 11819  00249C  0100               	movlb	0	; () banked
 11820  00249E  6FC6               	movwf	(___lwmod@divisor+1)& (0+255),b
 11821  0024A0  0E0A               	movlw	10
 11822  0024A2  6FC5               	movwf	___lwmod@divisor& (0+255),b
 11823  0024A4  EC76  F027         	call	___lwmod	;wreg free
 11824  0024A8  0100               	movlb	0	; () banked
 11825  0024AA  51C3               	movf	?___lwmod& (0+255),w,b
 11826  0024AC  0F30               	addlw	48
 11827  0024AE  6EDF               	movwf	indf2,c
 11828                           
 11829                           ; BSR set to: 0
 11830                           ;MOTEapp.c: 1451: number /= 10;
 11831  0024B0  C0CA  F0C3         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
 11832  0024B4  C0CB  F0C4         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
 11833  0024B8  0E00               	movlw	0
 11834  0024BA  0100               	movlb	0	; () banked
 11835  0024BC  6FC6               	movwf	(___lwdiv@divisor+1)& (0+255),b
 11836  0024BE  0E0A               	movlw	10
 11837  0024C0  6FC5               	movwf	___lwdiv@divisor& (0+255),b
 11838  0024C2  EC29  F026         	call	___lwdiv	;wreg free
 11839  0024C6  C0C3  F0CA         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
 11840  0024CA  C0C4  F0CB         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
 11841                           
 11842                           ;MOTEapp.c: 1452: dataBuffer[bufferLocation] = '0' + (number % 10);
 11843  0024CE  0100               	movlb	0	; () banked
 11844  0024D0  51CC               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 11845  0024D2  0D01               	mullw	1
 11846  0024D4  0EC4               	movlw	low _dataBuffer
 11847  0024D6  24F3               	addwf	prodl,w,c
 11848  0024D8  6ED9               	movwf	fsr2l,c
 11849  0024DA  0E01               	movlw	high _dataBuffer
 11850  0024DC  20F4               	addwfc	prodh,w,c
 11851  0024DE  6EDA               	movwf	fsr2h,c
 11852  0024E0  C0CA  F0C3         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 11853  0024E4  C0CB  F0C4         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 11854  0024E8  0E00               	movlw	0
 11855  0024EA  0100               	movlb	0	; () banked
 11856  0024EC  6FC6               	movwf	(___lwmod@divisor+1)& (0+255),b
 11857  0024EE  0E0A               	movlw	10
 11858  0024F0  6FC5               	movwf	___lwmod@divisor& (0+255),b
 11859  0024F2  EC76  F027         	call	___lwmod	;wreg free
 11860  0024F6  0100               	movlb	0	; () banked
 11861  0024F8  51C3               	movf	?___lwmod& (0+255),w,b
 11862  0024FA  0F30               	addlw	48
 11863  0024FC  6EDF               	movwf	indf2,c
 11864                           
 11865                           ; BSR set to: 0
 11866  0024FE  0012               	return		;funcret
 11867  002500                     __end_of_moteApp_add16bToDataBuffer:
 11868                           	opt stack 0
 11869                           tblptru	equ	0xFF8
 11870                           tblptrh	equ	0xFF7
 11871                           tblptrl	equ	0xFF6
 11872                           tablat	equ	0xFF5
 11873                           prodh	equ	0xFF4
 11874                           prodl	equ	0xFF3
 11875                           intcon	equ	0xFF2
 11876                           postinc0	equ	0xFEE
 11877                           wreg	equ	0xFE8
 11878                           indf1	equ	0xFE7
 11879                           postdec1	equ	0xFE5
 11880                           fsr1h	equ	0xFE2
 11881                           fsr1l	equ	0xFE1
 11882                           indf2	equ	0xFDF
 11883                           fsr2h	equ	0xFDA
 11884                           fsr2l	equ	0xFD9
 11885                           status	equ	0xFD8
 11886                           
 11887 ;; *************** function _moteApp_GoToSleep *****************
 11888 ;; Defined at:
 11889 ;;		line 1300 in file "../Includes/Board/MOTEapp.c"
 11890 ;; Parameters:    Size  Location     Type
 11891 ;;		None
 11892 ;; Auto vars:     Size  Location     Type
 11893 ;;  status          1   15[BANK0 ] unsigned char 
 11894 ;; Return value:  Size  Location     Type
 11895 ;;                  1    wreg      unsigned char 
 11896 ;; Registers used:
 11897 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11898 ;; Tracked objects:
 11899 ;;		On entry : 0/0
 11900 ;;		On exit  : 0/0
 11901 ;;		Unchanged: 0/0
 11902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11903 ;;      Params:         0       0       0       0       0       0       0       0       0
 11904 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11905 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11906 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11907 ;;Total ram usage:        1 bytes
 11908 ;; Hardware stack levels used:    1
 11909 ;; Hardware stack levels required when called:   18
 11910 ;; This function calls:
 11911 ;;		_EUSART_FlushBuffer
 11912 ;;		_PIN_MANAGER_Initialize
 11913 ;;		_moduleResync
 11914 ;;		_moduleSleep
 11915 ;;		_moteApp_delayms
 11916 ;;		_oled_displayOff
 11917 ;;		_oled_init
 11918 ;; This function is called by:
 11919 ;;		_moteRunningProcess
 11920 ;; This function uses a non-reentrant model
 11921 ;;
 11922                           
 11923                           	psect	text19
 11924  003AD0                     __ptext19:
 11925                           	opt stack 0
 11926  003AD0                     _moteApp_GoToSleep:
 11927                           	opt stack 10
 11928                           
 11929                           ;MOTEapp.c: 1302: uint8_t status = 0;
 11930                           
 11931                           ; BSR set to: 0
 11932                           ;incstack = 0
 11933  003AD0  0E00               	movlw	0
 11934  003AD2  0100               	movlb	0	; () banked
 11935  003AD4  6FD2               	movwf	moteApp_GoToSleep@status& (0+255),b
 11936  003AD6                     l708:
 11937  003AD6  A282               	btfss	3970,1,c	;volatile
 11938  003AD8  D7FE               	goto	l708
 11939                           
 11940                           ;MOTEapp.c: 1304: moduleSleep();
 11941  003ADA  EC8A  F02B         	call	_moduleSleep	;wreg free
 11942                           
 11943                           ;MOTEapp.c: 1305: oled_displayOff(1);
 11944  003ADE  0E01               	movlw	1
 11945  003AE0  EC4B  F02C         	call	_oled_displayOff
 11946                           
 11947                           ;MOTEapp.c: 1308: LATAbits.LATA5 = 1;
 11948  003AE4  8A89               	bsf	3977,5,c	;volatile
 11949                           
 11950                           ;MOTEapp.c: 1309: LATBbits.LATB2 = 0;
 11951  003AE6  948A               	bcf	3978,2,c	;volatile
 11952                           
 11953                           ;MOTEapp.c: 1310: LATBbits.LATB0 = 0;
 11954  003AE8  908A               	bcf	3978,0,c	;volatile
 11955                           
 11956                           ;MOTEapp.c: 1311: LATBbits.LATB4 = 0;
 11957  003AEA  988A               	bcf	3978,4,c	;volatile
 11958                           
 11959                           ;MOTEapp.c: 1312: LATCbits.LATC2 = 0;
 11960  003AEC  948B               	bcf	3979,2,c	;volatile
 11961                           
 11962                           ;MOTEapp.c: 1313: LATBbits.LATB5 = 0;
 11963  003AEE  9A8A               	bcf	3978,5,c	;volatile
 11964                           
 11965                           ;MOTEapp.c: 1314: LATBbits.LATB1 = 0;
 11966  003AF0  928A               	bcf	3978,1,c	;volatile
 11967                           
 11968                           ;MOTEapp.c: 1315: LATA = 0b00000000;
 11969  003AF2  0E00               	movlw	0
 11970  003AF4  6E89               	movwf	3977,c	;volatile
 11971                           
 11972                           ;MOTEapp.c: 1316: LATB = 0b00000000;
 11973  003AF6  0E00               	movlw	0
 11974  003AF8  6E8A               	movwf	3978,c	;volatile
 11975                           
 11976                           ;MOTEapp.c: 1317: LATC = 0b00000000;
 11977  003AFA  0E00               	movlw	0
 11978  003AFC  6E8B               	movwf	3979,c	;volatile
 11979                           
 11980                           ;MOTEapp.c: 1319: TRISB = 0b11111111;
 11981  003AFE  6893               	setf	3987,c	;volatile
 11982                           
 11983                           ;MOTEapp.c: 1320: TRISC = 0b11111111;
 11984  003B00  6894               	setf	3988,c	;volatile
 11985                           
 11986                           ;MOTEapp.c: 1324: ADCON0bits.ADON = 0;
 11987  003B02  90C2               	bcf	4034,0,c	;volatile
 11988                           
 11989                           ;MOTEapp.c: 1325: INTCONbits.GIE = 0;
 11990  003B04  9EF2               	bcf	intcon,7,c	;volatile
 11991                           
 11992                           ;MOTEapp.c: 1326: GIE = 0;
 11993  003B06  9EF2               	bcf	intcon,7,c	;volatile
 11994                           
 11995                           ;MOTEapp.c: 1327: PEIE = 0;
 11996  003B08  9CF2               	bcf	intcon,6,c	;volatile
 11997                           
 11998                           ;MOTEapp.c: 1329: ANSELAbits.ANSA0 = 1;
 11999  003B0A  010F               	movlb	15	; () banked
 12000  003B0C  815B               	bsf	91,0,b	;volatile
 12001                           
 12002                           ; BSR set to: 15
 12003                           ;MOTEapp.c: 1331: PIE2bits.C1IE = 1;
 12004  003B0E  8CA0               	bsf	4000,6,c	;volatile
 12005                           
 12006                           ; BSR set to: 15
 12007                           ;MOTEapp.c: 1332: IOCCbits.IOCC0 = 1;
 12008  003B10  8087               	bsf	3975,0,c	;volatile
 12009                           
 12010                           ; BSR set to: 15
 12011                           ;MOTEapp.c: 1333: IOCCbits.IOCC1 = 1;
 12012  003B12  8287               	bsf	3975,1,c	;volatile
 12013                           
 12014                           ; BSR set to: 15
 12015                           ;MOTEapp.c: 1334: IOCCbits.IOCC2 = 1;
 12016  003B14  8487               	bsf	3975,2,c	;volatile
 12017                           
 12018                           ; BSR set to: 15
 12019                           ;MOTEapp.c: 1335: INTCONbits.IOCIE = 1;
 12020  003B16  86F2               	bsf	intcon,3,c	;volatile
 12021                           
 12022                           ; BSR set to: 15
 12023                           ;MOTEapp.c: 1337: status = PORTCbits.RC0;
 12024  003B18  0E00               	movlw	0
 12025  003B1A  B082               	btfsc	3970,0,c	;volatile
 12026  003B1C  0E01               	movlw	1
 12027  003B1E  0100               	movlb	0	; () banked
 12028  003B20  6FD2               	movwf	moteApp_GoToSleep@status& (0+255),b
 12029                           
 12030                           ; BSR set to: 0
 12031                           ;MOTEapp.c: 1338: status = PORTCbits.RC1;
 12032  003B22  0E00               	movlw	0
 12033  003B24  B282               	btfsc	3970,1,c	;volatile
 12034  003B26  0E01               	movlw	1
 12035  003B28  0100               	movlb	0	; () banked
 12036  003B2A  6FD2               	movwf	moteApp_GoToSleep@status& (0+255),b
 12037                           
 12038                           ; BSR set to: 0
 12039                           ;MOTEapp.c: 1339: status = PORTCbits.RC2;
 12040  003B2C  0E00               	movlw	0
 12041  003B2E  B482               	btfsc	3970,2,c	;volatile
 12042  003B30  0E01               	movlw	1
 12043  003B32  0100               	movlb	0	; () banked
 12044  003B34  6FD2               	movwf	moteApp_GoToSleep@status& (0+255),b
 12045                           
 12046                           ; BSR set to: 0
 12047                           ;MOTEapp.c: 1341: if (periodicState)
 12048  003B36  0100               	movlb	0	; () banked
 12049  003B38  51F8               	movf	_periodicState& (0+255),w,b
 12050  003B3A  A4D8               	btfss	status,2,c
 12051                           
 12052                           ; BSR set to: 0
 12053                           ;MOTEapp.c: 1342: {
 12054                           ;MOTEapp.c: 1343: WDTCONbits.SWDTEN = 1;
 12055  003B3C  80D1               	bsf	4049,0,c	;volatile
 12056                           
 12057                           ; BSR set to: 0
 12058                           ;MOTEapp.c: 1344: }
 12059                           ;MOTEapp.c: 1345: INTCONbits.IOCIF = 0;
 12060  003B3E  90F2               	bcf	intcon,0,c	;volatile
 12061                           
 12062                           ;MOTEapp.c: 1347: PIR2bits.C1IF = 0;
 12063  003B40  9CA1               	bcf	4001,6,c	;volatile
 12064                           
 12065                           ;MOTEapp.c: 1348: __nop();
 12066  003B42  F000               	nop	
 12067  003B44  0003               	sleep		;# 
 12068                           
 12069                           ;MOTEapp.c: 1350: __nop();
 12070  003B46  F000               	nop	
 12071                           
 12072                           ;MOTEapp.c: 1352: WDTCONbits.SWDTEN = 0;
 12073  003B48  90D1               	bcf	4049,0,c	;volatile
 12074                           
 12075                           ;MOTEapp.c: 1353: EUSART_FlushBuffer();
 12076  003B4A  EC10  F029         	call	_EUSART_FlushBuffer	;wreg free
 12077                           
 12078                           ;MOTEapp.c: 1355: INTCONbits.IOCIE = 0;
 12079  003B4E  96F2               	bcf	intcon,3,c	;volatile
 12080                           
 12081                           ;MOTEapp.c: 1356: IOCCbits.IOCC0 = 0;
 12082  003B50  9087               	bcf	3975,0,c	;volatile
 12083                           
 12084                           ;MOTEapp.c: 1357: IOCCbits.IOCC1 = 0;
 12085  003B52  9287               	bcf	3975,1,c	;volatile
 12086                           
 12087                           ;MOTEapp.c: 1358: IOCCbits.IOCC2 = 0;
 12088  003B54  9487               	bcf	3975,2,c	;volatile
 12089                           
 12090                           ;MOTEapp.c: 1359: PIE2bits.C1IE = 0;
 12091  003B56  9CA0               	bcf	4000,6,c	;volatile
 12092                           
 12093                           ;MOTEapp.c: 1360: GIE = 1;
 12094  003B58  8EF2               	bsf	intcon,7,c	;volatile
 12095                           
 12096                           ;MOTEapp.c: 1362: PIN_MANAGER_Initialize();
 12097  003B5A  ECE8  F028         	call	_PIN_MANAGER_Initialize	;wreg free
 12098                           
 12099                           ;MOTEapp.c: 1364: if ((INTCONbits.IOCIF) )
 12100  003B5E  A0F2               	btfss	intcon,0,c	;volatile
 12101  003B60  D003               	goto	l11324
 12102                           
 12103                           ;MOTEapp.c: 1365: {
 12104                           ;MOTEapp.c: 1366: INTCONbits.IOCIF = 0;
 12105  003B62  90F2               	bcf	intcon,0,c	;volatile
 12106                           
 12107                           ;MOTEapp.c: 1367: status = 1;
 12108  003B64  0E01               	movlw	1
 12109  003B66  D004               	goto	L6
 12110  003B68                     l11324:
 12111                           
 12112                           ;MOTEapp.c: 1369: else
 12113                           ;MOTEapp.c: 1370: {
 12114                           ;MOTEapp.c: 1371: secTicker = 10;
 12115  003B68  0E0A               	movlw	10
 12116  003B6A  0100               	movlb	0	; () banked
 12117  003B6C  6FB3               	movwf	_secTicker& (0+255),b
 12118                           
 12119                           ;MOTEapp.c: 1372: status = 0;
 12120  003B6E  0E00               	movlw	0
 12121  003B70                     L6:
 12122  003B70  0100               	movlb	0	; () banked
 12123  003B72  6FD2               	movwf	moteApp_GoToSleep@status& (0+255),b
 12124                           
 12125                           ; BSR set to: 0
 12126                           ;MOTEapp.c: 1373: }
 12127                           ;MOTEapp.c: 1374: ANSELAbits.ANSA0 = 0;
 12128                           
 12129                           ; BSR set to: 0
 12130  003B74  010F               	movlb	15	; () banked
 12131  003B76  915B               	bcf	91,0,b	;volatile
 12132                           
 12133                           ; BSR set to: 15
 12134                           ;MOTEapp.c: 1375: oled_displayOff(0);
 12135  003B78  0E00               	movlw	0
 12136  003B7A  EC4B  F02C         	call	_oled_displayOff
 12137                           
 12138                           ;MOTEapp.c: 1376: oled_init();
 12139  003B7E  ECB2  F02B         	call	_oled_init	;wreg free
 12140                           
 12141                           ;MOTEapp.c: 1378: moduleResync();
 12142  003B82  EC20  F025         	call	_moduleResync	;wreg free
 12143                           
 12144                           ;MOTEapp.c: 1379: moteApp_delayms(40);
 12145  003B86  0E00               	movlw	0
 12146  003B88  0100               	movlb	0	; () banked
 12147  003B8A  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12148  003B8C  0E28               	movlw	40
 12149  003B8E  6FC3               	movwf	moteApp_delayms@length& (0+255),b
 12150  003B90  EC73  F02A         	call	_moteApp_delayms	;wreg free
 12151                           
 12152                           ;MOTEapp.c: 1380: moduleResync();
 12153  003B94  EC20  F025         	call	_moduleResync	;wreg free
 12154                           
 12155                           ;MOTEapp.c: 1381: moteApp_delayms(40);
 12156  003B98  0E00               	movlw	0
 12157  003B9A  0100               	movlb	0	; () banked
 12158  003B9C  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12159  003B9E  0E28               	movlw	40
 12160  003BA0  6FC3               	movwf	moteApp_delayms@length& (0+255),b
 12161  003BA2  EC73  F02A         	call	_moteApp_delayms	;wreg free
 12162                           
 12163                           ;MOTEapp.c: 1382: return status;
 12164  003BA6  0100               	movlb	0	; () banked
 12165  003BA8  51D2               	movf	moteApp_GoToSleep@status& (0+255),w,b
 12166  003BAA  0012               	return	
 12167  003BAC                     __end_of_moteApp_GoToSleep:
 12168                           	opt stack 0
 12169                           tblptru	equ	0xFF8
 12170                           tblptrh	equ	0xFF7
 12171                           tblptrl	equ	0xFF6
 12172                           tablat	equ	0xFF5
 12173                           prodh	equ	0xFF4
 12174                           prodl	equ	0xFF3
 12175                           intcon	equ	0xFF2
 12176                           postinc0	equ	0xFEE
 12177                           wreg	equ	0xFE8
 12178                           indf1	equ	0xFE7
 12179                           postdec1	equ	0xFE5
 12180                           fsr1h	equ	0xFE2
 12181                           fsr1l	equ	0xFE1
 12182                           indf2	equ	0xFDF
 12183                           fsr2h	equ	0xFDA
 12184                           fsr2l	equ	0xFD9
 12185                           status	equ	0xFD8
 12186                           
 12187 ;; *************** function _oled_init *****************
 12188 ;; Defined at:
 12189 ;;		line 338 in file "../Includes/Drivers/SSD1306oLED.c"
 12190 ;; Parameters:    Size  Location     Type
 12191 ;;		None
 12192 ;; Auto vars:     Size  Location     Type
 12193 ;;		None
 12194 ;; Return value:  Size  Location     Type
 12195 ;;		None               void
 12196 ;; Registers used:
 12197 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12198 ;; Tracked objects:
 12199 ;;		On entry : 0/0
 12200 ;;		On exit  : 0/0
 12201 ;;		Unchanged: 0/0
 12202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12203 ;;      Params:         0       0       0       0       0       0       0       0       0
 12204 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12205 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12206 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12207 ;;Total ram usage:        0 bytes
 12208 ;; Hardware stack levels used:    1
 12209 ;; Hardware stack levels required when called:   17
 12210 ;; This function calls:
 12211 ;;		_oled_clear
 12212 ;;		_oled_devInit
 12213 ;;		_oled_setDisplay
 12214 ;;		_oled_setFont
 12215 ;; This function is called by:
 12216 ;;		_main
 12217 ;;		_moteApp_GoToSleep
 12218 ;; This function uses a non-reentrant model
 12219 ;;
 12220                           
 12221                           	psect	text20
 12222  005764                     __ptext20:
 12223                           	opt stack 0
 12224  005764                     _oled_init:
 12225                           	opt stack 13
 12226                           
 12227                           ;SSD1306oLED.c: 341: TRISBbits.TRISB2=0;
 12228                           
 12229                           ; BSR set to: 0
 12230                           ;incstack = 0
 12231  005764  9493               	bcf	3987,2,c	;volatile
 12232                           
 12233                           ;SSD1306oLED.c: 342: TRISBbits.TRISB4=0;
 12234  005766  9893               	bcf	3987,4,c	;volatile
 12235                           
 12236                           ;SSD1306oLED.c: 343: TRISBbits.TRISB5=0;
 12237  005768  9A93               	bcf	3987,5,c	;volatile
 12238                           
 12239                           ;SSD1306oLED.c: 345: oled_devInit();
 12240  00576A  ECB1  F01E         	call	_oled_devInit	;wreg free
 12241                           
 12242                           ;SSD1306oLED.c: 346: oled_setDisplay(Normal);
 12243  00576E  0E00               	movlw	0
 12244  005770  EC0A  F02C         	call	_oled_setDisplay
 12245                           
 12246                           ;SSD1306oLED.c: 347: oled_setFont(OledFont0);
 12247  005774  0E8B               	movlw	low _OledFont0
 12248  005776  0100               	movlb	0	; () banked
 12249  005778  6FC3               	movwf	oled_setFont@font& (0+255),b
 12250  00577A  0E75               	movlw	high _OledFont0
 12251  00577C  0100               	movlb	0	; () banked
 12252  00577E  6FC4               	movwf	(oled_setFont@font+1)& (0+255),b
 12253  005780  EC40  F02C         	call	_oled_setFont	;wreg free
 12254                           
 12255                           ;SSD1306oLED.c: 348: oled_clear();
 12256  005784  EC26  F02C         	call	_oled_clear	;wreg free
 12257  005788  0012               	return		;funcret
 12258  00578A                     __end_of_oled_init:
 12259                           	opt stack 0
 12260                           tblptru	equ	0xFF8
 12261                           tblptrh	equ	0xFF7
 12262                           tblptrl	equ	0xFF6
 12263                           tablat	equ	0xFF5
 12264                           prodh	equ	0xFF4
 12265                           prodl	equ	0xFF3
 12266                           intcon	equ	0xFF2
 12267                           postinc0	equ	0xFEE
 12268                           wreg	equ	0xFE8
 12269                           indf1	equ	0xFE7
 12270                           postdec1	equ	0xFE5
 12271                           fsr1h	equ	0xFE2
 12272                           fsr1l	equ	0xFE1
 12273                           indf2	equ	0xFDF
 12274                           fsr2h	equ	0xFDA
 12275                           fsr2l	equ	0xFD9
 12276                           status	equ	0xFD8
 12277                           
 12278 ;; *************** function _oled_setFont *****************
 12279 ;; Defined at:
 12280 ;;		line 248 in file "../Includes/Drivers/SSD1306oLED.c"
 12281 ;; Parameters:    Size  Location     Type
 12282 ;;  font            2    0[BANK0 ] PTR const unsigned char 
 12283 ;;		 -> OledFont0(768), 
 12284 ;; Auto vars:     Size  Location     Type
 12285 ;;		None
 12286 ;; Return value:  Size  Location     Type
 12287 ;;		None               void
 12288 ;; Registers used:
 12289 ;;		wreg, status,2, status,0
 12290 ;; Tracked objects:
 12291 ;;		On entry : 0/0
 12292 ;;		On exit  : 0/0
 12293 ;;		Unchanged: 0/0
 12294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12295 ;;      Params:         0       2       0       0       0       0       0       0       0
 12296 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12297 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12298 ;;      Totals:         0       2       0       0       0       0       0       0       0
 12299 ;;Total ram usage:        2 bytes
 12300 ;; Hardware stack levels used:    1
 12301 ;; Hardware stack levels required when called:   11
 12302 ;; This function calls:
 12303 ;;		Nothing
 12304 ;; This function is called by:
 12305 ;;		_oled_init
 12306 ;; This function uses a non-reentrant model
 12307 ;;
 12308                           
 12309                           	psect	text21
 12310  005880                     __ptext21:
 12311                           	opt stack 0
 12312  005880                     _oled_setFont:
 12313                           	opt stack 18
 12314                           
 12315                           ;SSD1306oLED.c: 250: if(font!=0)
 12316                           
 12317                           ;incstack = 0
 12318  005880  0100               	movlb	0	; () banked
 12319  005882  51C3               	movf	oled_setFont@font& (0+255),w,b
 12320  005884  0100               	movlb	0	; () banked
 12321  005886  11C4               	iorwf	(oled_setFont@font+1)& (0+255),w,b
 12322  005888  B4D8               	btfsc	status,2,c
 12323  00588A  0012               	return	
 12324                           
 12325                           ; BSR set to: 0
 12326                           ;SSD1306oLED.c: 251: {
 12327                           ;SSD1306oLED.c: 252: selectedFont=font;
 12328  00588C  C0C3  F0F0         	movff	oled_setFont@font,_selectedFont
 12329  005890  C0C4  F0F1         	movff	oled_setFont@font+1,_selectedFont+1
 12330  005894  0012               	return	
 12331  005896                     __end_of_oled_setFont:
 12332                           	opt stack 0
 12333                           tblptru	equ	0xFF8
 12334                           tblptrh	equ	0xFF7
 12335                           tblptrl	equ	0xFF6
 12336                           tablat	equ	0xFF5
 12337                           prodh	equ	0xFF4
 12338                           prodl	equ	0xFF3
 12339                           intcon	equ	0xFF2
 12340                           postinc0	equ	0xFEE
 12341                           wreg	equ	0xFE8
 12342                           indf1	equ	0xFE7
 12343                           postdec1	equ	0xFE5
 12344                           fsr1h	equ	0xFE2
 12345                           fsr1l	equ	0xFE1
 12346                           indf2	equ	0xFDF
 12347                           fsr2h	equ	0xFDA
 12348                           fsr2l	equ	0xFD9
 12349                           status	equ	0xFD8
 12350                           
 12351 ;; *************** function _oled_setDisplay *****************
 12352 ;; Defined at:
 12353 ;;		line 412 in file "../Includes/Drivers/SSD1306oLED.c"
 12354 ;; Parameters:    Size  Location     Type
 12355 ;;  displayType     1    wreg     enum E6453
 12356 ;; Auto vars:     Size  Location     Type
 12357 ;;  displayType     1    2[BANK0 ] enum E6453
 12358 ;; Return value:  Size  Location     Type
 12359 ;;		None               void
 12360 ;; Registers used:
 12361 ;;		wreg, status,2, status,0, cstack
 12362 ;; Tracked objects:
 12363 ;;		On entry : 0/0
 12364 ;;		On exit  : 0/0
 12365 ;;		Unchanged: 0/0
 12366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12367 ;;      Params:         0       0       0       0       0       0       0       0       0
 12368 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12369 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12370 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12371 ;;Total ram usage:        1 bytes
 12372 ;; Hardware stack levels used:    1
 12373 ;; Hardware stack levels required when called:   13
 12374 ;; This function calls:
 12375 ;;		_oled_writeCommand
 12376 ;; This function is called by:
 12377 ;;		_oled_init
 12378 ;; This function uses a non-reentrant model
 12379 ;;
 12380                           
 12381                           	psect	text22
 12382  005814                     __ptext22:
 12383                           	opt stack 0
 12384  005814                     _oled_setDisplay:
 12385                           	opt stack 16
 12386                           
 12387                           ; BSR set to: 0
 12388                           ;incstack = 0
 12389                           ;oled_setDisplay@displayType stored from wreg
 12390  005814  0100               	movlb	0	; () banked
 12391  005816  6FC5               	movwf	oled_setDisplay@displayType& (0+255),b
 12392                           
 12393                           ;SSD1306oLED.c: 414: displayType = 0xA6 + displayType;
 12394  005818  0100               	movlb	0	; () banked
 12395  00581A  51C5               	movf	oled_setDisplay@displayType& (0+255),w,b
 12396  00581C  0FA6               	addlw	166
 12397  00581E  0100               	movlb	0	; () banked
 12398  005820  6FC5               	movwf	oled_setDisplay@displayType& (0+255),b
 12399                           
 12400                           ; BSR set to: 0
 12401                           ;SSD1306oLED.c: 416: LATBbits.LATB4 = 0;
 12402  005822  988A               	bcf	3978,4,c	;volatile
 12403                           
 12404                           ; BSR set to: 0
 12405                           ;SSD1306oLED.c: 418: oled_writeCommand(displayType);
 12406  005824  0100               	movlb	0	; () banked
 12407  005826  51C5               	movf	oled_setDisplay@displayType& (0+255),w,b
 12408  005828  ECA2  F02C         	call	_oled_writeCommand
 12409                           
 12410                           ;SSD1306oLED.c: 420: LATBbits.LATB4 = 1;
 12411  00582C  888A               	bsf	3978,4,c	;volatile
 12412  00582E  0012               	return		;funcret
 12413  005830                     __end_of_oled_setDisplay:
 12414                           	opt stack 0
 12415                           tblptru	equ	0xFF8
 12416                           tblptrh	equ	0xFF7
 12417                           tblptrl	equ	0xFF6
 12418                           tablat	equ	0xFF5
 12419                           prodh	equ	0xFF4
 12420                           prodl	equ	0xFF3
 12421                           intcon	equ	0xFF2
 12422                           postinc0	equ	0xFEE
 12423                           wreg	equ	0xFE8
 12424                           indf1	equ	0xFE7
 12425                           postdec1	equ	0xFE5
 12426                           fsr1h	equ	0xFE2
 12427                           fsr1l	equ	0xFE1
 12428                           indf2	equ	0xFDF
 12429                           fsr2h	equ	0xFDA
 12430                           fsr2l	equ	0xFD9
 12431                           status	equ	0xFD8
 12432                           
 12433 ;; *************** function _oled_devInit *****************
 12434 ;; Defined at:
 12435 ;;		line 351 in file "../Includes/Drivers/SSD1306oLED.c"
 12436 ;; Parameters:    Size  Location     Type
 12437 ;;		None
 12438 ;; Auto vars:     Size  Location     Type
 12439 ;;		None
 12440 ;; Return value:  Size  Location     Type
 12441 ;;		None               void
 12442 ;; Registers used:
 12443 ;;		wreg, status,2, cstack
 12444 ;; Tracked objects:
 12445 ;;		On entry : 0/0
 12446 ;;		On exit  : 0/0
 12447 ;;		Unchanged: 0/0
 12448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12449 ;;      Params:         0       0       0       0       0       0       0       0       0
 12450 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12451 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12452 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12453 ;;Total ram usage:        1 bytes
 12454 ;; Hardware stack levels used:    1
 12455 ;; Hardware stack levels required when called:   13
 12456 ;; This function calls:
 12457 ;;		_oled_writeCommand
 12458 ;; This function is called by:
 12459 ;;		_oled_init
 12460 ;; This function uses a non-reentrant model
 12461 ;;
 12462                           
 12463                           	psect	text23
 12464  003D62                     __ptext23:
 12465                           	opt stack 0
 12466  003D62                     _oled_devInit:
 12467                           	opt stack 16
 12468                           
 12469                           ;SSD1306oLED.c: 353: LATBbits.LATB4 = 1;
 12470                           
 12471                           ;incstack = 0
 12472  003D62  888A               	bsf	3978,4,c	;volatile
 12473                           
 12474                           ;SSD1306oLED.c: 355: LATBbits.LATB5 = 1;
 12475  003D64  8A8A               	bsf	3978,5,c	;volatile
 12476                           
 12477                           ;SSD1306oLED.c: 359: LATBbits.LATB2 = 1;
 12478  003D66  848A               	bsf	3978,2,c	;volatile
 12479                           
 12480                           ;SSD1306oLED.c: 360: _delay((unsigned long)((20)*(48000000/4000000.0)));
 12481  003D68  0E50               	movlw	80
 12482  003D6A                     u11967:
 12483  003D6A  2EE8               	decfsz	wreg,f,c
 12484  003D6C  D7FE               	goto	u11967
 12485                           
 12486                           ;SSD1306oLED.c: 361: LATBbits.LATB2 = 0;
 12487  003D6E  948A               	bcf	3978,2,c	;volatile
 12488                           
 12489                           ;SSD1306oLED.c: 362: _delay((unsigned long)((200)*(48000000/4000000.0)));
 12490  003D70  0E04               	movlw	4
 12491  003D72  0100               	movlb	0	; () banked
 12492  003D74  6FC5               	movwf	??_oled_devInit& (0+255),b
 12493  003D76  0E1C               	movlw	28
 12494  003D78                     u11977:
 12495  003D78  2EE8               	decfsz	wreg,f,c
 12496  003D7A  D7FE               	goto	u11977
 12497  003D7C  2FC5               	decfsz	??_oled_devInit& (0+255),f,b
 12498  003D7E  D7FC               	goto	u11977
 12499  003D80  D000               	nop2	
 12500                           
 12501                           ;SSD1306oLED.c: 363: LATBbits.LATB2 = 1;
 12502  003D82  848A               	bsf	3978,2,c	;volatile
 12503                           
 12504                           ;SSD1306oLED.c: 365: LATBbits.LATB4 = 0;
 12505  003D84  988A               	bcf	3978,4,c	;volatile
 12506                           
 12507                           ;SSD1306oLED.c: 366: _delay((unsigned long)((200)*(48000000/4000000.0)));
 12508  003D86  0E04               	movlw	4
 12509  003D88  0100               	movlb	0	; () banked
 12510  003D8A  6FC5               	movwf	??_oled_devInit& (0+255),b
 12511  003D8C  0E1C               	movlw	28
 12512  003D8E                     u11987:
 12513  003D8E  2EE8               	decfsz	wreg,f,c
 12514  003D90  D7FE               	goto	u11987
 12515  003D92  2FC5               	decfsz	??_oled_devInit& (0+255),f,b
 12516  003D94  D7FC               	goto	u11987
 12517  003D96  D000               	nop2	
 12518                           
 12519                           ;SSD1306oLED.c: 367: LATBbits.LATB5 = 0;
 12520  003D98  9A8A               	bcf	3978,5,c	;volatile
 12521                           
 12522                           ;SSD1306oLED.c: 368: _delay((unsigned long)((200)*(48000000/4000000.0)));
 12523  003D9A  0E04               	movlw	4
 12524  003D9C  0100               	movlb	0	; () banked
 12525  003D9E  6FC5               	movwf	??_oled_devInit& (0+255),b
 12526  003DA0  0E1C               	movlw	28
 12527  003DA2                     u11997:
 12528  003DA2  2EE8               	decfsz	wreg,f,c
 12529  003DA4  D7FE               	goto	u11997
 12530  003DA6  2FC5               	decfsz	??_oled_devInit& (0+255),f,b
 12531  003DA8  D7FC               	goto	u11997
 12532  003DAA  D000               	nop2	
 12533                           
 12534                           ;SSD1306oLED.c: 371: oled_writeCommand(0xAE);
 12535  003DAC  0EAE               	movlw	174
 12536  003DAE  ECA2  F02C         	call	_oled_writeCommand
 12537                           
 12538                           ;SSD1306oLED.c: 373: oled_writeCommand(0xD5);
 12539  003DB2  0ED5               	movlw	213
 12540  003DB4  ECA2  F02C         	call	_oled_writeCommand
 12541                           
 12542                           ;SSD1306oLED.c: 374: oled_writeCommand(0x80);
 12543  003DB8  0E80               	movlw	128
 12544  003DBA  ECA2  F02C         	call	_oled_writeCommand
 12545                           
 12546                           ;SSD1306oLED.c: 376: oled_writeCommand(0xA8);
 12547  003DBE  0EA8               	movlw	168
 12548  003DC0  ECA2  F02C         	call	_oled_writeCommand
 12549                           
 12550                           ;SSD1306oLED.c: 377: oled_writeCommand(0x1F);
 12551  003DC4  0E1F               	movlw	31
 12552  003DC6  ECA2  F02C         	call	_oled_writeCommand
 12553                           
 12554                           ;SSD1306oLED.c: 379: oled_writeCommand(0xD3);
 12555  003DCA  0ED3               	movlw	211
 12556  003DCC  ECA2  F02C         	call	_oled_writeCommand
 12557                           
 12558                           ;SSD1306oLED.c: 380: oled_writeCommand(0x00);
 12559  003DD0  0E00               	movlw	0
 12560  003DD2  ECA2  F02C         	call	_oled_writeCommand
 12561                           
 12562                           ;SSD1306oLED.c: 382: oled_writeCommand(0x8D);
 12563  003DD6  0E8D               	movlw	141
 12564  003DD8  ECA2  F02C         	call	_oled_writeCommand
 12565                           
 12566                           ;SSD1306oLED.c: 383: oled_writeCommand(0x14);
 12567  003DDC  0E14               	movlw	20
 12568  003DDE  ECA2  F02C         	call	_oled_writeCommand
 12569                           
 12570                           ;SSD1306oLED.c: 385: oled_writeCommand(0x40);
 12571  003DE2  0E40               	movlw	64
 12572  003DE4  ECA2  F02C         	call	_oled_writeCommand
 12573                           
 12574                           ;SSD1306oLED.c: 387: oled_writeCommand(0xA6);
 12575  003DE8  0EA6               	movlw	166
 12576  003DEA  ECA2  F02C         	call	_oled_writeCommand
 12577                           
 12578                           ;SSD1306oLED.c: 389: oled_writeCommand(0xA4);
 12579  003DEE  0EA4               	movlw	164
 12580  003DF0  ECA2  F02C         	call	_oled_writeCommand
 12581                           
 12582                           ;SSD1306oLED.c: 391: oled_writeCommand(0xA0);
 12583  003DF4  0EA0               	movlw	160
 12584  003DF6  ECA2  F02C         	call	_oled_writeCommand
 12585                           
 12586                           ;SSD1306oLED.c: 393: oled_writeCommand(0xC0);
 12587  003DFA  0EC0               	movlw	192
 12588  003DFC  ECA2  F02C         	call	_oled_writeCommand
 12589                           
 12590                           ;SSD1306oLED.c: 395: oled_writeCommand(0xDA);
 12591  003E00  0EDA               	movlw	218
 12592  003E02  ECA2  F02C         	call	_oled_writeCommand
 12593                           
 12594                           ;SSD1306oLED.c: 396: oled_writeCommand(0x42);
 12595  003E06  0E42               	movlw	66
 12596  003E08  ECA2  F02C         	call	_oled_writeCommand
 12597                           
 12598                           ;SSD1306oLED.c: 398: oled_writeCommand(0x81);
 12599  003E0C  0E81               	movlw	129
 12600  003E0E  ECA2  F02C         	call	_oled_writeCommand
 12601                           
 12602                           ;SSD1306oLED.c: 399: oled_writeCommand(0x7F);
 12603  003E12  0E7F               	movlw	127
 12604  003E14  ECA2  F02C         	call	_oled_writeCommand
 12605                           
 12606                           ;SSD1306oLED.c: 401: oled_writeCommand(0xD9);
 12607  003E18  0ED9               	movlw	217
 12608  003E1A  ECA2  F02C         	call	_oled_writeCommand
 12609                           
 12610                           ;SSD1306oLED.c: 402: oled_writeCommand(0xF1);
 12611  003E1E  0EF1               	movlw	241
 12612  003E20  ECA2  F02C         	call	_oled_writeCommand
 12613                           
 12614                           ;SSD1306oLED.c: 404: oled_writeCommand(0xDB);
 12615  003E24  0EDB               	movlw	219
 12616  003E26  ECA2  F02C         	call	_oled_writeCommand
 12617                           
 12618                           ;SSD1306oLED.c: 405: oled_writeCommand(0x40);
 12619  003E2A  0E40               	movlw	64
 12620  003E2C  ECA2  F02C         	call	_oled_writeCommand
 12621                           
 12622                           ;SSD1306oLED.c: 407: oled_writeCommand(0xAF);
 12623  003E30  0EAF               	movlw	175
 12624  003E32  ECA2  F02C         	call	_oled_writeCommand
 12625                           
 12626                           ;SSD1306oLED.c: 408: LATBbits.LATB4 = 1;
 12627  003E36  888A               	bsf	3978,4,c	;volatile
 12628  003E38  0012               	return		;funcret
 12629  003E3A                     __end_of_oled_devInit:
 12630                           	opt stack 0
 12631                           tblptru	equ	0xFF8
 12632                           tblptrh	equ	0xFF7
 12633                           tblptrl	equ	0xFF6
 12634                           tablat	equ	0xFF5
 12635                           prodh	equ	0xFF4
 12636                           prodl	equ	0xFF3
 12637                           intcon	equ	0xFF2
 12638                           postinc0	equ	0xFEE
 12639                           wreg	equ	0xFE8
 12640                           indf1	equ	0xFE7
 12641                           postdec1	equ	0xFE5
 12642                           fsr1h	equ	0xFE2
 12643                           fsr1l	equ	0xFE1
 12644                           indf2	equ	0xFDF
 12645                           fsr2h	equ	0xFDA
 12646                           fsr2l	equ	0xFD9
 12647                           status	equ	0xFD8
 12648                           
 12649 ;; *************** function _oled_displayOff *****************
 12650 ;; Defined at:
 12651 ;;		line 423 in file "../Includes/Drivers/SSD1306oLED.c"
 12652 ;; Parameters:    Size  Location     Type
 12653 ;;  state           1    wreg     unsigned char 
 12654 ;; Auto vars:     Size  Location     Type
 12655 ;;  state           1    2[BANK0 ] unsigned char 
 12656 ;; Return value:  Size  Location     Type
 12657 ;;		None               void
 12658 ;; Registers used:
 12659 ;;		wreg, status,2, status,0, cstack
 12660 ;; Tracked objects:
 12661 ;;		On entry : 0/0
 12662 ;;		On exit  : 0/0
 12663 ;;		Unchanged: 0/0
 12664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12665 ;;      Params:         0       0       0       0       0       0       0       0       0
 12666 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12667 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12668 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12669 ;;Total ram usage:        1 bytes
 12670 ;; Hardware stack levels used:    1
 12671 ;; Hardware stack levels required when called:   13
 12672 ;; This function calls:
 12673 ;;		_oled_writeCommand
 12674 ;; This function is called by:
 12675 ;;		_moteApp_GoToSleep
 12676 ;; This function uses a non-reentrant model
 12677 ;;
 12678                           
 12679                           	psect	text24
 12680  005896                     __ptext24:
 12681                           	opt stack 0
 12682  005896                     _oled_displayOff:
 12683                           	opt stack 14
 12684                           
 12685                           ;incstack = 0
 12686                           ;oled_displayOff@state stored from wreg
 12687  005896  0100               	movlb	0	; () banked
 12688  005898  6FC5               	movwf	oled_displayOff@state& (0+255),b
 12689                           
 12690                           ;SSD1306oLED.c: 425: LATBbits.LATB4 = 0;
 12691  00589A  988A               	bcf	3978,4,c	;volatile
 12692                           
 12693                           ;SSD1306oLED.c: 426: oled_writeCommand(0xAF - state);
 12694  00589C  0100               	movlb	0	; () banked
 12695  00589E  51C5               	movf	oled_displayOff@state& (0+255),w,b
 12696  0058A0  0800               	sublw	0
 12697  0058A2  0FAF               	addlw	175
 12698  0058A4  ECA2  F02C         	call	_oled_writeCommand
 12699                           
 12700                           ;SSD1306oLED.c: 427: LATBbits.LATB4 = 1;
 12701  0058A8  888A               	bsf	3978,4,c	;volatile
 12702  0058AA  0012               	return		;funcret
 12703  0058AC                     __end_of_oled_displayOff:
 12704                           	opt stack 0
 12705                           tblptru	equ	0xFF8
 12706                           tblptrh	equ	0xFF7
 12707                           tblptrl	equ	0xFF6
 12708                           tablat	equ	0xFF5
 12709                           prodh	equ	0xFF4
 12710                           prodl	equ	0xFF3
 12711                           intcon	equ	0xFF2
 12712                           postinc0	equ	0xFEE
 12713                           wreg	equ	0xFE8
 12714                           indf1	equ	0xFE7
 12715                           postdec1	equ	0xFE5
 12716                           fsr1h	equ	0xFE2
 12717                           fsr1l	equ	0xFE1
 12718                           indf2	equ	0xFDF
 12719                           fsr2h	equ	0xFDA
 12720                           fsr2l	equ	0xFD9
 12721                           status	equ	0xFD8
 12722                           
 12723 ;; *************** function _moduleSleep *****************
 12724 ;; Defined at:
 12725 ;;		line 169 in file "../Includes/Board/MOTEapp.c"
 12726 ;; Parameters:    Size  Location     Type
 12727 ;;		None
 12728 ;; Auto vars:     Size  Location     Type
 12729 ;;		None
 12730 ;; Return value:  Size  Location     Type
 12731 ;;		None               void
 12732 ;; Registers used:
 12733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12734 ;; Tracked objects:
 12735 ;;		On entry : 0/0
 12736 ;;		On exit  : 0/0
 12737 ;;		Unchanged: 0/0
 12738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12739 ;;      Params:         0       0       0       0       0       0       0       0       0
 12740 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12741 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12742 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12743 ;;Total ram usage:        1 bytes
 12744 ;; Hardware stack levels used:    1
 12745 ;; Hardware stack levels required when called:   14
 12746 ;; This function calls:
 12747 ;;		_sendCommand
 12748 ;; This function is called by:
 12749 ;;		_moteApp_GoToSleep
 12750 ;; This function uses a non-reentrant model
 12751 ;;
 12752                           
 12753                           	psect	text25
 12754  005714                     __ptext25:
 12755                           	opt stack 0
 12756  005714                     _moduleSleep:
 12757                           	opt stack 13
 12758                           
 12759                           ;MOTEapp.c: 171: sendCommand("sys sleep 999999999");
 12760                           
 12761                           ;incstack = 0
 12762  005714  0EB4               	movlw	low STR_22
 12763  005716  0100               	movlb	0	; () banked
 12764  005718  6FC4               	movwf	sendCommand@string& (0+255),b
 12765  00571A  0E79               	movlw	high STR_22
 12766  00571C  0100               	movlb	0	; () banked
 12767  00571E  6FC5               	movwf	(sendCommand@string+1)& (0+255),b
 12768  005720  EC2F  F02B         	call	_sendCommand	;wreg free
 12769  005724                     l362:
 12770  005724  B89D               	btfsc	3997,4,c	;volatile
 12771  005726  D7FE               	goto	l362
 12772                           
 12773                           ;MOTEapp.c: 174: _delay((unsigned long)((16)*(48000000/4000.0)));
 12774  005728  0EFA               	movlw	250
 12775  00572A  0100               	movlb	0	; () banked
 12776  00572C  6FC6               	movwf	??_moduleSleep& (0+255),b
 12777  00572E  0E58               	movlw	88
 12778  005730                     u12007:
 12779  005730  2EE8               	decfsz	wreg,f,c
 12780  005732  D7FE               	goto	u12007
 12781  005734  2FC6               	decfsz	??_moduleSleep& (0+255),f,b
 12782  005736  D7FC               	goto	u12007
 12783  005738  D000               	nop2	
 12784  00573A  0012               	return		;funcret
 12785  00573C                     __end_of_moduleSleep:
 12786                           	opt stack 0
 12787                           tblptru	equ	0xFF8
 12788                           tblptrh	equ	0xFF7
 12789                           tblptrl	equ	0xFF6
 12790                           tablat	equ	0xFF5
 12791                           prodh	equ	0xFF4
 12792                           prodl	equ	0xFF3
 12793                           intcon	equ	0xFF2
 12794                           postinc0	equ	0xFEE
 12795                           wreg	equ	0xFE8
 12796                           indf1	equ	0xFE7
 12797                           postdec1	equ	0xFE5
 12798                           fsr1h	equ	0xFE2
 12799                           fsr1l	equ	0xFE1
 12800                           indf2	equ	0xFDF
 12801                           fsr2h	equ	0xFDA
 12802                           fsr2l	equ	0xFD9
 12803                           status	equ	0xFD8
 12804                           
 12805 ;; *************** function _moduleResync *****************
 12806 ;; Defined at:
 12807 ;;		line 129 in file "../Includes/Board/MOTEapp.c"
 12808 ;; Parameters:    Size  Location     Type
 12809 ;;		None
 12810 ;; Auto vars:     Size  Location     Type
 12811 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 12812 ;;  escapeEvent     1    7[BANK0 ] unsigned char 
 12813 ;; Return value:  Size  Location     Type
 12814 ;;		None               void
 12815 ;; Registers used:
 12816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12817 ;; Tracked objects:
 12818 ;;		On entry : 0/0
 12819 ;;		On exit  : 0/0
 12820 ;;		Unchanged: 0/0
 12821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12822 ;;      Params:         0       0       0       0       0       0       0       0       0
 12823 ;;      Locals:         0       3       0       0       0       0       0       0       0
 12824 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12825 ;;      Totals:         0       3       0       0       0       0       0       0       0
 12826 ;;Total ram usage:        3 bytes
 12827 ;; Hardware stack levels used:    1
 12828 ;; Hardware stack levels required when called:   14
 12829 ;; This function calls:
 12830 ;;		_MOTEapp_getModuleResponse
 12831 ;;		_moteApp_delayms
 12832 ;;		_sendCommand
 12833 ;; This function is called by:
 12834 ;;		_main
 12835 ;;		_moteApp_GoToSleep
 12836 ;; This function uses a non-reentrant model
 12837 ;;
 12838                           
 12839                           	psect	text26
 12840  004A40                     __ptext26:
 12841                           	opt stack 0
 12842  004A40                     _moduleResync:
 12843                           	opt stack 13
 12844                           
 12845                           ;MOTEapp.c: 131: bool escapeEvent = 0;
 12846                           
 12847                           ;incstack = 0
 12848  004A40  0E00               	movlw	0
 12849  004A42  0100               	movlb	0	; () banked
 12850  004A44  6FCA               	movwf	moduleResync@escapeEvent& (0+255),b
 12851                           
 12852                           ;MOTEapp.c: 132: uint16_t escapeCounter = 0;
 12853  004A46  0E00               	movlw	0
 12854  004A48  0100               	movlb	0	; () banked
 12855  004A4A  6FC9               	movwf	(moduleResync@escapeCounter+1)& (0+255),b
 12856  004A4C  0E00               	movlw	0
 12857  004A4E  6FC8               	movwf	moduleResync@escapeCounter& (0+255),b
 12858                           
 12859                           ; BSR set to: 0
 12860                           ;MOTEapp.c: 139: TXSTAbits.TXEN = 0;
 12861  004A50  9AAC               	bcf	4012,5,c	;volatile
 12862                           
 12863                           ; BSR set to: 0
 12864                           ;MOTEapp.c: 140: LATCbits.LATC6 = 0;
 12865  004A52  9C8B               	bcf	3979,6,c	;volatile
 12866                           
 12867                           ; BSR set to: 0
 12868                           ;MOTEapp.c: 141: moteApp_delayms(10);
 12869  004A54  0E00               	movlw	0
 12870  004A56  0100               	movlb	0	; () banked
 12871  004A58  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12872  004A5A  0E0A               	movlw	10
 12873  004A5C  6FC3               	movwf	moteApp_delayms@length& (0+255),b
 12874  004A5E  EC73  F02A         	call	_moteApp_delayms	;wreg free
 12875                           
 12876                           ;MOTEapp.c: 142: TXSTAbits.TXEN = 1;
 12877  004A62  8AAC               	bsf	4012,5,c	;volatile
 12878                           
 12879                           ;MOTEapp.c: 143: moteApp_delayms(5);
 12880  004A64  0E00               	movlw	0
 12881  004A66  0100               	movlb	0	; () banked
 12882  004A68  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12883  004A6A  0E05               	movlw	5
 12884  004A6C  6FC3               	movwf	moteApp_delayms@length& (0+255),b
 12885  004A6E  EC73  F02A         	call	_moteApp_delayms	;wreg free
 12886                           
 12887                           ;MOTEapp.c: 145: TXREG = 0x55;
 12888  004A72  0E55               	movlw	85
 12889  004A74  6EAD               	movwf	4013,c	;volatile
 12890  004A76                     l344:
 12891  004A76  A2AC               	btfss	4012,1,c	;volatile
 12892  004A78  D7FE               	goto	l344
 12893                           
 12894                           ;MOTEapp.c: 149: sendCommand("z");
 12895  004A7A  0EFC               	movlw	low STR_21
 12896  004A7C  0100               	movlb	0	; () banked
 12897  004A7E  6FC4               	movwf	sendCommand@string& (0+255),b
 12898  004A80  0E7F               	movlw	high STR_21
 12899  004A82  0100               	movlb	0	; () banked
 12900  004A84  6FC5               	movwf	(sendCommand@string+1)& (0+255),b
 12901  004A86  EC2F  F02B         	call	_sendCommand	;wreg free
 12902                           
 12903                           ;MOTEapp.c: 150: moteApp_delayms(40);
 12904  004A8A  0E00               	movlw	0
 12905  004A8C  0100               	movlb	0	; () banked
 12906  004A8E  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12907  004A90  0E28               	movlw	40
 12908  004A92  6FC3               	movwf	moteApp_delayms@length& (0+255),b
 12909  004A94  EC73  F02A         	call	_moteApp_delayms	;wreg free
 12910                           
 12911                           ;MOTEapp.c: 151: while (escapeEvent)
 12912  004A98  D013               	goto	l347
 12913  004A9A                     l10790:
 12914                           
 12915                           ;MOTEapp.c: 152: {
 12916                           ;MOTEapp.c: 153: if(MOTEapp_getModuleResponse())
 12917  004A9A  EC65  F026         	call	_MOTEapp_getModuleResponse	;wreg free
 12918  004A9E  0900               	iorlw	0
 12919  004AA0  A4D8               	btfss	status,2,c
 12920  004AA2  D00B               	goto	l10796
 12921                           
 12922                           ;MOTEapp.c: 155: else if (++escapeCounter > 5000)
 12923                           
 12924                           ; BSR set to: 0
 12925                           
 12926                           ;MOTEapp.c: 154: escapeEvent = 1;
 12927  004AA4  0100               	movlb	0	; () banked
 12928  004AA6  4BC8               	infsnz	moduleResync@escapeCounter& (0+255),f,b
 12929  004AA8  2BC9               	incf	(moduleResync@escapeCounter+1)& (0+255),f,b
 12930  004AAA  0E89               	movlw	137
 12931  004AAC  0100               	movlb	0	; () banked
 12932  004AAE  5DC8               	subwf	moduleResync@escapeCounter& (0+255),w,b
 12933  004AB0  0E13               	movlw	19
 12934  004AB2  0100               	movlb	0	; () banked
 12935  004AB4  59C9               	subwfb	(moduleResync@escapeCounter+1)& (0+255),w,b
 12936  004AB6  A0D8               	btfss	status,0,c
 12937  004AB8  D003               	goto	l347
 12938  004ABA                     l10796:
 12939                           
 12940                           ; BSR set to: 0
 12941                           ;MOTEapp.c: 156: escapeEvent = 1;
 12942  004ABA  0E01               	movlw	1
 12943  004ABC  0100               	movlb	0	; () banked
 12944  004ABE  6FCA               	movwf	moduleResync@escapeEvent& (0+255),b
 12945  004AC0                     l347:
 12946  004AC0  0100               	movlb	0	; () banked
 12947  004AC2  51CA               	movf	moduleResync@escapeEvent& (0+255),w,b
 12948  004AC4  0100               	movlb	0	; () banked
 12949  004AC6  B4D8               	btfsc	status,2,c
 12950  004AC8  0012               	return	
 12951  004ACA  D7E7               	goto	l10790
 12952  004ACC                     __end_of_moduleResync:
 12953                           	opt stack 0
 12954                           tblptru	equ	0xFF8
 12955                           tblptrh	equ	0xFF7
 12956                           tblptrl	equ	0xFF6
 12957                           tablat	equ	0xFF5
 12958                           prodh	equ	0xFF4
 12959                           prodl	equ	0xFF3
 12960                           intcon	equ	0xFF2
 12961                           postinc0	equ	0xFEE
 12962                           wreg	equ	0xFE8
 12963                           indf1	equ	0xFE7
 12964                           postdec1	equ	0xFE5
 12965                           fsr1h	equ	0xFE2
 12966                           fsr1l	equ	0xFE1
 12967                           indf2	equ	0xFDF
 12968                           fsr2h	equ	0xFDA
 12969                           fsr2l	equ	0xFD9
 12970                           status	equ	0xFD8
 12971                           
 12972 ;; *************** function _MOTEapp_getModuleResponse *****************
 12973 ;; Defined at:
 12974 ;;		line 1199 in file "../Includes/Board/MOTEapp.c"
 12975 ;; Parameters:    Size  Location     Type
 12976 ;;		None
 12977 ;; Auto vars:     Size  Location     Type
 12978 ;;  bufferByte      1    2[BANK0 ] unsigned char 
 12979 ;;  terminatorRe    1    1[BANK0 ] unsigned char 
 12980 ;; Return value:  Size  Location     Type
 12981 ;;                  1    wreg      unsigned char 
 12982 ;; Registers used:
 12983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12984 ;; Tracked objects:
 12985 ;;		On entry : 0/0
 12986 ;;		On exit  : 0/0
 12987 ;;		Unchanged: 0/0
 12988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12989 ;;      Params:         0       0       0       0       0       0       0       0       0
 12990 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12991 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12992 ;;      Totals:         0       2       0       0       0       0       0       0       0
 12993 ;;Total ram usage:        2 bytes
 12994 ;; Hardware stack levels used:    1
 12995 ;; Hardware stack levels required when called:   12
 12996 ;; This function calls:
 12997 ;;		_EUSART_Read
 12998 ;; This function is called by:
 12999 ;;		_moduleResync
 13000 ;;		_moteHandler
 13001 ;; This function uses a non-reentrant model
 13002 ;;
 13003                           
 13004                           	psect	text27
 13005  004CCA                     __ptext27:
 13006                           	opt stack 0
 13007  004CCA                     _MOTEapp_getModuleResponse:
 13008                           	opt stack 14
 13009                           
 13010                           ;MOTEapp.c: 1201: bool terminatorReceived = 0;
 13011                           
 13012                           ; BSR set to: 0
 13013                           ;incstack = 0
 13014  004CCA  0E00               	movlw	0
 13015  004CCC  0100               	movlb	0	; () banked
 13016  004CCE  6FC4               	movwf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),b
 13017                           
 13018                           ;MOTEapp.c: 1203: if ((eusartRxCount))
 13019  004CD0  5026               	movf	_eusartRxCount,w,c	;volatile
 13020  004CD2  B4D8               	btfsc	status,2,c
 13021  004CD4  D031               	goto	l10688
 13022                           
 13023                           ; BSR set to: 0
 13024                           ;MOTEapp.c: 1204: {
 13025                           ;MOTEapp.c: 1205: uint8_t bufferByte = 0;
 13026  004CD6  0E00               	movlw	0
 13027  004CD8  0100               	movlb	0	; () banked
 13028  004CDA  6FC5               	movwf	MOTEapp_getModuleResponse@bufferByte& (0+255),b
 13029                           
 13030                           ; BSR set to: 0
 13031                           ;MOTEapp.c: 1206: bufferByte = EUSART_Read();
 13032  004CDC  EC5A  F029         	call	_EUSART_Read	;wreg free
 13033  004CE0  0100               	movlb	0	; () banked
 13034  004CE2  6FC5               	movwf	MOTEapp_getModuleResponse@bufferByte& (0+255),b
 13035                           
 13036                           ; BSR set to: 0
 13037                           ;MOTEapp.c: 1208: if (bufferByte == 0x0D)
 13038  004CE4  0E0D               	movlw	13
 13039  004CE6  0100               	movlb	0	; () banked
 13040  004CE8  19C5               	xorwf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 13041  004CEA  A4D8               	btfss	status,2,c
 13042  004CEC  D010               	goto	l10680
 13043                           
 13044                           ; BSR set to: 0
 13045                           ;MOTEapp.c: 1209: {
 13046                           ;MOTEapp.c: 1210: moduleResonseBuffer[moduleBufferIndex] = 0x00;
 13047  004CEE  5029               	movf	_moduleBufferIndex,w,c
 13048  004CF0  0D01               	mullw	1
 13049  004CF2  0E64               	movlw	low _moduleResonseBuffer
 13050  004CF4  24F3               	addwf	prodl,w,c
 13051  004CF6  6ED9               	movwf	fsr2l,c
 13052  004CF8  0E01               	movlw	high _moduleResonseBuffer
 13053  004CFA  20F4               	addwfc	prodh,w,c
 13054  004CFC  6EDA               	movwf	fsr2h,c
 13055  004CFE  0E00               	movlw	0
 13056  004D00  6EDF               	movwf	indf2,c
 13057                           
 13058                           ; BSR set to: 0
 13059                           ;MOTEapp.c: 1211: terminatorReceived = 1;
 13060  004D02  0E01               	movlw	1
 13061  004D04  0100               	movlb	0	; () banked
 13062  004D06  6FC4               	movwf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),b
 13063                           
 13064                           ; BSR set to: 0
 13065                           ;MOTEapp.c: 1212: moduleBufferIndex = 0;
 13066  004D08  0E00               	movlw	0
 13067  004D0A  6E29               	movwf	_moduleBufferIndex,c
 13068                           
 13069                           ;MOTEapp.c: 1213: }
 13070  004D0C  D015               	goto	l10688
 13071  004D0E                     l10680:
 13072                           
 13073                           ; BSR set to: 0
 13074                           ;MOTEapp.c: 1214: else if ( (bufferByte == 0x00) || (bufferByte == 0x0A) )
 13075  004D0E  0100               	movlb	0	; () banked
 13076  004D10  51C5               	movf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 13077  004D12  0100               	movlb	0	; () banked
 13078  004D14  B4D8               	btfsc	status,2,c
 13079  004D16  D010               	goto	l10688
 13080                           
 13081                           ; BSR set to: 0
 13082  004D18  0E0A               	movlw	10
 13083  004D1A  0100               	movlb	0	; () banked
 13084  004D1C  19C5               	xorwf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 13085  004D1E  B4D8               	btfsc	status,2,c
 13086  004D20  D00B               	goto	l10688
 13087                           
 13088                           ; BSR set to: 0
 13089                           ;MOTEapp.c: 1218: else
 13090                           ;MOTEapp.c: 1219: {
 13091                           ;MOTEapp.c: 1220: moduleResonseBuffer[moduleBufferIndex] = bufferByte;
 13092                           
 13093                           ; BSR set to: 0
 13094                           
 13095                           ; BSR set to: 0
 13096                           ;MOTEapp.c: 1215: {
 13097                           ;MOTEapp.c: 1217: }
 13098  004D22  5029               	movf	_moduleBufferIndex,w,c
 13099  004D24  0D01               	mullw	1
 13100  004D26  0E64               	movlw	low _moduleResonseBuffer
 13101  004D28  24F3               	addwf	prodl,w,c
 13102  004D2A  6ED9               	movwf	fsr2l,c
 13103  004D2C  0E01               	movlw	high _moduleResonseBuffer
 13104  004D2E  20F4               	addwfc	prodh,w,c
 13105  004D30  6EDA               	movwf	fsr2h,c
 13106  004D32  C0C5  FFDF         	movff	MOTEapp_getModuleResponse@bufferByte,indf2
 13107                           
 13108                           ; BSR set to: 0
 13109                           ;MOTEapp.c: 1222: moduleBufferIndex++;
 13110  004D36  2A29               	incf	_moduleBufferIndex,f,c
 13111  004D38                     l10688:
 13112                           
 13113                           ; BSR set to: 0
 13114                           ;MOTEapp.c: 1223: }
 13115                           ;MOTEapp.c: 1224: }
 13116                           ;MOTEapp.c: 1225: return terminatorReceived;
 13117  004D38  0100               	movlb	0	; () banked
 13118  004D3A  51C4               	movf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),w,b
 13119  004D3C  0012               	return	
 13120  004D3E                     __end_of_MOTEapp_getModuleResponse:
 13121                           	opt stack 0
 13122                           tblptru	equ	0xFF8
 13123                           tblptrh	equ	0xFF7
 13124                           tblptrl	equ	0xFF6
 13125                           tablat	equ	0xFF5
 13126                           prodh	equ	0xFF4
 13127                           prodl	equ	0xFF3
 13128                           intcon	equ	0xFF2
 13129                           postinc0	equ	0xFEE
 13130                           wreg	equ	0xFE8
 13131                           indf1	equ	0xFE7
 13132                           postdec1	equ	0xFE5
 13133                           fsr1h	equ	0xFE2
 13134                           fsr1l	equ	0xFE1
 13135                           indf2	equ	0xFDF
 13136                           fsr2h	equ	0xFDA
 13137                           fsr2l	equ	0xFD9
 13138                           status	equ	0xFD8
 13139                           
 13140 ;; *************** function _EUSART_FlushBuffer *****************
 13141 ;; Defined at:
 13142 ;;		line 202 in file "../Includes/MccGenerated/eusart.c"
 13143 ;; Parameters:    Size  Location     Type
 13144 ;;		None
 13145 ;; Auto vars:     Size  Location     Type
 13146 ;;  index           1    0[BANK0 ] unsigned char 
 13147 ;; Return value:  Size  Location     Type
 13148 ;;		None               void
 13149 ;; Registers used:
 13150 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13151 ;; Tracked objects:
 13152 ;;		On entry : 0/0
 13153 ;;		On exit  : 0/0
 13154 ;;		Unchanged: 0/0
 13155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13156 ;;      Params:         0       0       0       0       0       0       0       0       0
 13157 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13158 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13159 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13160 ;;Total ram usage:        1 bytes
 13161 ;; Hardware stack levels used:    1
 13162 ;; Hardware stack levels required when called:   11
 13163 ;; This function calls:
 13164 ;;		Nothing
 13165 ;; This function is called by:
 13166 ;;		_moteApp_GoToSleep
 13167 ;; This function uses a non-reentrant model
 13168 ;;
 13169                           
 13170                           	psect	text28
 13171  005220                     __ptext28:
 13172                           	opt stack 0
 13173  005220                     _EUSART_FlushBuffer:
 13174                           	opt stack 16
 13175                           
 13176                           ;eusart.c: 204: uint8_t index;
 13177                           ;eusart.c: 205: for (index=0; index < 64; index++)
 13178                           
 13179                           ; BSR set to: 0
 13180                           ;incstack = 0
 13181  005220  0E00               	movlw	0
 13182  005222  0100               	movlb	0	; () banked
 13183  005224  6FC3               	movwf	EUSART_FlushBuffer@index& (0+255),b
 13184  005226                     l10848:
 13185                           
 13186                           ; BSR set to: 0
 13187  005226  0E3F               	movlw	63
 13188  005228  0100               	movlb	0	; () banked
 13189  00522A  65C3               	cpfsgt	EUSART_FlushBuffer@index& (0+255),b
 13190  00522C  D001               	goto	l10852
 13191  00522E  D00E               	goto	l10858
 13192  005230                     l10852:
 13193                           
 13194                           ; BSR set to: 0
 13195                           ;eusart.c: 206: {
 13196                           ;eusart.c: 207: eusartRxBuffer[index] = 0;
 13197  005230  0100               	movlb	0	; () banked
 13198  005232  51C3               	movf	EUSART_FlushBuffer@index& (0+255),w,b
 13199  005234  0D01               	mullw	1
 13200  005236  0E00               	movlw	low _eusartRxBuffer
 13201  005238  24F3               	addwf	prodl,w,c
 13202  00523A  6ED9               	movwf	fsr2l,c
 13203  00523C  0E02               	movlw	high _eusartRxBuffer
 13204  00523E  20F4               	addwfc	prodh,w,c
 13205  005240  6EDA               	movwf	fsr2h,c
 13206  005242  0E00               	movlw	0
 13207  005244  6EDF               	movwf	indf2,c
 13208                           
 13209                           ; BSR set to: 0
 13210  005246  0100               	movlb	0	; () banked
 13211  005248  2BC3               	incf	EUSART_FlushBuffer@index& (0+255),f,b
 13212  00524A  D7ED               	goto	l10848
 13213  00524C                     l10858:
 13214                           
 13215                           ; BSR set to: 0
 13216                           ;eusart.c: 208: }
 13217                           ;eusart.c: 209: eusartRxHead = 0;
 13218  00524C  0E00               	movlw	0
 13219  00524E  0100               	movlb	0	; () banked
 13220  005250  6FA4               	movwf	_eusartRxHead& (0+255),b
 13221                           
 13222                           ;eusart.c: 210: eusartRxTail = 0;
 13223  005252  0E00               	movlw	0
 13224  005254  0100               	movlb	0	; () banked
 13225  005256  6FA5               	movwf	_eusartRxTail& (0+255),b
 13226                           
 13227                           ;eusart.c: 211: eusartRxCount = 0;
 13228  005258  0E00               	movlw	0
 13229  00525A  6E26               	movwf	_eusartRxCount,c	;volatile
 13230                           
 13231                           ; BSR set to: 0
 13232                           ;eusart.c: 213: PIE1bits.TXIE = 0;
 13233  00525C  989D               	bcf	3997,4,c	;volatile
 13234                           
 13235                           ;eusart.c: 214: eusartTxHead = 0;
 13236  00525E  0E00               	movlw	0
 13237  005260  6E28               	movwf	_eusartTxHead,c
 13238                           
 13239                           ;eusart.c: 215: eusartTxTail = 0;
 13240  005262  0E00               	movlw	0
 13241  005264  0100               	movlb	0	; () banked
 13242  005266  6FA6               	movwf	_eusartTxTail& (0+255),b
 13243                           
 13244                           ;eusart.c: 216: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 13245  005268  0E40               	movlw	64
 13246  00526A  6E27               	movwf	_eusartTxBufferRemaining,c	;volatile
 13247                           
 13248                           ; BSR set to: 0
 13249  00526C  0012               	return		;funcret
 13250  00526E                     __end_of_EUSART_FlushBuffer:
 13251                           	opt stack 0
 13252                           tblptru	equ	0xFF8
 13253                           tblptrh	equ	0xFF7
 13254                           tblptrl	equ	0xFF6
 13255                           tablat	equ	0xFF5
 13256                           prodh	equ	0xFF4
 13257                           prodl	equ	0xFF3
 13258                           intcon	equ	0xFF2
 13259                           postinc0	equ	0xFEE
 13260                           wreg	equ	0xFE8
 13261                           indf1	equ	0xFE7
 13262                           postdec1	equ	0xFE5
 13263                           fsr1h	equ	0xFE2
 13264                           fsr1l	equ	0xFE1
 13265                           indf2	equ	0xFDF
 13266                           fsr2h	equ	0xFDA
 13267                           fsr2l	equ	0xFD9
 13268                           status	equ	0xFD8
 13269                           
 13270 ;; *************** function ___awdiv *****************
 13271 ;; Defined at:
 13272 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 13273 ;; Parameters:    Size  Location     Type
 13274 ;;  dividend        2    0[BANK0 ] int 
 13275 ;;  divisor         2    2[BANK0 ] int 
 13276 ;; Auto vars:     Size  Location     Type
 13277 ;;  quotient        2    6[BANK0 ] int 
 13278 ;;  sign            1    5[BANK0 ] unsigned char 
 13279 ;;  counter         1    4[BANK0 ] unsigned char 
 13280 ;; Return value:  Size  Location     Type
 13281 ;;                  2    0[BANK0 ] int 
 13282 ;; Registers used:
 13283 ;;		wreg, status,2, status,0
 13284 ;; Tracked objects:
 13285 ;;		On entry : 0/0
 13286 ;;		On exit  : 0/0
 13287 ;;		Unchanged: 0/0
 13288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13289 ;;      Params:         0       4       0       0       0       0       0       0       0
 13290 ;;      Locals:         0       4       0       0       0       0       0       0       0
 13291 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13292 ;;      Totals:         0       8       0       0       0       0       0       0       0
 13293 ;;Total ram usage:        8 bytes
 13294 ;; Hardware stack levels used:    1
 13295 ;; Hardware stack levels required when called:   11
 13296 ;; This function calls:
 13297 ;;		Nothing
 13298 ;; This function is called by:
 13299 ;;		_moteRunningProcess
 13300 ;; This function uses a non-reentrant model
 13301 ;;
 13302                           
 13303                           	psect	text29
 13304  00424A                     __ptext29:
 13305                           	opt stack 0
 13306  00424A                     ___awdiv:
 13307                           	opt stack 17
 13308                           
 13309                           ; BSR set to: 0
 13310                           ;incstack = 0
 13311  00424A  0E00               	movlw	0
 13312  00424C  0100               	movlb	0	; () banked
 13313  00424E  6FC8               	movwf	___awdiv@sign& (0+255),b
 13314                           
 13315                           ; BSR set to: 0
 13316  004250  0100               	movlb	0	; () banked
 13317  004252  AFC6               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13318  004254  D008               	goto	l11510
 13319                           
 13320                           ; BSR set to: 0
 13321  004256  0100               	movlb	0	; () banked
 13322  004258  6DC5               	negf	___awdiv@divisor& (0+255),b
 13323  00425A  1FC6               	comf	(___awdiv@divisor+1)& (0+255),f,b
 13324  00425C  B0D8               	btfsc	status,0,c
 13325  00425E  2BC6               	incf	(___awdiv@divisor+1)& (0+255),f,b
 13326                           
 13327                           ; BSR set to: 0
 13328  004260  0E01               	movlw	1
 13329  004262  0100               	movlb	0	; () banked
 13330  004264  6FC8               	movwf	___awdiv@sign& (0+255),b
 13331  004266                     l11510:
 13332                           
 13333                           ; BSR set to: 0
 13334  004266  0100               	movlb	0	; () banked
 13335  004268  AFC4               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 13336  00426A  D008               	goto	l11516
 13337                           
 13338                           ; BSR set to: 0
 13339  00426C  0100               	movlb	0	; () banked
 13340  00426E  6DC3               	negf	___awdiv@dividend& (0+255),b
 13341  004270  1FC4               	comf	(___awdiv@dividend+1)& (0+255),f,b
 13342  004272  B0D8               	btfsc	status,0,c
 13343  004274  2BC4               	incf	(___awdiv@dividend+1)& (0+255),f,b
 13344                           
 13345                           ; BSR set to: 0
 13346  004276  0E01               	movlw	1
 13347  004278  0100               	movlb	0	; () banked
 13348  00427A  1BC8               	xorwf	___awdiv@sign& (0+255),f,b
 13349  00427C                     l11516:
 13350                           
 13351                           ; BSR set to: 0
 13352  00427C  0E00               	movlw	0
 13353  00427E  0100               	movlb	0	; () banked
 13354  004280  6FCA               	movwf	(___awdiv@quotient+1)& (0+255),b
 13355  004282  0E00               	movlw	0
 13356  004284  6FC9               	movwf	___awdiv@quotient& (0+255),b
 13357                           
 13358                           ; BSR set to: 0
 13359  004286  0100               	movlb	0	; () banked
 13360  004288  51C5               	movf	___awdiv@divisor& (0+255),w,b
 13361  00428A  0100               	movlb	0	; () banked
 13362  00428C  11C6               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 13363  00428E  B4D8               	btfsc	status,2,c
 13364  004290  D02C               	goto	l11538
 13365                           
 13366                           ; BSR set to: 0
 13367  004292  0E01               	movlw	1
 13368  004294  0100               	movlb	0	; () banked
 13369  004296  6FC7               	movwf	___awdiv@counter& (0+255),b
 13370  004298  D006               	goto	l11524
 13371  00429A                     l11522:
 13372                           
 13373                           ; BSR set to: 0
 13374  00429A  0100               	movlb	0	; () banked
 13375  00429C  90D8               	bcf	status,0,c
 13376  00429E  37C5               	rlcf	___awdiv@divisor& (0+255),f,b
 13377  0042A0  37C6               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 13378  0042A2  0100               	movlb	0	; () banked
 13379  0042A4  2BC7               	incf	___awdiv@counter& (0+255),f,b
 13380  0042A6                     l11524:
 13381                           
 13382                           ; BSR set to: 0
 13383  0042A6  0100               	movlb	0	; () banked
 13384  0042A8  AFC6               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13385  0042AA  D7F7               	goto	l11522
 13386  0042AC                     l11526:
 13387                           
 13388                           ; BSR set to: 0
 13389  0042AC  0100               	movlb	0	; () banked
 13390  0042AE  90D8               	bcf	status,0,c
 13391  0042B0  37C9               	rlcf	___awdiv@quotient& (0+255),f,b
 13392  0042B2  37CA               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 13393                           
 13394                           ; BSR set to: 0
 13395  0042B4  0100               	movlb	0	; () banked
 13396  0042B6  51C5               	movf	___awdiv@divisor& (0+255),w,b
 13397  0042B8  0100               	movlb	0	; () banked
 13398  0042BA  5DC3               	subwf	___awdiv@dividend& (0+255),w,b
 13399  0042BC  0100               	movlb	0	; () banked
 13400  0042BE  51C6               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13401  0042C0  0100               	movlb	0	; () banked
 13402  0042C2  59C4               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 13403  0042C4  A0D8               	btfss	status,0,c
 13404  0042C6  D00A               	goto	l11534
 13405                           
 13406                           ; BSR set to: 0
 13407  0042C8  0100               	movlb	0	; () banked
 13408  0042CA  51C5               	movf	___awdiv@divisor& (0+255),w,b
 13409  0042CC  0100               	movlb	0	; () banked
 13410  0042CE  5FC3               	subwf	___awdiv@dividend& (0+255),f,b
 13411  0042D0  0100               	movlb	0	; () banked
 13412  0042D2  51C6               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13413  0042D4  0100               	movlb	0	; () banked
 13414  0042D6  5BC4               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 13415                           
 13416                           ; BSR set to: 0
 13417  0042D8  0100               	movlb	0	; () banked
 13418  0042DA  81C9               	bsf	___awdiv@quotient& (0+255),0,b
 13419  0042DC                     l11534:
 13420                           
 13421                           ; BSR set to: 0
 13422  0042DC  0100               	movlb	0	; () banked
 13423  0042DE  90D8               	bcf	status,0,c
 13424  0042E0  33C6               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 13425  0042E2  33C5               	rrcf	___awdiv@divisor& (0+255),f,b
 13426                           
 13427                           ; BSR set to: 0
 13428  0042E4  0100               	movlb	0	; () banked
 13429  0042E6  2FC7               	decfsz	___awdiv@counter& (0+255),f,b
 13430  0042E8  D7E1               	goto	l11526
 13431  0042EA                     l11538:
 13432                           
 13433                           ; BSR set to: 0
 13434  0042EA  0100               	movlb	0	; () banked
 13435  0042EC  51C8               	movf	___awdiv@sign& (0+255),w,b
 13436  0042EE  0100               	movlb	0	; () banked
 13437  0042F0  B4D8               	btfsc	status,2,c
 13438  0042F2  D005               	goto	l11542
 13439                           
 13440                           ; BSR set to: 0
 13441  0042F4  0100               	movlb	0	; () banked
 13442  0042F6  6DC9               	negf	___awdiv@quotient& (0+255),b
 13443  0042F8  1FCA               	comf	(___awdiv@quotient+1)& (0+255),f,b
 13444  0042FA  B0D8               	btfsc	status,0,c
 13445  0042FC  2BCA               	incf	(___awdiv@quotient+1)& (0+255),f,b
 13446  0042FE                     l11542:
 13447                           
 13448                           ; BSR set to: 0
 13449  0042FE  C0C9  F0C3         	movff	___awdiv@quotient,?___awdiv
 13450  004302  C0CA  F0C4         	movff	___awdiv@quotient+1,?___awdiv+1
 13451  004306  0012               	return	
 13452  004308                     __end_of___awdiv:
 13453                           	opt stack 0
 13454                           tblptru	equ	0xFF8
 13455                           tblptrh	equ	0xFF7
 13456                           tblptrl	equ	0xFF6
 13457                           tablat	equ	0xFF5
 13458                           prodh	equ	0xFF4
 13459                           prodl	equ	0xFF3
 13460                           intcon	equ	0xFF2
 13461                           postinc0	equ	0xFEE
 13462                           wreg	equ	0xFE8
 13463                           indf1	equ	0xFE7
 13464                           postdec1	equ	0xFE5
 13465                           fsr1h	equ	0xFE2
 13466                           fsr1l	equ	0xFE1
 13467                           indf2	equ	0xFDF
 13468                           fsr2h	equ	0xFDA
 13469                           fsr2l	equ	0xFD9
 13470                           status	equ	0xFD8
 13471                           
 13472 ;; *************** function _TMR2_ReadTimer *****************
 13473 ;; Defined at:
 13474 ;;		line 87 in file "../Includes/MccGenerated/tmr2.c"
 13475 ;; Parameters:    Size  Location     Type
 13476 ;;		None
 13477 ;; Auto vars:     Size  Location     Type
 13478 ;;  readVal         1    0[BANK0 ] unsigned char 
 13479 ;; Return value:  Size  Location     Type
 13480 ;;                  1    wreg      unsigned char 
 13481 ;; Registers used:
 13482 ;;		wreg, status,2
 13483 ;; Tracked objects:
 13484 ;;		On entry : 0/0
 13485 ;;		On exit  : 0/0
 13486 ;;		Unchanged: 0/0
 13487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13488 ;;      Params:         0       0       0       0       0       0       0       0       0
 13489 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13490 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13491 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13492 ;;Total ram usage:        1 bytes
 13493 ;; Hardware stack levels used:    1
 13494 ;; Hardware stack levels required when called:   11
 13495 ;; This function calls:
 13496 ;;		Nothing
 13497 ;; This function is called by:
 13498 ;;		_moteRunningProcess
 13499 ;; This function uses a non-reentrant model
 13500 ;;
 13501                           
 13502                           	psect	text30
 13503  00597A                     __ptext30:
 13504                           	opt stack 0
 13505  00597A                     _TMR2_ReadTimer:
 13506                           	opt stack 17
 13507                           
 13508                           ;tmr2.c: 88: uint8_t readVal;
 13509                           ;tmr2.c: 90: readVal = TMR2;
 13510                           
 13511                           ; BSR set to: 0
 13512                           ;incstack = 0
 13513  00597A  CFBC F0C3          	movff	4028,TMR2_ReadTimer@readVal	;volatile
 13514                           
 13515                           ;tmr2.c: 92: return readVal;
 13516  00597E  0100               	movlb	0	; () banked
 13517  005980  51C3               	movf	TMR2_ReadTimer@readVal& (0+255),w,b
 13518  005982  0012               	return	
 13519  005984                     __end_of_TMR2_ReadTimer:
 13520                           	opt stack 0
 13521                           tblptru	equ	0xFF8
 13522                           tblptrh	equ	0xFF7
 13523                           tblptrl	equ	0xFF6
 13524                           tablat	equ	0xFF5
 13525                           prodh	equ	0xFF4
 13526                           prodl	equ	0xFF3
 13527                           intcon	equ	0xFF2
 13528                           postinc0	equ	0xFEE
 13529                           wreg	equ	0xFE8
 13530                           indf1	equ	0xFE7
 13531                           postdec1	equ	0xFE5
 13532                           fsr1h	equ	0xFE2
 13533                           fsr1l	equ	0xFE1
 13534                           indf2	equ	0xFDF
 13535                           fsr2h	equ	0xFDA
 13536                           fsr2l	equ	0xFD9
 13537                           status	equ	0xFD8
 13538                           
 13539 ;; *************** function _MOTEapp_SetDataRateSetting *****************
 13540 ;; Defined at:
 13541 ;;		line 1107 in file "../Includes/Board/MOTEapp.c"
 13542 ;; Parameters:    Size  Location     Type
 13543 ;;  dr              1    wreg     unsigned char 
 13544 ;; Auto vars:     Size  Location     Type
 13545 ;;  dr              1    4[BANK0 ] unsigned char 
 13546 ;; Return value:  Size  Location     Type
 13547 ;;		None               void
 13548 ;; Registers used:
 13549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13550 ;; Tracked objects:
 13551 ;;		On entry : 0/0
 13552 ;;		On exit  : 0/0
 13553 ;;		Unchanged: 0/0
 13554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13555 ;;      Params:         0       0       0       0       0       0       0       0       0
 13556 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13557 ;;      Temps:          0       1       0       0       0       0       0       0       0
 13558 ;;      Totals:         0       2       0       0       0       0       0       0       0
 13559 ;;Total ram usage:        2 bytes
 13560 ;; Hardware stack levels used:    1
 13561 ;; Hardware stack levels required when called:   14
 13562 ;; This function calls:
 13563 ;;		_sendCommand
 13564 ;; This function is called by:
 13565 ;;		_moteRunningProcess
 13566 ;; This function uses a non-reentrant model
 13567 ;;
 13568                           
 13569                           	psect	text31
 13570  002500                     __ptext31:
 13571                           	opt stack 0
 13572  002500                     _MOTEapp_SetDataRateSetting:
 13573                           	opt stack 14
 13574                           
 13575                           ; BSR set to: 0
 13576                           ;incstack = 0
 13577                           ;MOTEapp_SetDataRateSetting@dr stored from wreg
 13578  002500  0100               	movlb	0	; () banked
 13579  002502  6FC7               	movwf	MOTEapp_SetDataRateSetting@dr& (0+255),b
 13580                           
 13581                           ;MOTEapp.c: 1109: if (dr != 8)
 13582  002504  0E08               	movlw	8
 13583  002506  0100               	movlb	0	; () banked
 13584  002508  19C7               	xorwf	MOTEapp_SetDataRateSetting@dr& (0+255),w,b
 13585  00250A  B4D8               	btfsc	status,2,c
 13586  00250C  D075               	goto	l11236
 13587                           
 13588                           ; BSR set to: 0
 13589                           ;MOTEapp.c: 1110: {
 13590                           ;MOTEapp.c: 1111: sendCommand("mac set adr off");
 13591  00250E  0E8E               	movlw	low STR_178
 13592  002510  0100               	movlb	0	; () banked
 13593  002512  6FC4               	movwf	sendCommand@string& (0+255),b
 13594  002514  0E7C               	movlw	high STR_178
 13595  002516  0100               	movlb	0	; () banked
 13596  002518  6FC5               	movwf	(sendCommand@string+1)& (0+255),b
 13597  00251A  EC2F  F02B         	call	_sendCommand	;wreg free
 13598                           
 13599                           ;MOTEapp.c: 1112: _delay((unsigned long)((16)*(48000000/4000.0)));
 13600  00251E  0EFA               	movlw	250
 13601  002520  0100               	movlb	0	; () banked
 13602  002522  6FC6               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13603  002524  0E58               	movlw	88
 13604  002526                     u12017:
 13605  002526  2EE8               	decfsz	wreg,f,c
 13606  002528  D7FE               	goto	u12017
 13607  00252A  2FC6               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13608  00252C  D7FC               	goto	u12017
 13609  00252E  D000               	nop2	
 13610                           
 13611                           ;MOTEapp.c: 1113: _delay((unsigned long)((16)*(48000000/4000.0)));
 13612  002530  0EFA               	movlw	250
 13613  002532  0100               	movlb	0	; () banked
 13614  002534  6FC6               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13615  002536  0E58               	movlw	88
 13616  002538                     u12027:
 13617  002538  2EE8               	decfsz	wreg,f,c
 13618  00253A  D7FE               	goto	u12027
 13619  00253C  2FC6               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13620  00253E  D7FC               	goto	u12027
 13621  002540  D000               	nop2	
 13622                           
 13623                           ;MOTEapp.c: 1114: _delay((unsigned long)((16)*(48000000/4000.0)));
 13624  002542  0EFA               	movlw	250
 13625  002544  0100               	movlb	0	; () banked
 13626  002546  6FC6               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13627  002548  0E58               	movlw	88
 13628  00254A                     u12037:
 13629  00254A  2EE8               	decfsz	wreg,f,c
 13630  00254C  D7FE               	goto	u12037
 13631  00254E  2FC6               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13632  002550  D7FC               	goto	u12037
 13633  002552  D000               	nop2	
 13634                           
 13635                           ;MOTEapp.c: 1115: }
 13636                           ;MOTEapp.c: 1117: switch (dr)
 13637  002554  D051               	goto	l11236
 13638  002556                     l11216:
 13639                           
 13640                           ;MOTEapp.c: 1120: sendCommand("mac set dr 0");
 13641  002556  0E87               	movlw	low STR_179
 13642  002558  0100               	movlb	0	; () banked
 13643  00255A  6FC4               	movwf	sendCommand@string& (0+255),b
 13644  00255C  0E7D               	movlw	high STR_179
 13645  00255E  0100               	movlb	0	; () banked
 13646  002560  6FC5               	movwf	(sendCommand@string+1)& (0+255),b
 13647  002562  EC2F  F02B         	call	_sendCommand	;wreg free
 13648                           
 13649                           ;MOTEapp.c: 1121: break;
 13650  002566  D065               	goto	l11238
 13651  002568                     l11218:
 13652                           
 13653                           ;MOTEapp.c: 1123: sendCommand("mac set dr 1");
 13654  002568  0E94               	movlw	low STR_180
 13655  00256A  0100               	movlb	0	; () banked
 13656  00256C  6FC4               	movwf	sendCommand@string& (0+255),b
 13657  00256E  0E7D               	movlw	high STR_180
 13658  002570  0100               	movlb	0	; () banked
 13659  002572  6FC5               	movwf	(sendCommand@string+1)& (0+255),b
 13660  002574  EC2F  F02B         	call	_sendCommand	;wreg free
 13661                           
 13662                           ;MOTEapp.c: 1124: break;
 13663  002578  D05C               	goto	l11238
 13664  00257A                     l11220:
 13665                           
 13666                           ;MOTEapp.c: 1126: sendCommand("mac set dr 2");
 13667  00257A  0EA1               	movlw	low STR_181
 13668  00257C  0100               	movlb	0	; () banked
 13669  00257E  6FC4               	movwf	sendCommand@string& (0+255),b
 13670  002580  0E7D               	movlw	high STR_181
 13671  002582  0100               	movlb	0	; () banked
 13672  002584  6FC5               	movwf	(sendCommand@string+1)& (0+255),b
 13673  002586  EC2F  F02B         	call	_sendCommand	;wreg free
 13674                           
 13675                           ;MOTEapp.c: 1127: break;
 13676  00258A  D053               	goto	l11238
 13677  00258C                     l11222:
 13678                           
 13679                           ;MOTEapp.c: 1129: sendCommand("mac set dr 3");
 13680  00258C  0EAE               	movlw	low STR_182
 13681  00258E  0100               	movlb	0	; () banked
 13682  002590  6FC4               	movwf	sendCommand@string& (0+255),b
 13683  002592  0E7D               	movlw	high STR_182
 13684  002594  0100               	movlb	0	; () banked
 13685  002596  6FC5               	movwf	(sendCommand@string+1)& (0+255),b
 13686  002598  EC2F  F02B         	call	_sendCommand	;wreg free
 13687                           
 13688                           ;MOTEapp.c: 1130: break;
 13689  00259C  D04A               	goto	l11238
 13690  00259E                     l11224:
 13691                           
 13692                           ;MOTEapp.c: 1132: sendCommand("mac set dr 4");
 13693  00259E  0EBB               	movlw	low STR_183
 13694  0025A0  0100               	movlb	0	; () banked
 13695  0025A2  6FC4               	movwf	sendCommand@string& (0+255),b
 13696  0025A4  0E7D               	movlw	high STR_183
 13697  0025A6  0100               	movlb	0	; () banked
 13698  0025A8  6FC5               	movwf	(sendCommand@string+1)& (0+255),b
 13699  0025AA  EC2F  F02B         	call	_sendCommand	;wreg free
 13700                           
 13701                           ;MOTEapp.c: 1133: break;
 13702  0025AE  D041               	goto	l11238
 13703  0025B0                     l11226:
 13704                           
 13705                           ;MOTEapp.c: 1135: sendCommand("mac set dr 5");
 13706  0025B0  0EC8               	movlw	low STR_184
 13707  0025B2  0100               	movlb	0	; () banked
 13708  0025B4  6FC4               	movwf	sendCommand@string& (0+255),b
 13709  0025B6  0E7D               	movlw	high STR_184
 13710  0025B8  0100               	movlb	0	; () banked
 13711  0025BA  6FC5               	movwf	(sendCommand@string+1)& (0+255),b
 13712  0025BC  EC2F  F02B         	call	_sendCommand	;wreg free
 13713                           
 13714                           ;MOTEapp.c: 1136: break;
 13715  0025C0  D038               	goto	l11238
 13716  0025C2                     l11228:
 13717                           
 13718                           ;MOTEapp.c: 1138: sendCommand("mac set dr 6");
 13719  0025C2  0ED5               	movlw	low STR_185
 13720  0025C4  0100               	movlb	0	; () banked
 13721  0025C6  6FC4               	movwf	sendCommand@string& (0+255),b
 13722  0025C8  0E7D               	movlw	high STR_185
 13723  0025CA  0100               	movlb	0	; () banked
 13724  0025CC  6FC5               	movwf	(sendCommand@string+1)& (0+255),b
 13725  0025CE  EC2F  F02B         	call	_sendCommand	;wreg free
 13726                           
 13727                           ;MOTEapp.c: 1139: break;
 13728  0025D2  D02F               	goto	l11238
 13729  0025D4                     l11230:
 13730                           
 13731                           ;MOTEapp.c: 1141: sendCommand("mac set dr 7");
 13732  0025D4  0EE2               	movlw	low STR_186
 13733  0025D6  0100               	movlb	0	; () banked
 13734  0025D8  6FC4               	movwf	sendCommand@string& (0+255),b
 13735  0025DA  0E7D               	movlw	high STR_186
 13736  0025DC  0100               	movlb	0	; () banked
 13737  0025DE  6FC5               	movwf	(sendCommand@string+1)& (0+255),b
 13738  0025E0  EC2F  F02B         	call	_sendCommand	;wreg free
 13739                           
 13740                           ;MOTEapp.c: 1142: break;
 13741  0025E4  D026               	goto	l11238
 13742  0025E6                     l11232:
 13743                           
 13744                           ;MOTEapp.c: 1144: sendCommand("mac set adr on");
 13745  0025E6  0EEB               	movlw	low STR_187
 13746  0025E8  0100               	movlb	0	; () banked
 13747  0025EA  6FC4               	movwf	sendCommand@string& (0+255),b
 13748  0025EC  0E7C               	movlw	high STR_187
 13749  0025EE  0100               	movlb	0	; () banked
 13750  0025F0  6FC5               	movwf	(sendCommand@string+1)& (0+255),b
 13751  0025F2  EC2F  F02B         	call	_sendCommand	;wreg free
 13752                           
 13753                           ;MOTEapp.c: 1146: }
 13754                           
 13755                           ;MOTEapp.c: 1145: break;
 13756  0025F6  D01D               	goto	l11238
 13757  0025F8                     l11236:
 13758  0025F8  0100               	movlb	0	; () banked
 13759  0025FA  51C7               	movf	MOTEapp_SetDataRateSetting@dr& (0+255),w,b
 13760                           
 13761                           ; Switch size 1, requested type "space"
 13762                           ; Number of cases is 9, Range of values is 0 to 8
 13763                           ; switch strategies available:
 13764                           ; Name         Instructions Cycles
 13765                           ; simple_byte           28    15 (average)
 13766                           ;	Chosen strategy is simple_byte
 13767  0025FC  0A00               	xorlw	0	; case 0
 13768  0025FE  B4D8               	btfsc	status,2,c
 13769  002600  D7AA               	goto	l11216
 13770  002602  0A01               	xorlw	1	; case 1
 13771  002604  B4D8               	btfsc	status,2,c
 13772  002606  D7B0               	goto	l11218
 13773  002608  0A03               	xorlw	3	; case 2
 13774  00260A  B4D8               	btfsc	status,2,c
 13775  00260C  D7B6               	goto	l11220
 13776  00260E  0A01               	xorlw	1	; case 3
 13777  002610  B4D8               	btfsc	status,2,c
 13778  002612  D7BC               	goto	l11222
 13779  002614  0A07               	xorlw	7	; case 4
 13780  002616  B4D8               	btfsc	status,2,c
 13781  002618  D7C2               	goto	l11224
 13782  00261A  0A01               	xorlw	1	; case 5
 13783  00261C  B4D8               	btfsc	status,2,c
 13784  00261E  D7C8               	goto	l11226
 13785  002620  0A03               	xorlw	3	; case 6
 13786  002622  B4D8               	btfsc	status,2,c
 13787  002624  D7CE               	goto	l11228
 13788  002626  0A01               	xorlw	1	; case 7
 13789  002628  B4D8               	btfsc	status,2,c
 13790  00262A  D7D4               	goto	l11230
 13791  00262C  0A0F               	xorlw	15	; case 8
 13792  00262E  B4D8               	btfsc	status,2,c
 13793  002630  D7DA               	goto	l11232
 13794  002632                     l11238:
 13795                           
 13796                           ;MOTEapp.c: 1147: _delay((unsigned long)((16)*(48000000/4000.0)));
 13797  002632  0EFA               	movlw	250
 13798  002634  0100               	movlb	0	; () banked
 13799  002636  6FC6               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13800  002638  0E58               	movlw	88
 13801  00263A                     u12047:
 13802  00263A  2EE8               	decfsz	wreg,f,c
 13803  00263C  D7FE               	goto	u12047
 13804  00263E  2FC6               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13805  002640  D7FC               	goto	u12047
 13806  002642  D000               	nop2	
 13807                           
 13808                           ;MOTEapp.c: 1148: _delay((unsigned long)((16)*(48000000/4000.0)));
 13809  002644  0EFA               	movlw	250
 13810  002646  0100               	movlb	0	; () banked
 13811  002648  6FC6               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13812  00264A  0E58               	movlw	88
 13813  00264C                     u12057:
 13814  00264C  2EE8               	decfsz	wreg,f,c
 13815  00264E  D7FE               	goto	u12057
 13816  002650  2FC6               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13817  002652  D7FC               	goto	u12057
 13818  002654  D000               	nop2	
 13819                           
 13820                           ;MOTEapp.c: 1149: _delay((unsigned long)((16)*(48000000/4000.0)));
 13821  002656  0EFA               	movlw	250
 13822  002658  0100               	movlb	0	; () banked
 13823  00265A  6FC6               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 13824  00265C  0E58               	movlw	88
 13825  00265E                     u12067:
 13826  00265E  2EE8               	decfsz	wreg,f,c
 13827  002660  D7FE               	goto	u12067
 13828  002662  2FC6               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 13829  002664  D7FC               	goto	u12067
 13830  002666  D000               	nop2	
 13831                           
 13832                           ;MOTEapp.c: 1150: sendCommand("mac save");
 13833  002668  0E33               	movlw	low STR_188
 13834  00266A  0100               	movlb	0	; () banked
 13835  00266C  6FC4               	movwf	sendCommand@string& (0+255),b
 13836  00266E  0E7F               	movlw	high STR_188
 13837  002670  0100               	movlb	0	; () banked
 13838  002672  6FC5               	movwf	(sendCommand@string+1)& (0+255),b
 13839  002674  EC2F  F02B         	call	_sendCommand	;wreg free
 13840  002678  0012               	return		;funcret
 13841  00267A                     __end_of_MOTEapp_SetDataRateSetting:
 13842                           	opt stack 0
 13843                           tblptru	equ	0xFF8
 13844                           tblptrh	equ	0xFF7
 13845                           tblptrl	equ	0xFF6
 13846                           tablat	equ	0xFF5
 13847                           prodh	equ	0xFF4
 13848                           prodl	equ	0xFF3
 13849                           intcon	equ	0xFF2
 13850                           postinc0	equ	0xFEE
 13851                           wreg	equ	0xFE8
 13852                           indf1	equ	0xFE7
 13853                           postdec1	equ	0xFE5
 13854                           fsr1h	equ	0xFE2
 13855                           fsr1l	equ	0xFE1
 13856                           indf2	equ	0xFDF
 13857                           fsr2h	equ	0xFDA
 13858                           fsr2l	equ	0xFD9
 13859                           status	equ	0xFD8
 13860                           
 13861 ;; *************** function _ADC_TempConversion *****************
 13862 ;; Defined at:
 13863 ;;		line 136 in file "../Includes/MccGenerated/adc.c"
 13864 ;; Parameters:    Size  Location     Type
 13865 ;;  tempRaw         1    wreg     enum E6334
 13866 ;; Auto vars:     Size  Location     Type
 13867 ;;  tempRaw         1    7[BANK0 ] enum E6334
 13868 ;;  temp            1    8[BANK0 ] unsigned char 
 13869 ;; Return value:  Size  Location     Type
 13870 ;;                  1    wreg      unsigned char 
 13871 ;; Registers used:
 13872 ;;		wreg, status,2, status,0, cstack
 13873 ;; Tracked objects:
 13874 ;;		On entry : 0/0
 13875 ;;		On exit  : 0/0
 13876 ;;		Unchanged: 0/0
 13877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13878 ;;      Params:         0       0       0       0       0       0       0       0       0
 13879 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13880 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13881 ;;      Totals:         0       2       0       0       0       0       0       0       0
 13882 ;;Total ram usage:        2 bytes
 13883 ;; Hardware stack levels used:    1
 13884 ;; Hardware stack levels required when called:   12
 13885 ;; This function calls:
 13886 ;;		___lwdiv
 13887 ;; This function is called by:
 13888 ;;		_test_adc
 13889 ;;		_moteHandler
 13890 ;;		_moteRunningProcess
 13891 ;; This function uses a non-reentrant model
 13892 ;;
 13893                           
 13894                           	psect	text32
 13895  00562C                     __ptext32:
 13896                           	opt stack 0
 13897  00562C                     _ADC_TempConversion:
 13898                           	opt stack 16
 13899                           
 13900                           ;incstack = 0
 13901                           ;ADC_TempConversion@tempRaw stored from wreg
 13902  00562C  0100               	movlb	0	; () banked
 13903  00562E  6FCA               	movwf	ADC_TempConversion@tempRaw& (0+255),b
 13904                           
 13905                           ;adc.c: 138: uint8_t temp;
 13906                           ;adc.c: 140: temp = (uint16_t) (tempRaw - 250) / 5;
 13907  005630  0E06               	movlw	6
 13908  005632  0100               	movlb	0	; () banked
 13909  005634  25CA               	addwf	ADC_TempConversion@tempRaw& (0+255),w,b
 13910  005636  0100               	movlb	0	; () banked
 13911  005638  6FC3               	movwf	___lwdiv@dividend& (0+255),b
 13912  00563A  0100               	movlb	0	; () banked
 13913  00563C  6BC4               	clrf	(___lwdiv@dividend+1)& (0+255),b
 13914  00563E  0EFF               	movlw	255
 13915  005640  23C4               	addwfc	(___lwdiv@dividend+1)& (0+255),f,b
 13916  005642  0E00               	movlw	0
 13917  005644  0100               	movlb	0	; () banked
 13918  005646  6FC6               	movwf	(___lwdiv@divisor+1)& (0+255),b
 13919  005648  0E05               	movlw	5
 13920  00564A  6FC5               	movwf	___lwdiv@divisor& (0+255),b
 13921  00564C  EC29  F026         	call	___lwdiv	;wreg free
 13922  005650  0100               	movlb	0	; () banked
 13923  005652  51C3               	movf	?___lwdiv& (0+255),w,b
 13924  005654  0100               	movlb	0	; () banked
 13925  005656  6FCB               	movwf	ADC_TempConversion@temp& (0+255),b
 13926                           
 13927                           ; BSR set to: 0
 13928                           ;adc.c: 141: return temp;
 13929  005658  0100               	movlb	0	; () banked
 13930  00565A  51CB               	movf	ADC_TempConversion@temp& (0+255),w,b
 13931  00565C  0012               	return	
 13932  00565E                     __end_of_ADC_TempConversion:
 13933                           	opt stack 0
 13934                           tblptru	equ	0xFF8
 13935                           tblptrh	equ	0xFF7
 13936                           tblptrl	equ	0xFF6
 13937                           tablat	equ	0xFF5
 13938                           prodh	equ	0xFF4
 13939                           prodl	equ	0xFF3
 13940                           intcon	equ	0xFF2
 13941                           postinc0	equ	0xFEE
 13942                           wreg	equ	0xFE8
 13943                           indf1	equ	0xFE7
 13944                           postdec1	equ	0xFE5
 13945                           fsr1h	equ	0xFE2
 13946                           fsr1l	equ	0xFE1
 13947                           indf2	equ	0xFDF
 13948                           fsr2h	equ	0xFDA
 13949                           fsr2l	equ	0xFD9
 13950                           status	equ	0xFD8
 13951                           
 13952 ;; *************** function ___lwdiv *****************
 13953 ;; Defined at:
 13954 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 13955 ;; Parameters:    Size  Location     Type
 13956 ;;  dividend        2    0[BANK0 ] unsigned int 
 13957 ;;  divisor         2    2[BANK0 ] unsigned int 
 13958 ;; Auto vars:     Size  Location     Type
 13959 ;;  quotient        2    5[BANK0 ] unsigned int 
 13960 ;;  counter         1    4[BANK0 ] unsigned char 
 13961 ;; Return value:  Size  Location     Type
 13962 ;;                  2    0[BANK0 ] unsigned int 
 13963 ;; Registers used:
 13964 ;;		wreg, status,2, status,0
 13965 ;; Tracked objects:
 13966 ;;		On entry : 0/0
 13967 ;;		On exit  : 0/0
 13968 ;;		Unchanged: 0/0
 13969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13970 ;;      Params:         0       4       0       0       0       0       0       0       0
 13971 ;;      Locals:         0       3       0       0       0       0       0       0       0
 13972 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13973 ;;      Totals:         0       7       0       0       0       0       0       0       0
 13974 ;;Total ram usage:        7 bytes
 13975 ;; Hardware stack levels used:    1
 13976 ;; Hardware stack levels required when called:   11
 13977 ;; This function calls:
 13978 ;;		Nothing
 13979 ;; This function is called by:
 13980 ;;		_moteApp_add16bToDataBuffer
 13981 ;;		_oled_putUint16
 13982 ;;		_ADC_TempConversion
 13983 ;;		_ReadAndProcessDHT22
 13984 ;; This function uses a non-reentrant model
 13985 ;;
 13986                           
 13987                           	psect	text33
 13988  004C52                     __ptext33:
 13989                           	opt stack 0
 13990  004C52                     ___lwdiv:
 13991                           	opt stack 16
 13992                           
 13993                           ; BSR set to: 0
 13994                           ;incstack = 0
 13995  004C52  0E00               	movlw	0
 13996  004C54  0100               	movlb	0	; () banked
 13997  004C56  6FC9               	movwf	(___lwdiv@quotient+1)& (0+255),b
 13998  004C58  0E00               	movlw	0
 13999  004C5A  6FC8               	movwf	___lwdiv@quotient& (0+255),b
 14000                           
 14001                           ; BSR set to: 0
 14002  004C5C  0100               	movlb	0	; () banked
 14003  004C5E  51C5               	movf	___lwdiv@divisor& (0+255),w,b
 14004  004C60  0100               	movlb	0	; () banked
 14005  004C62  11C6               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 14006  004C64  B4D8               	btfsc	status,2,c
 14007  004C66  D02C               	goto	l2416
 14008                           
 14009                           ; BSR set to: 0
 14010  004C68  0E01               	movlw	1
 14011  004C6A  0100               	movlb	0	; () banked
 14012  004C6C  6FC7               	movwf	___lwdiv@counter& (0+255),b
 14013  004C6E  D006               	goto	l10964
 14014  004C70                     l10962:
 14015                           
 14016                           ; BSR set to: 0
 14017  004C70  0100               	movlb	0	; () banked
 14018  004C72  90D8               	bcf	status,0,c
 14019  004C74  37C5               	rlcf	___lwdiv@divisor& (0+255),f,b
 14020  004C76  37C6               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 14021  004C78  0100               	movlb	0	; () banked
 14022  004C7A  2BC7               	incf	___lwdiv@counter& (0+255),f,b
 14023  004C7C                     l10964:
 14024                           
 14025                           ; BSR set to: 0
 14026  004C7C  0100               	movlb	0	; () banked
 14027  004C7E  AFC6               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 14028  004C80  D7F7               	goto	l10962
 14029  004C82                     l10966:
 14030                           
 14031                           ; BSR set to: 0
 14032  004C82  0100               	movlb	0	; () banked
 14033  004C84  90D8               	bcf	status,0,c
 14034  004C86  37C8               	rlcf	___lwdiv@quotient& (0+255),f,b
 14035  004C88  37C9               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 14036                           
 14037                           ; BSR set to: 0
 14038  004C8A  0100               	movlb	0	; () banked
 14039  004C8C  51C5               	movf	___lwdiv@divisor& (0+255),w,b
 14040  004C8E  0100               	movlb	0	; () banked
 14041  004C90  5DC3               	subwf	___lwdiv@dividend& (0+255),w,b
 14042  004C92  0100               	movlb	0	; () banked
 14043  004C94  51C6               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 14044  004C96  0100               	movlb	0	; () banked
 14045  004C98  59C4               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 14046  004C9A  A0D8               	btfss	status,0,c
 14047  004C9C  D00A               	goto	l10974
 14048                           
 14049                           ; BSR set to: 0
 14050  004C9E  0100               	movlb	0	; () banked
 14051  004CA0  51C5               	movf	___lwdiv@divisor& (0+255),w,b
 14052  004CA2  0100               	movlb	0	; () banked
 14053  004CA4  5FC3               	subwf	___lwdiv@dividend& (0+255),f,b
 14054  004CA6  0100               	movlb	0	; () banked
 14055  004CA8  51C6               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 14056  004CAA  0100               	movlb	0	; () banked
 14057  004CAC  5BC4               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 14058                           
 14059                           ; BSR set to: 0
 14060  004CAE  0100               	movlb	0	; () banked
 14061  004CB0  81C8               	bsf	___lwdiv@quotient& (0+255),0,b
 14062  004CB2                     l10974:
 14063                           
 14064                           ; BSR set to: 0
 14065  004CB2  0100               	movlb	0	; () banked
 14066  004CB4  90D8               	bcf	status,0,c
 14067  004CB6  33C6               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 14068  004CB8  33C5               	rrcf	___lwdiv@divisor& (0+255),f,b
 14069                           
 14070                           ; BSR set to: 0
 14071  004CBA  0100               	movlb	0	; () banked
 14072  004CBC  2FC7               	decfsz	___lwdiv@counter& (0+255),f,b
 14073  004CBE  D7E1               	goto	l10966
 14074  004CC0                     l2416:
 14075                           
 14076                           ; BSR set to: 0
 14077  004CC0  C0C8  F0C3         	movff	___lwdiv@quotient,?___lwdiv
 14078  004CC4  C0C9  F0C4         	movff	___lwdiv@quotient+1,?___lwdiv+1
 14079                           
 14080                           ; BSR set to: 0
 14081  004CC8  0012               	return		;funcret
 14082  004CCA                     __end_of___lwdiv:
 14083                           	opt stack 0
 14084                           tblptru	equ	0xFF8
 14085                           tblptrh	equ	0xFF7
 14086                           tblptrl	equ	0xFF6
 14087                           tablat	equ	0xFF5
 14088                           prodh	equ	0xFF4
 14089                           prodl	equ	0xFF3
 14090                           intcon	equ	0xFF2
 14091                           postinc0	equ	0xFEE
 14092                           wreg	equ	0xFE8
 14093                           indf1	equ	0xFE7
 14094                           postdec1	equ	0xFE5
 14095                           fsr1h	equ	0xFE2
 14096                           fsr1l	equ	0xFE1
 14097                           indf2	equ	0xFDF
 14098                           fsr2h	equ	0xFDA
 14099                           fsr2l	equ	0xFD9
 14100                           status	equ	0xFD8
 14101                           
 14102 ;; *************** function _ADC_GetConversion *****************
 14103 ;; Defined at:
 14104 ;;		line 113 in file "../Includes/MccGenerated/adc.c"
 14105 ;; Parameters:    Size  Location     Type
 14106 ;;  channel         1    wreg     enum E6334
 14107 ;; Auto vars:     Size  Location     Type
 14108 ;;  channel         1    4[BANK0 ] enum E6334
 14109 ;; Return value:  Size  Location     Type
 14110 ;;                  2    0[BANK0 ] unsigned int 
 14111 ;; Registers used:
 14112 ;;		wreg, status,2, status,0
 14113 ;; Tracked objects:
 14114 ;;		On entry : 0/0
 14115 ;;		On exit  : 0/0
 14116 ;;		Unchanged: 0/0
 14117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14118 ;;      Params:         0       2       0       0       0       0       0       0       0
 14119 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14120 ;;      Temps:          0       2       0       0       0       0       0       0       0
 14121 ;;      Totals:         0       5       0       0       0       0       0       0       0
 14122 ;;Total ram usage:        5 bytes
 14123 ;; Hardware stack levels used:    1
 14124 ;; Hardware stack levels required when called:   11
 14125 ;; This function calls:
 14126 ;;		Nothing
 14127 ;; This function is called by:
 14128 ;;		_test_adc
 14129 ;;		_moteHandler
 14130 ;;		_moteRunningProcess
 14131 ;; This function uses a non-reentrant model
 14132 ;;
 14133                           
 14134                           	psect	text34
 14135  00526E                     __ptext34:
 14136                           	opt stack 0
 14137  00526E                     _ADC_GetConversion:
 14138                           	opt stack 17
 14139                           
 14140                           ; BSR set to: 0
 14141                           ;incstack = 0
 14142                           ;ADC_GetConversion@channel stored from wreg
 14143  00526E  0100               	movlb	0	; () banked
 14144  005270  6FC7               	movwf	ADC_GetConversion@channel& (0+255),b
 14145                           
 14146                           ;adc.c: 116: ADCON0bits.CHS = channel;
 14147  005272  C0C7  F0C5         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 14148  005276  0100               	movlb	0	; () banked
 14149  005278  47C5               	rlncf	??_ADC_GetConversion& (0+255),f,b
 14150  00527A  47C5               	rlncf	??_ADC_GetConversion& (0+255),f,b
 14151  00527C  50C2               	movf	4034,w,c	;volatile
 14152  00527E  0100               	movlb	0	; () banked
 14153  005280  19C5               	xorwf	??_ADC_GetConversion& (0+255),w,b
 14154  005282  0B83               	andlw	-125
 14155  005284  19C5               	xorwf	??_ADC_GetConversion& (0+255),w,b
 14156  005286  6EC2               	movwf	4034,c	;volatile
 14157                           
 14158                           ; BSR set to: 0
 14159                           ;adc.c: 119: ADCON0bits.ADON = 1;
 14160  005288  80C2               	bsf	4034,0,c	;volatile
 14161                           
 14162                           ; BSR set to: 0
 14163                           ;adc.c: 122: _delay((unsigned long)((5)*(48000000/4000000.0)));
 14164  00528A  0E14               	movlw	20
 14165  00528C                     u12077:
 14166  00528C  2EE8               	decfsz	wreg,f,c
 14167  00528E  D7FE               	goto	u12077
 14168                           
 14169                           ;adc.c: 125: ADCON0bits.GO_nDONE = 1;
 14170  005290  82C2               	bsf	4034,1,c	;volatile
 14171  005292                     l1237:
 14172  005292  B2C2               	btfsc	4034,1,c	;volatile
 14173  005294  D7FE               	goto	l1237
 14174                           
 14175                           ;adc.c: 130: }
 14176                           ;adc.c: 133: return ((ADRESH << 8) + ADRESL);
 14177  005296  50C4               	movf	4036,w,c	;volatile
 14178  005298  0100               	movlb	0	; () banked
 14179  00529A  6FC6               	movwf	(??_ADC_GetConversion+1)& (0+255),b
 14180  00529C  6BC5               	clrf	??_ADC_GetConversion& (0+255),b
 14181  00529E  50C3               	movf	4035,w,c	;volatile
 14182  0052A0  0100               	movlb	0	; () banked
 14183  0052A2  25C5               	addwf	??_ADC_GetConversion& (0+255),w,b
 14184  0052A4  0100               	movlb	0	; () banked
 14185  0052A6  6FC3               	movwf	?_ADC_GetConversion& (0+255),b
 14186  0052A8  0E00               	movlw	0
 14187  0052AA  0100               	movlb	0	; () banked
 14188  0052AC  21C6               	addwfc	(??_ADC_GetConversion+1)& (0+255),w,b
 14189  0052AE  0100               	movlb	0	; () banked
 14190  0052B0  6FC4               	movwf	(?_ADC_GetConversion+1)& (0+255),b
 14191  0052B2  0012               	return	
 14192  0052B4                     __end_of_ADC_GetConversion:
 14193                           	opt stack 0
 14194                           tblptru	equ	0xFF8
 14195                           tblptrh	equ	0xFF7
 14196                           tblptrl	equ	0xFF6
 14197                           tablat	equ	0xFF5
 14198                           prodh	equ	0xFF4
 14199                           prodl	equ	0xFF3
 14200                           intcon	equ	0xFF2
 14201                           postinc0	equ	0xFEE
 14202                           wreg	equ	0xFE8
 14203                           indf1	equ	0xFE7
 14204                           postdec1	equ	0xFE5
 14205                           fsr1h	equ	0xFE2
 14206                           fsr1l	equ	0xFE1
 14207                           indf2	equ	0xFDF
 14208                           fsr2h	equ	0xFDA
 14209                           fsr2l	equ	0xFD9
 14210                           status	equ	0xFD8
 14211                           
 14212 ;; *************** function _moteJoiningProcess *****************
 14213 ;; Defined at:
 14214 ;;		line 293 in file "../Includes/Board/MOTEapp.c"
 14215 ;; Parameters:    Size  Location     Type
 14216 ;;  messageReady    1    wreg     unsigned char 
 14217 ;;  changeStates    1   18[BANK0 ] unsigned char 
 14218 ;;  selectButton    1   19[BANK0 ] unsigned char 
 14219 ;; Auto vars:     Size  Location     Type
 14220 ;;  messageReady    1   23[BANK0 ] unsigned char 
 14221 ;;  readDataRate    1   21[BANK0 ] unsigned char 
 14222 ;;  joiningCompl    1   22[BANK0 ] unsigned char 
 14223 ;; Return value:  Size  Location     Type
 14224 ;;                  1    wreg      enum E6653
 14225 ;; Registers used:
 14226 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14227 ;; Tracked objects:
 14228 ;;		On entry : 0/0
 14229 ;;		On exit  : 0/0
 14230 ;;		Unchanged: 0/0
 14231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14232 ;;      Params:         0       2       0       0       0       0       0       0       0
 14233 ;;      Locals:         0       3       0       0       0       0       0       0       0
 14234 ;;      Temps:          0       1       0       0       0       0       0       0       0
 14235 ;;      Totals:         0       6       0       0       0       0       0       0       0
 14236 ;;Total ram usage:        6 bytes
 14237 ;; Hardware stack levels used:    1
 14238 ;; Hardware stack levels required when called:   17
 14239 ;; This function calls:
 14240 ;;		_DATAEE_WriteByte
 14241 ;;		_moteApp_delayms
 14242 ;;		_oled_clear
 14243 ;;		_oled_putString
 14244 ;;		_sendCommand
 14245 ;;		_strcmp
 14246 ;;		_strncmp
 14247 ;; This function is called by:
 14248 ;;		_moteHandler
 14249 ;; This function uses a non-reentrant model
 14250 ;;
 14251                           
 14252                           	psect	text35
 14253  001786                     __ptext35:
 14254                           	opt stack 0
 14255  001786                     _moteJoiningProcess:
 14256                           	opt stack 12
 14257                           
 14258                           ; BSR set to: 0
 14259                           ;incstack = 0
 14260                           ;moteJoiningProcess@messageReady stored from wreg
 14261  001786  0100               	movlb	0	; () banked
 14262  001788  6FDA               	movwf	moteJoiningProcess@messageReady& (0+255),b
 14263                           
 14264                           ;MOTEapp.c: 295: bool joiningComplete = 0;
 14265  00178A  0E00               	movlw	0
 14266  00178C  0100               	movlb	0	; () banked
 14267  00178E  6FD9               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
 14268                           
 14269                           ;MOTEapp.c: 297: switch (activeState)
 14270  001790  D30F               	goto	l11938
 14271  001792  D7FF               	goto	l407
 14272  001794                     l11754:
 14273                           
 14274                           ;MOTEapp.c: 303: sendCommand("sys reset");
 14275  001794  0E04               	movlw	low STR_29
 14276  001796  0100               	movlb	0	; () banked
 14277  001798  6FC4               	movwf	sendCommand@string& (0+255),b
 14278  00179A  0E7F               	movlw	high STR_29
 14279  00179C  0100               	movlb	0	; () banked
 14280  00179E  6FC5               	movwf	(sendCommand@string+1)& (0+255),b
 14281  0017A0  EC2F  F02B         	call	_sendCommand	;wreg free
 14282                           
 14283                           ;MOTEapp.c: 304: moteApp_delayms(50);
 14284  0017A4  0E00               	movlw	0
 14285  0017A6  0100               	movlb	0	; () banked
 14286  0017A8  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
 14287  0017AA  0E32               	movlw	50
 14288  0017AC  6FC3               	movwf	moteApp_delayms@length& (0+255),b
 14289  0017AE  EC73  F02A         	call	_moteApp_delayms	;wreg free
 14290  0017B2  D191               	goto	l11852
 14291  0017B4                     l11760:
 14292                           
 14293                           ; BSR set to: 0
 14294                           ;MOTEapp.c: 308: if (selectButton)
 14295  0017B4  0100               	movlb	0	; () banked
 14296  0017B6  51D6               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 14297  0017B8  0100               	movlb	0	; () banked
 14298  0017BA  B4D8               	btfsc	status,2,c
 14299  0017BC  D003               	goto	l412
 14300                           
 14301                           ; BSR set to: 0
 14302                           ;MOTEapp.c: 309: {
 14303                           ;MOTEapp.c: 310: activeState = moteComFailure;
 14304  0017BE  0E0A               	movlw	10
 14305  0017C0  0100               	movlb	0	; () banked
 14306  0017C2  6F9A               	movwf	_activeState& (0+255),b
 14307  0017C4                     l412:
 14308                           
 14309                           ; BSR set to: 0
 14310                           ;MOTEapp.c: 311: }
 14311                           ;MOTEapp.c: 312: if ( messageReady )
 14312  0017C4  0100               	movlb	0	; () banked
 14313  0017C6  51DA               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 14314  0017C8  0100               	movlb	0	; () banked
 14315  0017CA  B4D8               	btfsc	status,2,c
 14316  0017CC  D315               	goto	l11940
 14317                           
 14318                           ; BSR set to: 0
 14319                           ;MOTEapp.c: 313: {
 14320                           ;MOTEapp.c: 314: if(strncmp(moduleResonseBuffer, "RN24", 4) == 0)
 14321  0017CE  0E64               	movlw	low _moduleResonseBuffer
 14322  0017D0  0100               	movlb	0	; () banked
 14323  0017D2  6FC3               	movwf	strncmp@s1& (0+255),b
 14324  0017D4  0E01               	movlw	high _moduleResonseBuffer
 14325  0017D6  0100               	movlb	0	; () banked
 14326  0017D8  6FC4               	movwf	(strncmp@s1+1)& (0+255),b
 14327  0017DA  0EB2               	movlw	low STR_30
 14328  0017DC  0100               	movlb	0	; () banked
 14329  0017DE  6FC5               	movwf	strncmp@s2& (0+255),b
 14330  0017E0  0E7F               	movlw	high STR_30
 14331  0017E2  0100               	movlb	0	; () banked
 14332  0017E4  6FC6               	movwf	(strncmp@s2+1)& (0+255),b
 14333  0017E6  0E00               	movlw	0
 14334  0017E8  0100               	movlb	0	; () banked
 14335  0017EA  6FC8               	movwf	(strncmp@len+1)& (0+255),b
 14336  0017EC  0E04               	movlw	4
 14337  0017EE  6FC7               	movwf	strncmp@len& (0+255),b
 14338  0017F0  EC37  F024         	call	_strncmp	;wreg free
 14339  0017F4  0100               	movlb	0	; () banked
 14340  0017F6  51C3               	movf	?_strncmp& (0+255),w,b
 14341  0017F8  0100               	movlb	0	; () banked
 14342  0017FA  11C4               	iorwf	(?_strncmp+1)& (0+255),w,b
 14343  0017FC  A4D8               	btfss	status,2,c
 14344  0017FE  D033               	goto	l11778
 14345                           
 14346                           ; BSR set to: 0
 14347                           ;MOTEapp.c: 315: {
 14348                           ;MOTEapp.c: 316: rnModule = rn2483;
 14349  001800  0E00               	movlw	0
 14350  001802  0100               	movlb	0	; () banked
 14351  001804  6FB1               	movwf	_rnModule& (0+255),b
 14352                           
 14353                           ; BSR set to: 0
 14354                           ;MOTEapp.c: 317: oled_clear();
 14355  001806  EC26  F02C         	call	_oled_clear	;wreg free
 14356                           
 14357                           ;MOTEapp.c: 318: oled_putString(" Joining Method ",0,0);
 14358  00180A  0EDB               	movlw	low STR_31
 14359  00180C  0100               	movlb	0	; () banked
 14360  00180E  6FD0               	movwf	oled_putString@string& (0+255),b
 14361  001810  0E7A               	movlw	high STR_31
 14362  001812  0100               	movlb	0	; () banked
 14363  001814  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
 14364  001816  0E00               	movlw	0
 14365  001818  0100               	movlb	0	; () banked
 14366  00181A  6FD2               	movwf	oled_putString@station_dot& (0+255),b
 14367  00181C  0E00               	movlw	0
 14368  00181E  0100               	movlb	0	; () banked
 14369  001820  6FD3               	movwf	oled_putString@start_page& (0+255),b
 14370  001822  EC0D  F027         	call	_oled_putString	;wreg free
 14371                           
 14372                           ;MOTEapp.c: 319: oled_putString("<- ABP   OTAA ->", 0,2);
 14373  001826  0E52               	movlw	low STR_32
 14374  001828  0100               	movlb	0	; () banked
 14375  00182A  6FD0               	movwf	oled_putString@string& (0+255),b
 14376  00182C  0E7B               	movlw	high STR_32
 14377  00182E  0100               	movlb	0	; () banked
 14378  001830  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
 14379  001832  0E00               	movlw	0
 14380  001834  0100               	movlb	0	; () banked
 14381  001836  6FD2               	movwf	oled_putString@station_dot& (0+255),b
 14382  001838  0E02               	movlw	2
 14383  00183A  0100               	movlb	0	; () banked
 14384  00183C  6FD3               	movwf	oled_putString@start_page& (0+255),b
 14385  00183E  EC0D  F027         	call	_oled_putString	;wreg free
 14386                           
 14387                           ;MOTEapp.c: 320: oled_putString("  (S2)   (S3)   ", 0,3);
 14388  001842  0E64               	movlw	low STR_33
 14389  001844  0100               	movlb	0	; () banked
 14390  001846  6FD0               	movwf	oled_putString@string& (0+255),b
 14391  001848  0E7A               	movlw	high STR_33
 14392  00184A  0100               	movlb	0	; () banked
 14393  00184C  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
 14394  00184E  0E00               	movlw	0
 14395  001850  0100               	movlb	0	; () banked
 14396  001852  6FD2               	movwf	oled_putString@station_dot& (0+255),b
 14397  001854  0E03               	movlw	3
 14398  001856  0100               	movlb	0	; () banked
 14399  001858  6FD3               	movwf	oled_putString@start_page& (0+255),b
 14400  00185A  EC0D  F027         	call	_oled_putString	;wreg free
 14401  00185E  D04B               	goto	l11790
 14402  001860                     L7:
 14403  001860  0100               	movlb	0	; () banked
 14404  001862  6F9A               	movwf	_activeState& (0+255),b
 14405                           
 14406                           ;MOTEapp.c: 322: }
 14407  001864  D2C9               	goto	l11940
 14408  001866                     l11778:
 14409                           
 14410                           ; BSR set to: 0
 14411                           ;MOTEapp.c: 323: else if(strncmp(moduleResonseBuffer, "RN29", 4) == 0)
 14412  001866  0E64               	movlw	low _moduleResonseBuffer
 14413  001868  0100               	movlb	0	; () banked
 14414  00186A  6FC3               	movwf	strncmp@s1& (0+255),b
 14415  00186C  0E01               	movlw	high _moduleResonseBuffer
 14416  00186E  0100               	movlb	0	; () banked
 14417  001870  6FC4               	movwf	(strncmp@s1+1)& (0+255),b
 14418  001872  0EB7               	movlw	low STR_34
 14419  001874  0100               	movlb	0	; () banked
 14420  001876  6FC5               	movwf	strncmp@s2& (0+255),b
 14421  001878  0E7F               	movlw	high STR_34
 14422  00187A  0100               	movlb	0	; () banked
 14423  00187C  6FC6               	movwf	(strncmp@s2+1)& (0+255),b
 14424  00187E  0E00               	movlw	0
 14425  001880  0100               	movlb	0	; () banked
 14426  001882  6FC8               	movwf	(strncmp@len+1)& (0+255),b
 14427  001884  0E04               	movlw	4
 14428  001886  6FC7               	movwf	strncmp@len& (0+255),b
 14429  001888  EC37  F024         	call	_strncmp	;wreg free
 14430  00188C  0100               	movlb	0	; () banked
 14431  00188E  51C3               	movf	?_strncmp& (0+255),w,b
 14432  001890  0100               	movlb	0	; () banked
 14433  001892  11C4               	iorwf	(?_strncmp+1)& (0+255),w,b
 14434  001894  A4D8               	btfss	status,2,c
 14435  001896  D031               	goto	l11792
 14436                           
 14437                           ; BSR set to: 0
 14438                           ;MOTEapp.c: 324: {
 14439                           ;MOTEapp.c: 325: rnModule = rn2903;
 14440  001898  0E01               	movlw	1
 14441  00189A  0100               	movlb	0	; () banked
 14442  00189C  6FB1               	movwf	_rnModule& (0+255),b
 14443                           
 14444                           ; BSR set to: 0
 14445                           ;MOTEapp.c: 326: oled_clear();
 14446  00189E  EC26  F02C         	call	_oled_clear	;wreg free
 14447                           
 14448                           ;MOTEapp.c: 327: oled_putString(" Joining Method ",0,0);
 14449  0018A2  0EDB               	movlw	low STR_31
 14450  0018A4  0100               	movlb	0	; () banked
 14451  0018A6  6FD0               	movwf	oled_putString@string& (0+255),b
 14452  0018A8  0E7A               	movlw	high STR_31
 14453  0018AA  0100               	movlb	0	; () banked
 14454  0018AC  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
 14455  0018AE  0E00               	movlw	0
 14456  0018B0  0100               	movlb	0	; () banked
 14457  0018B2  6FD2               	movwf	oled_putString@station_dot& (0+255),b
 14458  0018B4  0E00               	movlw	0
 14459  0018B6  0100               	movlb	0	; () banked
 14460  0018B8  6FD3               	movwf	oled_putString@start_page& (0+255),b
 14461  0018BA  EC0D  F027         	call	_oled_putString	;wreg free
 14462                           
 14463                           ;MOTEapp.c: 328: oled_putString("<- ABP   OTAA ->", 0,2);
 14464  0018BE  0E52               	movlw	low STR_32
 14465  0018C0  0100               	movlb	0	; () banked
 14466  0018C2  6FD0               	movwf	oled_putString@string& (0+255),b
 14467  0018C4  0E7B               	movlw	high STR_32
 14468  0018C6  0100               	movlb	0	; () banked
 14469  0018C8  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
 14470  0018CA  0E00               	movlw	0
 14471  0018CC  0100               	movlb	0	; () banked
 14472  0018CE  6FD2               	movwf	oled_putString@station_dot& (0+255),b
 14473  0018D0  0E02               	movlw	2
 14474  0018D2  0100               	movlb	0	; () banked
 14475  0018D4  6FD3               	movwf	oled_putString@start_page& (0+255),b
 14476  0018D6  EC0D  F027         	call	_oled_putString	;wreg free
 14477                           
 14478                           ;MOTEapp.c: 329: oled_putString("  (S2)   (S3)   ", 0,3);
 14479  0018DA  0E64               	movlw	low STR_33
 14480  0018DC  0100               	movlb	0	; () banked
 14481  0018DE  6FD0               	movwf	oled_putString@string& (0+255),b
 14482  0018E0  0E7A               	movlw	high STR_33
 14483  0018E2  0100               	movlb	0	; () banked
 14484  0018E4  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
 14485  0018E6  0E00               	movlw	0
 14486  0018E8  0100               	movlb	0	; () banked
 14487  0018EA  6FD2               	movwf	oled_putString@station_dot& (0+255),b
 14488  0018EC  0E03               	movlw	3
 14489  0018EE  0100               	movlb	0	; () banked
 14490  0018F0  6FD3               	movwf	oled_putString@start_page& (0+255),b
 14491  0018F2  EC0D  F027         	call	_oled_putString	;wreg free
 14492  0018F6                     l11790:
 14493                           
 14494                           ;MOTEapp.c: 330: activeState = moteJoinMethod;
 14495  0018F6  0E02               	movlw	2
 14496  0018F8  D7B3               	goto	L7
 14497  0018FA                     l11792:
 14498                           
 14499                           ; BSR set to: 0
 14500                           ;MOTEapp.c: 332: else
 14501                           ;MOTEapp.c: 333: {
 14502                           ;MOTEapp.c: 334: sendCommand("sys reset");
 14503  0018FA  0E04               	movlw	low STR_29
 14504  0018FC  0100               	movlb	0	; () banked
 14505  0018FE  6FC4               	movwf	sendCommand@string& (0+255),b
 14506  001900  0E7F               	movlw	high STR_29
 14507  001902  0100               	movlb	0	; () banked
 14508  001904  6FC5               	movwf	(sendCommand@string+1)& (0+255),b
 14509  001906  EC2F  F02B         	call	_sendCommand	;wreg free
 14510                           
 14511                           ;MOTEapp.c: 335: moteApp_delayms(25);
 14512  00190A  0E00               	movlw	0
 14513  00190C  0100               	movlb	0	; () banked
 14514  00190E  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
 14515  001910  0E19               	movlw	25
 14516  001912  6FC3               	movwf	moteApp_delayms@length& (0+255),b
 14517  001914  EC73  F02A         	call	_moteApp_delayms	;wreg free
 14518  001918  D1E4               	goto	l11906
 14519  00191A                     l11798:
 14520                           
 14521                           ; BSR set to: 0
 14522                           ;MOTEapp.c: 341: if (changeStates)
 14523  00191A  0100               	movlb	0	; () banked
 14524  00191C  51D5               	movf	moteJoiningProcess@changeStates& (0+255),w,b
 14525  00191E  0100               	movlb	0	; () banked
 14526  001920  B4D8               	btfsc	status,2,c
 14527  001922  D01E               	goto	l11808
 14528                           
 14529                           ; BSR set to: 0
 14530                           ;MOTEapp.c: 342: {
 14531                           ;MOTEapp.c: 343: oled_putString("  (S2)          ", 0,3);
 14532  001924  0E20               	movlw	low STR_39
 14533  001926  0100               	movlb	0	; () banked
 14534  001928  6FD0               	movwf	oled_putString@string& (0+255),b
 14535  00192A  0E7A               	movlw	high STR_39
 14536  00192C  0100               	movlb	0	; () banked
 14537  00192E  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
 14538  001930  0E00               	movlw	0
 14539  001932  0100               	movlb	0	; () banked
 14540  001934  6FD2               	movwf	oled_putString@station_dot& (0+255),b
 14541  001936  0E03               	movlw	3
 14542  001938  0100               	movlb	0	; () banked
 14543  00193A  6FD3               	movwf	oled_putString@start_page& (0+255),b
 14544  00193C  EC0D  F027         	call	_oled_putString	;wreg free
 14545                           
 14546                           ;MOTEapp.c: 344: moteApp_delayms(500);
 14547  001940  0E01               	movlw	1
 14548  001942  0100               	movlb	0	; () banked
 14549  001944  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
 14550  001946  0EF4               	movlw	244
 14551  001948  6FC3               	movwf	moteApp_delayms@length& (0+255),b
 14552  00194A  EC73  F02A         	call	_moteApp_delayms	;wreg free
 14553                           
 14554                           ;MOTEapp.c: 345: sendCommand("mac join abp");
 14555  00194E  0EEF               	movlw	low STR_40
 14556  001950  0100               	movlb	0	; () banked
 14557  001952  6FC4               	movwf	sendCommand@string& (0+255),b
 14558  001954  0E7D               	movlw	high STR_40
 14559  001956  0100               	movlb	0	; () banked
 14560  001958  6FC5               	movwf	(sendCommand@string+1)& (0+255),b
 14561  00195A  EC2F  F02B         	call	_sendCommand	;wreg free
 14562  00195E  D079               	goto	l11836
 14563  001960                     l11808:
 14564                           
 14565                           ; BSR set to: 0
 14566                           ;MOTEapp.c: 348: else if (selectButton)
 14567  001960  0100               	movlb	0	; () banked
 14568  001962  51D6               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 14569  001964  0100               	movlb	0	; () banked
 14570  001966  B4D8               	btfsc	status,2,c
 14571  001968  D247               	goto	l11940
 14572                           
 14573                           ; BSR set to: 0
 14574                           ;MOTEapp.c: 349: {
 14575                           ;MOTEapp.c: 350: oled_putString("         (S3)   ", 0,3);
 14576  00196A  0E53               	movlw	low STR_41
 14577  00196C  0100               	movlb	0	; () banked
 14578  00196E  6FD0               	movwf	oled_putString@string& (0+255),b
 14579  001970  0E7A               	movlw	high STR_41
 14580  001972  0100               	movlb	0	; () banked
 14581  001974  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
 14582  001976  0E00               	movlw	0
 14583  001978  0100               	movlb	0	; () banked
 14584  00197A  6FD2               	movwf	oled_putString@station_dot& (0+255),b
 14585  00197C  0E03               	movlw	3
 14586  00197E  0100               	movlb	0	; () banked
 14587  001980  6FD3               	movwf	oled_putString@start_page& (0+255),b
 14588  001982  EC0D  F027         	call	_oled_putString	;wreg free
 14589                           
 14590                           ;MOTEapp.c: 351: moteApp_delayms(500);
 14591  001986  0E01               	movlw	1
 14592  001988  0100               	movlb	0	; () banked
 14593  00198A  6FC4               	movwf	(moteApp_delayms@length+1)& (0+255),b
 14594  00198C  0EF4               	movlw	244
 14595  00198E  6FC3               	movwf	moteApp_delayms@length& (0+255),b
 14596  001990  EC73  F02A         	call	_moteApp_delayms	;wreg free
 14597                           
 14598                           ;MOTEapp.c: 352: sendCommand("mac join otaa");
 14599  001994  0E43               	movlw	low STR_42
 14600  001996  0100               	movlb	0	; () banked
 14601  001998  6FC4               	movwf	sendCommand@string& (0+255),b
 14602  00199A  0E7D               	movlw	high STR_42
 14603  00199C  0100               	movlb	0	; () banked
 14604  00199E  6FC5               	movwf	(sendCommand@string+1)& (0+255),b
 14605  0019A0  EC2F  F02B         	call	_sendCommand	;wreg free
 14606  0019A4  D188               	goto	l11902
 14607  0019A6                     l11818:
 14608                           
 14609                           ; BSR set to: 0
 14610                           ;MOTEapp.c: 357: if ( messageReady )
 14611  0019A6  0100               	movlb	0	; () banked
 14612  0019A8  51DA               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 14613  0019AA  0100               	movlb	0	; () banked
 14614  0019AC  B4D8               	btfsc	status,2,c
 14615  0019AE  D224               	goto	l11940
 14616                           
 14617                           ; BSR set to: 0
 14618                           ;MOTEapp.c: 358: {
 14619                           ;MOTEapp.c: 359: if(strcmp(moduleResonseBuffer, "ok") == 0)
 14620  0019B0  0E64               	movlw	low _moduleResonseBuffer
 14621  0019B2  0100               	movlb	0	; () banked
 14622  0019B4  6FC3               	movwf	strcmp@s1& (0+255),b
 14623  0019B6  0E01               	movlw	high _moduleResonseBuffer
 14624  0019B8  0100               	movlb	0	; () banked
 14625  0019BA  6FC4               	movwf	(strcmp@s1+1)& (0+255),b
 14626  0019BC  0EF9               	movlw	low STR_43
 14627  0019BE  0100               	movlb	0	; () banked
 14628  0019C0  6FC5               	movwf	strcmp@s2& (0+255),b
 14629  0019C2  0E7F               	movlw	high STR_43
 14630  0019C4  0100               	movlb	0	; () banked
 14631  0019C6  6FC6               	movwf	(strcmp@s2+1)& (0+255),b
 14632  0019C8  ECBC  F028         	call	_strcmp	;wreg free
 14633  0019CC  0100               	movlb	0	; () banked
 14634  0019CE  51C3               	movf	?_strcmp& (0+255),w,b
 14635  0019D0  0100               	movlb	0	; () banked
 14636  0019D2  11C4               	iorwf	(?_strcmp+1)& (0+255),w,b
 14637  0019D4  A4D8               	btfss	status,2,c
 14638  0019D6  D002               	goto	l11824
 14639                           
 14640                           ; BSR set to: 0
 14641                           ;MOTEapp.c: 360: {
 14642                           ;MOTEapp.c: 361: activeState = moteWaitAbp;
 14643  0019D8  0E04               	movlw	4
 14644  0019DA  D742               	goto	L7
 14645  0019DC                     l11824:
 14646                           
 14647                           ; BSR set to: 0
 14648                           ;MOTEapp.c: 363: else if(strcmp(moduleResonseBuffer, "keys_not_init") == 0)
 14649  0019DC  0E64               	movlw	low _moduleResonseBuffer
 14650  0019DE  0100               	movlb	0	; () banked
 14651  0019E0  6FC3               	movwf	strcmp@s1& (0+255),b
 14652  0019E2  0E01               	movlw	high _moduleResonseBuffer
 14653  0019E4  0100               	movlb	0	; () banked
 14654  0019E6  6FC4               	movwf	(strcmp@s1+1)& (0+255),b
 14655  0019E8  0E5F               	movlw	low STR_44
 14656  0019EA  0100               	movlb	0	; () banked
 14657  0019EC  6FC5               	movwf	strcmp@s2& (0+255),b
 14658  0019EE  0E7D               	movlw	high STR_44
 14659  0019F0  0100               	movlb	0	; () banked
 14660  0019F2  6FC6               	movwf	(strcmp@s2+1)& (0+255),b
 14661  0019F4  ECBC  F028         	call	_strcmp	;wreg free
 14662  0019F8  0100               	movlb	0	; () banked
 14663  0019FA  51C3               	movf	?_strcmp& (0+255),w,b
 14664  0019FC  0100               	movlb	0	; () banked
 14665  0019FE  11C4               	iorwf	(?_strcmp+1)& (0+255),w,b
 14666  001A00  A4D8               	btfss	status,2,c
 14667  001A02  D01F               	goto	l11834
 14668                           
 14669                           ; BSR set to: 0
 14670                           ;MOTEapp.c: 364: {
 14671                           ;MOTEapp.c: 365: oled_clear();
 14672  001A04  EC26  F02C         	call	_oled_clear	;wreg free
 14673                           
 14674                           ;MOTEapp.c: 366: oled_putString("Valid Keys",0,0);
 14675  001A08  0EBC               	movlw	low STR_45
 14676  001A0A  0100               	movlb	0	; () banked
 14677  001A0C  6FD0               	movwf	oled_putString@string& (0+255),b
 14678  001A0E  0E7E               	movlw	high STR_45
 14679  001A10  0100               	movlb	0	; () banked
 14680  001A12  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
 14681  001A14  0E00               	movlw	0
 14682  001A16  0100               	movlb	0	; () banked
 14683  001A18  6FD2               	movwf	oled_putString@station_dot& (0+255),b
 14684  001A1A  0E00               	movlw	0
 14685  001A1C  0100               	movlb	0	; () banked
 14686  001A1E  6FD3               	movwf	oled_putString@start_page& (0+255),b
 14687  001A20  EC0D  F027         	call	_oled_putString	;wreg free
 14688                           
 14689                           ;MOTEapp.c: 367: oled_putString("Required",0,1);
 14690  001A24  0E21               	movlw	low STR_46
 14691  001A26  0100               	movlb	0	; () banked
 14692  001A28  6FD0               	movwf	oled_putString@string& (0+255),b
 14693  001A2A  0E7F               	movlw	high STR_46
 14694  001A2C  0100               	movlb	0	; () banked
 14695  001A2E  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
 14696  001A30  0E00               	movlw	0
 14697  001A32  0100               	movlb	0	; () banked
 14698  001A34  6FD2               	movwf	oled_putString@station_dot& (0+255),b
 14699  001A36  0E01               	movlw	1
 14700  001A38  0100               	movlb	0	; () banked
 14701  001A3A  6FD3               	movwf	oled_putString@start_page& (0+255),b
 14702  001A3C  EC0D  F027         	call	_oled_putString	;wreg free
 14703  001A40  D099               	goto	l11868
 14704  001A42                     l11834:
 14705                           
 14706                           ; BSR set to: 0
 14707                           ;MOTEapp.c: 370: else
 14708                           ;MOTEapp.c: 371: {
 14709                           ;MOTEapp.c: 372: sendCommand("mac join abp");
 14710  001A42  0EEF               	movlw	low STR_40
 14711  001A44  0100               	movlb	0	; () banked
 14712  001A46  6FC4               	movwf	sendCommand@string& (0+255),b
 14713  001A48  0E7D               	movlw	high STR_40
 14714  001A4A  0100               	movlb	0	; () banked
 14715  001A4C  6FC5               	movwf	(sendCommand@string+1)& (0+255),b
 14716  001A4E  EC2F  F02B         	call	_sendCommand	;wreg free
 14717  001A52                     l11836:
 14718                           
 14719                           ;MOTEapp.c: 373: activeState = moteCheckAbp;
 14720  001A52  0E03               	movlw	3
 14721  001A54  D705               	goto	L7
 14722  001A56                     l11838:
 14723                           
 14724                           ; BSR set to: 0
 14725                           ;MOTEapp.c: 378: if ( messageReady )
 14726  001A56  0100               	movlb	0	; () banked
 14727  001A58  51DA               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 14728  001A5A  0100               	movlb	0	; () banked
 14729  001A5C  B4D8               	btfsc	status,2,c
 14730  001A5E  D1CC               	goto	l11940
 14731                           
 14732                           ; BSR set to: 0
 14733                           ;MOTEapp.c: 379: {
 14734                           ;MOTEapp.c: 380: if(strcmp(moduleResonseBuffer, "accepted") == 0)
 14735  001A60  0E64               	movlw	low _moduleResonseBuffer
 14736  001A62  0100               	movlb	0	; () banked
 14737  001A64  6FC3               	movwf	strcmp@s1& (0+255),b
 14738  001A66  0E01               	movlw	high _moduleResonseBuffer
 14739  001A68  0100               	movlb	0	; () banked
 14740  001A6A  6FC4               	movwf	(strcmp@s1+1)& (0+255),b
 14741  001A6C  0E2A               	movlw	low STR_48
 14742  001A6E  0100               	movlb	0	; () banked
 14743  001A70  6FC5               	movwf	strcmp@s2& (0+255),b
 14744  001A72  0E7F               	movlw	high STR_48
 14745  001A74  0100               	movlb	0	; () banked
 14746  001A76  6FC6               	movwf	(strcmp@s2+1)& (0+255),b
 14747  001A78  ECBC  F028         	call	_strcmp	;wreg free
 14748  001A7C  0100               	movlb	0	; () banked
 14749  001A7E  51C3               	movf	?_strcmp& (0+255),w,b
 14750  001A80  0100               	movlb	0	; () banked
 14751  001A82  11C4               	iorwf	(?_strcmp+1)& (0+255),w,b
 14752  001A84  A4D8               	btfss	status,2,c
 14753  001A86  D01F               	goto	l11850
 14754                           
 14755                           ; BSR set to: 0
 14756                           ;MOTEapp.c: 381: {
 14757                           ;MOTEapp.c: 382: oled_clear();
 14758  001A88  EC26  F02C         	call	_oled_clear	;wreg free
 14759                           
 14760                           ;MOTEapp.c: 383: oled_putString("ABP Join ",0,0);
 14761  001A8C  0EDC               	movlw	low STR_49
 14762  001A8E  0100               	movlb	0	; () banked
 14763  001A90  6FD0               	movwf	oled_putString@string& (0+255),b
 14764  001A92  0E7E               	movlw	high STR_49
 14765  001A94  0100               	movlb	0	; () banked
 14766  001A96  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
 14767  001A98  0E00               	movlw	0
 14768  001A9A  0100               	movlb	0	; () banked
 14769  001A9C  6FD2               	movwf	oled_putString@station_dot& (0+255),b
 14770  001A9E  0E00               	movlw	0
 14771  001AA0  0100               	movlb	0	; () banked
 14772  001AA2  6FD3               	movwf	oled_putString@start_page& (0+255),b
 14773  001AA4  EC0D  F027         	call	_oled_putString	;wreg free
 14774                           
 14775                           ;MOTEapp.c: 384: oled_putString("Successful",0,1);
 14776  001AA8  0EA6               	movlw	low STR_50
 14777  001AAA  0100               	movlb	0	; () banked
 14778  001AAC  6FD0               	movwf	oled_putString@string& (0+255),b
 14779  001AAE  0E7E               	movlw	high STR_50
 14780  001AB0  0100               	movlb	0	; () banked
 14781  001AB2  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
 14782  001AB4  0E00               	movlw	0
 14783  001AB6  0100               	movlb	0	; () banked
 14784  001AB8  6FD2               	movwf	oled_putString@station_dot& (0+255),b
 14785  001ABA  0E01               	movlw	1
 14786  001ABC  0100               	movlb	0	; () banked
 14787  001ABE  6FD3               	movwf	oled_putString@start_page& (0+255),b
 14788  001AC0  EC0D  F027         	call	_oled_putString	;wreg free
 14789  001AC4  D0BC               	goto	l11890
 14790  001AC6                     l11850:
 14791                           
 14792                           ; BSR set to: 0
 14793                           ;MOTEapp.c: 387: else
 14794                           ;MOTEapp.c: 388: {
 14795                           ;MOTEapp.c: 389: sendCommand("mac reset");
 14796  001AC6  0EFA               	movlw	low STR_51
 14797  001AC8  0100               	movlb	0	; () banked
 14798  001ACA  6FC4               	movwf	sendCommand@string& (0+255),b
 14799  001ACC  0E7E               	movlw	high STR_51
 14800  001ACE  0100               	movlb	0	; () banked
 14801  001AD0  6FC5               	movwf	(sendCommand@string+1)& (0+255),b
 14802  001AD2  EC2F  F02B         	call	_sendCommand	;wreg free
 14803  001AD6                     l11852:
 14804                           
 14805                           ;MOTEapp.c: 390: activeState = moteReset;
 14806  001AD6  0E01               	movlw	1
 14807  001AD8  D6C3               	goto	L7
 14808  001ADA                     l11854:
 14809                           
 14810                           ; BSR set to: 0
 14811                           ;MOTEapp.c: 395: if ( messageReady )
 14812  001ADA  0100               	movlb	0	; () banked
 14813  001ADC  51DA               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 14814  001ADE  0100               	movlb	0	; () banked
 14815  001AE0  B4D8               	btfsc	status,2,c
 14816  001AE2  D18A               	goto	l11940
 14817                           
 14818                           ; BSR set to: 0
 14819                           ;MOTEapp.c: 396: {
 14820                           ;MOTEapp.c: 397: if(strcmp(moduleResonseBuffer, "ok") == 0)
 14821  001AE4  0E64               	movlw	low _moduleResonseBuffer
 14822  001AE6  0100               	movlb	0	; () banked
 14823  001AE8  6FC3               	movwf	strcmp@s1& (0+255),b
 14824  001AEA  0E01               	movlw	high _moduleResonseBuffer
 14825  001AEC  0100               	movlb	0	; () banked
 14826  001AEE  6FC4               	movwf	(strcmp@s1+1)& (0+255),b
 14827  001AF0  0EF9               	movlw	low STR_43
 14828  001AF2  0100               	movlb	0	; () banked
 14829  001AF4  6FC5               	movwf	strcmp@s2& (0+255),b
 14830  001AF6  0E7F               	movlw	high STR_43
 14831  001AF8  0100               	movlb	0	; () banked
 14832  001AFA  6FC6               	movwf	(strcmp@s2+1)& (0+255),b
 14833  001AFC  ECBC  F028         	call	_strcmp	;wreg free
 14834  001B00  0100               	movlb	0	; () banked
 14835  001B02  51C3               	movf	?_strcmp& (0+255),w,b
 14836  001B04  0100               	movlb	0	; () banked
 14837  001B06  11C4               	iorwf	(?_strcmp+1)& (0+255),w,b
 14838  001B08  A4D8               	btfss	status,2,c
 14839  001B0A  D002               	goto	l11860
 14840                           
 14841                           ; BSR set to: 0
 14842                           ;MOTEapp.c: 398: {
 14843                           ;MOTEapp.c: 399: activeState = moteWaitOtaa;
 14844  001B0C  0E06               	movlw	6
 14845  001B0E  D6A8               	goto	L7
 14846  001B10                     l11860:
 14847                           
 14848                           ; BSR set to: 0
 14849                           ;MOTEapp.c: 401: else if(strcmp(moduleResonseBuffer, "keys_not_init") == 0)
 14850  001B10  0E64               	movlw	low _moduleResonseBuffer
 14851  001B12  0100               	movlb	0	; () banked
 14852  001B14  6FC3               	movwf	strcmp@s1& (0+255),b
 14853  001B16  0E01               	movlw	high _moduleResonseBuffer
 14854  001B18  0100               	movlb	0	; () banked
 14855  001B1A  6FC4               	movwf	(strcmp@s1+1)& (0+255),b
 14856  001B1C  0E5F               	movlw	low STR_44
 14857  001B1E  0100               	movlb	0	; () banked
 14858  001B20  6FC5               	movwf	strcmp@s2& (0+255),b
 14859  001B22  0E7D               	movlw	high STR_44
 14860  001B24  0100               	movlb	0	; () banked
 14861  001B26  6FC6               	movwf	(strcmp@s2+1)& (0+255),b
 14862  001B28  ECBC  F028         	call	_strcmp	;wreg free
 14863  001B2C  0100               	movlb	0	; () banked
 14864  001B2E  51C3               	movf	?_strcmp& (0+255),w,b
 14865  001B30  0100               	movlb	0	; () banked
 14866  001B32  11C4               	iorwf	(?_strcmp+1)& (0+255),w,b
 14867  001B34  A4D8               	btfss	status,2,c
 14868  001B36  D020               	goto	l11870
 14869                           
 14870                           ; BSR set to: 0
 14871                           ;MOTEapp.c: 402: {
 14872                           ;MOTEapp.c: 403: oled_clear();
 14873  001B38  EC26  F02C         	call	_oled_clear	;wreg free
 14874                           
 14875                           ;MOTEapp.c: 404: oled_putString("Valid Keys",0,0);
 14876  001B3C  0EBC               	movlw	low STR_45
 14877  001B3E  0100               	movlb	0	; () banked
 14878  001B40  6FD0               	movwf	oled_putString@string& (0+255),b
 14879  001B42  0E7E               	movlw	high STR_45
 14880  001B44  0100               	movlb	0	; () banked
 14881  001B46  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
 14882  001B48  0E00               	movlw	0
 14883  001B4A  0100               	movlb	0	; () banked
 14884  001B4C  6FD2               	movwf	oled_putString@station_dot& (0+255),b
 14885  001B4E  0E00               	movlw	0
 14886  001B50  0100               	movlb	0	; () banked
 14887  001B52  6FD3               	movwf	oled_putString@start_page& (0+255),b
 14888  001B54  EC0D  F027         	call	_oled_putString	;wreg free
 14889                           
 14890                           ;MOTEapp.c: 405: oled_putString("Required",0,1);
 14891  001B58  0E21               	movlw	low STR_46
 14892  001B5A  0100               	movlb	0	; () banked
 14893  001B5C  6FD0               	movwf	oled_putString@string& (0+255),b
 14894  001B5E  0E7F               	movlw	high STR_46
 14895  001B60  0100               	movlb	0	; () banked
 14896  001B62  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
 14897  001B64  0E00               	movlw	0
 14898  001B66  0100               	movlb	0	; () banked
 14899  001B68  6FD2               	movwf	oled_putString@station_dot& (0+255),b
 14900  001B6A  0E01               	movlw	1
 14901  001B6C  0100               	movlb	0	; () banked
 14902  001B6E  6FD3               	movwf	oled_putString@start_page& (0+255),b
 14903  001B70  EC0D  F027         	call	_oled_putString	;wreg free
 14904  001B74                     l11868:
 14905                           
 14906                           ;MOTEapp.c: 406: activeState = moteNeedKeys;
 14907  001B74  0E09               	movlw	9
 14908  001B76  D674               	goto	L7
 14909  001B78                     l11870:
 14910                           
 14911                           ; BSR set to: 0
 14912                           ;MOTEapp.c: 408: else if(strcmp(moduleResonseBuffer, "invalid_param") == 0)
 14913  001B78  0E64               	movlw	low _moduleResonseBuffer
 14914  001B7A  0100               	movlb	0	; () banked
 14915  001B7C  6FC3               	movwf	strcmp@s1& (0+255),b
 14916  001B7E  0E01               	movlw	high _moduleResonseBuffer
 14917  001B80  0100               	movlb	0	; () banked
 14918  001B82  6FC4               	movwf	(strcmp@s1+1)& (0+255),b
 14919  001B84  0E51               	movlw	low STR_56
 14920  001B86  0100               	movlb	0	; () banked
 14921  001B88  6FC5               	movwf	strcmp@s2& (0+255),b
 14922  001B8A  0E7D               	movlw	high STR_56
 14923  001B8C  0100               	movlb	0	; () banked
 14924  001B8E  6FC6               	movwf	(strcmp@s2+1)& (0+255),b
 14925  001B90  ECBC  F028         	call	_strcmp	;wreg free
 14926  001B94  0100               	movlb	0	; () banked
 14927  001B96  51C3               	movf	?_strcmp& (0+255),w,b
 14928  001B98  0100               	movlb	0	; () banked
 14929  001B9A  11C4               	iorwf	(?_strcmp+1)& (0+255),w,b
 14930  001B9C  A4D8               	btfss	status,2,c
 14931  001B9E  D009               	goto	l11876
 14932                           
 14933                           ; BSR set to: 0
 14934                           ;MOTEapp.c: 409: {
 14935                           ;MOTEapp.c: 410: sendCommand("mac join otaa");
 14936  001BA0  0E43               	movlw	low STR_42
 14937  001BA2  0100               	movlb	0	; () banked
 14938  001BA4  6FC4               	movwf	sendCommand@string& (0+255),b
 14939  001BA6  0E7D               	movlw	high STR_42
 14940  001BA8  0100               	movlb	0	; () banked
 14941  001BAA  6FC5               	movwf	(sendCommand@string+1)& (0+255),b
 14942  001BAC  EC2F  F02B         	call	_sendCommand	;wreg free
 14943  001BB0  D082               	goto	l11902
 14944  001BB2                     l11876:
 14945                           
 14946                           ; BSR set to: 0
 14947                           ;MOTEapp.c: 413: else if(strcmp(moduleResonseBuffer, "no_free_ch") == 0)
 14948  001BB2  0E64               	movlw	low _moduleResonseBuffer
 14949  001BB4  0100               	movlb	0	; () banked
 14950  001BB6  6FC3               	movwf	strcmp@s1& (0+255),b
 14951  001BB8  0E01               	movlw	high _moduleResonseBuffer
 14952  001BBA  0100               	movlb	0	; () banked
 14953  001BBC  6FC4               	movwf	(strcmp@s1+1)& (0+255),b
 14954  001BBE  0E9B               	movlw	low STR_58
 14955  001BC0  0100               	movlb	0	; () banked
 14956  001BC2  6FC5               	movwf	strcmp@s2& (0+255),b
 14957  001BC4  0E7E               	movlw	high STR_58
 14958  001BC6  0100               	movlb	0	; () banked
 14959  001BC8  6FC6               	movwf	(strcmp@s2+1)& (0+255),b
 14960  001BCA  ECBC  F028         	call	_strcmp	;wreg free
 14961  001BCE  D083               	goto	L27
 14962  001BD0                     l11880:
 14963                           
 14964                           ; BSR set to: 0
 14965                           ;MOTEapp.c: 420: if ( messageReady )
 14966  001BD0  0100               	movlb	0	; () banked
 14967  001BD2  51DA               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 14968  001BD4  0100               	movlb	0	; () banked
 14969  001BD6  B4D8               	btfsc	status,2,c
 14970  001BD8  D10F               	goto	l11940
 14971                           
 14972                           ; BSR set to: 0
 14973                           ;MOTEapp.c: 421: {
 14974                           ;MOTEapp.c: 422: if(strcmp(moduleResonseBuffer, "accepted") == 0)
 14975  001BDA  0E64               	movlw	low _moduleResonseBuffer
 14976  001BDC  0100               	movlb	0	; () banked
 14977  001BDE  6FC3               	movwf	strcmp@s1& (0+255),b
 14978  001BE0  0E01               	movlw	high _moduleResonseBuffer
 14979  001BE2  0100               	movlb	0	; () banked
 14980  001BE4  6FC4               	movwf	(strcmp@s1+1)& (0+255),b
 14981  001BE6  0E2A               	movlw	low STR_48
 14982  001BE8  0100               	movlb	0	; () banked
 14983  001BEA  6FC5               	movwf	strcmp@s2& (0+255),b
 14984  001BEC  0E7F               	movlw	high STR_48
 14985  001BEE  0100               	movlb	0	; () banked
 14986  001BF0  6FC6               	movwf	(strcmp@s2+1)& (0+255),b
 14987  001BF2  ECBC  F028         	call	_strcmp	;wreg free
 14988  001BF6  0100               	movlb	0	; () banked
 14989  001BF8  51C3               	movf	?_strcmp& (0+255),w,b
 14990  001BFA  0100               	movlb	0	; () banked
 14991  001BFC  11C4               	iorwf	(?_strcmp+1)& (0+255),w,b
 14992  001BFE  A4D8               	btfss	status,2,c
 14993  001C00  D020               	goto	l11892
 14994                           
 14995                           ; BSR set to: 0
 14996                           ;MOTEapp.c: 423: {
 14997                           ;MOTEapp.c: 424: oled_clear();
 14998  001C02  EC26  F02C         	call	_oled_clear	;wreg free
 14999                           
 15000                           ;MOTEapp.c: 425: oled_putString("OTAA Join ",0,0);
 15001  001C06  0E90               	movlw	low STR_60
 15002  001C08  0100               	movlb	0	; () banked
 15003  001C0A  6FD0               	movwf	oled_putString@string& (0+255),b
 15004  001C0C  0E7E               	movlw	high STR_60
 15005  001C0E  0100               	movlb	0	; () banked
 15006  001C10  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
 15007  001C12  0E00               	movlw	0
 15008  001C14  0100               	movlb	0	; () banked
 15009  001C16  6FD2               	movwf	oled_putString@station_dot& (0+255),b
 15010  001C18  0E00               	movlw	0
 15011  001C1A  0100               	movlb	0	; () banked
 15012  001C1C  6FD3               	movwf	oled_putString@start_page& (0+255),b
 15013  001C1E  EC0D  F027         	call	_oled_putString	;wreg free
 15014                           
 15015                           ;MOTEapp.c: 426: oled_putString("Successful",0,1);
 15016  001C22  0EA6               	movlw	low STR_50
 15017  001C24  0100               	movlb	0	; () banked
 15018  001C26  6FD0               	movwf	oled_putString@string& (0+255),b
 15019  001C28  0E7E               	movlw	high STR_50
 15020  001C2A  0100               	movlb	0	; () banked
 15021  001C2C  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
 15022  001C2E  0E00               	movlw	0
 15023  001C30  0100               	movlb	0	; () banked
 15024  001C32  6FD2               	movwf	oled_putString@station_dot& (0+255),b
 15025  001C34  0E01               	movlw	1
 15026  001C36  0100               	movlb	0	; () banked
 15027  001C38  6FD3               	movwf	oled_putString@start_page& (0+255),b
 15028  001C3A  EC0D  F027         	call	_oled_putString	;wreg free
 15029  001C3E                     l11890:
 15030                           
 15031                           ;MOTEapp.c: 427: activeState = moteJoined;
 15032  001C3E  0E07               	movlw	7
 15033  001C40  D60F               	goto	L7
 15034  001C42                     l11892:
 15035                           
 15036                           ; BSR set to: 0
 15037                           ;MOTEapp.c: 429: else if(strcmp(moduleResonseBuffer, "denied") == 0)
 15038  001C42  0E64               	movlw	low _moduleResonseBuffer
 15039  001C44  0100               	movlb	0	; () banked
 15040  001C46  6FC3               	movwf	strcmp@s1& (0+255),b
 15041  001C48  0E01               	movlw	high _moduleResonseBuffer
 15042  001C4A  0100               	movlb	0	; () banked
 15043  001C4C  6FC4               	movwf	(strcmp@s1+1)& (0+255),b
 15044  001C4E  0E8F               	movlw	low STR_62
 15045  001C50  0100               	movlb	0	; () banked
 15046  001C52  6FC5               	movwf	strcmp@s2& (0+255),b
 15047  001C54  0E7F               	movlw	high STR_62
 15048  001C56  0100               	movlb	0	; () banked
 15049  001C58  6FC6               	movwf	(strcmp@s2+1)& (0+255),b
 15050  001C5A  ECBC  F028         	call	_strcmp	;wreg free
 15051  001C5E  0100               	movlb	0	; () banked
 15052  001C60  51C3               	movf	?_strcmp& (0+255),w,b
 15053  001C62  0100               	movlb	0	; () banked
 15054  001C64  11C4               	iorwf	(?_strcmp+1)& (0+255),w,b
 15055  001C66  A4D8               	btfss	status,2,c
 15056  001C68  D028               	goto	l11904
 15057                           
 15058                           ; BSR set to: 0
 15059                           ;MOTEapp.c: 430: {
 15060                           ;MOTEapp.c: 431: oled_clear();
 15061  001C6A  EC26  F02C         	call	_oled_clear	;wreg free
 15062                           
 15063                           ;MOTEapp.c: 432: oled_putString("OTAA Join",1,0);
 15064  001C6E  0EF0               	movlw	low STR_63
 15065  001C70  0100               	movlb	0	; () banked
 15066  001C72  6FD0               	movwf	oled_putString@string& (0+255),b
 15067  001C74  0E7E               	movlw	high STR_63
 15068  001C76  0100               	movlb	0	; () banked
 15069  001C78  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
 15070  001C7A  0E01               	movlw	1
 15071  001C7C  0100               	movlb	0	; () banked
 15072  001C7E  6FD2               	movwf	oled_putString@station_dot& (0+255),b
 15073  001C80  0E00               	movlw	0
 15074  001C82  0100               	movlb	0	; () banked
 15075  001C84  6FD3               	movwf	oled_putString@start_page& (0+255),b
 15076  001C86  EC0D  F027         	call	_oled_putString	;wreg free
 15077                           
 15078                           ;MOTEapp.c: 433: oled_putString("Denied",2,1);
 15079  001C8A  0E88               	movlw	low STR_64
 15080  001C8C  0100               	movlb	0	; () banked
 15081  001C8E  6FD0               	movwf	oled_putString@string& (0+255),b
 15082  001C90  0E7F               	movlw	high STR_64
 15083  001C92  0100               	movlb	0	; () banked
 15084  001C94  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
 15085  001C96  0E02               	movlw	2
 15086  001C98  0100               	movlb	0	; () banked
 15087  001C9A  6FD2               	movwf	oled_putString@station_dot& (0+255),b
 15088  001C9C  0E01               	movlw	1
 15089  001C9E  0100               	movlb	0	; () banked
 15090  001CA0  6FD3               	movwf	oled_putString@start_page& (0+255),b
 15091  001CA2  EC0D  F027         	call	_oled_putString	;wreg free
 15092                           
 15093                           ;MOTEapp.c: 434: sendCommand("mac join otaa");
 15094  001CA6  0E43               	movlw	low STR_42
 15095  001CA8  0100               	movlb	0	; () banked
 15096  001CAA  6FC4               	movwf	sendCommand@string& (0+255),b
 15097  001CAC  0E7D               	movlw	high STR_42
 15098  001CAE  0100               	movlb	0	; () banked
 15099  001CB0  6FC5               	movwf	(sendCommand@string+1)& (0+255),b
 15100  001CB2  EC2F  F02B         	call	_sendCommand	;wreg free
 15101  001CB6                     l11902:
 15102                           
 15103                           ;MOTEapp.c: 435: activeState = moteCheckOtaa;
 15104  001CB6  0E05               	movlw	5
 15105  001CB8  D5D3               	goto	L7
 15106  001CBA                     l11904:
 15107                           
 15108                           ; BSR set to: 0
 15109                           ;MOTEapp.c: 437: else if(strcmp(moduleResonseBuffer, "no_free_ch") == 0)
 15110  001CBA  0E64               	movlw	low _moduleResonseBuffer
 15111  001CBC  0100               	movlb	0	; () banked
 15112  001CBE  6FC3               	movwf	strcmp@s1& (0+255),b
 15113  001CC0  0E01               	movlw	high _moduleResonseBuffer
 15114  001CC2  0100               	movlb	0	; () banked
 15115  001CC4  6FC4               	movwf	(strcmp@s1+1)& (0+255),b
 15116  001CC6  0E9B               	movlw	low STR_58
 15117  001CC8  0100               	movlb	0	; () banked
 15118  001CCA  6FC5               	movwf	strcmp@s2& (0+255),b
 15119  001CCC  0E7E               	movlw	high STR_58
 15120  001CCE  0100               	movlb	0	; () banked
 15121  001CD0  6FC6               	movwf	(strcmp@s2+1)& (0+255),b
 15122  001CD2  ECBC  F028         	call	_strcmp	;wreg free
 15123  001CD6                     L27:
 15124  001CD6  0100               	movlb	0	; () banked
 15125  001CD8  51C3               	movf	?_strcmp& (0+255),w,b
 15126  001CDA  0100               	movlb	0	; () banked
 15127  001CDC  11C4               	iorwf	(?_strcmp+1)& (0+255),w,b
 15128  001CDE  A4D8               	btfss	status,2,c
 15129  001CE0  D08B               	goto	l11940
 15130  001CE2                     l11906:
 15131                           
 15132                           ; BSR set to: 0
 15133                           ;MOTEapp.c: 438: {
 15134                           ;MOTEapp.c: 439: activeState = moteStartup;
 15135  001CE2  0E00               	movlw	0
 15136  001CE4  D5BD               	goto	L7
 15137  001CE6                     l11908:
 15138                           
 15139                           ; BSR set to: 0
 15140                           ;MOTEapp.c: 444: sendCommand("mac get dr");
 15141  001CE6  0EB1               	movlw	low STR_67
 15142  001CE8  0100               	movlb	0	; () banked
 15143  001CEA  6FC4               	movwf	sendCommand@string& (0+255),b
 15144  001CEC  0E7E               	movlw	high STR_67
 15145  001CEE  0100               	movlb	0	; () banked
 15146  001CF0  6FC5               	movwf	(sendCommand@string+1)& (0+255),b
 15147  001CF2  EC2F  F02B         	call	_sendCommand	;wreg free
 15148  001CF6  D021               	goto	l11918
 15149  001CF8                     l11912:
 15150                           
 15151                           ; BSR set to: 0
 15152                           ;MOTEapp.c: 448: if ( messageReady )
 15153  001CF8  0100               	movlb	0	; () banked
 15154  001CFA  51DA               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 15155  001CFC  0100               	movlb	0	; () banked
 15156  001CFE  B4D8               	btfsc	status,2,c
 15157  001D00  D07B               	goto	l11940
 15158                           
 15159                           ; BSR set to: 0
 15160                           ;MOTEapp.c: 449: {
 15161                           ;MOTEapp.c: 450: if(strcmp(moduleResonseBuffer, "invalid_param") == 0)
 15162  001D02  0E64               	movlw	low _moduleResonseBuffer
 15163  001D04  0100               	movlb	0	; () banked
 15164  001D06  6FC3               	movwf	strcmp@s1& (0+255),b
 15165  001D08  0E01               	movlw	high _moduleResonseBuffer
 15166  001D0A  0100               	movlb	0	; () banked
 15167  001D0C  6FC4               	movwf	(strcmp@s1+1)& (0+255),b
 15168  001D0E  0E51               	movlw	low STR_56
 15169  001D10  0100               	movlb	0	; () banked
 15170  001D12  6FC5               	movwf	strcmp@s2& (0+255),b
 15171  001D14  0E7D               	movlw	high STR_56
 15172  001D16  0100               	movlb	0	; () banked
 15173  001D18  6FC6               	movwf	(strcmp@s2+1)& (0+255),b
 15174  001D1A  ECBC  F028         	call	_strcmp	;wreg free
 15175  001D1E  0100               	movlb	0	; () banked
 15176  001D20  51C3               	movf	?_strcmp& (0+255),w,b
 15177  001D22  0100               	movlb	0	; () banked
 15178  001D24  11C4               	iorwf	(?_strcmp+1)& (0+255),w,b
 15179  001D26  A4D8               	btfss	status,2,c
 15180  001D28  D00A               	goto	l11920
 15181                           
 15182                           ; BSR set to: 0
 15183                           ;MOTEapp.c: 451: {
 15184                           ;MOTEapp.c: 452: sendCommand("mac get dr");
 15185  001D2A  0EB1               	movlw	low STR_67
 15186  001D2C  0100               	movlb	0	; () banked
 15187  001D2E  6FC4               	movwf	sendCommand@string& (0+255),b
 15188  001D30  0E7E               	movlw	high STR_67
 15189  001D32  0100               	movlb	0	; () banked
 15190  001D34  6FC5               	movwf	(sendCommand@string+1)& (0+255),b
 15191  001D36  EC2F  F02B         	call	_sendCommand	;wreg free
 15192  001D3A                     l11918:
 15193                           
 15194                           ;MOTEapp.c: 453: activeState = moteGetDr;
 15195  001D3A  0E08               	movlw	8
 15196  001D3C  D591               	goto	L7
 15197  001D3E                     l11920:
 15198                           
 15199                           ; BSR set to: 0
 15200                           ;MOTEapp.c: 455: else
 15201                           ;MOTEapp.c: 456: {
 15202                           ;MOTEapp.c: 457: uint8_t readDataRate;
 15203                           ;MOTEapp.c: 458: readDataRate = moduleResonseBuffer[0] - '0';
 15204  001D3E  0101               	movlb	1	; () banked
 15205  001D40  5164               	movf	_moduleResonseBuffer& (0+255),w,b
 15206  001D42  0FD0               	addlw	208
 15207  001D44  0100               	movlb	0	; () banked
 15208  001D46  6FD8               	movwf	moteJoiningProcess@readDataRate& (0+255),b
 15209                           
 15210                           ; BSR set to: 0
 15211                           ;MOTEapp.c: 459: dataRateValue = readDataRate;
 15212  001D48  C0D8  F0F4         	movff	moteJoiningProcess@readDataRate,_dataRateValue
 15213                           
 15214                           ; BSR set to: 0
 15215                           ;MOTEapp.c: 460: joiningComplete = 1;
 15216  001D4C  0E01               	movlw	1
 15217  001D4E  0100               	movlb	0	; () banked
 15218  001D50  6FD9               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
 15219                           
 15220                           ; BSR set to: 0
 15221                           ;MOTEapp.c: 461: }
 15222                           ;MOTEapp.c: 462: }
 15223                           ;MOTEapp.c: 463: break;
 15224                           
 15225                           ; BSR set to: 0
 15226  001D52  D052               	goto	l11940
 15227  001D54                     l11926:
 15228                           
 15229                           ; BSR set to: 0
 15230                           ;MOTEapp.c: 465: if (selectButton)
 15231  001D54  0100               	movlb	0	; () banked
 15232  001D56  51D6               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 15233  001D58  0100               	movlb	0	; () banked
 15234  001D5A  B4D8               	btfsc	status,2,c
 15235  001D5C  D04D               	goto	l11940
 15236                           
 15237                           ; BSR set to: 0
 15238                           ;MOTEapp.c: 466: {
 15239                           ;MOTEapp.c: 467: activeState = moteComFailure;
 15240  001D5E  0E0A               	movlw	10
 15241  001D60  D57F               	goto	L7
 15242  001D62                     l11930:
 15243                           
 15244                           ; BSR set to: 0
 15245                           ;MOTEapp.c: 471: DATAEE_WriteByte(0x00, 0x00);
 15246  001D62  0E00               	movlw	0
 15247  001D64  0100               	movlb	0	; () banked
 15248  001D66  6FC3               	movwf	DATAEE_WriteByte@bData& (0+255),b
 15249  001D68  0E00               	movlw	0
 15250  001D6A  ECC0  F029         	call	_DATAEE_WriteByte
 15251  001D6E                     l456:
 15252  001D6E  A082               	btfss	3970,0,c	;volatile
 15253  001D70  B282               	btfsc	3970,1,c	;volatile
 15254  001D72  D001               	goto	l11934
 15255  001D74  D7FC               	goto	l456
 15256  001D76                     l11934:
 15257                           
 15258                           ;MOTEapp.c: 473: _delay((unsigned long)((16)*(48000000/4000.0)));
 15259  001D76  0EFA               	movlw	250
 15260  001D78  0100               	movlb	0	; () banked
 15261  001D7A  6FD7               	movwf	??_moteJoiningProcess& (0+255),b
 15262  001D7C  0E58               	movlw	88
 15263  001D7E                     u12087:
 15264  001D7E  2EE8               	decfsz	wreg,f,c
 15265  001D80  D7FE               	goto	u12087
 15266  001D82  2FD7               	decfsz	??_moteJoiningProcess& (0+255),f,b
 15267  001D84  D7FC               	goto	u12087
 15268  001D86  D000               	nop2	
 15269                           
 15270                           ;MOTEapp.c: 474: _delay((unsigned long)((16)*(48000000/4000.0)));
 15271  001D88  0EFA               	movlw	250
 15272  001D8A  0100               	movlb	0	; () banked
 15273  001D8C  6FD7               	movwf	??_moteJoiningProcess& (0+255),b
 15274  001D8E  0E58               	movlw	88
 15275  001D90                     u12097:
 15276  001D90  2EE8               	decfsz	wreg,f,c
 15277  001D92  D7FE               	goto	u12097
 15278  001D94  2FD7               	decfsz	??_moteJoiningProcess& (0+255),f,b
 15279  001D96  D7FC               	goto	u12097
 15280  001D98  D000               	nop2	
 15281                           
 15282                           ;MOTEapp.c: 475: _delay((unsigned long)((16)*(48000000/4000.0)));
 15283  001D9A  0EFA               	movlw	250
 15284  001D9C  0100               	movlb	0	; () banked
 15285  001D9E  6FD7               	movwf	??_moteJoiningProcess& (0+255),b
 15286  001DA0  0E58               	movlw	88
 15287  001DA2                     u12107:
 15288  001DA2  2EE8               	decfsz	wreg,f,c
 15289  001DA4  D7FE               	goto	u12107
 15290  001DA6  2FD7               	decfsz	??_moteJoiningProcess& (0+255),f,b
 15291  001DA8  D7FC               	goto	u12107
 15292  001DAA  D000               	nop2	
 15293  001DAC  00FF               	reset		;# 
 15294                           
 15295                           ;MOTEapp.c: 479: }
 15296                           
 15297                           ;MOTEapp.c: 478: break;
 15298  001DAE  D024               	goto	l11940
 15299  001DB0                     l11938:
 15300  001DB0  0100               	movlb	0	; () banked
 15301  001DB2  519A               	movf	_activeState& (0+255),w,b
 15302                           
 15303                           ; Switch size 1, requested type "space"
 15304                           ; Number of cases is 11, Range of values is 0 to 10
 15305                           ; switch strategies available:
 15306                           ; Name         Instructions Cycles
 15307                           ; simple_byte           34    18 (average)
 15308                           ;	Chosen strategy is simple_byte
 15309  001DB4  0A00               	xorlw	0	; case 0
 15310  001DB6  B4D8               	btfsc	status,2,c
 15311  001DB8  D4ED               	goto	l11754
 15312  001DBA  0A01               	xorlw	1	; case 1
 15313  001DBC  B4D8               	btfsc	status,2,c
 15314  001DBE  D4FA               	goto	l11760
 15315  001DC0  0A03               	xorlw	3	; case 2
 15316  001DC2  B4D8               	btfsc	status,2,c
 15317  001DC4  D5AA               	goto	l11798
 15318  001DC6  0A01               	xorlw	1	; case 3
 15319  001DC8  B4D8               	btfsc	status,2,c
 15320  001DCA  D5ED               	goto	l11818
 15321  001DCC  0A07               	xorlw	7	; case 4
 15322  001DCE  B4D8               	btfsc	status,2,c
 15323  001DD0  D642               	goto	l11838
 15324  001DD2  0A01               	xorlw	1	; case 5
 15325  001DD4  B4D8               	btfsc	status,2,c
 15326  001DD6  D681               	goto	l11854
 15327  001DD8  0A03               	xorlw	3	; case 6
 15328  001DDA  B4D8               	btfsc	status,2,c
 15329  001DDC  D6F9               	goto	l11880
 15330  001DDE  0A01               	xorlw	1	; case 7
 15331  001DE0  B4D8               	btfsc	status,2,c
 15332  001DE2  D781               	goto	l11908
 15333  001DE4  0A0F               	xorlw	15	; case 8
 15334  001DE6  B4D8               	btfsc	status,2,c
 15335  001DE8  D787               	goto	l11912
 15336  001DEA  0A01               	xorlw	1	; case 9
 15337  001DEC  B4D8               	btfsc	status,2,c
 15338  001DEE  D7B2               	goto	l11926
 15339  001DF0  0A03               	xorlw	3	; case 10
 15340  001DF2  B4D8               	btfsc	status,2,c
 15341  001DF4  D7B6               	goto	l11930
 15342  001DF6  D4CD               	goto	l407
 15343  001DF8                     l11940:
 15344                           
 15345                           ;MOTEapp.c: 480: return joiningComplete;
 15346  001DF8  0100               	movlb	0	; () banked
 15347  001DFA  51D9               	movf	moteJoiningProcess@joiningComplete& (0+255),w,b
 15348  001DFC  0012               	return	
 15349  001DFE                     __end_of_moteJoiningProcess:
 15350                           	opt stack 0
 15351                           tblptru	equ	0xFF8
 15352                           tblptrh	equ	0xFF7
 15353                           tblptrl	equ	0xFF6
 15354                           tablat	equ	0xFF5
 15355                           prodh	equ	0xFF4
 15356                           prodl	equ	0xFF3
 15357                           intcon	equ	0xFF2
 15358                           postinc0	equ	0xFEE
 15359                           wreg	equ	0xFE8
 15360                           indf1	equ	0xFE7
 15361                           postdec1	equ	0xFE5
 15362                           fsr1h	equ	0xFE2
 15363                           fsr1l	equ	0xFE1
 15364                           indf2	equ	0xFDF
 15365                           fsr2h	equ	0xFDA
 15366                           fsr2l	equ	0xFD9
 15367                           status	equ	0xFD8
 15368                           
 15369 ;; *************** function _strncmp *****************
 15370 ;; Defined at:
 15371 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strncmp.c"
 15372 ;; Parameters:    Size  Location     Type
 15373 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 15374 ;;		 -> moduleResonseBuffer(64), 
 15375 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 15376 ;;		 -> STR_141(7), STR_139(7), STR_136(7), STR_97(7), 
 15377 ;;		 -> STR_95(7), STR_93(7), STR_90(7), STR_34(5), 
 15378 ;;		 -> STR_30(5), 
 15379 ;;  len             2    4[BANK0 ] unsigned int 
 15380 ;; Auto vars:     Size  Location     Type
 15381 ;;		None
 15382 ;; Return value:  Size  Location     Type
 15383 ;;                  2    0[BANK0 ] int 
 15384 ;; Registers used:
 15385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 15386 ;; Tracked objects:
 15387 ;;		On entry : 0/0
 15388 ;;		On exit  : 0/0
 15389 ;;		Unchanged: 0/0
 15390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15391 ;;      Params:         0       6       0       0       0       0       0       0       0
 15392 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15393 ;;      Temps:          0       3       0       0       0       0       0       0       0
 15394 ;;      Totals:         0       9       0       0       0       0       0       0       0
 15395 ;;Total ram usage:        9 bytes
 15396 ;; Hardware stack levels used:    1
 15397 ;; Hardware stack levels required when called:   11
 15398 ;; This function calls:
 15399 ;;		Nothing
 15400 ;; This function is called by:
 15401 ;;		_moteJoiningProcess
 15402 ;;		_moteRunningProcess
 15403 ;; This function uses a non-reentrant model
 15404 ;;
 15405                           
 15406                           	psect	text36
 15407  00486E                     __ptext36:
 15408                           	opt stack 0
 15409  00486E                     _strncmp:
 15410                           	opt stack 17
 15411                           
 15412                           ; BSR set to: 0
 15413                           ;incstack = 0
 15414  00486E  D03F               	goto	l11080
 15415  004870                     l11070:
 15416  004870  C0C3  FFD9         	movff	strncmp@s1,fsr2l
 15417  004874  C0C4  FFDA         	movff	strncmp@s1+1,fsr2h
 15418  004878  50DF               	movf	indf2,w,c
 15419  00487A  B4D8               	btfsc	status,2,c
 15420  00487C  D011               	goto	l11074
 15421  00487E  C0C3  FFD9         	movff	strncmp@s1,fsr2l
 15422  004882  C0C4  FFDA         	movff	strncmp@s1+1,fsr2h
 15423  004886  50DF               	movf	indf2,w,c
 15424  004888  0100               	movlb	0	; () banked
 15425  00488A  6FC9               	movwf	??_strncmp& (0+255),b
 15426  00488C  C0C5  FFF6         	movff	strncmp@s2,tblptrl
 15427  004890  C0C6  FFF7         	movff	strncmp@s2+1,tblptrh
 15428  004894                     	if	0	;tblptru may be non-zero
 15429  004894                     	endif
 15430  004894                     	if	0	;tblptru may be non-zero
 15431  004894                     	endif
 15432  004894  0008               	tblrd		*
 15433  004896  50F5               	movf	tablat,w,c
 15434  004898  0100               	movlb	0	; () banked
 15435  00489A  19C9               	xorwf	??_strncmp& (0+255),w,b
 15436  00489C  B4D8               	btfsc	status,2,c
 15437  00489E  D021               	goto	l11078
 15438  0048A0                     l11074:
 15439  0048A0  C0C5  FFF6         	movff	strncmp@s2,tblptrl
 15440  0048A4  C0C6  FFF7         	movff	strncmp@s2+1,tblptrh
 15441  0048A8                     	if	0	;tblptru may be non-zero
 15442  0048A8                     	endif
 15443  0048A8                     	if	0	;tblptru may be non-zero
 15444  0048A8                     	endif
 15445  0048A8  0008               	tblrd		*
 15446  0048AA  50F5               	movf	tablat,w,c
 15447  0048AC  0100               	movlb	0	; () banked
 15448  0048AE  6FC9               	movwf	??_strncmp& (0+255),b
 15449  0048B0  6BCA               	clrf	(??_strncmp+1)& (0+255),b
 15450  0048B2  0100               	movlb	0	; () banked
 15451  0048B4  1FC9               	comf	??_strncmp& (0+255),f,b
 15452  0048B6  1FCA               	comf	(??_strncmp+1)& (0+255),f,b
 15453  0048B8  4BC9               	infsnz	??_strncmp& (0+255),f,b
 15454  0048BA  2BCA               	incf	(??_strncmp+1)& (0+255),f,b
 15455  0048BC  C0C3  FFD9         	movff	strncmp@s1,fsr2l
 15456  0048C0  C0C4  FFDA         	movff	strncmp@s1+1,fsr2h
 15457  0048C4  50DF               	movf	indf2,w,c
 15458  0048C6  0100               	movlb	0	; () banked
 15459  0048C8  6FCB               	movwf	(??_strncmp+2)& (0+255),b
 15460  0048CA  0100               	movlb	0	; () banked
 15461  0048CC  51CB               	movf	(??_strncmp+2)& (0+255),w,b
 15462  0048CE  0100               	movlb	0	; () banked
 15463  0048D0  25C9               	addwf	??_strncmp& (0+255),w,b
 15464  0048D2  0100               	movlb	0	; () banked
 15465  0048D4  6FC3               	movwf	?_strncmp& (0+255),b
 15466  0048D6  0E00               	movlw	0
 15467  0048D8  0100               	movlb	0	; () banked
 15468  0048DA  21CA               	addwfc	(??_strncmp+1)& (0+255),w,b
 15469  0048DC  0100               	movlb	0	; () banked
 15470  0048DE  6FC4               	movwf	(?_strncmp+1)& (0+255),b
 15471                           
 15472                           ; BSR set to: 0
 15473  0048E0  0012               	return	
 15474  0048E2                     l11078:
 15475                           
 15476                           ; BSR set to: 0
 15477  0048E2  0100               	movlb	0	; () banked
 15478  0048E4  4BC3               	infsnz	strncmp@s1& (0+255),f,b
 15479  0048E6  2BC4               	incf	(strncmp@s1+1)& (0+255),f,b
 15480  0048E8  0100               	movlb	0	; () banked
 15481  0048EA  4BC5               	infsnz	strncmp@s2& (0+255),f,b
 15482  0048EC  2BC6               	incf	(strncmp@s2+1)& (0+255),f,b
 15483  0048EE                     l11080:
 15484  0048EE  0100               	movlb	0	; () banked
 15485  0048F0  07C7               	decf	strncmp@len& (0+255),f,b
 15486  0048F2  A0D8               	btfss	status,0,c
 15487  0048F4  07C8               	decf	(strncmp@len+1)& (0+255),f,b
 15488  0048F6  0100               	movlb	0	; () banked
 15489  0048F8  29C7               	incf	strncmp@len& (0+255),w,b
 15490  0048FA  E1BA               	bnz	l11070
 15491  0048FC  0100               	movlb	0	; () banked
 15492  0048FE  29C8               	incf	(strncmp@len+1)& (0+255),w,b
 15493  004900  A4D8               	btfss	status,2,c
 15494  004902  D7B6               	goto	l11070
 15495                           
 15496                           ; BSR set to: 0
 15497                           
 15498                           ; BSR set to: 0
 15499  004904  0E00               	movlw	0
 15500  004906  0100               	movlb	0	; () banked
 15501  004908  6FC4               	movwf	(?_strncmp+1)& (0+255),b
 15502  00490A  0E00               	movlw	0
 15503  00490C  6FC3               	movwf	?_strncmp& (0+255),b
 15504  00490E  0012               	return	
 15505  004910                     __end_of_strncmp:
 15506                           	opt stack 0
 15507                           tblptru	equ	0xFF8
 15508                           tblptrh	equ	0xFF7
 15509                           tblptrl	equ	0xFF6
 15510                           tablat	equ	0xFF5
 15511                           prodh	equ	0xFF4
 15512                           prodl	equ	0xFF3
 15513                           intcon	equ	0xFF2
 15514                           postinc0	equ	0xFEE
 15515                           wreg	equ	0xFE8
 15516                           indf1	equ	0xFE7
 15517                           postdec1	equ	0xFE5
 15518                           fsr1h	equ	0xFE2
 15519                           fsr1l	equ	0xFE1
 15520                           indf2	equ	0xFDF
 15521                           fsr2h	equ	0xFDA
 15522                           fsr2l	equ	0xFD9
 15523                           status	equ	0xFD8
 15524                           
 15525 ;; *************** function _strcmp *****************
 15526 ;; Defined at:
 15527 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcmp.c"
 15528 ;; Parameters:    Size  Location     Type
 15529 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 15530 ;;		 -> moduleResonseBuffer(64), 
 15531 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 15532 ;;		 -> STR_135(3), STR_89(3), STR_68(14), STR_66(11), 
 15533 ;;		 -> STR_62(7), STR_59(9), STR_58(11), STR_56(14), 
 15534 ;;		 -> STR_53(14), STR_52(3), STR_48(9), STR_44(14), 
 15535 ;;		 -> STR_43(3), 
 15536 ;; Auto vars:     Size  Location     Type
 15537 ;;  r               1    5[BANK0 ] char 
 15538 ;; Return value:  Size  Location     Type
 15539 ;;                  2    0[BANK0 ] int 
 15540 ;; Registers used:
 15541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 15542 ;; Tracked objects:
 15543 ;;		On entry : 0/0
 15544 ;;		On exit  : 0/0
 15545 ;;		Unchanged: 0/0
 15546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15547 ;;      Params:         0       4       0       0       0       0       0       0       0
 15548 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15549 ;;      Temps:          0       1       0       0       0       0       0       0       0
 15550 ;;      Totals:         0       6       0       0       0       0       0       0       0
 15551 ;;Total ram usage:        6 bytes
 15552 ;; Hardware stack levels used:    1
 15553 ;; Hardware stack levels required when called:   11
 15554 ;; This function calls:
 15555 ;;		Nothing
 15556 ;; This function is called by:
 15557 ;;		_moteJoiningProcess
 15558 ;;		_moteRunningProcess
 15559 ;; This function uses a non-reentrant model
 15560 ;;
 15561                           
 15562                           	psect	text37
 15563  005178                     __ptext37:
 15564                           	opt stack 0
 15565  005178                     _strcmp:
 15566                           	opt stack 17
 15567                           
 15568                           ; BSR set to: 0
 15569                           ;incstack = 0
 15570  005178  D006               	goto	l11090
 15571  00517A                     l11088:
 15572  00517A  0100               	movlb	0	; () banked
 15573  00517C  4BC3               	infsnz	strcmp@s1& (0+255),f,b
 15574  00517E  2BC4               	incf	(strcmp@s1+1)& (0+255),f,b
 15575  005180  0100               	movlb	0	; () banked
 15576  005182  4BC5               	infsnz	strcmp@s2& (0+255),f,b
 15577  005184  2BC6               	incf	(strcmp@s2+1)& (0+255),f,b
 15578  005186                     l11090:
 15579  005186  C0C3  FFD9         	movff	strcmp@s1,fsr2l
 15580  00518A  C0C4  FFDA         	movff	strcmp@s1+1,fsr2h
 15581  00518E  50DF               	movf	indf2,w,c
 15582  005190  0100               	movlb	0	; () banked
 15583  005192  6FC7               	movwf	??_strcmp& (0+255),b
 15584  005194  C0C5  FFF6         	movff	strcmp@s2,tblptrl
 15585  005198  C0C6  FFF7         	movff	strcmp@s2+1,tblptrh
 15586  00519C                     	if	0	;tblptru may be non-zero
 15587  00519C                     	endif
 15588  00519C                     	if	0	;tblptru may be non-zero
 15589  00519C                     	endif
 15590  00519C  0008               	tblrd		*
 15591  00519E  50F5               	movf	tablat,w,c
 15592  0051A0  0800               	sublw	0
 15593  0051A2  0100               	movlb	0	; () banked
 15594  0051A4  25C7               	addwf	??_strcmp& (0+255),w,b
 15595  0051A6  0100               	movlb	0	; () banked
 15596  0051A8  6FC8               	movwf	strcmp@r& (0+255),b
 15597  0051AA  0100               	movlb	0	; () banked
 15598  0051AC  51C8               	movf	strcmp@r& (0+255),w,b
 15599  0051AE  A4D8               	btfss	status,2,c
 15600  0051B0  D007               	goto	l11094
 15601                           
 15602                           ; BSR set to: 0
 15603  0051B2  C0C3  FFD9         	movff	strcmp@s1,fsr2l
 15604  0051B6  C0C4  FFDA         	movff	strcmp@s1+1,fsr2h
 15605  0051BA  50DF               	movf	indf2,w,c
 15606  0051BC  A4D8               	btfss	status,2,c
 15607  0051BE  D7DD               	goto	l11088
 15608  0051C0                     l11094:
 15609                           
 15610                           ; BSR set to: 0
 15611  0051C0  0100               	movlb	0	; () banked
 15612  0051C2  51C8               	movf	strcmp@r& (0+255),w,b
 15613  0051C4  0100               	movlb	0	; () banked
 15614  0051C6  6FC3               	movwf	?_strcmp& (0+255),b
 15615  0051C8  6BC4               	clrf	(?_strcmp+1)& (0+255),b
 15616  0051CA  BFC3               	btfsc	?_strcmp& (0+255),7,b
 15617  0051CC  07C4               	decf	(?_strcmp+1)& (0+255),f,b
 15618  0051CE  0012               	return	
 15619  0051D0                     __end_of_strcmp:
 15620                           	opt stack 0
 15621                           tblptru	equ	0xFF8
 15622                           tblptrh	equ	0xFF7
 15623                           tblptrl	equ	0xFF6
 15624                           tablat	equ	0xFF5
 15625                           prodh	equ	0xFF4
 15626                           prodl	equ	0xFF3
 15627                           intcon	equ	0xFF2
 15628                           postinc0	equ	0xFEE
 15629                           wreg	equ	0xFE8
 15630                           indf1	equ	0xFE7
 15631                           postdec1	equ	0xFE5
 15632                           fsr1h	equ	0xFE2
 15633                           fsr1l	equ	0xFE1
 15634                           indf2	equ	0xFDF
 15635                           fsr2h	equ	0xFDA
 15636                           fsr2l	equ	0xFD9
 15637                           status	equ	0xFD8
 15638                           
 15639 ;; *************** function _moteApp_delayms *****************
 15640 ;; Defined at:
 15641 ;;		line 160 in file "../Includes/Board/MOTEapp.c"
 15642 ;; Parameters:    Size  Location     Type
 15643 ;;  length          2    0[BANK0 ] unsigned int 
 15644 ;; Auto vars:     Size  Location     Type
 15645 ;;  counter         2    3[BANK0 ] unsigned int 
 15646 ;; Return value:  Size  Location     Type
 15647 ;;		None               void
 15648 ;; Registers used:
 15649 ;;		wreg, status,2, status,0
 15650 ;; Tracked objects:
 15651 ;;		On entry : 0/0
 15652 ;;		On exit  : 0/0
 15653 ;;		Unchanged: 0/0
 15654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15655 ;;      Params:         0       2       0       0       0       0       0       0       0
 15656 ;;      Locals:         0       2       0       0       0       0       0       0       0
 15657 ;;      Temps:          0       1       0       0       0       0       0       0       0
 15658 ;;      Totals:         0       5       0       0       0       0       0       0       0
 15659 ;;Total ram usage:        5 bytes
 15660 ;; Hardware stack levels used:    1
 15661 ;; Hardware stack levels required when called:   11
 15662 ;; This function calls:
 15663 ;;		Nothing
 15664 ;; This function is called by:
 15665 ;;		_main
 15666 ;;		_test_powerup
 15667 ;;		_test_switch
 15668 ;;		_test_comms
 15669 ;;		_test_leds
 15670 ;;		_test_adc
 15671 ;;		_moduleResync
 15672 ;;		_moteHandler
 15673 ;;		_moteJoiningProcess
 15674 ;;		_moteRunningProcess
 15675 ;;		_moteApp_GoToSleep
 15676 ;;		_test_rf
 15677 ;; This function uses a non-reentrant model
 15678 ;;
 15679                           
 15680                           	psect	text38
 15681  0054E6                     __ptext38:
 15682                           	opt stack 0
 15683  0054E6                     _moteApp_delayms:
 15684                           	opt stack 17
 15685                           
 15686                           ;MOTEapp.c: 162: uint16_t counter;
 15687                           ;MOTEapp.c: 163: for(counter = 0; counter < length; counter++)
 15688                           
 15689                           ; BSR set to: 0
 15690                           ;incstack = 0
 15691  0054E6  0E00               	movlw	0
 15692  0054E8  0100               	movlb	0	; () banked
 15693  0054EA  6FC7               	movwf	(moteApp_delayms@counter+1)& (0+255),b
 15694  0054EC  0E00               	movlw	0
 15695  0054EE  6FC6               	movwf	moteApp_delayms@counter& (0+255),b
 15696  0054F0  D00C               	goto	l356
 15697  0054F2                     l10650:
 15698                           
 15699                           ; BSR set to: 0
 15700                           ;MOTEapp.c: 164: {
 15701                           ;MOTEapp.c: 165: _delay((unsigned long)((1)*(48000000/4000.0)));
 15702  0054F2  0E10               	movlw	16
 15703  0054F4  0100               	movlb	0	; () banked
 15704  0054F6  6FC5               	movwf	??_moteApp_delayms& (0+255),b
 15705  0054F8  0E94               	movlw	148
 15706  0054FA                     u12117:
 15707  0054FA  2EE8               	decfsz	wreg,f,c
 15708  0054FC  D7FE               	goto	u12117
 15709  0054FE  2FC5               	decfsz	??_moteApp_delayms& (0+255),f,b
 15710  005500  D7FC               	goto	u12117
 15711  005502  D000               	nop2	
 15712  005504  0100               	movlb	0	; () banked
 15713  005506  4BC6               	infsnz	moteApp_delayms@counter& (0+255),f,b
 15714  005508  2BC7               	incf	(moteApp_delayms@counter+1)& (0+255),f,b
 15715  00550A                     l356:
 15716                           
 15717                           ; BSR set to: 0
 15718  00550A  0100               	movlb	0	; () banked
 15719  00550C  51C3               	movf	moteApp_delayms@length& (0+255),w,b
 15720  00550E  0100               	movlb	0	; () banked
 15721  005510  5DC6               	subwf	moteApp_delayms@counter& (0+255),w,b
 15722  005512  0100               	movlb	0	; () banked
 15723  005514  51C4               	movf	(moteApp_delayms@length+1)& (0+255),w,b
 15724  005516  0100               	movlb	0	; () banked
 15725  005518  59C7               	subwfb	(moteApp_delayms@counter+1)& (0+255),w,b
 15726  00551A  B0D8               	btfsc	status,0,c
 15727  00551C  0012               	return	
 15728  00551E  D7E9               	goto	l10650
 15729  005520                     __end_of_moteApp_delayms:
 15730                           	opt stack 0
 15731                           tblptru	equ	0xFF8
 15732                           tblptrh	equ	0xFF7
 15733                           tblptrl	equ	0xFF6
 15734                           tablat	equ	0xFF5
 15735                           prodh	equ	0xFF4
 15736                           prodl	equ	0xFF3
 15737                           intcon	equ	0xFF2
 15738                           postinc0	equ	0xFEE
 15739                           wreg	equ	0xFE8
 15740                           indf1	equ	0xFE7
 15741                           postdec1	equ	0xFE5
 15742                           fsr1h	equ	0xFE2
 15743                           fsr1l	equ	0xFE1
 15744                           indf2	equ	0xFDF
 15745                           fsr2h	equ	0xFDA
 15746                           fsr2l	equ	0xFD9
 15747                           status	equ	0xFD8
 15748                           
 15749 ;; *************** function _DATAEE_WriteByte *****************
 15750 ;; Defined at:
 15751 ;;		line 166 in file "../Includes/MccGenerated/memory.c"
 15752 ;; Parameters:    Size  Location     Type
 15753 ;;  bAdd            1    wreg     unsigned char 
 15754 ;;  bData           1    0[BANK0 ] unsigned char 
 15755 ;; Auto vars:     Size  Location     Type
 15756 ;;  bAdd            1    1[BANK0 ] unsigned char 
 15757 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
 15758 ;; Return value:  Size  Location     Type
 15759 ;;		None               void
 15760 ;; Registers used:
 15761 ;;		wreg, status,2
 15762 ;; Tracked objects:
 15763 ;;		On entry : 0/0
 15764 ;;		On exit  : 0/0
 15765 ;;		Unchanged: 0/0
 15766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15767 ;;      Params:         0       1       0       0       0       0       0       0       0
 15768 ;;      Locals:         0       2       0       0       0       0       0       0       0
 15769 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15770 ;;      Totals:         0       3       0       0       0       0       0       0       0
 15771 ;;Total ram usage:        3 bytes
 15772 ;; Hardware stack levels used:    1
 15773 ;; Hardware stack levels required when called:   11
 15774 ;; This function calls:
 15775 ;;		Nothing
 15776 ;; This function is called by:
 15777 ;;		_main
 15778 ;;		_moteJoiningProcess
 15779 ;; This function uses a non-reentrant model
 15780 ;;
 15781                           
 15782                           	psect	text39
 15783  005380                     __ptext39:
 15784                           	opt stack 0
 15785  005380                     _DATAEE_WriteByte:
 15786                           	opt stack 17
 15787                           
 15788                           ; BSR set to: 0
 15789                           ;incstack = 0
 15790                           ;DATAEE_WriteByte@bAdd stored from wreg
 15791  005380  0100               	movlb	0	; () banked
 15792  005382  6FC4               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 15793                           
 15794                           ;memory.c: 168: uint8_t GIEBitValue = INTCONbits.GIE;
 15795  005384  0E00               	movlw	0
 15796  005386  BEF2               	btfsc	intcon,7,c	;volatile
 15797  005388  0E01               	movlw	1
 15798  00538A  0100               	movlb	0	; () banked
 15799  00538C  6FC5               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 15800                           
 15801                           ; BSR set to: 0
 15802                           ;memory.c: 170: EEADR = (bAdd & 0xFF);
 15803  00538E  C0C4  FFA9         	movff	DATAEE_WriteByte@bAdd,4009	;volatile
 15804                           
 15805                           ; BSR set to: 0
 15806                           ;memory.c: 171: EEDATA = bData;
 15807  005392  C0C3  FFA8         	movff	DATAEE_WriteByte@bData,4008	;volatile
 15808                           
 15809                           ; BSR set to: 0
 15810                           ;memory.c: 172: EECON1bits.EEPGD = 0;
 15811  005396  9EA6               	bcf	4006,7,c	;volatile
 15812                           
 15813                           ; BSR set to: 0
 15814                           ;memory.c: 173: EECON1bits.CFGS = 0;
 15815  005398  9CA6               	bcf	4006,6,c	;volatile
 15816                           
 15817                           ; BSR set to: 0
 15818                           ;memory.c: 174: EECON1bits.WREN = 1;
 15819  00539A  84A6               	bsf	4006,2,c	;volatile
 15820                           
 15821                           ; BSR set to: 0
 15822                           ;memory.c: 175: INTCONbits.GIE = 0;
 15823  00539C  9EF2               	bcf	intcon,7,c	;volatile
 15824                           
 15825                           ; BSR set to: 0
 15826                           ;memory.c: 176: EECON2 = 0x55;
 15827  00539E  0E55               	movlw	85
 15828  0053A0  6EA7               	movwf	4007,c	;volatile
 15829                           
 15830                           ; BSR set to: 0
 15831                           ;memory.c: 177: EECON2 = 0xAA;
 15832  0053A2  0EAA               	movlw	170
 15833  0053A4  6EA7               	movwf	4007,c	;volatile
 15834                           
 15835                           ; BSR set to: 0
 15836                           ;memory.c: 178: EECON1bits.WR = 1;
 15837  0053A6  82A6               	bsf	4006,1,c	;volatile
 15838  0053A8                     l1409:
 15839  0053A8  B2A6               	btfsc	4006,1,c	;volatile
 15840  0053AA  D7FE               	goto	l1409
 15841                           
 15842                           ;memory.c: 182: }
 15843                           ;memory.c: 184: EECON1bits.WREN = 0;
 15844  0053AC  94A6               	bcf	4006,2,c	;volatile
 15845                           
 15846                           ;memory.c: 185: INTCONbits.GIE = GIEBitValue;
 15847  0053AE  0100               	movlb	0	; () banked
 15848  0053B0  B1C5               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 15849  0053B2  D002               	bra	u9535
 15850  0053B4  9EF2               	bcf	intcon,7,c	;volatile
 15851  0053B6  D001               	bra	u9536
 15852  0053B8                     u9535:
 15853  0053B8  8EF2               	bsf	intcon,7,c	;volatile
 15854  0053BA                     u9536:
 15855  0053BA  0012               	return		;funcret
 15856  0053BC                     __end_of_DATAEE_WriteByte:
 15857                           	opt stack 0
 15858                           tblptru	equ	0xFF8
 15859                           tblptrh	equ	0xFF7
 15860                           tblptrl	equ	0xFF6
 15861                           tablat	equ	0xFF5
 15862                           prodh	equ	0xFF4
 15863                           prodl	equ	0xFF3
 15864                           intcon	equ	0xFF2
 15865                           postinc0	equ	0xFEE
 15866                           wreg	equ	0xFE8
 15867                           indf1	equ	0xFE7
 15868                           postdec1	equ	0xFE5
 15869                           fsr1h	equ	0xFE2
 15870                           fsr1l	equ	0xFE1
 15871                           indf2	equ	0xFDF
 15872                           fsr2h	equ	0xFDA
 15873                           fsr2l	equ	0xFD9
 15874                           status	equ	0xFD8
 15875                           
 15876 ;; *************** function _USBapp_exitCDCState *****************
 15877 ;; Defined at:
 15878 ;;		line 122 in file "../Includes/Board/USBapp.c"
 15879 ;; Parameters:    Size  Location     Type
 15880 ;;  usbState        1    wreg     enum E6423
 15881 ;; Auto vars:     Size  Location     Type
 15882 ;;  usbState        1    0[BANK0 ] enum E6423
 15883 ;; Return value:  Size  Location     Type
 15884 ;;		None               void
 15885 ;; Registers used:
 15886 ;;		wreg
 15887 ;; Tracked objects:
 15888 ;;		On entry : 0/0
 15889 ;;		On exit  : 0/0
 15890 ;;		Unchanged: 0/0
 15891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15892 ;;      Params:         0       0       0       0       0       0       0       0       0
 15893 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15894 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15895 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15896 ;;Total ram usage:        1 bytes
 15897 ;; Hardware stack levels used:    1
 15898 ;; Hardware stack levels required when called:   11
 15899 ;; This function calls:
 15900 ;;		Nothing
 15901 ;; This function is called by:
 15902 ;;		_moteHandler
 15903 ;; This function uses a non-reentrant model
 15904 ;;
 15905                           
 15906                           	psect	text40
 15907  005984                     __ptext40:
 15908                           	opt stack 0
 15909  005984                     _USBapp_exitCDCState:
 15910                           	opt stack 18
 15911                           
 15912                           ;incstack = 0
 15913                           ;USBapp_exitCDCState@usbState stored from wreg
 15914  005984  0100               	movlb	0	; () banked
 15915  005986  6FC3               	movwf	USBapp_exitCDCState@usbState& (0+255),b
 15916                           
 15917                           ;USBapp.c: 124: exitUSB = usbState;
 15918  005988  C0C3  F0F5         	movff	USBapp_exitCDCState@usbState,_exitUSB
 15919  00598C  0012               	return		;funcret
 15920  00598E                     __end_of_USBapp_exitCDCState:
 15921                           	opt stack 0
 15922                           tblptru	equ	0xFF8
 15923                           tblptrh	equ	0xFF7
 15924                           tblptrl	equ	0xFF6
 15925                           tablat	equ	0xFF5
 15926                           prodh	equ	0xFF4
 15927                           prodl	equ	0xFF3
 15928                           intcon	equ	0xFF2
 15929                           postinc0	equ	0xFEE
 15930                           wreg	equ	0xFE8
 15931                           indf1	equ	0xFE7
 15932                           postdec1	equ	0xFE5
 15933                           fsr1h	equ	0xFE2
 15934                           fsr1l	equ	0xFE1
 15935                           indf2	equ	0xFDF
 15936                           fsr2h	equ	0xFDA
 15937                           fsr2l	equ	0xFD9
 15938                           status	equ	0xFD8
 15939                           
 15940 ;; *************** function _USBapp_exitCDC *****************
 15941 ;; Defined at:
 15942 ;;		line 117 in file "../Includes/Board/USBapp.c"
 15943 ;; Parameters:    Size  Location     Type
 15944 ;;		None
 15945 ;; Auto vars:     Size  Location     Type
 15946 ;;		None
 15947 ;; Return value:  Size  Location     Type
 15948 ;;                  1    wreg      enum E6497
 15949 ;; Registers used:
 15950 ;;		wreg, status,2
 15951 ;; Tracked objects:
 15952 ;;		On entry : 0/0
 15953 ;;		On exit  : 0/0
 15954 ;;		Unchanged: 0/0
 15955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15956 ;;      Params:         0       0       0       0       0       0       0       0       0
 15957 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15958 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15959 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15960 ;;Total ram usage:        0 bytes
 15961 ;; Hardware stack levels used:    1
 15962 ;; Hardware stack levels required when called:   11
 15963 ;; This function calls:
 15964 ;;		Nothing
 15965 ;; This function is called by:
 15966 ;;		_moteHandler
 15967 ;; This function uses a non-reentrant model
 15968 ;;
 15969                           
 15970                           	psect	text41
 15971  0059B2                     __ptext41:
 15972                           	opt stack 0
 15973  0059B2                     _USBapp_exitCDC:
 15974                           	opt stack 18
 15975                           
 15976                           ;USBapp.c: 119: return exitUSB;
 15977                           
 15978                           ;incstack = 0
 15979  0059B2  0100               	movlb	0	; () banked
 15980  0059B4  51F5               	movf	_exitUSB& (0+255),w,b
 15981  0059B6  0012               	return	
 15982  0059B8                     __end_of_USBapp_exitCDC:
 15983                           	opt stack 0
 15984                           tblptru	equ	0xFF8
 15985                           tblptrh	equ	0xFF7
 15986                           tblptrl	equ	0xFF6
 15987                           tablat	equ	0xFF5
 15988                           prodh	equ	0xFF4
 15989                           prodl	equ	0xFF3
 15990                           intcon	equ	0xFF2
 15991                           postinc0	equ	0xFEE
 15992                           wreg	equ	0xFE8
 15993                           indf1	equ	0xFE7
 15994                           postdec1	equ	0xFE5
 15995                           fsr1h	equ	0xFE2
 15996                           fsr1l	equ	0xFE1
 15997                           indf2	equ	0xFDF
 15998                           fsr2h	equ	0xFDA
 15999                           fsr2l	equ	0xFD9
 16000                           status	equ	0xFD8
 16001                           
 16002 ;; *************** function _TMRapp_Handler *****************
 16003 ;; Defined at:
 16004 ;;		line 57 in file "../Includes/Drivers/TMRapp.c"
 16005 ;; Parameters:    Size  Location     Type
 16006 ;;		None
 16007 ;; Auto vars:     Size  Location     Type
 16008 ;;		None
 16009 ;; Return value:  Size  Location     Type
 16010 ;;		None               void
 16011 ;; Registers used:
 16012 ;;		wreg, status,2, status,0, cstack
 16013 ;; Tracked objects:
 16014 ;;		On entry : 0/0
 16015 ;;		On exit  : 0/0
 16016 ;;		Unchanged: 0/0
 16017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16018 ;;      Params:         0       0       0       0       0       0       0       0       0
 16019 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16020 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16021 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16022 ;;Total ram usage:        0 bytes
 16023 ;; Hardware stack levels used:    1
 16024 ;; Hardware stack levels required when called:   12
 16025 ;; This function calls:
 16026 ;;		___almod
 16027 ;;		___lwmod
 16028 ;; This function is called by:
 16029 ;;		_moteHandler
 16030 ;; This function uses a non-reentrant model
 16031 ;;
 16032                           
 16033                           	psect	text42
 16034  00294A                     __ptext42:
 16035                           	opt stack 0
 16036  00294A                     _TMRapp_Handler:
 16037                           	opt stack 17
 16038                           
 16039                           ;TMRapp.c: 60: timerMsTickCount++;
 16040                           
 16041                           ; BSR set to: 0
 16042                           ;incstack = 0
 16043  00294A  0100               	movlb	0	; () banked
 16044  00294C  4B8A               	infsnz	_timerMsTickCount& (0+255),f,b
 16045  00294E  2B8B               	incf	(_timerMsTickCount+1)& (0+255),f,b
 16046                           
 16047                           ; BSR set to: 0
 16048                           ;TMRapp.c: 62: if ( (timerMsTickCount % 10) == 0)
 16049  002950  C08A  F0C3         	movff	_timerMsTickCount,___lwmod@dividend
 16050  002954  C08B  F0C4         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 16051  002958  0E00               	movlw	0
 16052  00295A  0100               	movlb	0	; () banked
 16053  00295C  6FC6               	movwf	(___lwmod@divisor+1)& (0+255),b
 16054  00295E  0E0A               	movlw	10
 16055  002960  6FC5               	movwf	___lwmod@divisor& (0+255),b
 16056  002962  EC76  F027         	call	___lwmod	;wreg free
 16057  002966  0100               	movlb	0	; () banked
 16058  002968  51C3               	movf	?___lwmod& (0+255),w,b
 16059  00296A  0100               	movlb	0	; () banked
 16060  00296C  11C4               	iorwf	(?___lwmod+1)& (0+255),w,b
 16061  00296E  A4D8               	btfss	status,2,c
 16062  002970  0012               	return	
 16063                           
 16064                           ; BSR set to: 0
 16065                           ;TMRapp.c: 63: {
 16066                           ;TMRapp.c: 64: appTimer.mSecTenTick = 1;
 16067  002972  0100               	movlb	0	; () banked
 16068  002974  839C               	bsf	_appTimer& (0+255),1,b
 16069                           
 16070                           ; BSR set to: 0
 16071                           ;TMRapp.c: 65: if ( (timerMsTickCount % 100) == 0)
 16072  002976  C08A  F0C3         	movff	_timerMsTickCount,___lwmod@dividend
 16073  00297A  C08B  F0C4         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 16074  00297E  0E00               	movlw	0
 16075  002980  0100               	movlb	0	; () banked
 16076  002982  6FC6               	movwf	(___lwmod@divisor+1)& (0+255),b
 16077  002984  0E64               	movlw	100
 16078  002986  6FC5               	movwf	___lwmod@divisor& (0+255),b
 16079  002988  EC76  F027         	call	___lwmod	;wreg free
 16080  00298C  0100               	movlb	0	; () banked
 16081  00298E  51C3               	movf	?___lwmod& (0+255),w,b
 16082  002990  0100               	movlb	0	; () banked
 16083  002992  11C4               	iorwf	(?___lwmod+1)& (0+255),w,b
 16084  002994  A4D8               	btfss	status,2,c
 16085  002996  0012               	return	
 16086                           
 16087                           ; BSR set to: 0
 16088                           ;TMRapp.c: 66: {
 16089                           ;TMRapp.c: 67: appTimer.mSecHundredTick = 1;
 16090  002998  0100               	movlb	0	; () banked
 16091  00299A  859C               	bsf	_appTimer& (0+255),2,b
 16092                           
 16093                           ; BSR set to: 0
 16094                           ;TMRapp.c: 68: if ( (timerMsTickCount % 1000) == 0)
 16095  00299C  C08A  F0C3         	movff	_timerMsTickCount,___lwmod@dividend
 16096  0029A0  C08B  F0C4         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 16097  0029A4  0E03               	movlw	3
 16098  0029A6  0100               	movlb	0	; () banked
 16099  0029A8  6FC6               	movwf	(___lwmod@divisor+1)& (0+255),b
 16100  0029AA  0EE8               	movlw	232
 16101  0029AC  6FC5               	movwf	___lwmod@divisor& (0+255),b
 16102  0029AE  EC76  F027         	call	___lwmod	;wreg free
 16103  0029B2  0100               	movlb	0	; () banked
 16104  0029B4  51C3               	movf	?___lwmod& (0+255),w,b
 16105  0029B6  0100               	movlb	0	; () banked
 16106  0029B8  11C4               	iorwf	(?___lwmod+1)& (0+255),w,b
 16107  0029BA  A4D8               	btfss	status,2,c
 16108  0029BC  0012               	return	
 16109                           
 16110                           ; BSR set to: 0
 16111                           ;TMRapp.c: 69: {
 16112                           ;TMRapp.c: 70: appTimer.SecTick = 1;
 16113  0029BE  0100               	movlb	0	; () banked
 16114  0029C0  879C               	bsf	_appTimer& (0+255),3,b
 16115                           
 16116                           ; BSR set to: 0
 16117                           ;TMRapp.c: 71: if ( (timerMsTickCount % 60000) == 0)
 16118  0029C2  C08A  F0C3         	movff	_timerMsTickCount,___almod@dividend
 16119  0029C6  C08B  F0C4         	movff	_timerMsTickCount+1,___almod@dividend+1
 16120  0029CA  0100               	movlb	0	; () banked
 16121  0029CC  6BC5               	clrf	(___almod@dividend+2)& (0+255),b
 16122  0029CE  6BC6               	clrf	(___almod@dividend+3)& (0+255),b
 16123  0029D0  0E60               	movlw	96
 16124  0029D2  0100               	movlb	0	; () banked
 16125  0029D4  6FC7               	movwf	___almod@divisor& (0+255),b
 16126  0029D6  0EEA               	movlw	234
 16127  0029D8  6FC8               	movwf	(___almod@divisor+1)& (0+255),b
 16128  0029DA  0E00               	movlw	0
 16129  0029DC  6FC9               	movwf	(___almod@divisor+2)& (0+255),b
 16130  0029DE  0E00               	movlw	0
 16131  0029E0  6FCA               	movwf	(___almod@divisor+3)& (0+255),b
 16132  0029E2  EC43  F01A         	call	___almod	;wreg free
 16133  0029E6  0100               	movlb	0	; () banked
 16134  0029E8  51C3               	movf	?___almod& (0+255),w,b
 16135  0029EA  0100               	movlb	0	; () banked
 16136  0029EC  11C4               	iorwf	(?___almod+1)& (0+255),w,b
 16137  0029EE  0100               	movlb	0	; () banked
 16138  0029F0  11C5               	iorwf	(?___almod+2)& (0+255),w,b
 16139  0029F2  0100               	movlb	0	; () banked
 16140  0029F4  11C6               	iorwf	(?___almod+3)& (0+255),w,b
 16141  0029F6  A4D8               	btfss	status,2,c
 16142  0029F8  0012               	return	
 16143                           
 16144                           ; BSR set to: 0
 16145                           ;TMRapp.c: 72: {
 16146                           ;TMRapp.c: 73: timerMinTickCount++;
 16147  0029FA  0100               	movlb	0	; () banked
 16148  0029FC  4B88               	infsnz	_timerMinTickCount& (0+255),f,b
 16149  0029FE  2B89               	incf	(_timerMinTickCount+1)& (0+255),f,b
 16150                           
 16151                           ; BSR set to: 0
 16152                           ;TMRapp.c: 74: appTimer.MinTick = 1;
 16153  002A00  0100               	movlb	0	; () banked
 16154  002A02  899C               	bsf	_appTimer& (0+255),4,b
 16155                           
 16156                           ; BSR set to: 0
 16157                           ;TMRapp.c: 75: if ( (timerMinTickCount % 60) == 0)
 16158  002A04  C088  F0C3         	movff	_timerMinTickCount,___lwmod@dividend
 16159  002A08  C089  F0C4         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 16160  002A0C  0E00               	movlw	0
 16161  002A0E  0100               	movlb	0	; () banked
 16162  002A10  6FC6               	movwf	(___lwmod@divisor+1)& (0+255),b
 16163  002A12  0E3C               	movlw	60
 16164  002A14  6FC5               	movwf	___lwmod@divisor& (0+255),b
 16165  002A16  EC76  F027         	call	___lwmod	;wreg free
 16166  002A1A  0100               	movlb	0	; () banked
 16167  002A1C  51C3               	movf	?___lwmod& (0+255),w,b
 16168  002A1E  0100               	movlb	0	; () banked
 16169  002A20  11C4               	iorwf	(?___lwmod+1)& (0+255),w,b
 16170  002A22  A4D8               	btfss	status,2,c
 16171  002A24  0012               	return	
 16172                           
 16173                           ; BSR set to: 0
 16174                           ;TMRapp.c: 76: {
 16175                           ;TMRapp.c: 77: appTimer.HourTick = 1;
 16176  002A26  0100               	movlb	0	; () banked
 16177  002A28  8B9C               	bsf	_appTimer& (0+255),5,b
 16178                           
 16179                           ; BSR set to: 0
 16180                           ;TMRapp.c: 78: if ( (timerMinTickCount % 720) == 0)
 16181  002A2A  C088  F0C3         	movff	_timerMinTickCount,___lwmod@dividend
 16182  002A2E  C089  F0C4         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 16183  002A32  0E02               	movlw	2
 16184  002A34  0100               	movlb	0	; () banked
 16185  002A36  6FC6               	movwf	(___lwmod@divisor+1)& (0+255),b
 16186  002A38  0ED0               	movlw	208
 16187  002A3A  6FC5               	movwf	___lwmod@divisor& (0+255),b
 16188  002A3C  EC76  F027         	call	___lwmod	;wreg free
 16189  002A40  0100               	movlb	0	; () banked
 16190  002A42  51C3               	movf	?___lwmod& (0+255),w,b
 16191  002A44  0100               	movlb	0	; () banked
 16192  002A46  11C4               	iorwf	(?___lwmod+1)& (0+255),w,b
 16193  002A48  A4D8               	btfss	status,2,c
 16194  002A4A  0012               	return	
 16195                           
 16196                           ; BSR set to: 0
 16197                           ;TMRapp.c: 79: {
 16198                           ;TMRapp.c: 80: appTimer.HalfDayTick = 1;
 16199  002A4C  0100               	movlb	0	; () banked
 16200  002A4E  8D9C               	bsf	_appTimer& (0+255),6,b
 16201                           
 16202                           ; BSR set to: 0
 16203                           ;TMRapp.c: 81: if ( (timerMinTickCount % 1440) == 0)
 16204  002A50  C088  F0C3         	movff	_timerMinTickCount,___lwmod@dividend
 16205  002A54  C089  F0C4         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 16206  002A58  0E05               	movlw	5
 16207  002A5A  0100               	movlb	0	; () banked
 16208  002A5C  6FC6               	movwf	(___lwmod@divisor+1)& (0+255),b
 16209  002A5E  0EA0               	movlw	160
 16210  002A60  6FC5               	movwf	___lwmod@divisor& (0+255),b
 16211  002A62  EC76  F027         	call	___lwmod	;wreg free
 16212  002A66  0100               	movlb	0	; () banked
 16213  002A68  51C3               	movf	?___lwmod& (0+255),w,b
 16214  002A6A  0100               	movlb	0	; () banked
 16215  002A6C  11C4               	iorwf	(?___lwmod+1)& (0+255),w,b
 16216  002A6E  A4D8               	btfss	status,2,c
 16217  002A70  0012               	return	
 16218                           
 16219                           ; BSR set to: 0
 16220                           ;TMRapp.c: 82: {
 16221                           ;TMRapp.c: 83: appTimer.DayTick = 1;
 16222  002A72  0100               	movlb	0	; () banked
 16223  002A74  8F9C               	bsf	_appTimer& (0+255),7,b
 16224                           
 16225                           ; BSR set to: 0
 16226                           ;TMRapp.c: 85: timerMsTickCount = 0;
 16227  002A76  0E00               	movlw	0
 16228  002A78  0100               	movlb	0	; () banked
 16229  002A7A  6F8B               	movwf	(_timerMsTickCount+1)& (0+255),b
 16230  002A7C  0E00               	movlw	0
 16231  002A7E  6F8A               	movwf	_timerMsTickCount& (0+255),b
 16232                           
 16233                           ;TMRapp.c: 86: timerMinTickCount = 0;
 16234  002A80  0E00               	movlw	0
 16235  002A82  0100               	movlb	0	; () banked
 16236  002A84  6F89               	movwf	(_timerMinTickCount+1)& (0+255),b
 16237  002A86  0E00               	movlw	0
 16238  002A88  6F88               	movwf	_timerMinTickCount& (0+255),b
 16239                           
 16240                           ; BSR set to: 0
 16241                           
 16242                           ; BSR set to: 0
 16243                           
 16244                           ; BSR set to: 0
 16245                           
 16246                           ; BSR set to: 0
 16247                           
 16248                           ; BSR set to: 0
 16249                           
 16250                           ; BSR set to: 0
 16251  002A8A  0012               	return	
 16252  002A8C                     __end_of_TMRapp_Handler:
 16253                           	opt stack 0
 16254                           tblptru	equ	0xFF8
 16255                           tblptrh	equ	0xFF7
 16256                           tblptrl	equ	0xFF6
 16257                           tablat	equ	0xFF5
 16258                           prodh	equ	0xFF4
 16259                           prodl	equ	0xFF3
 16260                           intcon	equ	0xFF2
 16261                           postinc0	equ	0xFEE
 16262                           wreg	equ	0xFE8
 16263                           indf1	equ	0xFE7
 16264                           postdec1	equ	0xFE5
 16265                           fsr1h	equ	0xFE2
 16266                           fsr1l	equ	0xFE1
 16267                           indf2	equ	0xFDF
 16268                           fsr2h	equ	0xFDA
 16269                           fsr2l	equ	0xFD9
 16270                           status	equ	0xFD8
 16271                           
 16272 ;; *************** function ___lwmod *****************
 16273 ;; Defined at:
 16274 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 16275 ;; Parameters:    Size  Location     Type
 16276 ;;  dividend        2    0[BANK0 ] unsigned int 
 16277 ;;  divisor         2    2[BANK0 ] unsigned int 
 16278 ;; Auto vars:     Size  Location     Type
 16279 ;;  counter         1    4[BANK0 ] unsigned char 
 16280 ;; Return value:  Size  Location     Type
 16281 ;;                  2    0[BANK0 ] unsigned int 
 16282 ;; Registers used:
 16283 ;;		wreg, status,2, status,0
 16284 ;; Tracked objects:
 16285 ;;		On entry : 0/0
 16286 ;;		On exit  : 0/0
 16287 ;;		Unchanged: 0/0
 16288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16289 ;;      Params:         0       4       0       0       0       0       0       0       0
 16290 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16291 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16292 ;;      Totals:         0       5       0       0       0       0       0       0       0
 16293 ;;Total ram usage:        5 bytes
 16294 ;; Hardware stack levels used:    1
 16295 ;; Hardware stack levels required when called:   11
 16296 ;; This function calls:
 16297 ;;		Nothing
 16298 ;; This function is called by:
 16299 ;;		_moteApp_add16bToDataBuffer
 16300 ;;		_TMRapp_Handler
 16301 ;;		_oled_putUint16
 16302 ;; This function uses a non-reentrant model
 16303 ;;
 16304                           
 16305                           	psect	text43
 16306  004EEC                     __ptext43:
 16307                           	opt stack 0
 16308  004EEC                     ___lwmod:
 16309                           	opt stack 16
 16310                           
 16311                           ; BSR set to: 0
 16312                           ;incstack = 0
 16313  004EEC  0100               	movlb	0	; () banked
 16314  004EEE  51C5               	movf	___lwmod@divisor& (0+255),w,b
 16315  004EF0  0100               	movlb	0	; () banked
 16316  004EF2  11C6               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 16317  004EF4  B4D8               	btfsc	status,2,c
 16318  004EF6  D026               	goto	l2426
 16319                           
 16320                           ; BSR set to: 0
 16321  004EF8  0E01               	movlw	1
 16322  004EFA  0100               	movlb	0	; () banked
 16323  004EFC  6FC7               	movwf	___lwmod@counter& (0+255),b
 16324  004EFE  D006               	goto	l10984
 16325  004F00                     l10982:
 16326                           
 16327                           ; BSR set to: 0
 16328  004F00  0100               	movlb	0	; () banked
 16329  004F02  90D8               	bcf	status,0,c
 16330  004F04  37C5               	rlcf	___lwmod@divisor& (0+255),f,b
 16331  004F06  37C6               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 16332  004F08  0100               	movlb	0	; () banked
 16333  004F0A  2BC7               	incf	___lwmod@counter& (0+255),f,b
 16334  004F0C                     l10984:
 16335                           
 16336                           ; BSR set to: 0
 16337  004F0C  0100               	movlb	0	; () banked
 16338  004F0E  AFC6               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 16339  004F10  D7F7               	goto	l10982
 16340  004F12                     l10986:
 16341                           
 16342                           ; BSR set to: 0
 16343  004F12  0100               	movlb	0	; () banked
 16344  004F14  51C5               	movf	___lwmod@divisor& (0+255),w,b
 16345  004F16  0100               	movlb	0	; () banked
 16346  004F18  5DC3               	subwf	___lwmod@dividend& (0+255),w,b
 16347  004F1A  0100               	movlb	0	; () banked
 16348  004F1C  51C6               	movf	(___lwmod@divisor+1)& (0+255),w,b
 16349  004F1E  0100               	movlb	0	; () banked
 16350  004F20  59C4               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 16351  004F22  A0D8               	btfss	status,0,c
 16352  004F24  D008               	goto	l10990
 16353                           
 16354                           ; BSR set to: 0
 16355  004F26  0100               	movlb	0	; () banked
 16356  004F28  51C5               	movf	___lwmod@divisor& (0+255),w,b
 16357  004F2A  0100               	movlb	0	; () banked
 16358  004F2C  5FC3               	subwf	___lwmod@dividend& (0+255),f,b
 16359  004F2E  0100               	movlb	0	; () banked
 16360  004F30  51C6               	movf	(___lwmod@divisor+1)& (0+255),w,b
 16361  004F32  0100               	movlb	0	; () banked
 16362  004F34  5BC4               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 16363  004F36                     l10990:
 16364                           
 16365                           ; BSR set to: 0
 16366  004F36  0100               	movlb	0	; () banked
 16367  004F38  90D8               	bcf	status,0,c
 16368  004F3A  33C6               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 16369  004F3C  33C5               	rrcf	___lwmod@divisor& (0+255),f,b
 16370                           
 16371                           ; BSR set to: 0
 16372  004F3E  0100               	movlb	0	; () banked
 16373  004F40  2FC7               	decfsz	___lwmod@counter& (0+255),f,b
 16374  004F42  D7E7               	goto	l10986
 16375  004F44                     l2426:
 16376                           
 16377                           ; BSR set to: 0
 16378  004F44  C0C3  F0C3         	movff	___lwmod@dividend,?___lwmod
 16379  004F48  C0C4  F0C4         	movff	___lwmod@dividend+1,?___lwmod+1
 16380                           
 16381                           ; BSR set to: 0
 16382  004F4C  0012               	return		;funcret
 16383  004F4E                     __end_of___lwmod:
 16384                           	opt stack 0
 16385                           tblptru	equ	0xFF8
 16386                           tblptrh	equ	0xFF7
 16387                           tblptrl	equ	0xFF6
 16388                           tablat	equ	0xFF5
 16389                           prodh	equ	0xFF4
 16390                           prodl	equ	0xFF3
 16391                           intcon	equ	0xFF2
 16392                           postinc0	equ	0xFEE
 16393                           wreg	equ	0xFE8
 16394                           indf1	equ	0xFE7
 16395                           postdec1	equ	0xFE5
 16396                           fsr1h	equ	0xFE2
 16397                           fsr1l	equ	0xFE1
 16398                           indf2	equ	0xFDF
 16399                           fsr2h	equ	0xFDA
 16400                           fsr2l	equ	0xFD9
 16401                           status	equ	0xFD8
 16402                           
 16403 ;; *************** function ___almod *****************
 16404 ;; Defined at:
 16405 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\almod.c"
 16406 ;; Parameters:    Size  Location     Type
 16407 ;;  dividend        4    0[BANK0 ] long 
 16408 ;;  divisor         4    4[BANK0 ] long 
 16409 ;; Auto vars:     Size  Location     Type
 16410 ;;  sign            1    9[BANK0 ] unsigned char 
 16411 ;;  counter         1    8[BANK0 ] unsigned char 
 16412 ;; Return value:  Size  Location     Type
 16413 ;;                  4    0[BANK0 ] long 
 16414 ;; Registers used:
 16415 ;;		wreg, status,2, status,0
 16416 ;; Tracked objects:
 16417 ;;		On entry : 0/0
 16418 ;;		On exit  : 0/0
 16419 ;;		Unchanged: 0/0
 16420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16421 ;;      Params:         0       8       0       0       0       0       0       0       0
 16422 ;;      Locals:         0       2       0       0       0       0       0       0       0
 16423 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16424 ;;      Totals:         0      10       0       0       0       0       0       0       0
 16425 ;;Total ram usage:       10 bytes
 16426 ;; Hardware stack levels used:    1
 16427 ;; Hardware stack levels required when called:   11
 16428 ;; This function calls:
 16429 ;;		Nothing
 16430 ;; This function is called by:
 16431 ;;		_TMRapp_Handler
 16432 ;; This function uses a non-reentrant model
 16433 ;;
 16434                           
 16435                           	psect	text44
 16436  003486                     __ptext44:
 16437                           	opt stack 0
 16438  003486                     ___almod:
 16439                           	opt stack 17
 16440                           
 16441                           ; BSR set to: 0
 16442                           ;incstack = 0
 16443  003486  0E00               	movlw	0
 16444  003488  0100               	movlb	0	; () banked
 16445  00348A  6FCC               	movwf	___almod@sign& (0+255),b
 16446                           
 16447                           ; BSR set to: 0
 16448  00348C  0100               	movlb	0	; () banked
 16449  00348E  AFC6               	btfss	(___almod@dividend+3)& (0+255),7,b
 16450  003490  D00C               	goto	l11474
 16451                           
 16452                           ; BSR set to: 0
 16453  003492  0100               	movlb	0	; () banked
 16454  003494  1FC6               	comf	(___almod@dividend+3)& (0+255),f,b
 16455  003496  1FC5               	comf	(___almod@dividend+2)& (0+255),f,b
 16456  003498  1FC4               	comf	(___almod@dividend+1)& (0+255),f,b
 16457  00349A  6DC3               	negf	___almod@dividend& (0+255),b
 16458  00349C  0E00               	movlw	0
 16459  00349E  23C4               	addwfc	(___almod@dividend+1)& (0+255),f,b
 16460  0034A0  23C5               	addwfc	(___almod@dividend+2)& (0+255),f,b
 16461  0034A2  23C6               	addwfc	(___almod@dividend+3)& (0+255),f,b
 16462                           
 16463                           ; BSR set to: 0
 16464  0034A4  0E01               	movlw	1
 16465  0034A6  0100               	movlb	0	; () banked
 16466  0034A8  6FCC               	movwf	___almod@sign& (0+255),b
 16467  0034AA                     l11474:
 16468                           
 16469                           ; BSR set to: 0
 16470  0034AA  0100               	movlb	0	; () banked
 16471  0034AC  AFCA               	btfss	(___almod@divisor+3)& (0+255),7,b
 16472  0034AE  D009               	goto	l11478
 16473                           
 16474                           ; BSR set to: 0
 16475  0034B0  0100               	movlb	0	; () banked
 16476  0034B2  1FCA               	comf	(___almod@divisor+3)& (0+255),f,b
 16477  0034B4  1FC9               	comf	(___almod@divisor+2)& (0+255),f,b
 16478  0034B6  1FC8               	comf	(___almod@divisor+1)& (0+255),f,b
 16479  0034B8  6DC7               	negf	___almod@divisor& (0+255),b
 16480  0034BA  0E00               	movlw	0
 16481  0034BC  23C8               	addwfc	(___almod@divisor+1)& (0+255),f,b
 16482  0034BE  23C9               	addwfc	(___almod@divisor+2)& (0+255),f,b
 16483  0034C0  23CA               	addwfc	(___almod@divisor+3)& (0+255),f,b
 16484  0034C2                     l11478:
 16485                           
 16486                           ; BSR set to: 0
 16487  0034C2  0100               	movlb	0	; () banked
 16488  0034C4  51C7               	movf	___almod@divisor& (0+255),w,b
 16489  0034C6  0100               	movlb	0	; () banked
 16490  0034C8  11C8               	iorwf	(___almod@divisor+1)& (0+255),w,b
 16491  0034CA  0100               	movlb	0	; () banked
 16492  0034CC  11C9               	iorwf	(___almod@divisor+2)& (0+255),w,b
 16493  0034CE  0100               	movlb	0	; () banked
 16494  0034D0  11CA               	iorwf	(___almod@divisor+3)& (0+255),w,b
 16495  0034D2  B4D8               	btfsc	status,2,c
 16496  0034D4  D03A               	goto	l11494
 16497                           
 16498                           ; BSR set to: 0
 16499  0034D6  0E01               	movlw	1
 16500  0034D8  0100               	movlb	0	; () banked
 16501  0034DA  6FCB               	movwf	___almod@counter& (0+255),b
 16502  0034DC  D008               	goto	l11484
 16503  0034DE                     l11482:
 16504                           
 16505                           ; BSR set to: 0
 16506  0034DE  0100               	movlb	0	; () banked
 16507  0034E0  90D8               	bcf	status,0,c
 16508  0034E2  37C7               	rlcf	___almod@divisor& (0+255),f,b
 16509  0034E4  37C8               	rlcf	(___almod@divisor+1)& (0+255),f,b
 16510  0034E6  37C9               	rlcf	(___almod@divisor+2)& (0+255),f,b
 16511  0034E8  37CA               	rlcf	(___almod@divisor+3)& (0+255),f,b
 16512  0034EA  0100               	movlb	0	; () banked
 16513  0034EC  2BCB               	incf	___almod@counter& (0+255),f,b
 16514  0034EE                     l11484:
 16515                           
 16516                           ; BSR set to: 0
 16517  0034EE  0100               	movlb	0	; () banked
 16518  0034F0  AFCA               	btfss	(___almod@divisor+3)& (0+255),7,b
 16519  0034F2  D7F5               	goto	l11482
 16520  0034F4                     l11486:
 16521                           
 16522                           ; BSR set to: 0
 16523  0034F4  0100               	movlb	0	; () banked
 16524  0034F6  51C7               	movf	___almod@divisor& (0+255),w,b
 16525  0034F8  0100               	movlb	0	; () banked
 16526  0034FA  5DC3               	subwf	___almod@dividend& (0+255),w,b
 16527  0034FC  0100               	movlb	0	; () banked
 16528  0034FE  51C8               	movf	(___almod@divisor+1)& (0+255),w,b
 16529  003500  0100               	movlb	0	; () banked
 16530  003502  59C4               	subwfb	(___almod@dividend+1)& (0+255),w,b
 16531  003504  0100               	movlb	0	; () banked
 16532  003506  51C9               	movf	(___almod@divisor+2)& (0+255),w,b
 16533  003508  0100               	movlb	0	; () banked
 16534  00350A  59C5               	subwfb	(___almod@dividend+2)& (0+255),w,b
 16535  00350C  0100               	movlb	0	; () banked
 16536  00350E  51CA               	movf	(___almod@divisor+3)& (0+255),w,b
 16537  003510  0100               	movlb	0	; () banked
 16538  003512  59C6               	subwfb	(___almod@dividend+3)& (0+255),w,b
 16539  003514  A0D8               	btfss	status,0,c
 16540  003516  D010               	goto	l11490
 16541                           
 16542                           ; BSR set to: 0
 16543  003518  0100               	movlb	0	; () banked
 16544  00351A  51C7               	movf	___almod@divisor& (0+255),w,b
 16545  00351C  0100               	movlb	0	; () banked
 16546  00351E  5FC3               	subwf	___almod@dividend& (0+255),f,b
 16547  003520  0100               	movlb	0	; () banked
 16548  003522  51C8               	movf	(___almod@divisor+1)& (0+255),w,b
 16549  003524  0100               	movlb	0	; () banked
 16550  003526  5BC4               	subwfb	(___almod@dividend+1)& (0+255),f,b
 16551  003528  0100               	movlb	0	; () banked
 16552  00352A  51C9               	movf	(___almod@divisor+2)& (0+255),w,b
 16553  00352C  0100               	movlb	0	; () banked
 16554  00352E  5BC5               	subwfb	(___almod@dividend+2)& (0+255),f,b
 16555  003530  0100               	movlb	0	; () banked
 16556  003532  51CA               	movf	(___almod@divisor+3)& (0+255),w,b
 16557  003534  0100               	movlb	0	; () banked
 16558  003536  5BC6               	subwfb	(___almod@dividend+3)& (0+255),f,b
 16559  003538                     l11490:
 16560                           
 16561                           ; BSR set to: 0
 16562  003538  0100               	movlb	0	; () banked
 16563  00353A  90D8               	bcf	status,0,c
 16564  00353C  33CA               	rrcf	(___almod@divisor+3)& (0+255),f,b
 16565  00353E  33C9               	rrcf	(___almod@divisor+2)& (0+255),f,b
 16566  003540  33C8               	rrcf	(___almod@divisor+1)& (0+255),f,b
 16567  003542  33C7               	rrcf	___almod@divisor& (0+255),f,b
 16568                           
 16569                           ; BSR set to: 0
 16570  003544  0100               	movlb	0	; () banked
 16571  003546  2FCB               	decfsz	___almod@counter& (0+255),f,b
 16572  003548  D7D5               	goto	l11486
 16573  00354A                     l11494:
 16574                           
 16575                           ; BSR set to: 0
 16576  00354A  0100               	movlb	0	; () banked
 16577  00354C  51CC               	movf	___almod@sign& (0+255),w,b
 16578  00354E  0100               	movlb	0	; () banked
 16579  003550  B4D8               	btfsc	status,2,c
 16580  003552  D009               	goto	l11498
 16581                           
 16582                           ; BSR set to: 0
 16583  003554  0100               	movlb	0	; () banked
 16584  003556  1FC6               	comf	(___almod@dividend+3)& (0+255),f,b
 16585  003558  1FC5               	comf	(___almod@dividend+2)& (0+255),f,b
 16586  00355A  1FC4               	comf	(___almod@dividend+1)& (0+255),f,b
 16587  00355C  6DC3               	negf	___almod@dividend& (0+255),b
 16588  00355E  0E00               	movlw	0
 16589  003560  23C4               	addwfc	(___almod@dividend+1)& (0+255),f,b
 16590  003562  23C5               	addwfc	(___almod@dividend+2)& (0+255),f,b
 16591  003564  23C6               	addwfc	(___almod@dividend+3)& (0+255),f,b
 16592  003566                     l11498:
 16593                           
 16594                           ; BSR set to: 0
 16595  003566  C0C3  F0C3         	movff	___almod@dividend,?___almod
 16596  00356A  C0C4  F0C4         	movff	___almod@dividend+1,?___almod+1
 16597  00356E  C0C5  F0C5         	movff	___almod@dividend+2,?___almod+2
 16598  003572  C0C6  F0C6         	movff	___almod@dividend+3,?___almod+3
 16599  003576  0012               	return	
 16600  003578                     __end_of___almod:
 16601                           	opt stack 0
 16602                           tblptru	equ	0xFF8
 16603                           tblptrh	equ	0xFF7
 16604                           tblptrl	equ	0xFF6
 16605                           tablat	equ	0xFF5
 16606                           prodh	equ	0xFF4
 16607                           prodl	equ	0xFF3
 16608                           intcon	equ	0xFF2
 16609                           postinc0	equ	0xFEE
 16610                           wreg	equ	0xFE8
 16611                           indf1	equ	0xFE7
 16612                           postdec1	equ	0xFE5
 16613                           fsr1h	equ	0xFE2
 16614                           fsr1l	equ	0xFE1
 16615                           indf2	equ	0xFDF
 16616                           fsr2h	equ	0xFDA
 16617                           fsr2l	equ	0xFD9
 16618                           status	equ	0xFD8
 16619                           
 16620 ;; *************** function _TMRapp_ClearBitFlags *****************
 16621 ;; Defined at:
 16622 ;;		line 51 in file "../Includes/Drivers/TMRapp.c"
 16623 ;; Parameters:    Size  Location     Type
 16624 ;;		None
 16625 ;; Auto vars:     Size  Location     Type
 16626 ;;		None
 16627 ;; Return value:  Size  Location     Type
 16628 ;;		None               void
 16629 ;; Registers used:
 16630 ;;		wreg, status,2
 16631 ;; Tracked objects:
 16632 ;;		On entry : 0/0
 16633 ;;		On exit  : 0/0
 16634 ;;		Unchanged: 0/0
 16635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16636 ;;      Params:         0       0       0       0       0       0       0       0       0
 16637 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16638 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16639 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16640 ;;Total ram usage:        0 bytes
 16641 ;; Hardware stack levels used:    1
 16642 ;; Hardware stack levels required when called:   11
 16643 ;; This function calls:
 16644 ;;		Nothing
 16645 ;; This function is called by:
 16646 ;;		_moteHandler
 16647 ;; This function uses a non-reentrant model
 16648 ;;
 16649                           
 16650                           	psect	text45
 16651  0059A2                     __ptext45:
 16652                           	opt stack 0
 16653  0059A2                     _TMRapp_ClearBitFlags:
 16654                           	opt stack 18
 16655                           
 16656                           ;TMRapp.c: 54: appTimer.TicksBitMap = 0x00;
 16657                           
 16658                           ; BSR set to: 0
 16659                           ;incstack = 0
 16660  0059A2  0E00               	movlw	0
 16661  0059A4  0100               	movlb	0	; () banked
 16662  0059A6  6F9C               	movwf	_appTimer& (0+255),b
 16663                           
 16664                           ; BSR set to: 0
 16665  0059A8  0012               	return		;funcret
 16666  0059AA                     __end_of_TMRapp_ClearBitFlags:
 16667                           	opt stack 0
 16668                           tblptru	equ	0xFF8
 16669                           tblptrh	equ	0xFF7
 16670                           tblptrl	equ	0xFF6
 16671                           tablat	equ	0xFF5
 16672                           prodh	equ	0xFF4
 16673                           prodl	equ	0xFF3
 16674                           intcon	equ	0xFF2
 16675                           postinc0	equ	0xFEE
 16676                           wreg	equ	0xFE8
 16677                           indf1	equ	0xFE7
 16678                           postdec1	equ	0xFE5
 16679                           fsr1h	equ	0xFE2
 16680                           fsr1l	equ	0xFE1
 16681                           indf2	equ	0xFDF
 16682                           fsr2h	equ	0xFDA
 16683                           fsr2l	equ	0xFD9
 16684                           status	equ	0xFD8
 16685                           
 16686 ;; *************** function _MOTEapp_TimerBasedTask *****************
 16687 ;; Defined at:
 16688 ;;		line 1153 in file "../Includes/Board/MOTEapp.c"
 16689 ;; Parameters:    Size  Location     Type
 16690 ;;  timerTask       1    wreg     struct .
 16691 ;; Auto vars:     Size  Location     Type
 16692 ;;  timerTask       1    0[BANK0 ] struct .
 16693 ;; Return value:  Size  Location     Type
 16694 ;;		None               void
 16695 ;; Registers used:
 16696 ;;		wreg, status,2, status,0
 16697 ;; Tracked objects:
 16698 ;;		On entry : 0/0
 16699 ;;		On exit  : 0/0
 16700 ;;		Unchanged: 0/0
 16701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16702 ;;      Params:         0       0       0       0       0       0       0       0       0
 16703 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16704 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16705 ;;      Totals:         0       1       0       0       0       0       0       0       0
 16706 ;;Total ram usage:        1 bytes
 16707 ;; Hardware stack levels used:    1
 16708 ;; Hardware stack levels required when called:   11
 16709 ;; This function calls:
 16710 ;;		Nothing
 16711 ;; This function is called by:
 16712 ;;		_moteHandler
 16713 ;; This function uses a non-reentrant model
 16714 ;;
 16715                           
 16716                           	psect	text46
 16717  00578A                     __ptext46:
 16718                           	opt stack 0
 16719  00578A                     _MOTEapp_TimerBasedTask:
 16720                           	opt stack 18
 16721                           
 16722                           ; BSR set to: 0
 16723                           ;incstack = 0
 16724                           ;MOTEapp_TimerBasedTask@timerTask stored from wreg
 16725  00578A  0100               	movlb	0	; () banked
 16726  00578C  6FC3               	movwf	MOTEapp_TimerBasedTask@timerTask& (0+255),b
 16727                           
 16728                           ;MOTEapp.c: 1158: if (timerTask.mSecTenTick)
 16729  00578E  0100               	movlb	0	; () banked
 16730  005790  A3C3               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),1,b
 16731  005792  D003               	goto	l11708
 16732                           
 16733                           ; BSR set to: 0
 16734                           ;MOTEapp.c: 1159: {
 16735                           ;MOTEapp.c: 1161: m10SecTicker++;
 16736  005794  0100               	movlb	0	; () banked
 16737  005796  4B82               	infsnz	_m10SecTicker& (0+255),f,b
 16738  005798  2B83               	incf	(_m10SecTicker+1)& (0+255),f,b
 16739  00579A                     l11708:
 16740                           
 16741                           ; BSR set to: 0
 16742                           ;MOTEapp.c: 1166: }
 16743                           ;MOTEapp.c: 1167: if (timerTask.SecTick)
 16744  00579A  0100               	movlb	0	; () banked
 16745  00579C  A7C3               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),3,b
 16746  00579E  D002               	goto	l11712
 16747                           
 16748                           ; BSR set to: 0
 16749                           ;MOTEapp.c: 1168: {
 16750                           ;MOTEapp.c: 1170: secTicker++;
 16751  0057A0  0100               	movlb	0	; () banked
 16752  0057A2  2BB3               	incf	_secTicker& (0+255),f,b
 16753  0057A4                     l11712:
 16754                           
 16755                           ; BSR set to: 0
 16756                           ;MOTEapp.c: 1171: }
 16757                           ;MOTEapp.c: 1172: if (timerTask.MinTick)
 16758  0057A4  0100               	movlb	0	; () banked
 16759  0057A6  A9C3               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),4,b
 16760  0057A8  0012               	return	
 16761                           
 16762                           ; BSR set to: 0
 16763                           ;MOTEapp.c: 1173: {
 16764                           ;MOTEapp.c: 1175: minTicker++;
 16765  0057AA  0100               	movlb	0	; () banked
 16766  0057AC  2BAA               	incf	_minTicker& (0+255),f,b
 16767                           
 16768                           ; BSR set to: 0
 16769                           
 16770                           ; BSR set to: 0
 16771                           
 16772                           ;MOTEapp.c: 1182: {
 16773                           
 16774                           ; BSR set to: 0
 16775                           
 16776                           ; BSR set to: 0
 16777                           
 16778                           ;MOTEapp.c: 1178: {
 16779                           
 16780                           ; BSR set to: 0
 16781                           
 16782                           ; BSR set to: 0
 16783  0057AE  0012               	return	
 16784  0057B0                     __end_of_MOTEapp_TimerBasedTask:
 16785                           	opt stack 0
 16786                           tblptru	equ	0xFF8
 16787                           tblptrh	equ	0xFF7
 16788                           tblptrl	equ	0xFF6
 16789                           tablat	equ	0xFF5
 16790                           prodh	equ	0xFF4
 16791                           prodl	equ	0xFF3
 16792                           intcon	equ	0xFF2
 16793                           postinc0	equ	0xFEE
 16794                           wreg	equ	0xFE8
 16795                           indf1	equ	0xFE7
 16796                           postdec1	equ	0xFE5
 16797                           fsr1h	equ	0xFE2
 16798                           fsr1l	equ	0xFE1
 16799                           indf2	equ	0xFDF
 16800                           fsr2h	equ	0xFDA
 16801                           fsr2l	equ	0xFD9
 16802                           status	equ	0xFD8
 16803                           
 16804 ;; *************** function _moteApp_clearCommand *****************
 16805 ;; Defined at:
 16806 ;;		line 1385 in file "../Includes/Board/MOTEapp.c"
 16807 ;; Parameters:    Size  Location     Type
 16808 ;;		None
 16809 ;; Auto vars:     Size  Location     Type
 16810 ;;		None
 16811 ;; Return value:  Size  Location     Type
 16812 ;;		None               void
 16813 ;; Registers used:
 16814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16815 ;; Tracked objects:
 16816 ;;		On entry : 0/0
 16817 ;;		On exit  : 0/0
 16818 ;;		Unchanged: 0/0
 16819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16820 ;;      Params:         0       0       0       0       0       0       0       0       0
 16821 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16822 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16823 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16824 ;;Total ram usage:        0 bytes
 16825 ;; Hardware stack levels used:    1
 16826 ;; Hardware stack levels required when called:   14
 16827 ;; This function calls:
 16828 ;;		_sendCommand
 16829 ;; This function is called by:
 16830 ;;		_main
 16831 ;; This function uses a non-reentrant model
 16832 ;;
 16833                           
 16834                           	psect	text47
 16835  0058EC                     __ptext47:
 16836                           	opt stack 0
 16837  0058EC                     _moteApp_clearCommand:
 16838                           	opt stack 16
 16839                           
 16840                           ;MOTEapp.c: 1387: sendCommand("\r\n");
 16841                           
 16842                           ; BSR set to: 0
 16843                           ;incstack = 0
 16844  0058EC  0E63               	movlw	low (STR_192+23)
 16845  0058EE  0100               	movlb	0	; () banked
 16846  0058F0  6FC4               	movwf	sendCommand@string& (0+255),b
 16847  0058F2  0E79               	movlw	high (STR_192+23)
 16848  0058F4  0100               	movlb	0	; () banked
 16849  0058F6  6FC5               	movwf	(sendCommand@string+1)& (0+255),b
 16850  0058F8  EC2F  F02B         	call	_sendCommand	;wreg free
 16851  0058FC  0012               	return		;funcret
 16852  0058FE                     __end_of_moteApp_clearCommand:
 16853                           	opt stack 0
 16854                           tblptru	equ	0xFF8
 16855                           tblptrh	equ	0xFF7
 16856                           tblptrl	equ	0xFF6
 16857                           tablat	equ	0xFF5
 16858                           prodh	equ	0xFF4
 16859                           prodl	equ	0xFF3
 16860                           intcon	equ	0xFF2
 16861                           postinc0	equ	0xFEE
 16862                           wreg	equ	0xFE8
 16863                           indf1	equ	0xFE7
 16864                           postdec1	equ	0xFE5
 16865                           fsr1h	equ	0xFE2
 16866                           fsr1l	equ	0xFE1
 16867                           indf2	equ	0xFDF
 16868                           fsr2h	equ	0xFDA
 16869                           fsr2l	equ	0xFD9
 16870                           status	equ	0xFD8
 16871                           
 16872 ;; *************** function _sendCommand *****************
 16873 ;; Defined at:
 16874 ;;		line 1239 in file "../Includes/Board/MOTEapp.c"
 16875 ;; Parameters:    Size  Location     Type
 16876 ;;  string          2    1[BANK0 ] PTR const unsigned char 
 16877 ;;		 -> STR_193(26), STR_192(26), STR_191(26), STR_190(26), 
 16878 ;;		 -> STR_189(3), STR_188(9), STR_187(15), STR_186(13), 
 16879 ;;		 -> STR_185(13), STR_184(13), STR_183(13), STR_182(13), 
 16880 ;;		 -> STR_181(13), STR_180(13), STR_179(13), STR_178(16), 
 16881 ;;		 -> STR_134(14), STR_133(16), STR_69(11), STR_67(11), 
 16882 ;;		 -> STR_65(14), STR_57(14), STR_51(10), STR_47(13), 
 16883 ;;		 -> STR_42(14), STR_40(13), STR_38(10), STR_29(10), 
 16884 ;;		 -> STR_22(20), STR_21(2), 
 16885 ;; Auto vars:     Size  Location     Type
 16886 ;;		None
 16887 ;; Return value:  Size  Location     Type
 16888 ;;		None               void
 16889 ;; Registers used:
 16890 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16891 ;; Tracked objects:
 16892 ;;		On entry : 0/0
 16893 ;;		On exit  : 0/0
 16894 ;;		Unchanged: 0/0
 16895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16896 ;;      Params:         0       2       0       0       0       0       0       0       0
 16897 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16898 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16899 ;;      Totals:         0       2       0       0       0       0       0       0       0
 16900 ;;Total ram usage:        2 bytes
 16901 ;; Hardware stack levels used:    1
 16902 ;; Hardware stack levels required when called:   13
 16903 ;; This function calls:
 16904 ;;		_EUSART_Write
 16905 ;;		_EndLine
 16906 ;; This function is called by:
 16907 ;;		_moduleResync
 16908 ;;		_moduleSleep
 16909 ;;		_moteJoiningProcess
 16910 ;;		_moteRunningProcess
 16911 ;;		_MOTEapp_SetDataRateSetting
 16912 ;;		_moteApp_clearCommand
 16913 ;;		_moteApp_toggleLeds
 16914 ;; This function uses a non-reentrant model
 16915 ;;
 16916                           
 16917                           	psect	text48
 16918  00565E                     __ptext48:
 16919                           	opt stack 0
 16920  00565E                     _sendCommand:
 16921                           	opt stack 14
 16922                           
 16923                           ;MOTEapp.c: 1242: while (*string)
 16924                           
 16925                           ;incstack = 0
 16926  00565E  D00B               	goto	l10662
 16927  005660                     l10658:
 16928                           
 16929                           ;MOTEapp.c: 1243: {
 16930                           ;MOTEapp.c: 1244: EUSART_Write(*string++);
 16931  005660  C0C4  FFF6         	movff	sendCommand@string,tblptrl
 16932  005664  C0C5  FFF7         	movff	sendCommand@string+1,tblptrh
 16933  005668                     	if	0	;tblptru may be non-zero
 16934  005668                     	endif
 16935  005668                     	if	0	;tblptru may be non-zero
 16936  005668                     	endif
 16937  005668  0008               	tblrd		*
 16938  00566A  50F5               	movf	tablat,w,c
 16939  00566C  ECDE  F029         	call	_EUSART_Write
 16940  005670  0100               	movlb	0	; () banked
 16941  005672  4BC4               	infsnz	sendCommand@string& (0+255),f,b
 16942  005674  2BC5               	incf	(sendCommand@string+1)& (0+255),f,b
 16943  005676                     l10662:
 16944  005676  C0C4  FFF6         	movff	sendCommand@string,tblptrl
 16945  00567A  C0C5  FFF7         	movff	sendCommand@string+1,tblptrh
 16946  00567E                     	if	0	;tblptru may be non-zero
 16947  00567E                     	endif
 16948  00567E                     	if	0	;tblptru may be non-zero
 16949  00567E                     	endif
 16950  00567E  0008               	tblrd		*
 16951  005680  50F5               	movf	tablat,w,c
 16952  005682  0900               	iorlw	0
 16953  005684  A4D8               	btfss	status,2,c
 16954  005686  D7EC               	goto	l10658
 16955                           
 16956                           ;MOTEapp.c: 1245: }
 16957                           ;MOTEapp.c: 1246: EndLine();
 16958  005688  ECAA  F02C         	call	_EndLine	;wreg free
 16959  00568C  0012               	return		;funcret
 16960  00568E                     __end_of_sendCommand:
 16961                           	opt stack 0
 16962                           tblptru	equ	0xFF8
 16963                           tblptrh	equ	0xFF7
 16964                           tblptrl	equ	0xFF6
 16965                           tablat	equ	0xFF5
 16966                           prodh	equ	0xFF4
 16967                           prodl	equ	0xFF3
 16968                           intcon	equ	0xFF2
 16969                           postinc0	equ	0xFEE
 16970                           wreg	equ	0xFE8
 16971                           indf1	equ	0xFE7
 16972                           postdec1	equ	0xFE5
 16973                           fsr1h	equ	0xFE2
 16974                           fsr1l	equ	0xFE1
 16975                           indf2	equ	0xFDF
 16976                           fsr2h	equ	0xFDA
 16977                           fsr2l	equ	0xFD9
 16978                           status	equ	0xFD8
 16979                           
 16980 ;; *************** function _EndLine *****************
 16981 ;; Defined at:
 16982 ;;		line 1233 in file "../Includes/Board/MOTEapp.c"
 16983 ;; Parameters:    Size  Location     Type
 16984 ;;		None
 16985 ;; Auto vars:     Size  Location     Type
 16986 ;;		None
 16987 ;; Return value:  Size  Location     Type
 16988 ;;		None               void
 16989 ;; Registers used:
 16990 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16991 ;; Tracked objects:
 16992 ;;		On entry : 0/0
 16993 ;;		On exit  : 0/0
 16994 ;;		Unchanged: 0/0
 16995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16996 ;;      Params:         0       0       0       0       0       0       0       0       0
 16997 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16998 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16999 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17000 ;;Total ram usage:        0 bytes
 17001 ;; Hardware stack levels used:    1
 17002 ;; Hardware stack levels required when called:   12
 17003 ;; This function calls:
 17004 ;;		_EUSART_Write
 17005 ;; This function is called by:
 17006 ;;		_sendCommand
 17007 ;;		_sendDataCommand
 17008 ;; This function uses a non-reentrant model
 17009 ;;
 17010                           
 17011                           	psect	text49
 17012  005954                     __ptext49:
 17013                           	opt stack 0
 17014  005954                     _EndLine:
 17015                           	opt stack 14
 17016                           
 17017                           ;MOTEapp.c: 1235: EUSART_Write(0x0D);
 17018                           
 17019                           ;incstack = 0
 17020  005954  0E0D               	movlw	13
 17021  005956  ECDE  F029         	call	_EUSART_Write
 17022                           
 17023                           ;MOTEapp.c: 1236: EUSART_Write(0x0A);
 17024  00595A  0E0A               	movlw	10
 17025  00595C  ECDE  F029         	call	_EUSART_Write
 17026  005960  0012               	return		;funcret
 17027  005962                     __end_of_EndLine:
 17028                           	opt stack 0
 17029                           tblptru	equ	0xFF8
 17030                           tblptrh	equ	0xFF7
 17031                           tblptrl	equ	0xFF6
 17032                           tablat	equ	0xFF5
 17033                           prodh	equ	0xFF4
 17034                           prodl	equ	0xFF3
 17035                           intcon	equ	0xFF2
 17036                           postinc0	equ	0xFEE
 17037                           wreg	equ	0xFE8
 17038                           indf1	equ	0xFE7
 17039                           postdec1	equ	0xFE5
 17040                           fsr1h	equ	0xFE2
 17041                           fsr1l	equ	0xFE1
 17042                           indf2	equ	0xFDF
 17043                           fsr2h	equ	0xFDA
 17044                           fsr2l	equ	0xFD9
 17045                           status	equ	0xFD8
 17046                           
 17047 ;; *************** function _USBapp_handlerState *****************
 17048 ;; Defined at:
 17049 ;;		line 64 in file "../Includes/Board/USBapp.c"
 17050 ;; Parameters:    Size  Location     Type
 17051 ;;  state           1    wreg     enum E6418
 17052 ;; Auto vars:     Size  Location     Type
 17053 ;;  state           1    0[BANK0 ] enum E6418
 17054 ;; Return value:  Size  Location     Type
 17055 ;;		None               void
 17056 ;; Registers used:
 17057 ;;		wreg
 17058 ;; Tracked objects:
 17059 ;;		On entry : 0/0
 17060 ;;		On exit  : 0/0
 17061 ;;		Unchanged: 0/0
 17062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17063 ;;      Params:         0       0       0       0       0       0       0       0       0
 17064 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17065 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17066 ;;      Totals:         0       1       0       0       0       0       0       0       0
 17067 ;;Total ram usage:        1 bytes
 17068 ;; Hardware stack levels used:    1
 17069 ;; Hardware stack levels required when called:   11
 17070 ;; This function calls:
 17071 ;;		Nothing
 17072 ;; This function is called by:
 17073 ;;		_main
 17074 ;; This function uses a non-reentrant model
 17075 ;;
 17076                           
 17077                           	psect	text50
 17078  00598E                     __ptext50:
 17079                           	opt stack 0
 17080  00598E                     _USBapp_handlerState:
 17081                           	opt stack 19
 17082                           
 17083                           ;incstack = 0
 17084                           ;USBapp_handlerState@state stored from wreg
 17085  00598E  0100               	movlb	0	; () banked
 17086  005990  6FC3               	movwf	USBapp_handlerState@state& (0+255),b
 17087                           
 17088                           ;USBapp.c: 66: usbState = state;
 17089  005992  C0C3  F0B5         	movff	USBapp_handlerState@state,_usbState
 17090  005996  0012               	return		;funcret
 17091  005998                     __end_of_USBapp_handlerState:
 17092                           	opt stack 0
 17093                           tblptru	equ	0xFF8
 17094                           tblptrh	equ	0xFF7
 17095                           tblptrl	equ	0xFF6
 17096                           tablat	equ	0xFF5
 17097                           prodh	equ	0xFF4
 17098                           prodl	equ	0xFF3
 17099                           intcon	equ	0xFF2
 17100                           postinc0	equ	0xFEE
 17101                           wreg	equ	0xFE8
 17102                           indf1	equ	0xFE7
 17103                           postdec1	equ	0xFE5
 17104                           fsr1h	equ	0xFE2
 17105                           fsr1l	equ	0xFE1
 17106                           indf2	equ	0xFDF
 17107                           fsr2h	equ	0xFDA
 17108                           fsr2l	equ	0xFD9
 17109                           status	equ	0xFD8
 17110                           
 17111 ;; *************** function _USBapp_Handler *****************
 17112 ;; Defined at:
 17113 ;;		line 69 in file "../Includes/Board/USBapp.c"
 17114 ;; Parameters:    Size  Location     Type
 17115 ;;		None
 17116 ;; Auto vars:     Size  Location     Type
 17117 ;;  buttonPress     1   18[BANK0 ] enum E6452
 17118 ;; Return value:  Size  Location     Type
 17119 ;;		None               void
 17120 ;; Registers used:
 17121 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17122 ;; Tracked objects:
 17123 ;;		On entry : 0/0
 17124 ;;		On exit  : 0/0
 17125 ;;		Unchanged: 0/0
 17126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17127 ;;      Params:         0       0       0       0       0       0       0       0       0
 17128 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17129 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17130 ;;      Totals:         0       1       0       0       0       0       0       0       0
 17131 ;;Total ram usage:        1 bytes
 17132 ;; Hardware stack levels used:    1
 17133 ;; Hardware stack levels required when called:   17
 17134 ;; This function calls:
 17135 ;;		_USBapp_DeviceCdcEmulatorHandler
 17136 ;;		_oled_clear
 17137 ;;		_oled_putString
 17138 ;;		_service_pushbutton
 17139 ;; This function is called by:
 17140 ;;		_main
 17141 ;; This function uses a non-reentrant model
 17142 ;;
 17143                           
 17144                           	psect	text51
 17145  003F12                     __ptext51:
 17146                           	opt stack 0
 17147  003F12                     _USBapp_Handler:
 17148                           	opt stack 13
 17149                           
 17150                           ;USBapp.c: 73: {
 17151                           ;USBapp.c: 74: switch(usbState)
 17152                           
 17153                           ;incstack = 0
 17154                           ;USBapp.c: 72: do
 17155  003F12  D04A               	goto	l12882
 17156  003F14  D7FF               	goto	l861
 17157  003F16                     l12854:
 17158                           
 17159                           ;USBapp.c: 81: oled_clear();
 17160  003F16  EC26  F02C         	call	_oled_clear	;wreg free
 17161                           
 17162                           ;USBapp.c: 82: oled_putString("CDC Mode",1,0);
 17163  003F1A  0E18               	movlw	low STR_200
 17164  003F1C  0100               	movlb	0	; () banked
 17165  003F1E  6FD0               	movwf	oled_putString@string& (0+255),b
 17166  003F20  0E7F               	movlw	high STR_200
 17167  003F22  0100               	movlb	0	; () banked
 17168  003F24  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
 17169  003F26  0E01               	movlw	1
 17170  003F28  0100               	movlb	0	; () banked
 17171  003F2A  6FD2               	movwf	oled_putString@station_dot& (0+255),b
 17172  003F2C  0E00               	movlw	0
 17173  003F2E  0100               	movlb	0	; () banked
 17174  003F30  6FD3               	movwf	oled_putString@start_page& (0+255),b
 17175  003F32  EC0D  F027         	call	_oled_putString	;wreg free
 17176                           
 17177                           ;USBapp.c: 83: oled_putString("Command",2,1);
 17178  003F36  0E69               	movlw	low STR_201
 17179  003F38  0100               	movlb	0	; () banked
 17180  003F3A  6FD0               	movwf	oled_putString@string& (0+255),b
 17181  003F3C  0E7F               	movlw	high STR_201
 17182  003F3E  0100               	movlb	0	; () banked
 17183  003F40  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
 17184  003F42  0E02               	movlw	2
 17185  003F44  0100               	movlb	0	; () banked
 17186  003F46  6FD2               	movwf	oled_putString@station_dot& (0+255),b
 17187  003F48  0E01               	movlw	1
 17188  003F4A  0100               	movlb	0	; () banked
 17189  003F4C  6FD3               	movwf	oled_putString@start_page& (0+255),b
 17190  003F4E  EC0D  F027         	call	_oled_putString	;wreg free
 17191                           
 17192                           ;USBapp.c: 84: oled_putString("USB Handler",0,2);
 17193  003F52  0E30               	movlw	low STR_202
 17194  003F54  0100               	movlb	0	; () banked
 17195  003F56  6FD0               	movwf	oled_putString@string& (0+255),b
 17196  003F58  0E7E               	movlw	high STR_202
 17197  003F5A  0100               	movlb	0	; () banked
 17198  003F5C  6FD1               	movwf	(oled_putString@string+1)& (0+255),b
 17199  003F5E  0E00               	movlw	0
 17200  003F60  0100               	movlb	0	; () banked
 17201  003F62  6FD2               	movwf	oled_putString@station_dot& (0+255),b
 17202  003F64  0E02               	movlw	2
 17203  003F66  0100               	movlb	0	; () banked
 17204  003F68  6FD3               	movwf	oled_putString@start_page& (0+255),b
 17205  003F6A  EC0D  F027         	call	_oled_putString	;wreg free
 17206                           
 17207                           ;USBapp.c: 86: usbState = USB_RUNNING;
 17208  003F6E  0E01               	movlw	1
 17209  003F70  D006               	goto	L8
 17210  003F72                     l12864:
 17211                           
 17212                           ; BSR set to: 0
 17213                           ;USBapp.c: 90: if( USBDeviceState < CONFIGURED_STATE )
 17214  003F72  0E20               	movlw	32
 17215  003F74  0100               	movlb	0	; () banked
 17216  003F76  6197               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 17217  003F78  D001               	goto	l12868
 17218  003F7A  D022               	goto	l867
 17219  003F7C                     l12868:
 17220                           
 17221                           ; BSR set to: 0
 17222                           ;USBapp.c: 94: }
 17223                           ;USBapp.c: 95: usbState = USB_CDC;
 17224  003F7C  0E02               	movlw	2
 17225  003F7E                     L8:
 17226  003F7E  0100               	movlb	0	; () banked
 17227  003F80  6FB5               	movwf	_usbState& (0+255),b
 17228                           
 17229                           ;USBapp.c: 96: break;
 17230  003F82  D01E               	goto	l867
 17231  003F84                     l12870:
 17232                           
 17233                           ; BSR set to: 0
 17234                           ;USBapp.c: 99: USBapp_DeviceCdcEmulatorHandler();
 17235  003F84  ECA9  F01B         	call	_USBapp_DeviceCdcEmulatorHandler	;wreg free
 17236                           
 17237                           ;USBapp.c: 103: buttonStates_t buttonPress = Released;
 17238  003F88  0E03               	movlw	3
 17239  003F8A  0100               	movlb	0	; () banked
 17240  003F8C  6FD5               	movwf	USBapp_Handler@buttonPress& (0+255),b
 17241                           
 17242                           ; BSR set to: 0
 17243                           ;USBapp.c: 104: buttonPress = service_pushbutton();
 17244  003F8E  ECEB  F025         	call	_service_pushbutton	;wreg free
 17245  003F92  0100               	movlb	0	; () banked
 17246  003F94  6FD5               	movwf	USBapp_Handler@buttonPress& (0+255),b
 17247                           
 17248                           ; BSR set to: 0
 17249                           ;USBapp.c: 105: if (buttonPress != Released )
 17250  003F96  0E03               	movlw	3
 17251  003F98  0100               	movlb	0	; () banked
 17252  003F9A  19D5               	xorwf	USBapp_Handler@buttonPress& (0+255),w,b
 17253  003F9C  B4D8               	btfsc	status,2,c
 17254  003F9E  D010               	goto	l867
 17255                           
 17256                           ; BSR set to: 0
 17257                           ;USBapp.c: 106: {
 17258                           ;USBapp.c: 107: exitUSB = USB_BAT;
 17259  003FA0  0E02               	movlw	2
 17260  003FA2  0100               	movlb	0	; () banked
 17261  003FA4  6FF5               	movwf	_exitUSB& (0+255),b
 17262                           
 17263                           ; BSR set to: 0
 17264                           ;USBapp.c: 110: }
 17265                           
 17266                           ; BSR set to: 0
 17267                           ;USBapp.c: 108: }
 17268                           ;USBapp.c: 109: break;
 17269  003FA6  D00C               	goto	l867
 17270  003FA8                     l12882:
 17271  003FA8  0100               	movlb	0	; () banked
 17272  003FAA  51B5               	movf	_usbState& (0+255),w,b
 17273                           
 17274                           ; Switch size 1, requested type "space"
 17275                           ; Number of cases is 3, Range of values is 0 to 2
 17276                           ; switch strategies available:
 17277                           ; Name         Instructions Cycles
 17278                           ; simple_byte           10     6 (average)
 17279                           ;	Chosen strategy is simple_byte
 17280  003FAC  0A00               	xorlw	0	; case 0
 17281  003FAE  B4D8               	btfsc	status,2,c
 17282  003FB0  D7B2               	goto	l12854
 17283  003FB2  0A01               	xorlw	1	; case 1
 17284  003FB4  B4D8               	btfsc	status,2,c
 17285  003FB6  D7DD               	goto	l12864
 17286  003FB8  0A03               	xorlw	3	; case 2
 17287  003FBA  B4D8               	btfsc	status,2,c
 17288  003FBC  D7E3               	goto	l12870
 17289  003FBE  D7AA               	goto	l861
 17290  003FC0                     l867:
 17291                           
 17292                           ;USBapp.c: 111: }while((PORTAbits.RA0) && (exitUSB == NO_USB));
 17293  003FC0  A080               	btfss	3968,0,c	;volatile
 17294  003FC2  D004               	goto	l872
 17295  003FC4  0100               	movlb	0	; () banked
 17296  003FC6  51F5               	movf	_exitUSB& (0+255),w,b
 17297  003FC8  B4D8               	btfsc	status,2,c
 17298  003FCA  D7EE               	goto	l12882
 17299  003FCC                     l872:
 17300                           
 17301                           ;USBapp.c: 112: __nop();
 17302  003FCC  F000               	nop	
 17303                           
 17304                           ;USBapp.c: 113: if (exitUSB != USB_BAT)
 17305  003FCE  0E02               	movlw	2
 17306  003FD0  0100               	movlb	0	; () banked
 17307  003FD2  19F5               	xorwf	_exitUSB& (0+255),w,b
 17308  003FD4  B4D8               	btfsc	status,2,c
 17309  003FD6  0012               	return	
 17310                           
 17311                           ; BSR set to: 0
 17312                           ;USBapp.c: 114: exitUSB = NO_USB;
 17313  003FD8  0E00               	movlw	0
 17314  003FDA  0100               	movlb	0	; () banked
 17315  003FDC  6FF5               	movwf	_exitUSB& (0+255),b
 17316  003FDE  0012               	return	
 17317  003FE0                     __end_of_USBapp_Handler:
 17318                           	opt stack 0
 17319                           tblptru	equ	0xFF8
 17320                           tblptrh	equ	0xFF7
 17321                           tblptrl	equ	0xFF6
 17322                           tablat	equ	0xFF5
 17323                           prodh	equ	0xFF4
 17324                           prodl	equ	0xFF3
 17325                           intcon	equ	0xFF2
 17326                           postinc0	equ	0xFEE
 17327                           wreg	equ	0xFE8
 17328                           indf1	equ	0xFE7
 17329                           postdec1	equ	0xFE5
 17330                           fsr1h	equ	0xFE2
 17331                           fsr1l	equ	0xFE1
 17332                           indf2	equ	0xFDF
 17333                           fsr2h	equ	0xFDA
 17334                           fsr2l	equ	0xFD9
 17335                           status	equ	0xFD8
 17336                           
 17337 ;; *************** function _service_pushbutton *****************
 17338 ;; Defined at:
 17339 ;;		line 49 in file "../Includes/Drivers/buttons.c"
 17340 ;; Parameters:    Size  Location     Type
 17341 ;;		None
 17342 ;; Auto vars:     Size  Location     Type
 17343 ;;  bs              1    0[BANK0 ] enum E6333
 17344 ;; Return value:  Size  Location     Type
 17345 ;;                  1    wreg      enum E6421
 17346 ;; Registers used:
 17347 ;;		wreg, status,2, status,0
 17348 ;; Tracked objects:
 17349 ;;		On entry : 0/0
 17350 ;;		On exit  : 0/0
 17351 ;;		Unchanged: 0/0
 17352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17353 ;;      Params:         0       0       0       0       0       0       0       0       0
 17354 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17355 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17356 ;;      Totals:         0       1       0       0       0       0       0       0       0
 17357 ;;Total ram usage:        1 bytes
 17358 ;; Hardware stack levels used:    1
 17359 ;; Hardware stack levels required when called:   11
 17360 ;; This function calls:
 17361 ;;		Nothing
 17362 ;; This function is called by:
 17363 ;;		_moteHandler
 17364 ;;		_USBapp_Handler
 17365 ;; This function uses a non-reentrant model
 17366 ;;
 17367                           
 17368                           	psect	text52
 17369  004BD6                     __ptext52:
 17370                           	opt stack 0
 17371  004BD6                     _service_pushbutton:
 17372                           	opt stack 18
 17373                           
 17374                           ;buttons.c: 51: static uint32_t PB_Timer = 0;
 17375                           ;buttons.c: 52: static uint8_t Release_Timer = 0;
 17376                           ;buttons.c: 53: buttonStates_t bs = NoButton;
 17377                           
 17378                           ; BSR set to: 0
 17379                           ;incstack = 0
 17380  004BD6  0E00               	movlw	0
 17381  004BD8  0100               	movlb	0	; () banked
 17382  004BDA  6FC3               	movwf	service_pushbutton@bs& (0+255),b
 17383                           
 17384                           ; BSR set to: 0
 17385                           ;buttons.c: 55: if ((PORTCbits.RC0 == 0) || (PORTCbits.RC1 == 0) )
 17386  004BDC  B082               	btfsc	3970,0,c	;volatile
 17387                           
 17388                           ; BSR set to: 0
 17389  004BDE  A282               	btfss	3970,1,c	;volatile
 17390  004BE0  D001               	goto	l11728
 17391  004BE2  D01D               	goto	l11740
 17392  004BE4                     l11728:
 17393                           
 17394                           ; BSR set to: 0
 17395                           ;buttons.c: 56: {
 17396                           ;buttons.c: 57: ++PB_Timer;
 17397  004BE4  0E01               	movlw	1
 17398  004BE6  0100               	movlb	0	; () banked
 17399  004BE8  2766               	addwf	service_pushbutton@PB_Timer& (0+255),f,b
 17400  004BEA  0E00               	movlw	0
 17401  004BEC  2367               	addwfc	(service_pushbutton@PB_Timer+1)& (0+255),f,b
 17402  004BEE  2368               	addwfc	(service_pushbutton@PB_Timer+2)& (0+255),f,b
 17403  004BF0  2369               	addwfc	(service_pushbutton@PB_Timer+3)& (0+255),f,b
 17404                           
 17405                           ;buttons.c: 61: if (PB_Timer == 55)
 17406  004BF2  0E37               	movlw	55
 17407  004BF4  0100               	movlb	0	; () banked
 17408  004BF6  1966               	xorwf	service_pushbutton@PB_Timer& (0+255),w,b
 17409  004BF8  0100               	movlb	0	; () banked
 17410  004BFA  1167               	iorwf	(service_pushbutton@PB_Timer+1)& (0+255),w,b
 17411  004BFC  0100               	movlb	0	; () banked
 17412  004BFE  1168               	iorwf	(service_pushbutton@PB_Timer+2)& (0+255),w,b
 17413  004C00  0100               	movlb	0	; () banked
 17414  004C02  1169               	iorwf	(service_pushbutton@PB_Timer+3)& (0+255),w,b
 17415  004C04  A4D8               	btfss	status,2,c
 17416  004C06  D009               	goto	l11738
 17417                           
 17418                           ; BSR set to: 0
 17419                           ;buttons.c: 62: {
 17420                           ;buttons.c: 63: Release_Timer = 0;
 17421  004C08  0E00               	movlw	0
 17422  004C0A  0100               	movlb	0	; () banked
 17423  004C0C  6FB6               	movwf	service_pushbutton@Release_Timer& (0+255),b
 17424                           
 17425                           ; BSR set to: 0
 17426                           ;buttons.c: 65: if (PORTCbits.RC0 == 0)
 17427  004C0E  B082               	btfsc	3970,0,c	;volatile
 17428  004C10  D002               	goto	l11736
 17429                           
 17430                           ; BSR set to: 0
 17431                           ;buttons.c: 66: {
 17432                           ;buttons.c: 67: bs = ShortPress1;
 17433  004C12  0E01               	movlw	1
 17434  004C14  D019               	goto	L11
 17435  004C16                     l11736:
 17436                           
 17437                           ; BSR set to: 0
 17438                           ;buttons.c: 69: else
 17439                           ;buttons.c: 70: {
 17440                           ;buttons.c: 71: bs = ShortPress2;
 17441  004C16  0E02               	movlw	2
 17442  004C18  D017               	goto	L11
 17443  004C1A                     l11738:
 17444                           
 17445                           ; BSR set to: 0
 17446                           ;buttons.c: 74: else
 17447                           ;buttons.c: 75: {
 17448                           ;buttons.c: 76: bs = NoButton;
 17449  004C1A  0E00               	movlw	0
 17450  004C1C  D015               	goto	L11
 17451  004C1E                     l11740:
 17452                           
 17453                           ; BSR set to: 0
 17454                           ;buttons.c: 79: else
 17455                           ;buttons.c: 80: {
 17456                           ;buttons.c: 81: if (Release_Timer == 20)
 17457  004C1E  0E14               	movlw	20
 17458  004C20  0100               	movlb	0	; () banked
 17459  004C22  19B6               	xorwf	service_pushbutton@Release_Timer& (0+255),w,b
 17460  004C24  A4D8               	btfss	status,2,c
 17461  004C26  D00D               	goto	l11744
 17462                           
 17463                           ; BSR set to: 0
 17464                           ;buttons.c: 82: {
 17465                           ;buttons.c: 83: PB_Timer = 0;
 17466  004C28  0E00               	movlw	0
 17467  004C2A  0100               	movlb	0	; () banked
 17468  004C2C  6F66               	movwf	service_pushbutton@PB_Timer& (0+255),b
 17469  004C2E  0E00               	movlw	0
 17470  004C30  6F67               	movwf	(service_pushbutton@PB_Timer+1)& (0+255),b
 17471  004C32  0E00               	movlw	0
 17472  004C34  6F68               	movwf	(service_pushbutton@PB_Timer+2)& (0+255),b
 17473  004C36  0E00               	movlw	0
 17474  004C38  6F69               	movwf	(service_pushbutton@PB_Timer+3)& (0+255),b
 17475                           
 17476                           ;buttons.c: 84: Release_Timer = 0;
 17477  004C3A  0E00               	movlw	0
 17478  004C3C  0100               	movlb	0	; () banked
 17479  004C3E  6FB6               	movwf	service_pushbutton@Release_Timer& (0+255),b
 17480                           
 17481                           ;buttons.c: 85: }
 17482  004C40  D002               	goto	l11746
 17483  004C42                     l11744:
 17484                           
 17485                           ; BSR set to: 0
 17486                           ;buttons.c: 86: else
 17487                           ;buttons.c: 87: {
 17488                           ;buttons.c: 88: Release_Timer++;
 17489  004C42  0100               	movlb	0	; () banked
 17490  004C44  2BB6               	incf	service_pushbutton@Release_Timer& (0+255),f,b
 17491  004C46                     l11746:
 17492                           
 17493                           ; BSR set to: 0
 17494                           ;buttons.c: 89: }
 17495                           ;buttons.c: 90: bs = Released;
 17496  004C46  0E03               	movlw	3
 17497  004C48                     L11:
 17498  004C48  0100               	movlb	0	; () banked
 17499  004C4A  6FC3               	movwf	service_pushbutton@bs& (0+255),b
 17500                           
 17501                           ; BSR set to: 0
 17502                           ;buttons.c: 91: }
 17503                           ;buttons.c: 93: return bs;
 17504                           
 17505                           ; BSR set to: 0
 17506  004C4C  0100               	movlb	0	; () banked
 17507  004C4E  51C3               	movf	service_pushbutton@bs& (0+255),w,b
 17508  004C50  0012               	return	
 17509  004C52                     __end_of_service_pushbutton:
 17510                           	opt stack 0
 17511                           tblptru	equ	0xFF8
 17512                           tblptrh	equ	0xFF7
 17513                           tblptrl	equ	0xFF6
 17514                           tablat	equ	0xFF5
 17515                           prodh	equ	0xFF4
 17516                           prodl	equ	0xFF3
 17517                           intcon	equ	0xFF2
 17518                           postinc0	equ	0xFEE
 17519                           wreg	equ	0xFE8
 17520                           indf1	equ	0xFE7
 17521                           postdec1	equ	0xFE5
 17522                           fsr1h	equ	0xFE2
 17523                           fsr1l	equ	0xFE1
 17524                           indf2	equ	0xFDF
 17525                           fsr2h	equ	0xFDA
 17526                           fsr2l	equ	0xFD9
 17527                           status	equ	0xFD8
 17528                           
 17529 ;; *************** function _oled_putString *****************
 17530 ;; Defined at:
 17531 ;;		line 303 in file "../Includes/Drivers/SSD1306oLED.c"
 17532 ;; Parameters:    Size  Location     Type
 17533 ;;  string          2   13[BANK0 ] PTR const unsigned char 
 17534 ;;		 -> oled_putUint16@numData(6), oled_putUint8@numData(6), STR_202(12), STR_201(8), 
 17535 ;;		 -> STR_200(9), STR_199(17), STR_198(17), STR_197(17), 
 17536 ;;		 -> STR_196(17), STR_195(17), STR_194(17), STR_177(16), 
 17537 ;;		 -> STR_176(17), STR_175(17), STR_174(4), STR_173(4), 
 17538 ;;		 -> STR_172(4), STR_171(4), STR_170(4), STR_169(4), 
 17539 ;;		 -> STR_168(4), STR_167(4), STR_166(4), STR_165(16), 
 17540 ;;		 -> STR_164(17), STR_163(4), STR_162(4), STR_161(4), 
 17541 ;;		 -> STR_160(4), STR_159(4), STR_158(4), STR_157(4), 
 17542 ;;		 -> STR_156(4), STR_155(4), STR_154(4), STR_153(4), 
 17543 ;;		 -> STR_152(4), STR_151(4), STR_150(4), STR_149(4), 
 17544 ;;		 -> STR_148(16), STR_147(12), STR_146(17), STR_145(16), 
 17545 ;;		 -> STR_144(16), STR_143(16), STR_142(18), STR_140(18), 
 17546 ;;		 -> STR_138(17), STR_137(17), STR_132(16), STR_131(15), 
 17547 ;;		 -> STR_130(16), STR_129(4), STR_128(3), STR_127(3), 
 17548 ;;		 -> STR_126(3), STR_125(3), STR_124(2), STR_123(5), 
 17549 ;;		 -> STR_122(7), STR_121(17), STR_120(17), STR_119(15), 
 17550 ;;		 -> STR_118(15), STR_117(16), STR_116(17), STR_115(16), 
 17551 ;;		 -> STR_114(16), STR_113(15), STR_112(15), STR_111(17), 
 17552 ;;		 -> STR_110(16), STR_109(17), STR_108(17), STR_107(7), 
 17553 ;;		 -> STR_106(10), STR_105(17), STR_104(16), STR_103(16), 
 17554 ;;		 -> STR_102(16), STR_101(16), STR_100(17), STR_99(17), 
 17555 ;;		 -> STR_98(16), STR_96(18), STR_94(17), STR_92(17), 
 17556 ;;		 -> STR_91(17), responseData(32), responsePortNum(3), STR_88(12), 
 17557 ;;		 -> STR_87(13), STR_86(12), STR_83(18), STR_82(13), 
 17558 ;;		 -> STR_81(17), STR_80(16), STR_79(17), STR_78(17), 
 17559 ;;		 -> STR_77(16), STR_76(17), STR_75(17), STR_73(16), 
 17560 ;;		 -> STR_72(13), STR_71(12), STR_70(17), STR_64(7), 
 17561 ;;		 -> STR_63(10), STR_61(11), STR_60(11), STR_55(9), 
 17562 ;;		 -> STR_54(11), STR_50(11), STR_49(10), STR_46(9), 
 17563 ;;		 -> STR_45(11), STR_41(17), STR_39(17), STR_37(17), 
 17564 ;;		 -> STR_36(17), STR_35(17), STR_33(17), STR_32(17), 
 17565 ;;		 -> STR_31(17), STR_28(17), STR_27(17), STR_26(17), 
 17566 ;;		 -> STR_25(17), STR_24(9), STR_23(10), STR_20(9), 
 17567 ;;		 -> STR_19(8), STR_18(8), STR_17(9), STR_16(10), 
 17568 ;;		 -> STR_15(11), STR_14(13), STR_13(13), STR_12(13), 
 17569 ;;		 -> STR_11(12), STR_10(13), STR_9(9), STR_8(12), 
 17570 ;;		 -> STR_7(16), STR_6(2), STR_5(2), STR_4(9), 
 17571 ;;		 -> STR_3(15), STR_2(15), STR_1(15), 
 17572 ;;  station_dot     1   15[BANK0 ] unsigned char 
 17573 ;;  start_page      1   16[BANK0 ] unsigned char 
 17574 ;; Auto vars:     Size  Location     Type
 17575 ;;  index           1   17[BANK0 ] unsigned char 
 17576 ;; Return value:  Size  Location     Type
 17577 ;;		None               void
 17578 ;; Registers used:
 17579 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17580 ;; Tracked objects:
 17581 ;;		On entry : 0/0
 17582 ;;		On exit  : 0/0
 17583 ;;		Unchanged: 0/0
 17584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17585 ;;      Params:         0       4       0       0       0       0       0       0       0
 17586 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17587 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17588 ;;      Totals:         0       5       0       0       0       0       0       0       0
 17589 ;;Total ram usage:        5 bytes
 17590 ;; Hardware stack levels used:    1
 17591 ;; Hardware stack levels required when called:   15
 17592 ;; This function calls:
 17593 ;;		_oled_putChar
 17594 ;; This function is called by:
 17595 ;;		_main
 17596 ;;		_test_oled
 17597 ;;		_test_switch
 17598 ;;		_test_comms
 17599 ;;		_test_leds
 17600 ;;		_test_adc
 17601 ;;		_moteHandler
 17602 ;;		_moteJoiningProcess
 17603 ;;		_moteRunningProcess
 17604 ;;		_USBapp_Handler
 17605 ;;		_oled_putUint8
 17606 ;;		_oled_putUint16
 17607 ;;		_test_rf
 17608 ;;		_ReadAndProcessDHT22
 17609 ;; This function uses a non-reentrant model
 17610 ;;
 17611                           
 17612                           	psect	text53
 17613  004E1A                     __ptext53:
 17614                           	opt stack 0
 17615  004E1A                     _oled_putString:
 17616                           	opt stack 13
 17617                           
 17618                           ;SSD1306oLED.c: 305: uint8_t index;
 17619                           ;SSD1306oLED.c: 306: for(index = station_dot; index < 16; index++)
 17620                           
 17621                           ; BSR set to: 0
 17622                           ;incstack = 0
 17623  004E1A  C0D2  F0D4         	movff	oled_putString@station_dot,oled_putString@index
 17624  004E1E                     l10800:
 17625  004E1E  0E0F               	movlw	15
 17626  004E20  0100               	movlb	0	; () banked
 17627  004E22  65D4               	cpfsgt	oled_putString@index& (0+255),b
 17628  004E24  D001               	goto	l10804
 17629  004E26  0012               	return	
 17630  004E28                     l10804:
 17631                           
 17632                           ; BSR set to: 0
 17633                           ;SSD1306oLED.c: 307: {
 17634                           ;SSD1306oLED.c: 308: if (*string != 0)
 17635  004E28  C0D0  FFF6         	movff	oled_putString@string,tblptrl
 17636  004E2C  C0D1  FFF7         	movff	oled_putString@string+1,tblptrh
 17637  004E30  6AF8               	clrf	tblptru,c
 17638  004E32  0E07               	movlw	(high __ramtop+-1)
 17639  004E34  64F7               	cpfsgt	tblptrh,c
 17640  004E36  D003               	bra	u9247
 17641  004E38  0008               	tblrd		*
 17642  004E3A  50F5               	movf	tablat,w,c
 17643  004E3C  D005               	bra	u9240
 17644  004E3E                     u9247:
 17645  004E3E  CFF6 FFE9          	movff	tblptrl,fsr0l
 17646  004E42  CFF7 FFEA          	movff	tblptrh,fsr0h
 17647  004E46  50EF               	movf	indf0,w,c
 17648  004E48                     u9240:
 17649  004E48  0900               	iorlw	0
 17650  004E4A  B4D8               	btfsc	status,2,c
 17651  004E4C  0012               	return	
 17652                           
 17653                           ;SSD1306oLED.c: 309: {
 17654                           ;SSD1306oLED.c: 310: oled_putChar(*string, index, start_page);
 17655  004E4E  C0D4  F0C6         	movff	oled_putString@index,oled_putChar@station_dot
 17656  004E52  C0D3  F0C7         	movff	oled_putString@start_page,oled_putChar@start_page
 17657  004E56  C0D0  FFF6         	movff	oled_putString@string,tblptrl
 17658  004E5A  C0D1  FFF7         	movff	oled_putString@string+1,tblptrh
 17659  004E5E  6AF8               	clrf	tblptru,c
 17660  004E60  0E07               	movlw	(high __ramtop+-1)
 17661  004E62  64F7               	cpfsgt	tblptrh,c
 17662  004E64  D003               	bra	u9267
 17663  004E66  0008               	tblrd		*
 17664  004E68  50F5               	movf	tablat,w,c
 17665  004E6A  D005               	bra	u9260
 17666  004E6C                     u9267:
 17667  004E6C  CFF6 FFE9          	movff	tblptrl,fsr0l
 17668  004E70  CFF7 FFEA          	movff	tblptrh,fsr0h
 17669  004E74  50EF               	movf	indf0,w,c
 17670  004E76                     u9260:
 17671  004E76  EC90  F022         	call	_oled_putChar
 17672                           
 17673                           ;SSD1306oLED.c: 311: *string++;
 17674  004E7A  0100               	movlb	0	; () banked
 17675  004E7C  4BD0               	infsnz	oled_putString@string& (0+255),f,b
 17676  004E7E  2BD1               	incf	(oled_putString@string+1)& (0+255),f,b
 17677                           
 17678                           ; BSR set to: 0
 17679                           
 17680                           ; BSR set to: 0
 17681                           
 17682                           ; BSR set to: 0
 17683                           ;SSD1306oLED.c: 313: else
 17684                           ;SSD1306oLED.c: 314: {
 17685                           ;SSD1306oLED.c: 315: break;
 17686                           
 17687                           ;SSD1306oLED.c: 312: }
 17688  004E80  0100               	movlb	0	; () banked
 17689  004E82  2BD4               	incf	oled_putString@index& (0+255),f,b
 17690  004E84  D7CC               	goto	l10800
 17691  004E86                     __end_of_oled_putString:
 17692                           	opt stack 0
 17693                           tblptru	equ	0xFF8
 17694                           tblptrh	equ	0xFF7
 17695                           tblptrl	equ	0xFF6
 17696                           tablat	equ	0xFF5
 17697                           prodh	equ	0xFF4
 17698                           prodl	equ	0xFF3
 17699                           intcon	equ	0xFF2
 17700                           indf0	equ	0xFEF
 17701                           postinc0	equ	0xFEE
 17702                           fsr0h	equ	0xFEA
 17703                           fsr0l	equ	0xFE9
 17704                           wreg	equ	0xFE8
 17705                           indf1	equ	0xFE7
 17706                           postdec1	equ	0xFE5
 17707                           fsr1h	equ	0xFE2
 17708                           fsr1l	equ	0xFE1
 17709                           indf2	equ	0xFDF
 17710                           fsr2h	equ	0xFDA
 17711                           fsr2l	equ	0xFD9
 17712                           status	equ	0xFD8
 17713                           
 17714 ;; *************** function _oled_clear *****************
 17715 ;; Defined at:
 17716 ;;		line 320 in file "../Includes/Drivers/SSD1306oLED.c"
 17717 ;; Parameters:    Size  Location     Type
 17718 ;;		None
 17719 ;; Auto vars:     Size  Location     Type
 17720 ;;		None
 17721 ;; Return value:  Size  Location     Type
 17722 ;;		None               void
 17723 ;; Registers used:
 17724 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17725 ;; Tracked objects:
 17726 ;;		On entry : 0/0
 17727 ;;		On exit  : 0/0
 17728 ;;		Unchanged: 0/0
 17729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17730 ;;      Params:         0       0       0       0       0       0       0       0       0
 17731 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17732 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17733 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17734 ;;Total ram usage:        0 bytes
 17735 ;; Hardware stack levels used:    1
 17736 ;; Hardware stack levels required when called:   16
 17737 ;; This function calls:
 17738 ;;		_oled_clearRow
 17739 ;; This function is called by:
 17740 ;;		_main
 17741 ;;		_test_powerup
 17742 ;;		_test_oled
 17743 ;;		_test_switch
 17744 ;;		_test_adc
 17745 ;;		_moteHandler
 17746 ;;		_moteJoiningProcess
 17747 ;;		_moteRunningProcess
 17748 ;;		_USBapp_Handler
 17749 ;;		_oled_init
 17750 ;;		_test_rf
 17751 ;; This function uses a non-reentrant model
 17752 ;;
 17753                           
 17754                           	psect	text54
 17755  00584C                     __ptext54:
 17756                           	opt stack 0
 17757  00584C                     _oled_clear:
 17758                           	opt stack 12
 17759                           
 17760                           ;SSD1306oLED.c: 322: oled_clearRow(0);
 17761                           
 17762                           ;incstack = 0
 17763  00584C  0E00               	movlw	0
 17764  00584E  EC9E  F02B         	call	_oled_clearRow
 17765                           
 17766                           ;SSD1306oLED.c: 323: oled_clearRow(1);
 17767  005852  0E01               	movlw	1
 17768  005854  EC9E  F02B         	call	_oled_clearRow
 17769                           
 17770                           ;SSD1306oLED.c: 324: oled_clearRow(2);
 17771  005858  0E02               	movlw	2
 17772  00585A  EC9E  F02B         	call	_oled_clearRow
 17773                           
 17774                           ;SSD1306oLED.c: 325: oled_clearRow(3);
 17775  00585E  0E03               	movlw	3
 17776  005860  EC9E  F02B         	call	_oled_clearRow
 17777  005864  0012               	return		;funcret
 17778  005866                     __end_of_oled_clear:
 17779                           	opt stack 0
 17780                           tblptru	equ	0xFF8
 17781                           tblptrh	equ	0xFF7
 17782                           tblptrl	equ	0xFF6
 17783                           tablat	equ	0xFF5
 17784                           prodh	equ	0xFF4
 17785                           prodl	equ	0xFF3
 17786                           intcon	equ	0xFF2
 17787                           indf0	equ	0xFEF
 17788                           postinc0	equ	0xFEE
 17789                           fsr0h	equ	0xFEA
 17790                           fsr0l	equ	0xFE9
 17791                           wreg	equ	0xFE8
 17792                           indf1	equ	0xFE7
 17793                           postdec1	equ	0xFE5
 17794                           fsr1h	equ	0xFE2
 17795                           fsr1l	equ	0xFE1
 17796                           indf2	equ	0xFDF
 17797                           fsr2h	equ	0xFDA
 17798                           fsr2l	equ	0xFD9
 17799                           status	equ	0xFD8
 17800                           
 17801 ;; *************** function _oled_clearRow *****************
 17802 ;; Defined at:
 17803 ;;		line 328 in file "../Includes/Drivers/SSD1306oLED.c"
 17804 ;; Parameters:    Size  Location     Type
 17805 ;;  page            1    wreg     unsigned char 
 17806 ;; Auto vars:     Size  Location     Type
 17807 ;;  page            1   13[BANK0 ] unsigned char 
 17808 ;;  index           1   14[BANK0 ] unsigned char 
 17809 ;; Return value:  Size  Location     Type
 17810 ;;		None               void
 17811 ;; Registers used:
 17812 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17813 ;; Tracked objects:
 17814 ;;		On entry : 0/0
 17815 ;;		On exit  : 0/0
 17816 ;;		Unchanged: 0/0
 17817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17818 ;;      Params:         0       0       0       0       0       0       0       0       0
 17819 ;;      Locals:         0       2       0       0       0       0       0       0       0
 17820 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17821 ;;      Totals:         0       2       0       0       0       0       0       0       0
 17822 ;;Total ram usage:        2 bytes
 17823 ;; Hardware stack levels used:    1
 17824 ;; Hardware stack levels required when called:   15
 17825 ;; This function calls:
 17826 ;;		_oled_putChar
 17827 ;; This function is called by:
 17828 ;;		_oled_clear
 17829 ;; This function uses a non-reentrant model
 17830 ;;
 17831                           
 17832                           	psect	text55
 17833  00573C                     __ptext55:
 17834                           	opt stack 0
 17835  00573C                     _oled_clearRow:
 17836                           	opt stack 12
 17837                           
 17838                           ;incstack = 0
 17839                           ;oled_clearRow@page stored from wreg
 17840  00573C  0100               	movlb	0	; () banked
 17841  00573E  6FD0               	movwf	oled_clearRow@page& (0+255),b
 17842                           
 17843                           ;SSD1306oLED.c: 330: uint8_t index;
 17844                           ;SSD1306oLED.c: 332: for(index = 0; index < 16; index++)
 17845  005740  0E00               	movlw	0
 17846  005742  0100               	movlb	0	; () banked
 17847  005744  6FD1               	movwf	oled_clearRow@index& (0+255),b
 17848  005746                     l10638:
 17849                           
 17850                           ; BSR set to: 0
 17851  005746  0E0F               	movlw	15
 17852  005748  0100               	movlb	0	; () banked
 17853  00574A  65D1               	cpfsgt	oled_clearRow@index& (0+255),b
 17854  00574C  D001               	goto	l10642
 17855  00574E  0012               	return	
 17856  005750                     l10642:
 17857                           
 17858                           ; BSR set to: 0
 17859                           ;SSD1306oLED.c: 333: {
 17860                           ;SSD1306oLED.c: 334: oled_putChar( ' ', index, page);
 17861  005750  C0D1  F0C6         	movff	oled_clearRow@index,oled_putChar@station_dot
 17862  005754  C0D0  F0C7         	movff	oled_clearRow@page,oled_putChar@start_page
 17863  005758  0E20               	movlw	32
 17864  00575A  EC90  F022         	call	_oled_putChar
 17865  00575E  0100               	movlb	0	; () banked
 17866  005760  2BD1               	incf	oled_clearRow@index& (0+255),f,b
 17867  005762  D7F1               	goto	l10638
 17868  005764                     __end_of_oled_clearRow:
 17869                           	opt stack 0
 17870                           tblptru	equ	0xFF8
 17871                           tblptrh	equ	0xFF7
 17872                           tblptrl	equ	0xFF6
 17873                           tablat	equ	0xFF5
 17874                           prodh	equ	0xFF4
 17875                           prodl	equ	0xFF3
 17876                           intcon	equ	0xFF2
 17877                           indf0	equ	0xFEF
 17878                           postinc0	equ	0xFEE
 17879                           fsr0h	equ	0xFEA
 17880                           fsr0l	equ	0xFE9
 17881                           wreg	equ	0xFE8
 17882                           indf1	equ	0xFE7
 17883                           postdec1	equ	0xFE5
 17884                           fsr1h	equ	0xFE2
 17885                           fsr1l	equ	0xFE1
 17886                           indf2	equ	0xFDF
 17887                           fsr2h	equ	0xFDA
 17888                           fsr2l	equ	0xFD9
 17889                           status	equ	0xFD8
 17890                           
 17891 ;; *************** function _oled_putChar *****************
 17892 ;; Defined at:
 17893 ;;		line 288 in file "../Includes/Drivers/SSD1306oLED.c"
 17894 ;; Parameters:    Size  Location     Type
 17895 ;;  k               1    wreg     unsigned char 
 17896 ;;  station_dot     1    3[BANK0 ] unsigned char 
 17897 ;;  start_page      1    4[BANK0 ] unsigned char 
 17898 ;; Auto vars:     Size  Location     Type
 17899 ;;  k               1   11[BANK0 ] unsigned char 
 17900 ;;  index           1   12[BANK0 ] unsigned char 
 17901 ;; Return value:  Size  Location     Type
 17902 ;;		None               void
 17903 ;; Registers used:
 17904 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17905 ;; Tracked objects:
 17906 ;;		On entry : 0/0
 17907 ;;		On exit  : 0/0
 17908 ;;		Unchanged: 0/0
 17909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17910 ;;      Params:         0       2       0       0       0       0       0       0       0
 17911 ;;      Locals:         0       2       0       0       0       0       0       0       0
 17912 ;;      Temps:          0       6       0       0       0       0       0       0       0
 17913 ;;      Totals:         0      10       0       0       0       0       0       0       0
 17914 ;;Total ram usage:       10 bytes
 17915 ;; Hardware stack levels used:    1
 17916 ;; Hardware stack levels required when called:   14
 17917 ;; This function calls:
 17918 ;;		_Set_Column_Address
 17919 ;;		_Set_Page_Address
 17920 ;;		_oled_writeData
 17921 ;; This function is called by:
 17922 ;;		_test_adc
 17923 ;;		_oled_putString
 17924 ;;		_oled_clearRow
 17925 ;; This function uses a non-reentrant model
 17926 ;;
 17927                           
 17928                           	psect	text56
 17929  004520                     __ptext56:
 17930                           	opt stack 0
 17931  004520                     _oled_putChar:
 17932                           	opt stack 13
 17933                           
 17934                           ; BSR set to: 0
 17935                           ;incstack = 0
 17936                           ;oled_putChar@k stored from wreg
 17937  004520  0100               	movlb	0	; () banked
 17938  004522  6FCE               	movwf	oled_putChar@k& (0+255),b
 17939                           
 17940                           ;SSD1306oLED.c: 290: uint8_t index;
 17941                           ;SSD1306oLED.c: 292: Set_Page_Address(start_page);
 17942  004524  0100               	movlb	0	; () banked
 17943  004526  51C7               	movf	oled_putChar@start_page& (0+255),w,b
 17944  004528  EC18  F02C         	call	_Set_Page_Address
 17945                           
 17946                           ;SSD1306oLED.c: 293: Set_Column_Address(0x00 + station_dot * 8);
 17947  00452C  0100               	movlb	0	; () banked
 17948  00452E  51C6               	movf	oled_putChar@station_dot& (0+255),w,b
 17949  004530  0D08               	mullw	8
 17950  004532  50F3               	movf	prodl,w,c
 17951  004534  ECFA  F02B         	call	_Set_Column_Address
 17952                           
 17953                           ;SSD1306oLED.c: 295: LATBbits.LATB4 = 0;
 17954  004538  988A               	bcf	3978,4,c	;volatile
 17955                           
 17956                           ;SSD1306oLED.c: 296: for(index = 0; index < 8; index++)
 17957  00453A  0E00               	movlw	0
 17958  00453C  0100               	movlb	0	; () banked
 17959  00453E  6FCF               	movwf	oled_putChar@index& (0+255),b
 17960  004540                     l10586:
 17961                           
 17962                           ; BSR set to: 0
 17963  004540  0E07               	movlw	7
 17964  004542  0100               	movlb	0	; () banked
 17965  004544  65CF               	cpfsgt	oled_putChar@index& (0+255),b
 17966  004546  D001               	goto	l10590
 17967  004548  D03F               	goto	l1027
 17968  00454A                     l10590:
 17969                           
 17970                           ; BSR set to: 0
 17971                           ;SSD1306oLED.c: 297: {
 17972                           ;SSD1306oLED.c: 298: oled_writeData(*(selectedFont + 8 * (k - 0x20) + index));
 17973  00454A  0100               	movlb	0	; () banked
 17974  00454C  51CF               	movf	oled_putChar@index& (0+255),w,b
 17975  00454E  0D01               	mullw	1
 17976  004550  0E00               	movlw	0
 17977  004552  0100               	movlb	0	; () banked
 17978  004554  6FC8               	movwf	??_oled_putChar& (0+255),b
 17979  004556  0EFF               	movlw	255
 17980  004558  0100               	movlb	0	; () banked
 17981  00455A  6FC9               	movwf	(??_oled_putChar+1)& (0+255),b
 17982  00455C  0100               	movlb	0	; () banked
 17983  00455E  51CE               	movf	oled_putChar@k& (0+255),w,b
 17984  004560  0100               	movlb	0	; () banked
 17985  004562  6FCA               	movwf	(??_oled_putChar+2)& (0+255),b
 17986  004564  6BCB               	clrf	(??_oled_putChar+3)& (0+255),b
 17987  004566  0100               	movlb	0	; () banked
 17988  004568  90D8               	bcf	status,0,c
 17989  00456A  37CA               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 17990  00456C  37CB               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 17991  00456E  0100               	movlb	0	; () banked
 17992  004570  90D8               	bcf	status,0,c
 17993  004572  37CA               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 17994  004574  37CB               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 17995  004576  0100               	movlb	0	; () banked
 17996  004578  90D8               	bcf	status,0,c
 17997  00457A  37CA               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 17998  00457C  37CB               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 17999  00457E  0100               	movlb	0	; () banked
 18000  004580  51C8               	movf	??_oled_putChar& (0+255),w,b
 18001  004582  0100               	movlb	0	; () banked
 18002  004584  27CA               	addwf	(??_oled_putChar+2)& (0+255),f,b
 18003  004586  0100               	movlb	0	; () banked
 18004  004588  51C9               	movf	(??_oled_putChar+1)& (0+255),w,b
 18005  00458A  0100               	movlb	0	; () banked
 18006  00458C  23CB               	addwfc	(??_oled_putChar+3)& (0+255),f,b
 18007  00458E  C0F0  F0CC         	movff	_selectedFont,??_oled_putChar+4
 18008  004592  C0F1  F0CD         	movff	_selectedFont+1,??_oled_putChar+5
 18009  004596  0100               	movlb	0	; () banked
 18010  004598  51CA               	movf	(??_oled_putChar+2)& (0+255),w,b
 18011  00459A  0100               	movlb	0	; () banked
 18012  00459C  27CC               	addwf	(??_oled_putChar+4)& (0+255),f,b
 18013  00459E  0100               	movlb	0	; () banked
 18014  0045A0  51CB               	movf	(??_oled_putChar+3)& (0+255),w,b
 18015  0045A2  0100               	movlb	0	; () banked
 18016  0045A4  23CD               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 18017  0045A6  50F3               	movf	prodl,w,c
 18018  0045A8  0100               	movlb	0	; () banked
 18019  0045AA  27CC               	addwf	(??_oled_putChar+4)& (0+255),f,b
 18020  0045AC  50F4               	movf	prodh,w,c
 18021  0045AE  0100               	movlb	0	; () banked
 18022  0045B0  23CD               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 18023  0045B2  C0CC  FFF6         	movff	??_oled_putChar+4,tblptrl
 18024  0045B6  C0CD  FFF7         	movff	??_oled_putChar+5,tblptrh
 18025  0045BA                     	if	0	;tblptru may be non-zero
 18026  0045BA                     	endif
 18027  0045BA                     	if	0	;tblptru may be non-zero
 18028  0045BA                     	endif
 18029  0045BA  0008               	tblrd		*
 18030  0045BC  50F5               	movf	tablat,w,c
 18031  0045BE  EC9A  F02C         	call	_oled_writeData
 18032  0045C2  0100               	movlb	0	; () banked
 18033  0045C4  2BCF               	incf	oled_putChar@index& (0+255),f,b
 18034  0045C6  D7BC               	goto	l10586
 18035  0045C8                     l1027:
 18036                           
 18037                           ; BSR set to: 0
 18038                           ;SSD1306oLED.c: 299: }
 18039                           ;SSD1306oLED.c: 300: LATBbits.LATB4 = 1;
 18040  0045C8  888A               	bsf	3978,4,c	;volatile
 18041                           
 18042                           ; BSR set to: 0
 18043  0045CA  0012               	return		;funcret
 18044  0045CC                     __end_of_oled_putChar:
 18045                           	opt stack 0
 18046                           tblptru	equ	0xFF8
 18047                           tblptrh	equ	0xFF7
 18048                           tblptrl	equ	0xFF6
 18049                           tablat	equ	0xFF5
 18050                           prodh	equ	0xFF4
 18051                           prodl	equ	0xFF3
 18052                           intcon	equ	0xFF2
 18053                           indf0	equ	0xFEF
 18054                           postinc0	equ	0xFEE
 18055                           fsr0h	equ	0xFEA
 18056                           fsr0l	equ	0xFE9
 18057                           wreg	equ	0xFE8
 18058                           indf1	equ	0xFE7
 18059                           postdec1	equ	0xFE5
 18060                           fsr1h	equ	0xFE2
 18061                           fsr1l	equ	0xFE1
 18062                           indf2	equ	0xFDF
 18063                           fsr2h	equ	0xFDA
 18064                           fsr2l	equ	0xFD9
 18065                           status	equ	0xFD8
 18066                           
 18067 ;; *************** function _oled_writeData *****************
 18068 ;; Defined at:
 18069 ;;		line 436 in file "../Includes/Drivers/SSD1306oLED.c"
 18070 ;; Parameters:    Size  Location     Type
 18071 ;;  data            1    wreg     unsigned char 
 18072 ;; Auto vars:     Size  Location     Type
 18073 ;;  data            1    1[BANK0 ] unsigned char 
 18074 ;; Return value:  Size  Location     Type
 18075 ;;		None               void
 18076 ;; Registers used:
 18077 ;;		wreg, status,2, cstack
 18078 ;; Tracked objects:
 18079 ;;		On entry : 0/0
 18080 ;;		On exit  : 0/0
 18081 ;;		Unchanged: 0/0
 18082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18083 ;;      Params:         0       0       0       0       0       0       0       0       0
 18084 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18085 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18086 ;;      Totals:         0       1       0       0       0       0       0       0       0
 18087 ;;Total ram usage:        1 bytes
 18088 ;; Hardware stack levels used:    1
 18089 ;; Hardware stack levels required when called:   12
 18090 ;; This function calls:
 18091 ;;		_SPI_Exchange8bit
 18092 ;; This function is called by:
 18093 ;;		_oled_putChar
 18094 ;; This function uses a non-reentrant model
 18095 ;;
 18096                           
 18097                           	psect	text57
 18098  005934                     __ptext57:
 18099                           	opt stack 0
 18100  005934                     _oled_writeData:
 18101                           	opt stack 14
 18102                           
 18103                           ; BSR set to: 0
 18104                           ;incstack = 0
 18105                           ;oled_writeData@data stored from wreg
 18106  005934  0100               	movlb	0	; () banked
 18107  005936  6FC4               	movwf	oled_writeData@data& (0+255),b
 18108                           
 18109                           ;SSD1306oLED.c: 438: LATBbits.LATB5 = 1;
 18110  005938  8A8A               	bsf	3978,5,c	;volatile
 18111                           
 18112                           ;SSD1306oLED.c: 439: SPI_Exchange8bit(data);
 18113  00593A  0100               	movlb	0	; () banked
 18114  00593C  51C4               	movf	oled_writeData@data& (0+255),w,b
 18115  00593E  EC7F  F02C         	call	_SPI_Exchange8bit
 18116  005942  0012               	return		;funcret
 18117  005944                     __end_of_oled_writeData:
 18118                           	opt stack 0
 18119                           tblptru	equ	0xFF8
 18120                           tblptrh	equ	0xFF7
 18121                           tblptrl	equ	0xFF6
 18122                           tablat	equ	0xFF5
 18123                           prodh	equ	0xFF4
 18124                           prodl	equ	0xFF3
 18125                           intcon	equ	0xFF2
 18126                           indf0	equ	0xFEF
 18127                           postinc0	equ	0xFEE
 18128                           fsr0h	equ	0xFEA
 18129                           fsr0l	equ	0xFE9
 18130                           wreg	equ	0xFE8
 18131                           indf1	equ	0xFE7
 18132                           postdec1	equ	0xFE5
 18133                           fsr1h	equ	0xFE2
 18134                           fsr1l	equ	0xFE1
 18135                           indf2	equ	0xFDF
 18136                           fsr2h	equ	0xFDA
 18137                           fsr2l	equ	0xFD9
 18138                           status	equ	0xFD8
 18139                           
 18140 ;; *************** function _Set_Page_Address *****************
 18141 ;; Defined at:
 18142 ;;		line 231 in file "../Includes/Drivers/SSD1306oLED.c"
 18143 ;; Parameters:    Size  Location     Type
 18144 ;;  address         1    wreg     unsigned char 
 18145 ;; Auto vars:     Size  Location     Type
 18146 ;;  address         1    2[BANK0 ] unsigned char 
 18147 ;; Return value:  Size  Location     Type
 18148 ;;		None               void
 18149 ;; Registers used:
 18150 ;;		wreg, status,2, status,0, cstack
 18151 ;; Tracked objects:
 18152 ;;		On entry : 0/0
 18153 ;;		On exit  : 0/0
 18154 ;;		Unchanged: 0/0
 18155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18156 ;;      Params:         0       0       0       0       0       0       0       0       0
 18157 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18158 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18159 ;;      Totals:         0       1       0       0       0       0       0       0       0
 18160 ;;Total ram usage:        1 bytes
 18161 ;; Hardware stack levels used:    1
 18162 ;; Hardware stack levels required when called:   13
 18163 ;; This function calls:
 18164 ;;		_oled_writeCommand
 18165 ;; This function is called by:
 18166 ;;		_oled_putChar
 18167 ;; This function uses a non-reentrant model
 18168 ;;
 18169                           
 18170                           	psect	text58
 18171  005830                     __ptext58:
 18172                           	opt stack 0
 18173  005830                     _Set_Page_Address:
 18174                           	opt stack 13
 18175                           
 18176                           ;incstack = 0
 18177                           ;Set_Page_Address@address stored from wreg
 18178  005830  0100               	movlb	0	; () banked
 18179  005832  6FC5               	movwf	Set_Page_Address@address& (0+255),b
 18180                           
 18181                           ;SSD1306oLED.c: 233: address = 0xB0 | address;
 18182  005834  0100               	movlb	0	; () banked
 18183  005836  51C5               	movf	Set_Page_Address@address& (0+255),w,b
 18184  005838  09B0               	iorlw	176
 18185  00583A  0100               	movlb	0	; () banked
 18186  00583C  6FC5               	movwf	Set_Page_Address@address& (0+255),b
 18187                           
 18188                           ; BSR set to: 0
 18189                           ;SSD1306oLED.c: 234: LATBbits.LATB4 = 0;
 18190  00583E  988A               	bcf	3978,4,c	;volatile
 18191                           
 18192                           ; BSR set to: 0
 18193                           ;SSD1306oLED.c: 235: oled_writeCommand(address);
 18194  005840  0100               	movlb	0	; () banked
 18195  005842  51C5               	movf	Set_Page_Address@address& (0+255),w,b
 18196  005844  ECA2  F02C         	call	_oled_writeCommand
 18197                           
 18198                           ;SSD1306oLED.c: 236: LATBbits.LATB4 = 1;
 18199  005848  888A               	bsf	3978,4,c	;volatile
 18200  00584A  0012               	return		;funcret
 18201  00584C                     __end_of_Set_Page_Address:
 18202                           	opt stack 0
 18203                           tblptru	equ	0xFF8
 18204                           tblptrh	equ	0xFF7
 18205                           tblptrl	equ	0xFF6
 18206                           tablat	equ	0xFF5
 18207                           prodh	equ	0xFF4
 18208                           prodl	equ	0xFF3
 18209                           intcon	equ	0xFF2
 18210                           indf0	equ	0xFEF
 18211                           postinc0	equ	0xFEE
 18212                           fsr0h	equ	0xFEA
 18213                           fsr0l	equ	0xFE9
 18214                           wreg	equ	0xFE8
 18215                           indf1	equ	0xFE7
 18216                           postdec1	equ	0xFE5
 18217                           fsr1h	equ	0xFE2
 18218                           fsr1l	equ	0xFE1
 18219                           indf2	equ	0xFDF
 18220                           fsr2h	equ	0xFDA
 18221                           fsr2l	equ	0xFD9
 18222                           status	equ	0xFD8
 18223                           
 18224 ;; *************** function _Set_Column_Address *****************
 18225 ;; Defined at:
 18226 ;;		line 240 in file "../Includes/Drivers/SSD1306oLED.c"
 18227 ;; Parameters:    Size  Location     Type
 18228 ;;  address         1    wreg     unsigned char 
 18229 ;; Auto vars:     Size  Location     Type
 18230 ;;  address         1    2[BANK0 ] unsigned char 
 18231 ;; Return value:  Size  Location     Type
 18232 ;;		None               void
 18233 ;; Registers used:
 18234 ;;		wreg, status,2, status,0, cstack
 18235 ;; Tracked objects:
 18236 ;;		On entry : 0/0
 18237 ;;		On exit  : 0/0
 18238 ;;		Unchanged: 0/0
 18239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18240 ;;      Params:         0       0       0       0       0       0       0       0       0
 18241 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18242 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18243 ;;      Totals:         0       1       0       0       0       0       0       0       0
 18244 ;;Total ram usage:        1 bytes
 18245 ;; Hardware stack levels used:    1
 18246 ;; Hardware stack levels required when called:   13
 18247 ;; This function calls:
 18248 ;;		_oled_writeCommand
 18249 ;; This function is called by:
 18250 ;;		_oled_putChar
 18251 ;; This function uses a non-reentrant model
 18252 ;;
 18253                           
 18254                           	psect	text59
 18255  0057F4                     __ptext59:
 18256                           	opt stack 0
 18257  0057F4                     _Set_Column_Address:
 18258                           	opt stack 13
 18259                           
 18260                           ;incstack = 0
 18261                           ;Set_Column_Address@address stored from wreg
 18262  0057F4  0100               	movlb	0	; () banked
 18263  0057F6  6FC5               	movwf	Set_Column_Address@address& (0+255),b
 18264                           
 18265                           ;SSD1306oLED.c: 242: LATBbits.LATB4 = 0;
 18266  0057F8  988A               	bcf	3978,4,c	;volatile
 18267                           
 18268                           ;SSD1306oLED.c: 243: oled_writeCommand(0x10 | (address >> 4) );
 18269  0057FA  0100               	movlb	0	; () banked
 18270  0057FC  39C5               	swapf	Set_Column_Address@address& (0+255),w,b
 18271  0057FE  0B0F               	andlw	15
 18272  005800  0910               	iorlw	16
 18273  005802  ECA2  F02C         	call	_oled_writeCommand
 18274                           
 18275                           ;SSD1306oLED.c: 244: oled_writeCommand(0x0F & address);
 18276  005806  0100               	movlb	0	; () banked
 18277  005808  51C5               	movf	Set_Column_Address@address& (0+255),w,b
 18278  00580A  0B0F               	andlw	15
 18279  00580C  ECA2  F02C         	call	_oled_writeCommand
 18280                           
 18281                           ;SSD1306oLED.c: 245: LATBbits.LATB4 = 1;
 18282  005810  888A               	bsf	3978,4,c	;volatile
 18283  005812  0012               	return		;funcret
 18284  005814                     __end_of_Set_Column_Address:
 18285                           	opt stack 0
 18286                           tblptru	equ	0xFF8
 18287                           tblptrh	equ	0xFF7
 18288                           tblptrl	equ	0xFF6
 18289                           tablat	equ	0xFF5
 18290                           prodh	equ	0xFF4
 18291                           prodl	equ	0xFF3
 18292                           intcon	equ	0xFF2
 18293                           indf0	equ	0xFEF
 18294                           postinc0	equ	0xFEE
 18295                           fsr0h	equ	0xFEA
 18296                           fsr0l	equ	0xFE9
 18297                           wreg	equ	0xFE8
 18298                           indf1	equ	0xFE7
 18299                           postdec1	equ	0xFE5
 18300                           fsr1h	equ	0xFE2
 18301                           fsr1l	equ	0xFE1
 18302                           indf2	equ	0xFDF
 18303                           fsr2h	equ	0xFDA
 18304                           fsr2l	equ	0xFD9
 18305                           status	equ	0xFD8
 18306                           
 18307 ;; *************** function _oled_writeCommand *****************
 18308 ;; Defined at:
 18309 ;;		line 430 in file "../Includes/Drivers/SSD1306oLED.c"
 18310 ;; Parameters:    Size  Location     Type
 18311 ;;  command         1    wreg     unsigned char 
 18312 ;; Auto vars:     Size  Location     Type
 18313 ;;  command         1    1[BANK0 ] unsigned char 
 18314 ;; Return value:  Size  Location     Type
 18315 ;;		None               void
 18316 ;; Registers used:
 18317 ;;		wreg, status,2, cstack
 18318 ;; Tracked objects:
 18319 ;;		On entry : 0/0
 18320 ;;		On exit  : 0/0
 18321 ;;		Unchanged: 0/0
 18322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18323 ;;      Params:         0       0       0       0       0       0       0       0       0
 18324 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18325 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18326 ;;      Totals:         0       1       0       0       0       0       0       0       0
 18327 ;;Total ram usage:        1 bytes
 18328 ;; Hardware stack levels used:    1
 18329 ;; Hardware stack levels required when called:   12
 18330 ;; This function calls:
 18331 ;;		_SPI_Exchange8bit
 18332 ;; This function is called by:
 18333 ;;		_Set_Page_Address
 18334 ;;		_Set_Column_Address
 18335 ;;		_oled_devInit
 18336 ;;		_oled_setDisplay
 18337 ;;		_oled_displayOff
 18338 ;;		_oled_setContrastControlRegister
 18339 ;; This function uses a non-reentrant model
 18340 ;;
 18341                           
 18342                           	psect	text60
 18343  005944                     __ptext60:
 18344                           	opt stack 0
 18345  005944                     _oled_writeCommand:
 18346                           	opt stack 13
 18347                           
 18348                           ;incstack = 0
 18349                           ;oled_writeCommand@command stored from wreg
 18350  005944  0100               	movlb	0	; () banked
 18351  005946  6FC4               	movwf	oled_writeCommand@command& (0+255),b
 18352                           
 18353                           ;SSD1306oLED.c: 432: LATBbits.LATB5 = 0;
 18354  005948  9A8A               	bcf	3978,5,c	;volatile
 18355                           
 18356                           ;SSD1306oLED.c: 433: SPI_Exchange8bit(command);
 18357  00594A  0100               	movlb	0	; () banked
 18358  00594C  51C4               	movf	oled_writeCommand@command& (0+255),w,b
 18359  00594E  EC7F  F02C         	call	_SPI_Exchange8bit
 18360  005952  0012               	return		;funcret
 18361  005954                     __end_of_oled_writeCommand:
 18362                           	opt stack 0
 18363                           tblptru	equ	0xFF8
 18364                           tblptrh	equ	0xFF7
 18365                           tblptrl	equ	0xFF6
 18366                           tablat	equ	0xFF5
 18367                           prodh	equ	0xFF4
 18368                           prodl	equ	0xFF3
 18369                           intcon	equ	0xFF2
 18370                           indf0	equ	0xFEF
 18371                           postinc0	equ	0xFEE
 18372                           fsr0h	equ	0xFEA
 18373                           fsr0l	equ	0xFE9
 18374                           wreg	equ	0xFE8
 18375                           indf1	equ	0xFE7
 18376                           postdec1	equ	0xFE5
 18377                           fsr1h	equ	0xFE2
 18378                           fsr1l	equ	0xFE1
 18379                           indf2	equ	0xFDF
 18380                           fsr2h	equ	0xFDA
 18381                           fsr2l	equ	0xFD9
 18382                           status	equ	0xFD8
 18383                           
 18384 ;; *************** function _SPI_Exchange8bit *****************
 18385 ;; Defined at:
 18386 ;;		line 81 in file "../Includes/MccGenerated/spi.c"
 18387 ;; Parameters:    Size  Location     Type
 18388 ;;  data            1    wreg     unsigned char 
 18389 ;; Auto vars:     Size  Location     Type
 18390 ;;  data            1    0[BANK0 ] unsigned char 
 18391 ;; Return value:  Size  Location     Type
 18392 ;;                  1    wreg      unsigned char 
 18393 ;; Registers used:
 18394 ;;		wreg, status,2
 18395 ;; Tracked objects:
 18396 ;;		On entry : 0/0
 18397 ;;		On exit  : 0/0
 18398 ;;		Unchanged: 0/0
 18399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18400 ;;      Params:         0       0       0       0       0       0       0       0       0
 18401 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18402 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18403 ;;      Totals:         0       1       0       0       0       0       0       0       0
 18404 ;;Total ram usage:        1 bytes
 18405 ;; Hardware stack levels used:    1
 18406 ;; Hardware stack levels required when called:   11
 18407 ;; This function calls:
 18408 ;;		Nothing
 18409 ;; This function is called by:
 18410 ;;		_oled_writeCommand
 18411 ;;		_oled_writeData
 18412 ;;		_SPI_Exchange8bitBuffer
 18413 ;; This function uses a non-reentrant model
 18414 ;;
 18415                           
 18416                           	psect	text61
 18417  0058FE                     __ptext61:
 18418                           	opt stack 0
 18419  0058FE                     _SPI_Exchange8bit:
 18420                           	opt stack 14
 18421                           
 18422                           ;incstack = 0
 18423                           ;SPI_Exchange8bit@data stored from wreg
 18424  0058FE  0100               	movlb	0	; () banked
 18425  005900  6FC3               	movwf	SPI_Exchange8bit@data& (0+255),b
 18426                           
 18427                           ;spi.c: 84: SSP1CON1bits.WCOL = 0;
 18428  005902  9EC6               	bcf	4038,7,c	;volatile
 18429                           
 18430                           ;spi.c: 86: SSPBUF = data;
 18431  005904  C0C3  FFC9         	movff	SPI_Exchange8bit@data,4041	;volatile
 18432  005908                     l1265:
 18433  005908  A0C7               	btfss	4039,0,c	;volatile
 18434  00590A  D7FE               	goto	l1265
 18435                           
 18436                           ;spi.c: 90: }
 18437                           ;spi.c: 92: return (SSPBUF);
 18438  00590C  50C9               	movf	4041,w,c	;volatile
 18439  00590E  0012               	return		;funcret
 18440  005910                     __end_of_SPI_Exchange8bit:
 18441                           	opt stack 0
 18442                           tblptru	equ	0xFF8
 18443                           tblptrh	equ	0xFF7
 18444                           tblptrl	equ	0xFF6
 18445                           tablat	equ	0xFF5
 18446                           prodh	equ	0xFF4
 18447                           prodl	equ	0xFF3
 18448                           intcon	equ	0xFF2
 18449                           indf0	equ	0xFEF
 18450                           postinc0	equ	0xFEE
 18451                           fsr0h	equ	0xFEA
 18452                           fsr0l	equ	0xFE9
 18453                           wreg	equ	0xFE8
 18454                           indf1	equ	0xFE7
 18455                           postdec1	equ	0xFE5
 18456                           fsr1h	equ	0xFE2
 18457                           fsr1l	equ	0xFE1
 18458                           indf2	equ	0xFDF
 18459                           fsr2h	equ	0xFDA
 18460                           fsr2l	equ	0xFD9
 18461                           status	equ	0xFD8
 18462                           
 18463 ;; *************** function _USBapp_DeviceCdcEmulatorHandler *****************
 18464 ;; Defined at:
 18465 ;;		line 145 in file "../Includes/Board/USBapp.c"
 18466 ;; Parameters:    Size  Location     Type
 18467 ;;		None
 18468 ;; Auto vars:     Size  Location     Type
 18469 ;;		None
 18470 ;; Return value:  Size  Location     Type
 18471 ;;		None               void
 18472 ;; Registers used:
 18473 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18474 ;; Tracked objects:
 18475 ;;		On entry : 0/0
 18476 ;;		On exit  : 0/0
 18477 ;;		Unchanged: 0/0
 18478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18479 ;;      Params:         0       0       0       0       0       0       0       0       0
 18480 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18481 ;;      Temps:          0       1       0       0       0       0       0       0       0
 18482 ;;      Totals:         0       1       0       0       0       0       0       0       0
 18483 ;;Total ram usage:        1 bytes
 18484 ;; Hardware stack levels used:    1
 18485 ;; Hardware stack levels required when called:   13
 18486 ;; This function calls:
 18487 ;;		_CDCTxService
 18488 ;;		_EUSART_Read
 18489 ;;		_EUSART_Write
 18490 ;;		_MOTEapp_setResponseReady
 18491 ;;		_USBapp_getrxByteFlag
 18492 ;;		_getsUSBUSART
 18493 ;;		_putUSBUSART
 18494 ;; This function is called by:
 18495 ;;		_USBapp_Handler
 18496 ;; This function uses a non-reentrant model
 18497 ;;
 18498                           
 18499                           	psect	text62
 18500  003752                     __ptext62:
 18501                           	opt stack 0
 18502  003752                     _USBapp_DeviceCdcEmulatorHandler:
 18503                           	opt stack 16
 18504                           
 18505                           ;USBapp.c: 148: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 18506                           
 18507                           ;incstack = 0
 18508  003752  0E1F               	movlw	31
 18509  003754  0100               	movlb	0	; () banked
 18510  003756  6597               	cpfsgt	_USBDeviceState& (0+255),b	;volatile
 18511  003758  0012               	return	
 18512                           
 18513                           ; BSR set to: 0
 18514  00375A  B260               	btfsc	3936,1,c	;volatile
 18515  00375C  0012               	return	
 18516                           
 18517                           ; BSR set to: 0
 18518                           ;USBapp.c: 151: if (RS232_Out_Data_Rdy == 0)
 18519                           
 18520                           ; BSR set to: 0
 18521                           
 18522                           ; BSR set to: 0
 18523                           ;USBapp.c: 149: return;
 18524  00375E  501F               	movf	_RS232_Out_Data_Rdy,w,c
 18525  003760  A4D8               	btfss	status,2,c
 18526  003762  D013               	goto	l892
 18527                           
 18528                           ; BSR set to: 0
 18529                           ;USBapp.c: 152: {
 18530                           ;USBapp.c: 153: LastRS232Out = getsUSBUSART(USB_Buffer,64);
 18531  003764  0E24               	movlw	low _USB_Buffer
 18532  003766  0100               	movlb	0	; () banked
 18533  003768  6FCA               	movwf	getsUSBUSART@buffer& (0+255),b
 18534  00376A  0E01               	movlw	high _USB_Buffer
 18535  00376C  0100               	movlb	0	; () banked
 18536  00376E  6FCB               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 18537  003770  0E40               	movlw	64
 18538  003772  0100               	movlb	0	; () banked
 18539  003774  6FCC               	movwf	getsUSBUSART@len& (0+255),b
 18540  003776  EC34  F01B         	call	_getsUSBUSART	;wreg free
 18541  00377A  6E1D               	movwf	_LastRS232Out,c
 18542                           
 18543                           ;USBapp.c: 154: if(LastRS232Out > 0)
 18544  00377C  501D               	movf	_LastRS232Out,w,c
 18545  00377E  B4D8               	btfsc	status,2,c
 18546  003780  D004               	goto	l892
 18547                           
 18548                           ;USBapp.c: 155: {
 18549                           ;USBapp.c: 156: RS232_Out_Data_Rdy = 1;
 18550  003782  0E01               	movlw	1
 18551  003784  6E1F               	movwf	_RS232_Out_Data_Rdy,c
 18552                           
 18553                           ;USBapp.c: 157: RS232cp = 0;
 18554  003786  0E00               	movlw	0
 18555  003788  6E20               	movwf	_RS232cp,c
 18556  00378A                     l892:
 18557                           
 18558                           ;USBapp.c: 158: }
 18559                           ;USBapp.c: 159: }
 18560                           ;USBapp.c: 162: if(RS232_Out_Data_Rdy && TXSTAbits.TRMT)
 18561  00378A  501F               	movf	_RS232_Out_Data_Rdy,w,c
 18562  00378C  A4D8               	btfss	status,2,c
 18563  00378E  A2AC               	btfss	4012,1,c	;volatile
 18564  003790  D012               	goto	l894
 18565                           
 18566                           ;USBapp.c: 163: {
 18567                           ;USBapp.c: 165: EUSART_Write(USB_Buffer[RS232cp]);
 18568  003792  5020               	movf	_RS232cp,w,c
 18569  003794  0D01               	mullw	1
 18570  003796  0E24               	movlw	low _USB_Buffer
 18571  003798  24F3               	addwf	prodl,w,c
 18572  00379A  6ED9               	movwf	fsr2l,c
 18573  00379C  0E01               	movlw	high _USB_Buffer
 18574  00379E  20F4               	addwfc	prodh,w,c
 18575  0037A0  6EDA               	movwf	fsr2h,c
 18576  0037A2  50DF               	movf	indf2,w,c
 18577  0037A4  ECDE  F029         	call	_EUSART_Write
 18578                           
 18579                           ;USBapp.c: 166: ++RS232cp;
 18580  0037A8  2A20               	incf	_RS232cp,f,c
 18581                           
 18582                           ;USBapp.c: 167: if (RS232cp == LastRS232Out)
 18583  0037AA  501D               	movf	_LastRS232Out,w,c
 18584  0037AC  1820               	xorwf	_RS232cp,w,c
 18585  0037AE  A4D8               	btfss	status,2,c
 18586  0037B0  D002               	goto	l894
 18587                           
 18588                           ;USBapp.c: 168: RS232_Out_Data_Rdy = 0;
 18589  0037B2  0E00               	movlw	0
 18590  0037B4  6E1F               	movwf	_RS232_Out_Data_Rdy,c
 18591  0037B6                     l894:
 18592                           
 18593                           ;USBapp.c: 169: }
 18594                           ;USBapp.c: 172: if ((eusartRxCount))
 18595  0037B6  5026               	movf	_eusartRxCount,w,c	;volatile
 18596  0037B8  B4D8               	btfsc	status,2,c
 18597  0037BA  D024               	goto	l12648
 18598                           
 18599                           ;USBapp.c: 173: {
 18600                           ;USBapp.c: 174: if(USBapp_getrxByteFlag() && (NextUSBOut < (64 - 1)))
 18601  0037BC  ECE2  F02C         	call	_USBapp_getrxByteFlag	;wreg free
 18602  0037C0  0900               	iorlw	0
 18603  0037C2  B4D8               	btfsc	status,2,c
 18604  0037C4  D01F               	goto	l12648
 18605  0037C6  0E3F               	movlw	63
 18606  0037C8  601E               	cpfslt	_NextUSBOut,c
 18607  0037CA  D01C               	goto	l12648
 18608                           
 18609                           ;USBapp.c: 175: {
 18610                           ;USBapp.c: 176: __nop();
 18611  0037CC  F000               	nop	
 18612                           
 18613                           ;USBapp.c: 177: USB_Buffer[NextUSBOut] = EUSART_Read();
 18614  0037CE  EC5A  F029         	call	_EUSART_Read	;wreg free
 18615  0037D2  0100               	movlb	0	; () banked
 18616  0037D4  6FD0               	movwf	??_USBapp_DeviceCdcEmulatorHandler& (0+255),b
 18617  0037D6  501E               	movf	_NextUSBOut,w,c
 18618  0037D8  0D01               	mullw	1
 18619  0037DA  0E24               	movlw	low _USB_Buffer
 18620  0037DC  24F3               	addwf	prodl,w,c
 18621  0037DE  6ED9               	movwf	fsr2l,c
 18622  0037E0  0E01               	movlw	high _USB_Buffer
 18623  0037E2  20F4               	addwfc	prodh,w,c
 18624  0037E4  6EDA               	movwf	fsr2h,c
 18625  0037E6  C0D0  FFDF         	movff	??_USBapp_DeviceCdcEmulatorHandler,indf2
 18626                           
 18627                           ; BSR set to: 0
 18628                           ;USBapp.c: 178: ++NextUSBOut;
 18629  0037EA  2A1E               	incf	_NextUSBOut,f,c
 18630                           
 18631                           ; BSR set to: 0
 18632                           ;USBapp.c: 179: USB_Buffer[NextUSBOut] = 0;
 18633  0037EC  501E               	movf	_NextUSBOut,w,c
 18634  0037EE  0D01               	mullw	1
 18635  0037F0  0E24               	movlw	low _USB_Buffer
 18636  0037F2  24F3               	addwf	prodl,w,c
 18637  0037F4  6ED9               	movwf	fsr2l,c
 18638  0037F6  0E01               	movlw	high _USB_Buffer
 18639  0037F8  20F4               	addwfc	prodh,w,c
 18640  0037FA  6EDA               	movwf	fsr2h,c
 18641  0037FC  0E00               	movlw	0
 18642  0037FE  6EDF               	movwf	indf2,c
 18643                           
 18644                           ; BSR set to: 0
 18645                           ;USBapp.c: 180: rxByteFlag = 0;
 18646  003800  0E00               	movlw	0
 18647  003802  6E2A               	movwf	_rxByteFlag,c	;volatile
 18648  003804                     l12648:
 18649                           
 18650                           ;USBapp.c: 181: }
 18651                           ;USBapp.c: 182: }
 18652                           ;USBapp.c: 186: if(((cdc_trf_state == 0)) && (NextUSBOut > 0))
 18653  003804  5023               	movf	_cdc_trf_state,w,c
 18654  003806  A4D8               	btfss	status,2,c
 18655  003808  D011               	goto	l12658
 18656  00380A  501E               	movf	_NextUSBOut,w,c
 18657  00380C  B4D8               	btfsc	status,2,c
 18658  00380E  D00E               	goto	l12658
 18659                           
 18660                           ;USBapp.c: 187: {
 18661                           ;USBapp.c: 188: putUSBUSART(&USB_Buffer[0], NextUSBOut);
 18662  003810  0E24               	movlw	low _USB_Buffer
 18663  003812  0100               	movlb	0	; () banked
 18664  003814  6FC3               	movwf	putUSBUSART@data& (0+255),b
 18665  003816  0E01               	movlw	high _USB_Buffer
 18666  003818  0100               	movlb	0	; () banked
 18667  00381A  6FC4               	movwf	(putUSBUSART@data+1)& (0+255),b
 18668  00381C  C01E  F0C5         	movff	_NextUSBOut,putUSBUSART@length
 18669  003820  ECD8  F02B         	call	_putUSBUSART	;wreg free
 18670                           
 18671                           ;USBapp.c: 189: MOTEapp_setResponseReady();
 18672  003824  ECD5  F02C         	call	_MOTEapp_setResponseReady	;wreg free
 18673                           
 18674                           ;USBapp.c: 190: NextUSBOut = 0;
 18675  003828  0E00               	movlw	0
 18676  00382A  6E1E               	movwf	_NextUSBOut,c
 18677  00382C                     l12658:
 18678                           
 18679                           ;USBapp.c: 191: }
 18680                           ;USBapp.c: 193: CDCTxService();
 18681  00382C  EC3D  F013         	call	_CDCTxService	;wreg free
 18682  003830  0012               	return		;funcret
 18683  003832                     __end_of_USBapp_DeviceCdcEmulatorHandler:
 18684                           	opt stack 0
 18685                           tblptru	equ	0xFF8
 18686                           tblptrh	equ	0xFF7
 18687                           tblptrl	equ	0xFF6
 18688                           tablat	equ	0xFF5
 18689                           prodh	equ	0xFF4
 18690                           prodl	equ	0xFF3
 18691                           intcon	equ	0xFF2
 18692                           indf0	equ	0xFEF
 18693                           postinc0	equ	0xFEE
 18694                           fsr0h	equ	0xFEA
 18695                           fsr0l	equ	0xFE9
 18696                           wreg	equ	0xFE8
 18697                           indf1	equ	0xFE7
 18698                           postdec1	equ	0xFE5
 18699                           fsr1h	equ	0xFE2
 18700                           fsr1l	equ	0xFE1
 18701                           indf2	equ	0xFDF
 18702                           fsr2h	equ	0xFDA
 18703                           fsr2l	equ	0xFD9
 18704                           status	equ	0xFD8
 18705                           
 18706 ;; *************** function _putUSBUSART *****************
 18707 ;; Defined at:
 18708 ;;		line 503 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 18709 ;; Parameters:    Size  Location     Type
 18710 ;;  data            2    0[BANK0 ] PTR unsigned char 
 18711 ;;		 -> USB_Buffer(64), 
 18712 ;;  length          1    2[BANK0 ] unsigned char 
 18713 ;; Auto vars:     Size  Location     Type
 18714 ;;		None
 18715 ;; Return value:  Size  Location     Type
 18716 ;;		None               void
 18717 ;; Registers used:
 18718 ;;		wreg, status,2, status,0
 18719 ;; Tracked objects:
 18720 ;;		On entry : 0/0
 18721 ;;		On exit  : 0/0
 18722 ;;		Unchanged: 0/0
 18723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18724 ;;      Params:         0       3       0       0       0       0       0       0       0
 18725 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18726 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18727 ;;      Totals:         0       3       0       0       0       0       0       0       0
 18728 ;;Total ram usage:        3 bytes
 18729 ;; Hardware stack levels used:    1
 18730 ;; Hardware stack levels required when called:   11
 18731 ;; This function calls:
 18732 ;;		Nothing
 18733 ;; This function is called by:
 18734 ;;		_USBapp_DeviceCdcEmulatorHandler
 18735 ;; This function uses a non-reentrant model
 18736 ;;
 18737                           
 18738                           	psect	text63
 18739  0057B0                     __ptext63:
 18740                           	opt stack 0
 18741  0057B0                     _putUSBUSART:
 18742                           	opt stack 17
 18743                           
 18744                           ;usb_device_cdc.c: 528: {PIE3bits.USBIE = 0;};
 18745                           
 18746                           ;incstack = 0
 18747  0057B0  94A3               	bcf	4003,2,c	;volatile
 18748                           
 18749                           ;usb_device_cdc.c: 529: if(cdc_trf_state == 0)
 18750  0057B2  5023               	movf	_cdc_trf_state,w,c
 18751  0057B4  A4D8               	btfss	status,2,c
 18752  0057B6  D00B               	goto	l11390
 18753                           
 18754                           ;usb_device_cdc.c: 530: {
 18755                           ;usb_device_cdc.c: 531: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 18756  0057B8  C0C3  F073         	movff	putUSBUSART@data,_pCDCSrc
 18757  0057BC  C0C4  F074         	movff	putUSBUSART@data+1,_pCDCSrc+1
 18758  0057C0  C0C5  F09F         	movff	putUSBUSART@length,_cdc_tx_len
 18759  0057C4  0E01               	movlw	1
 18760  0057C6  0100               	movlb	0	; () banked
 18761  0057C8  6F9D               	movwf	_cdc_mem_type& (0+255),b
 18762                           
 18763                           ; BSR set to: 0
 18764  0057CA  0E01               	movlw	1
 18765  0057CC  6E23               	movwf	_cdc_trf_state,c
 18766  0057CE                     l11390:
 18767                           
 18768                           ;usb_device_cdc.c: 532: }
 18769                           ;usb_device_cdc.c: 533: {PIE3bits.USBIE = 1;};
 18770  0057CE  84A3               	bsf	4003,2,c	;volatile
 18771  0057D0  0012               	return		;funcret
 18772  0057D2                     __end_of_putUSBUSART:
 18773                           	opt stack 0
 18774                           tblptru	equ	0xFF8
 18775                           tblptrh	equ	0xFF7
 18776                           tblptrl	equ	0xFF6
 18777                           tablat	equ	0xFF5
 18778                           prodh	equ	0xFF4
 18779                           prodl	equ	0xFF3
 18780                           intcon	equ	0xFF2
 18781                           indf0	equ	0xFEF
 18782                           postinc0	equ	0xFEE
 18783                           fsr0h	equ	0xFEA
 18784                           fsr0l	equ	0xFE9
 18785                           wreg	equ	0xFE8
 18786                           indf1	equ	0xFE7
 18787                           postdec1	equ	0xFE5
 18788                           fsr1h	equ	0xFE2
 18789                           fsr1l	equ	0xFE1
 18790                           indf2	equ	0xFDF
 18791                           fsr2h	equ	0xFDA
 18792                           fsr2l	equ	0xFD9
 18793                           status	equ	0xFD8
 18794                           
 18795 ;; *************** function _getsUSBUSART *****************
 18796 ;; Defined at:
 18797 ;;		line 432 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 18798 ;; Parameters:    Size  Location     Type
 18799 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 18800 ;;		 -> USB_Buffer(64), 
 18801 ;;  len             1    9[BANK0 ] unsigned char 
 18802 ;; Auto vars:     Size  Location     Type
 18803 ;;		None
 18804 ;; Return value:  Size  Location     Type
 18805 ;;                  1    wreg      unsigned char 
 18806 ;; Registers used:
 18807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18808 ;; Tracked objects:
 18809 ;;		On entry : 0/0
 18810 ;;		On exit  : 0/0
 18811 ;;		Unchanged: 0/0
 18812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18813 ;;      Params:         0       3       0       0       0       0       0       0       0
 18814 ;;      Locals:         0       2       0       0       0       0       0       0       0
 18815 ;;      Temps:          0       1       0       0       0       0       0       0       0
 18816 ;;      Totals:         0       6       0       0       0       0       0       0       0
 18817 ;;Total ram usage:        6 bytes
 18818 ;; Hardware stack levels used:    1
 18819 ;; Hardware stack levels required when called:   12
 18820 ;; This function calls:
 18821 ;;		_USBTransferOnePacket
 18822 ;; This function is called by:
 18823 ;;		_USBapp_DeviceCdcEmulatorHandler
 18824 ;; This function uses a non-reentrant model
 18825 ;;
 18826                           
 18827                           	psect	text64
 18828  003668                     __ptext64:
 18829                           	opt stack 0
 18830  003668                     _getsUSBUSART:
 18831                           	opt stack 16
 18832                           
 18833                           ;usb_device_cdc.c: 434: cdc_rx_len = 0;
 18834                           
 18835                           ;incstack = 0
 18836  003668  0E00               	movlw	0
 18837  00366A  0100               	movlb	0	; () banked
 18838  00366C  6F9E               	movwf	_cdc_rx_len& (0+255),b
 18839                           
 18840                           ; BSR set to: 0
 18841                           ;usb_device_cdc.c: 436: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 18842  00366E  0100               	movlb	0	; () banked
 18843  003670  5178               	movf	_CDCDataOutHandle& (0+255),w,b
 18844  003672  0100               	movlb	0	; () banked
 18845  003674  1179               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 18846  003676  B4D8               	btfsc	status,2,c
 18847  003678  D013               	goto	l11352
 18848                           
 18849                           ; BSR set to: 0
 18850  00367A  C078  FFD9         	movff	_CDCDataOutHandle,fsr2l
 18851  00367E  C079  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 18852  003682  0100               	movlb	0	; () banked
 18853  003684  AEDF               	btfss	indf2,7,c
 18854  003686  D004               	goto	u9780
 18855  003688  0100               	movlb	0	; () banked
 18856  00368A  6BCD               	clrf	??_getsUSBUSART& (0+255),b
 18857  00368C  2BCD               	incf	??_getsUSBUSART& (0+255),f,b
 18858  00368E  D002               	goto	u9788
 18859  003690                     u9780:
 18860  003690  0100               	movlb	0	; () banked
 18861  003692  6BCD               	clrf	??_getsUSBUSART& (0+255),b
 18862  003694                     u9788:
 18863  003694  0100               	movlb	0	; () banked
 18864  003696  51CD               	movf	??_getsUSBUSART& (0+255),w,b
 18865  003698  0100               	movlb	0	; () banked
 18866  00369A  6FCE               	movwf	_getsUSBUSART$5884& (0+255),b
 18867  00369C  6BCF               	clrf	(_getsUSBUSART$5884+1)& (0+255),b
 18868  00369E  D005               	goto	l11354
 18869  0036A0                     l11352:
 18870                           
 18871                           ; BSR set to: 0
 18872  0036A0  0E00               	movlw	0
 18873  0036A2  0100               	movlb	0	; () banked
 18874  0036A4  6FCF               	movwf	(_getsUSBUSART$5884+1)& (0+255),b
 18875  0036A6  0E00               	movlw	0
 18876  0036A8  6FCE               	movwf	_getsUSBUSART$5884& (0+255),b
 18877  0036AA                     l11354:
 18878                           
 18879                           ; BSR set to: 0
 18880  0036AA  0100               	movlb	0	; () banked
 18881  0036AC  51CE               	movf	_getsUSBUSART$5884& (0+255),w,b
 18882  0036AE  0100               	movlb	0	; () banked
 18883  0036B0  11CF               	iorwf	(_getsUSBUSART$5884+1)& (0+255),w,b
 18884  0036B2  A4D8               	btfss	status,2,c
 18885  0036B4  D04B               	goto	l11370
 18886                           
 18887                           ; BSR set to: 0
 18888                           ;usb_device_cdc.c: 437: {
 18889                           ;usb_device_cdc.c: 442: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 18890  0036B6  0100               	movlb	0	; () banked
 18891  0036B8  EE20 F001          	lfsr	2,1
 18892  0036BC  5178               	movf	_CDCDataOutHandle& (0+255),w,b
 18893  0036BE  26D9               	addwf	fsr2l,f,c
 18894  0036C0  5179               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 18895  0036C2  22DA               	addwfc	fsr2h,f,c
 18896  0036C4  0100               	movlb	0	; () banked
 18897  0036C6  51CC               	movf	getsUSBUSART@len& (0+255),w,b
 18898  0036C8  5CDE               	subwf	postinc2,w,c
 18899  0036CA  B0D8               	btfsc	status,0,c
 18900  0036CC  D00A               	goto	l11360
 18901                           
 18902                           ; BSR set to: 0
 18903                           ;usb_device_cdc.c: 443: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 18904  0036CE  0100               	movlb	0	; () banked
 18905  0036D0  EE20 F001          	lfsr	2,1
 18906  0036D4  5178               	movf	_CDCDataOutHandle& (0+255),w,b
 18907  0036D6  26D9               	addwf	fsr2l,f,c
 18908  0036D8  5179               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 18909  0036DA  22DA               	addwfc	fsr2h,f,c
 18910  0036DC  50DF               	movf	indf2,w,c
 18911  0036DE  0100               	movlb	0	; () banked
 18912  0036E0  6FCC               	movwf	getsUSBUSART@len& (0+255),b
 18913  0036E2                     l11360:
 18914                           
 18915                           ; BSR set to: 0
 18916                           ;usb_device_cdc.c: 448: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 18917  0036E2  0E00               	movlw	0
 18918  0036E4  0100               	movlb	0	; () banked
 18919  0036E6  6F9E               	movwf	_cdc_rx_len& (0+255),b
 18920  0036E8  D018               	goto	l11366
 18921  0036EA                     l11362:
 18922                           
 18923                           ; BSR set to: 0
 18924                           ;usb_device_cdc.c: 449: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 18925  0036EA  0100               	movlb	0	; () banked
 18926  0036EC  519E               	movf	_cdc_rx_len& (0+255),w,b
 18927  0036EE  0D01               	mullw	1
 18928  0036F0  0E40               	movlw	64
 18929  0036F2  24F3               	addwf	prodl,w,c
 18930  0036F4  6ED9               	movwf	fsr2l,c
 18931  0036F6  0E05               	movlw	5
 18932  0036F8  20F4               	addwfc	prodh,w,c
 18933  0036FA  6EDA               	movwf	fsr2h,c
 18934  0036FC  0100               	movlb	0	; () banked
 18935  0036FE  519E               	movf	_cdc_rx_len& (0+255),w,b
 18936  003700  0D01               	mullw	1
 18937  003702  50F3               	movf	prodl,w,c
 18938  003704  0100               	movlb	0	; () banked
 18939  003706  25CA               	addwf	getsUSBUSART@buffer& (0+255),w,b
 18940  003708  6EE1               	movwf	fsr1l,c
 18941  00370A  50F4               	movf	prodh,w,c
 18942  00370C  0100               	movlb	0	; () banked
 18943  00370E  21CB               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 18944  003710  6EE2               	movwf	fsr1h,c
 18945  003712  CFDF FFE7          	movff	indf2,indf1
 18946                           
 18947                           ; BSR set to: 0
 18948  003716  0100               	movlb	0	; () banked
 18949  003718  2B9E               	incf	_cdc_rx_len& (0+255),f,b
 18950  00371A                     l11366:
 18951                           
 18952                           ; BSR set to: 0
 18953  00371A  0100               	movlb	0	; () banked
 18954  00371C  51CC               	movf	getsUSBUSART@len& (0+255),w,b
 18955  00371E  0100               	movlb	0	; () banked
 18956  003720  5D9E               	subwf	_cdc_rx_len& (0+255),w,b
 18957  003722  A0D8               	btfss	status,0,c
 18958  003724  D7E2               	goto	l11362
 18959                           
 18960                           ; BSR set to: 0
 18961                           ;usb_device_cdc.c: 455: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 18962                           
 18963                           ; BSR set to: 0
 18964  003726  0E00               	movlw	0
 18965  003728  0100               	movlb	0	; () banked
 18966  00372A  6FC3               	movwf	USBTransferOnePacket@dir& (0+255),b
 18967  00372C  0E40               	movlw	64
 18968  00372E  0100               	movlb	0	; () banked
 18969  003730  6FC4               	movwf	USBTransferOnePacket@data& (0+255),b
 18970  003732  0E05               	movlw	5
 18971  003734  0100               	movlb	0	; () banked
 18972  003736  6FC5               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 18973  003738  0E40               	movlw	64
 18974  00373A  0100               	movlb	0	; () banked
 18975  00373C  6FC6               	movwf	USBTransferOnePacket@len& (0+255),b
 18976  00373E  0E02               	movlw	2
 18977  003740  EC1D  F01F         	call	_USBTransferOnePacket
 18978  003744  C0C3  F078         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 18979  003748  C0C4  F079         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 18980  00374C                     l11370:
 18981                           
 18982                           ;usb_device_cdc.c: 457: }
 18983                           ;usb_device_cdc.c: 459: return cdc_rx_len;
 18984  00374C  0100               	movlb	0	; () banked
 18985  00374E  519E               	movf	_cdc_rx_len& (0+255),w,b
 18986  003750  0012               	return	
 18987  003752                     __end_of_getsUSBUSART:
 18988                           	opt stack 0
 18989                           tblptru	equ	0xFF8
 18990                           tblptrh	equ	0xFF7
 18991                           tblptrl	equ	0xFF6
 18992                           tablat	equ	0xFF5
 18993                           prodh	equ	0xFF4
 18994                           prodl	equ	0xFF3
 18995                           intcon	equ	0xFF2
 18996                           indf0	equ	0xFEF
 18997                           postinc0	equ	0xFEE
 18998                           fsr0h	equ	0xFEA
 18999                           fsr0l	equ	0xFE9
 19000                           wreg	equ	0xFE8
 19001                           indf1	equ	0xFE7
 19002                           postdec1	equ	0xFE5
 19003                           fsr1h	equ	0xFE2
 19004                           fsr1l	equ	0xFE1
 19005                           indf2	equ	0xFDF
 19006                           postinc2	equ	0xFDE
 19007                           fsr2h	equ	0xFDA
 19008                           fsr2l	equ	0xFD9
 19009                           status	equ	0xFD8
 19010                           
 19011 ;; *************** function _USBapp_getrxByteFlag *****************
 19012 ;; Defined at:
 19013 ;;		line 251 in file "../Includes/Board/USBapp.c"
 19014 ;; Parameters:    Size  Location     Type
 19015 ;;		None
 19016 ;; Auto vars:     Size  Location     Type
 19017 ;;		None
 19018 ;; Return value:  Size  Location     Type
 19019 ;;                  1    wreg      unsigned char 
 19020 ;; Registers used:
 19021 ;;		wreg, status,2
 19022 ;; Tracked objects:
 19023 ;;		On entry : 0/0
 19024 ;;		On exit  : 0/0
 19025 ;;		Unchanged: 0/0
 19026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19027 ;;      Params:         0       0       0       0       0       0       0       0       0
 19028 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19029 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19030 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19031 ;;Total ram usage:        0 bytes
 19032 ;; Hardware stack levels used:    1
 19033 ;; Hardware stack levels required when called:   11
 19034 ;; This function calls:
 19035 ;;		Nothing
 19036 ;; This function is called by:
 19037 ;;		_USBapp_DeviceCdcEmulatorHandler
 19038 ;; This function uses a non-reentrant model
 19039 ;;
 19040                           
 19041                           	psect	text65
 19042  0059C4                     __ptext65:
 19043                           	opt stack 0
 19044  0059C4                     _USBapp_getrxByteFlag:
 19045                           	opt stack 17
 19046                           
 19047                           ;USBapp.c: 253: return rxByteFlag;
 19048                           
 19049                           ; BSR set to: 0
 19050                           ;incstack = 0
 19051  0059C4  502A               	movf	_rxByteFlag,w,c	;volatile
 19052  0059C6  0012               	return	
 19053  0059C8                     __end_of_USBapp_getrxByteFlag:
 19054                           	opt stack 0
 19055                           tblptru	equ	0xFF8
 19056                           tblptrh	equ	0xFF7
 19057                           tblptrl	equ	0xFF6
 19058                           tablat	equ	0xFF5
 19059                           prodh	equ	0xFF4
 19060                           prodl	equ	0xFF3
 19061                           intcon	equ	0xFF2
 19062                           indf0	equ	0xFEF
 19063                           postinc0	equ	0xFEE
 19064                           fsr0h	equ	0xFEA
 19065                           fsr0l	equ	0xFE9
 19066                           wreg	equ	0xFE8
 19067                           indf1	equ	0xFE7
 19068                           postdec1	equ	0xFE5
 19069                           fsr1h	equ	0xFE2
 19070                           fsr1l	equ	0xFE1
 19071                           indf2	equ	0xFDF
 19072                           postinc2	equ	0xFDE
 19073                           fsr2h	equ	0xFDA
 19074                           fsr2l	equ	0xFD9
 19075                           status	equ	0xFD8
 19076                           
 19077 ;; *************** function _MOTEapp_setResponseReady *****************
 19078 ;; Defined at:
 19079 ;;		line 1228 in file "../Includes/Board/MOTEapp.c"
 19080 ;; Parameters:    Size  Location     Type
 19081 ;;		None
 19082 ;; Auto vars:     Size  Location     Type
 19083 ;;		None
 19084 ;; Return value:  Size  Location     Type
 19085 ;;		None               void
 19086 ;; Registers used:
 19087 ;;		wreg, status,2
 19088 ;; Tracked objects:
 19089 ;;		On entry : 0/0
 19090 ;;		On exit  : 0/0
 19091 ;;		Unchanged: 0/0
 19092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19093 ;;      Params:         0       0       0       0       0       0       0       0       0
 19094 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19095 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19096 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19097 ;;Total ram usage:        0 bytes
 19098 ;; Hardware stack levels used:    1
 19099 ;; Hardware stack levels required when called:   11
 19100 ;; This function calls:
 19101 ;;		Nothing
 19102 ;; This function is called by:
 19103 ;;		_USBapp_DeviceCdcEmulatorHandler
 19104 ;; This function uses a non-reentrant model
 19105 ;;
 19106                           
 19107                           	psect	text66
 19108  0059AA                     __ptext66:
 19109                           	opt stack 0
 19110  0059AA                     _MOTEapp_setResponseReady:
 19111                           	opt stack 17
 19112                           
 19113                           ;MOTEapp.c: 1230: responseReady = 1;
 19114                           
 19115                           ;incstack = 0
 19116  0059AA  0E01               	movlw	1
 19117  0059AC  0100               	movlb	0	; () banked
 19118  0059AE  6FAF               	movwf	_responseReady& (0+255),b
 19119                           
 19120                           ; BSR set to: 0
 19121  0059B0  0012               	return		;funcret
 19122  0059B2                     __end_of_MOTEapp_setResponseReady:
 19123                           	opt stack 0
 19124                           tblptru	equ	0xFF8
 19125                           tblptrh	equ	0xFF7
 19126                           tblptrl	equ	0xFF6
 19127                           tablat	equ	0xFF5
 19128                           prodh	equ	0xFF4
 19129                           prodl	equ	0xFF3
 19130                           intcon	equ	0xFF2
 19131                           indf0	equ	0xFEF
 19132                           postinc0	equ	0xFEE
 19133                           fsr0h	equ	0xFEA
 19134                           fsr0l	equ	0xFE9
 19135                           wreg	equ	0xFE8
 19136                           indf1	equ	0xFE7
 19137                           postdec1	equ	0xFE5
 19138                           fsr1h	equ	0xFE2
 19139                           fsr1l	equ	0xFE1
 19140                           indf2	equ	0xFDF
 19141                           postinc2	equ	0xFDE
 19142                           fsr2h	equ	0xFDA
 19143                           fsr2l	equ	0xFD9
 19144                           status	equ	0xFD8
 19145                           
 19146 ;; *************** function _EUSART_Write *****************
 19147 ;; Defined at:
 19148 ;;		line 139 in file "../Includes/MccGenerated/eusart.c"
 19149 ;; Parameters:    Size  Location     Type
 19150 ;;  txData          1    wreg     unsigned char 
 19151 ;; Auto vars:     Size  Location     Type
 19152 ;;  txData          1    0[BANK0 ] unsigned char 
 19153 ;; Return value:  Size  Location     Type
 19154 ;;		None               void
 19155 ;; Registers used:
 19156 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19157 ;; Tracked objects:
 19158 ;;		On entry : 0/0
 19159 ;;		On exit  : 0/0
 19160 ;;		Unchanged: 0/0
 19161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19162 ;;      Params:         0       0       0       0       0       0       0       0       0
 19163 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19164 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19165 ;;      Totals:         0       1       0       0       0       0       0       0       0
 19166 ;;Total ram usage:        1 bytes
 19167 ;; Hardware stack levels used:    1
 19168 ;; Hardware stack levels required when called:   11
 19169 ;; This function calls:
 19170 ;;		Nothing
 19171 ;; This function is called by:
 19172 ;;		_EndLine
 19173 ;;		_sendCommand
 19174 ;;		_sendDataCommand
 19175 ;;		_USBapp_DeviceCdcEmulatorHandler
 19176 ;; This function uses a non-reentrant model
 19177 ;;
 19178                           
 19179                           	psect	text67
 19180  0053BC                     __ptext67:
 19181                           	opt stack 0
 19182  0053BC                     _EUSART_Write:
 19183                           	opt stack 14
 19184                           
 19185                           ; BSR set to: 0
 19186                           ;incstack = 0
 19187                           ;EUSART_Write@txData stored from wreg
 19188  0053BC  0100               	movlb	0	; () banked
 19189  0053BE  6FC3               	movwf	EUSART_Write@txData& (0+255),b
 19190  0053C0                     l10598:
 19191  0053C0  5027               	movf	_eusartTxBufferRemaining,w,c	;volatile
 19192  0053C2  B4D8               	btfsc	status,2,c
 19193  0053C4  D7FD               	goto	l10598
 19194                           
 19195                           ;eusart.c: 143: }
 19196                           ;eusart.c: 145: if(0 == PIE1bits.TXIE)
 19197  0053C6  B89D               	btfsc	3997,4,c	;volatile
 19198  0053C8  D003               	goto	l1116
 19199                           
 19200                           ;eusart.c: 146: {
 19201                           ;eusart.c: 147: TXREG = txData;
 19202  0053CA  C0C3  FFAD         	movff	EUSART_Write@txData,4013	;volatile
 19203                           
 19204                           ;eusart.c: 148: }
 19205  0053CE  D012               	goto	l10612
 19206  0053D0                     l1116:
 19207                           
 19208                           ;eusart.c: 149: else
 19209                           ;eusart.c: 150: {
 19210                           ;eusart.c: 151: PIE1bits.TXIE = 0;
 19211  0053D0  989D               	bcf	3997,4,c	;volatile
 19212                           
 19213                           ;eusart.c: 152: eusartTxBuffer[eusartTxHead++] = txData;
 19214  0053D2  5028               	movf	_eusartTxHead,w,c
 19215  0053D4  0D01               	mullw	1
 19216  0053D6  0E40               	movlw	low _eusartTxBuffer
 19217  0053D8  24F3               	addwf	prodl,w,c
 19218  0053DA  6ED9               	movwf	fsr2l,c
 19219  0053DC  0E02               	movlw	high _eusartTxBuffer
 19220  0053DE  20F4               	addwfc	prodh,w,c
 19221  0053E0  6EDA               	movwf	fsr2h,c
 19222  0053E2  C0C3  FFDF         	movff	EUSART_Write@txData,indf2
 19223  0053E6  2A28               	incf	_eusartTxHead,f,c
 19224                           
 19225                           ;eusart.c: 153: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 19226  0053E8  0E3F               	movlw	63
 19227  0053EA  6428               	cpfsgt	_eusartTxHead,c
 19228  0053EC  D002               	goto	l10610
 19229                           
 19230                           ;eusart.c: 154: {
 19231                           ;eusart.c: 155: eusartTxHead = 0;
 19232  0053EE  0E00               	movlw	0
 19233  0053F0  6E28               	movwf	_eusartTxHead,c
 19234  0053F2                     l10610:
 19235                           
 19236                           ;eusart.c: 156: }
 19237                           ;eusart.c: 157: eusartTxBufferRemaining--;
 19238  0053F2  0627               	decf	_eusartTxBufferRemaining,f,c	;volatile
 19239  0053F4                     l10612:
 19240                           
 19241                           ;eusart.c: 158: }
 19242                           ;eusart.c: 159: PIE1bits.TXIE = 1;
 19243  0053F4  889D               	bsf	3997,4,c	;volatile
 19244  0053F6  0012               	return		;funcret
 19245  0053F8                     __end_of_EUSART_Write:
 19246                           	opt stack 0
 19247                           tblptru	equ	0xFF8
 19248                           tblptrh	equ	0xFF7
 19249                           tblptrl	equ	0xFF6
 19250                           tablat	equ	0xFF5
 19251                           prodh	equ	0xFF4
 19252                           prodl	equ	0xFF3
 19253                           intcon	equ	0xFF2
 19254                           indf0	equ	0xFEF
 19255                           postinc0	equ	0xFEE
 19256                           fsr0h	equ	0xFEA
 19257                           fsr0l	equ	0xFE9
 19258                           wreg	equ	0xFE8
 19259                           indf1	equ	0xFE7
 19260                           postdec1	equ	0xFE5
 19261                           fsr1h	equ	0xFE2
 19262                           fsr1l	equ	0xFE1
 19263                           indf2	equ	0xFDF
 19264                           postinc2	equ	0xFDE
 19265                           fsr2h	equ	0xFDA
 19266                           fsr2l	equ	0xFD9
 19267                           status	equ	0xFD8
 19268                           
 19269 ;; *************** function _EUSART_Read *****************
 19270 ;; Defined at:
 19271 ;;		line 117 in file "../Includes/MccGenerated/eusart.c"
 19272 ;; Parameters:    Size  Location     Type
 19273 ;;		None
 19274 ;; Auto vars:     Size  Location     Type
 19275 ;;  readValue       1    0[BANK0 ] unsigned char 
 19276 ;; Return value:  Size  Location     Type
 19277 ;;                  1    wreg      unsigned char 
 19278 ;; Registers used:
 19279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19280 ;; Tracked objects:
 19281 ;;		On entry : 0/0
 19282 ;;		On exit  : 0/0
 19283 ;;		Unchanged: 0/0
 19284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19285 ;;      Params:         0       0       0       0       0       0       0       0       0
 19286 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19287 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19288 ;;      Totals:         0       1       0       0       0       0       0       0       0
 19289 ;;Total ram usage:        1 bytes
 19290 ;; Hardware stack levels used:    1
 19291 ;; Hardware stack levels required when called:   11
 19292 ;; This function calls:
 19293 ;;		Nothing
 19294 ;; This function is called by:
 19295 ;;		_MOTEapp_getModuleResponse
 19296 ;;		_USBapp_DeviceCdcEmulatorHandler
 19297 ;; This function uses a non-reentrant model
 19298 ;;
 19299                           
 19300                           	psect	text68
 19301  0052B4                     __ptext68:
 19302                           	opt stack 0
 19303  0052B4                     _EUSART_Read:
 19304                           	opt stack 14
 19305                           
 19306                           ;eusart.c: 119: uint8_t readValue = 0;
 19307                           
 19308                           ;incstack = 0
 19309  0052B4  0E00               	movlw	0
 19310  0052B6  0100               	movlb	0	; () banked
 19311  0052B8  6FC3               	movwf	EUSART_Read@readValue& (0+255),b
 19312                           
 19313                           ;eusart.c: 121: while(0 == eusartRxCount)
 19314  0052BA  D001               	goto	l10616
 19315  0052BC                     l1107:
 19316                           
 19317                           ;eusart.c: 122: {
 19318                           ;eusart.c: 123: LATAbits.LATA7 = 1;
 19319  0052BC  8E89               	bsf	3977,7,c	;volatile
 19320  0052BE                     l10616:
 19321  0052BE  5026               	movf	_eusartRxCount,w,c	;volatile
 19322  0052C0  B4D8               	btfsc	status,2,c
 19323  0052C2  D7FC               	goto	l1107
 19324                           
 19325                           ;eusart.c: 124: }
 19326                           ;eusart.c: 126: PIE1bits.RCIE = 0;
 19327  0052C4  9A9D               	bcf	3997,5,c	;volatile
 19328                           
 19329                           ;eusart.c: 128: readValue = eusartRxBuffer[eusartRxTail++];
 19330  0052C6  0100               	movlb	0	; () banked
 19331  0052C8  51A5               	movf	_eusartRxTail& (0+255),w,b
 19332  0052CA  0D01               	mullw	1
 19333  0052CC  0E00               	movlw	low _eusartRxBuffer
 19334  0052CE  24F3               	addwf	prodl,w,c
 19335  0052D0  6ED9               	movwf	fsr2l,c
 19336  0052D2  0E02               	movlw	high _eusartRxBuffer
 19337  0052D4  20F4               	addwfc	prodh,w,c
 19338  0052D6  6EDA               	movwf	fsr2h,c
 19339  0052D8  50DF               	movf	indf2,w,c
 19340  0052DA  0100               	movlb	0	; () banked
 19341  0052DC  6FC3               	movwf	EUSART_Read@readValue& (0+255),b
 19342                           
 19343                           ; BSR set to: 0
 19344  0052DE  0100               	movlb	0	; () banked
 19345  0052E0  2BA5               	incf	_eusartRxTail& (0+255),f,b
 19346                           
 19347                           ; BSR set to: 0
 19348                           ;eusart.c: 129: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 19349  0052E2  0E3F               	movlw	63
 19350  0052E4  0100               	movlb	0	; () banked
 19351  0052E6  65A5               	cpfsgt	_eusartRxTail& (0+255),b
 19352  0052E8  D003               	goto	l10626
 19353                           
 19354                           ; BSR set to: 0
 19355                           ;eusart.c: 130: {
 19356                           ;eusart.c: 131: eusartRxTail = 0;
 19357  0052EA  0E00               	movlw	0
 19358  0052EC  0100               	movlb	0	; () banked
 19359  0052EE  6FA5               	movwf	_eusartRxTail& (0+255),b
 19360  0052F0                     l10626:
 19361                           
 19362                           ; BSR set to: 0
 19363                           ;eusart.c: 132: }
 19364                           ;eusart.c: 133: eusartRxCount--;
 19365  0052F0  0626               	decf	_eusartRxCount,f,c	;volatile
 19366                           
 19367                           ; BSR set to: 0
 19368                           ;eusart.c: 134: PIE1bits.RCIE = 1;
 19369  0052F2  8A9D               	bsf	3997,5,c	;volatile
 19370                           
 19371                           ; BSR set to: 0
 19372                           ;eusart.c: 136: return readValue;
 19373  0052F4  0100               	movlb	0	; () banked
 19374  0052F6  51C3               	movf	EUSART_Read@readValue& (0+255),w,b
 19375  0052F8  0012               	return	
 19376  0052FA                     __end_of_EUSART_Read:
 19377                           	opt stack 0
 19378                           tblptru	equ	0xFF8
 19379                           tblptrh	equ	0xFF7
 19380                           tblptrl	equ	0xFF6
 19381                           tablat	equ	0xFF5
 19382                           prodh	equ	0xFF4
 19383                           prodl	equ	0xFF3
 19384                           intcon	equ	0xFF2
 19385                           indf0	equ	0xFEF
 19386                           postinc0	equ	0xFEE
 19387                           fsr0h	equ	0xFEA
 19388                           fsr0l	equ	0xFE9
 19389                           wreg	equ	0xFE8
 19390                           indf1	equ	0xFE7
 19391                           postdec1	equ	0xFE5
 19392                           fsr1h	equ	0xFE2
 19393                           fsr1l	equ	0xFE1
 19394                           indf2	equ	0xFDF
 19395                           postinc2	equ	0xFDE
 19396                           fsr2h	equ	0xFDA
 19397                           fsr2l	equ	0xFD9
 19398                           status	equ	0xFD8
 19399                           
 19400 ;; *************** function _CDCTxService *****************
 19401 ;; Defined at:
 19402 ;;		line 783 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 19403 ;; Parameters:    Size  Location     Type
 19404 ;;		None
 19405 ;; Auto vars:     Size  Location     Type
 19406 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 19407 ;;  i               1   10[BANK0 ] unsigned char 
 19408 ;; Return value:  Size  Location     Type
 19409 ;;		None               void
 19410 ;; Registers used:
 19411 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19412 ;; Tracked objects:
 19413 ;;		On entry : 0/0
 19414 ;;		On exit  : 0/0
 19415 ;;		Unchanged: 0/0
 19416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19417 ;;      Params:         0       0       0       0       0       0       0       0       0
 19418 ;;      Locals:         0       4       0       0       0       0       0       0       0
 19419 ;;      Temps:          0       1       0       0       0       0       0       0       0
 19420 ;;      Totals:         0       5       0       0       0       0       0       0       0
 19421 ;;Total ram usage:        5 bytes
 19422 ;; Hardware stack levels used:    1
 19423 ;; Hardware stack levels required when called:   12
 19424 ;; This function calls:
 19425 ;;		_USBTransferOnePacket
 19426 ;; This function is called by:
 19427 ;;		_USBapp_DeviceCdcEmulatorHandler
 19428 ;; This function uses a non-reentrant model
 19429 ;;
 19430                           
 19431                           	psect	text69
 19432  00267A                     __ptext69:
 19433                           	opt stack 0
 19434  00267A                     _CDCTxService:
 19435                           	opt stack 16
 19436                           
 19437                           ;usb_device_cdc.c: 785: uint8_t byte_to_send;
 19438                           ;usb_device_cdc.c: 786: uint8_t i;
 19439                           ;usb_device_cdc.c: 788: {PIE3bits.USBIE = 0;};
 19440                           
 19441                           ; BSR set to: 0
 19442                           ;incstack = 0
 19443  00267A  94A3               	bcf	4003,2,c	;volatile
 19444                           
 19445                           ;usb_device_cdc.c: 790: {};
 19446                           ;usb_device_cdc.c: 792: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 19447  00267C  0100               	movlb	0	; () banked
 19448  00267E  5176               	movf	_CDCDataInHandle& (0+255),w,b
 19449  002680  0100               	movlb	0	; () banked
 19450  002682  1177               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 19451  002684  B4D8               	btfsc	status,2,c
 19452  002686  D013               	goto	l11398
 19453                           
 19454                           ; BSR set to: 0
 19455  002688  C076  FFD9         	movff	_CDCDataInHandle,fsr2l
 19456  00268C  C077  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 19457  002690  0100               	movlb	0	; () banked
 19458  002692  AEDF               	btfss	indf2,7,c
 19459  002694  D004               	goto	u9840
 19460  002696  0100               	movlb	0	; () banked
 19461  002698  6BCA               	clrf	??_CDCTxService& (0+255),b
 19462  00269A  2BCA               	incf	??_CDCTxService& (0+255),f,b
 19463  00269C  D002               	goto	u9848
 19464  00269E                     u9840:
 19465  00269E  0100               	movlb	0	; () banked
 19466  0026A0  6BCA               	clrf	??_CDCTxService& (0+255),b
 19467  0026A2                     u9848:
 19468  0026A2  0100               	movlb	0	; () banked
 19469  0026A4  51CA               	movf	??_CDCTxService& (0+255),w,b
 19470  0026A6  0100               	movlb	0	; () banked
 19471  0026A8  6FCB               	movwf	_CDCTxService$5932& (0+255),b
 19472  0026AA  6BCC               	clrf	(_CDCTxService$5932+1)& (0+255),b
 19473  0026AC  D005               	goto	l11400
 19474  0026AE                     l11398:
 19475                           
 19476                           ; BSR set to: 0
 19477  0026AE  0E00               	movlw	0
 19478  0026B0  0100               	movlb	0	; () banked
 19479  0026B2  6FCC               	movwf	(_CDCTxService$5932+1)& (0+255),b
 19480  0026B4  0E00               	movlw	0
 19481  0026B6  6FCB               	movwf	_CDCTxService$5932& (0+255),b
 19482  0026B8                     l11400:
 19483                           
 19484                           ; BSR set to: 0
 19485  0026B8  0100               	movlb	0	; () banked
 19486  0026BA  51CB               	movf	_CDCTxService$5932& (0+255),w,b
 19487  0026BC  0100               	movlb	0	; () banked
 19488  0026BE  11CC               	iorwf	(_CDCTxService$5932+1)& (0+255),w,b
 19489  0026C0  B4D8               	btfsc	status,2,c
 19490  0026C2  D002               	goto	l11404
 19491                           
 19492                           ; BSR set to: 0
 19493                           ;usb_device_cdc.c: 793: {
 19494                           ;usb_device_cdc.c: 794: {PIE3bits.USBIE = 1;};
 19495  0026C4  84A3               	bsf	4003,2,c	;volatile
 19496                           
 19497                           ;usb_device_cdc.c: 795: return;
 19498  0026C6  0012               	return	
 19499  0026C8                     l11404:
 19500                           
 19501                           ; BSR set to: 0
 19502                           ;usb_device_cdc.c: 796: }
 19503                           ;usb_device_cdc.c: 803: if(cdc_trf_state == 3)
 19504  0026C8  0E03               	movlw	3
 19505  0026CA  1823               	xorwf	_cdc_trf_state,w,c
 19506  0026CC  A4D8               	btfss	status,2,c
 19507  0026CE  D002               	goto	l1982
 19508                           
 19509                           ; BSR set to: 0
 19510                           ;usb_device_cdc.c: 804: cdc_trf_state = 0;
 19511  0026D0  0E00               	movlw	0
 19512  0026D2  6E23               	movwf	_cdc_trf_state,c
 19513  0026D4                     l1982:
 19514                           
 19515                           ; BSR set to: 0
 19516                           ;usb_device_cdc.c: 809: if(cdc_trf_state == 0)
 19517  0026D4  5023               	movf	_cdc_trf_state,w,c
 19518  0026D6  A4D8               	btfss	status,2,c
 19519  0026D8  D002               	goto	l11410
 19520                           
 19521                           ; BSR set to: 0
 19522                           ;usb_device_cdc.c: 810: {
 19523                           ;usb_device_cdc.c: 811: {PIE3bits.USBIE = 1;};
 19524  0026DA  84A3               	bsf	4003,2,c	;volatile
 19525                           
 19526                           ;usb_device_cdc.c: 812: return;
 19527  0026DC  0012               	return	
 19528  0026DE                     l11410:
 19529                           
 19530                           ; BSR set to: 0
 19531                           ;usb_device_cdc.c: 813: }
 19532                           ;usb_device_cdc.c: 818: if(cdc_trf_state == 2)
 19533  0026DE  0E02               	movlw	2
 19534  0026E0  1823               	xorwf	_cdc_trf_state,w,c
 19535  0026E2  A4D8               	btfss	status,2,c
 19536  0026E4  D016               	goto	l11416
 19537                           
 19538                           ; BSR set to: 0
 19539                           ;usb_device_cdc.c: 819: {
 19540                           ;usb_device_cdc.c: 820: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 19541  0026E6  0E01               	movlw	1
 19542  0026E8  0100               	movlb	0	; () banked
 19543  0026EA  6FC3               	movwf	USBTransferOnePacket@dir& (0+255),b
 19544  0026EC  0E00               	movlw	0
 19545  0026EE  0100               	movlb	0	; () banked
 19546  0026F0  6FC4               	movwf	USBTransferOnePacket@data& (0+255),b
 19547  0026F2  0E00               	movlw	0
 19548  0026F4  0100               	movlb	0	; () banked
 19549  0026F6  6FC5               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 19550  0026F8  0E00               	movlw	0
 19551  0026FA  0100               	movlb	0	; () banked
 19552  0026FC  6FC6               	movwf	USBTransferOnePacket@len& (0+255),b
 19553  0026FE  0E02               	movlw	2
 19554  002700  EC1D  F01F         	call	_USBTransferOnePacket
 19555  002704  C0C3  F076         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 19556  002708  C0C4  F077         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 19557                           
 19558                           ;usb_device_cdc.c: 822: cdc_trf_state = 3;
 19559  00270C  0E03               	movlw	3
 19560  00270E  6E23               	movwf	_cdc_trf_state,c
 19561                           
 19562                           ;usb_device_cdc.c: 823: }
 19563  002710  D06F               	goto	l11460
 19564  002712                     l11416:
 19565                           
 19566                           ;usb_device_cdc.c: 824: else if(cdc_trf_state == 1)
 19567  002712  0423               	decf	_cdc_trf_state,w,c
 19568  002714  A4D8               	btfss	status,2,c
 19569  002716  D06C               	goto	l11460
 19570                           
 19571                           ;usb_device_cdc.c: 825: {
 19572                           ;usb_device_cdc.c: 829: if(cdc_tx_len > sizeof(cdc_data_tx))
 19573  002718  0E40               	movlw	64
 19574  00271A  0100               	movlb	0	; () banked
 19575  00271C  659F               	cpfsgt	_cdc_tx_len& (0+255),b
 19576  00271E  D004               	goto	l1987
 19577                           
 19578                           ; BSR set to: 0
 19579                           ;usb_device_cdc.c: 830: byte_to_send = sizeof(cdc_data_tx);
 19580  002720  0E40               	movlw	64
 19581  002722  0100               	movlb	0	; () banked
 19582  002724  6FCE               	movwf	CDCTxService@byte_to_send& (0+255),b
 19583  002726  D002               	goto	l11422
 19584  002728                     l1987:
 19585                           
 19586                           ; BSR set to: 0
 19587                           ;usb_device_cdc.c: 831: else
 19588                           ;usb_device_cdc.c: 832: byte_to_send = cdc_tx_len;
 19589  002728  C09F  F0CE         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 19590  00272C                     l11422:
 19591                           
 19592                           ; BSR set to: 0
 19593                           ;usb_device_cdc.c: 837: cdc_tx_len = cdc_tx_len - byte_to_send;
 19594  00272C  0100               	movlb	0	; () banked
 19595  00272E  51CE               	movf	CDCTxService@byte_to_send& (0+255),w,b
 19596  002730  0800               	sublw	0
 19597  002732  0100               	movlb	0	; () banked
 19598  002734  259F               	addwf	_cdc_tx_len& (0+255),w,b
 19599  002736  0100               	movlb	0	; () banked
 19600  002738  6F9F               	movwf	_cdc_tx_len& (0+255),b
 19601                           
 19602                           ;usb_device_cdc.c: 839: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 19603  00273A  0E00               	movlw	0
 19604  00273C  0100               	movlb	0	; () banked
 19605  00273E  6F70               	movwf	_pCDCDst& (0+255),b
 19606  002740  0E05               	movlw	5
 19607  002742  0100               	movlb	0	; () banked
 19608  002744  6F71               	movwf	(_pCDCDst+1)& (0+255),b
 19609                           
 19610                           ; BSR set to: 0
 19611                           ;usb_device_cdc.c: 841: i = byte_to_send;
 19612  002746  C0CE  F0CD         	movff	CDCTxService@byte_to_send,CDCTxService@i
 19613                           
 19614                           ; BSR set to: 0
 19615                           ;usb_device_cdc.c: 842: if(cdc_mem_type == 0x00)
 19616  00274A  0100               	movlb	0	; () banked
 19617  00274C  519D               	movf	_cdc_mem_type& (0+255),w,b
 19618  00274E  B4D8               	btfsc	status,2,c
 19619  002750  D013               	goto	l11438
 19620  002752  D02A               	goto	l11448
 19621  002754                     l11430:
 19622                           
 19623                           ; BSR set to: 0
 19624                           ;usb_device_cdc.c: 845: {
 19625                           ;usb_device_cdc.c: 846: *pCDCDst.bRam = *pCDCSrc.bRom;
 19626  002754  C073  FFD9         	movff	_pCDCSrc,fsr2l
 19627  002758  C074  FFDA         	movff	_pCDCSrc+1,fsr2h
 19628  00275C  C070  FFE1         	movff	_pCDCDst,fsr1l
 19629  002760  C071  FFE2         	movff	_pCDCDst+1,fsr1h
 19630  002764  CFDF FFE7          	movff	indf2,indf1
 19631                           
 19632                           ; BSR set to: 0
 19633                           ;usb_device_cdc.c: 847: pCDCDst.bRam++;
 19634  002768  0100               	movlb	0	; () banked
 19635  00276A  4B70               	infsnz	_pCDCDst& (0+255),f,b
 19636  00276C  2B71               	incf	(_pCDCDst+1)& (0+255),f,b
 19637                           
 19638                           ; BSR set to: 0
 19639                           ;usb_device_cdc.c: 848: pCDCSrc.bRom++;
 19640  00276E  0100               	movlb	0	; () banked
 19641  002770  4B73               	infsnz	_pCDCSrc& (0+255),f,b
 19642  002772  2B74               	incf	(_pCDCSrc+1)& (0+255),f,b
 19643                           
 19644                           ; BSR set to: 0
 19645                           ;usb_device_cdc.c: 849: i--;
 19646  002774  0100               	movlb	0	; () banked
 19647  002776  07CD               	decf	CDCTxService@i& (0+255),f,b
 19648  002778                     l11438:
 19649                           
 19650                           ; BSR set to: 0
 19651  002778  0100               	movlb	0	; () banked
 19652  00277A  51CD               	movf	CDCTxService@i& (0+255),w,b
 19653  00277C  0100               	movlb	0	; () banked
 19654  00277E  B4D8               	btfsc	status,2,c
 19655  002780  D018               	goto	l11450
 19656  002782  D7E8               	goto	l11430
 19657  002784                     l11440:
 19658                           
 19659                           ; BSR set to: 0
 19660                           ;usb_device_cdc.c: 855: {
 19661                           ;usb_device_cdc.c: 856: *pCDCDst.bRam = *pCDCSrc.bRam;
 19662  002784  C073  FFD9         	movff	_pCDCSrc,fsr2l
 19663  002788  C074  FFDA         	movff	_pCDCSrc+1,fsr2h
 19664  00278C  C070  FFE1         	movff	_pCDCDst,fsr1l
 19665  002790  C071  FFE2         	movff	_pCDCDst+1,fsr1h
 19666  002794  CFDF FFE7          	movff	indf2,indf1
 19667                           
 19668                           ; BSR set to: 0
 19669                           ;usb_device_cdc.c: 857: pCDCDst.bRam++;
 19670  002798  0100               	movlb	0	; () banked
 19671  00279A  4B70               	infsnz	_pCDCDst& (0+255),f,b
 19672  00279C  2B71               	incf	(_pCDCDst+1)& (0+255),f,b
 19673                           
 19674                           ; BSR set to: 0
 19675                           ;usb_device_cdc.c: 858: pCDCSrc.bRam++;
 19676  00279E  0100               	movlb	0	; () banked
 19677  0027A0  4B73               	infsnz	_pCDCSrc& (0+255),f,b
 19678  0027A2  2B74               	incf	(_pCDCSrc+1)& (0+255),f,b
 19679                           
 19680                           ; BSR set to: 0
 19681                           ;usb_device_cdc.c: 859: i--;
 19682  0027A4  0100               	movlb	0	; () banked
 19683  0027A6  07CD               	decf	CDCTxService@i& (0+255),f,b
 19684  0027A8                     l11448:
 19685                           
 19686                           ; BSR set to: 0
 19687  0027A8  0100               	movlb	0	; () banked
 19688  0027AA  51CD               	movf	CDCTxService@i& (0+255),w,b
 19689  0027AC  0100               	movlb	0	; () banked
 19690  0027AE  A4D8               	btfss	status,2,c
 19691  0027B0  D7E9               	goto	l11440
 19692  0027B2                     l11450:
 19693                           
 19694                           ; BSR set to: 0
 19695                           ;usb_device_cdc.c: 860: }
 19696                           ;usb_device_cdc.c: 861: }
 19697                           ;usb_device_cdc.c: 867: if(cdc_tx_len == 0)
 19698  0027B2  0100               	movlb	0	; () banked
 19699  0027B4  519F               	movf	_cdc_tx_len& (0+255),w,b
 19700  0027B6  A4D8               	btfss	status,2,c
 19701  0027B8  D009               	goto	l11458
 19702                           
 19703                           ; BSR set to: 0
 19704                           ;usb_device_cdc.c: 868: {
 19705                           ;usb_device_cdc.c: 869: if(byte_to_send == 64)
 19706  0027BA  0E40               	movlw	64
 19707  0027BC  0100               	movlb	0	; () banked
 19708  0027BE  19CE               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 19709  0027C0  A4D8               	btfss	status,2,c
 19710  0027C2  D002               	goto	l11456
 19711                           
 19712                           ; BSR set to: 0
 19713                           ;usb_device_cdc.c: 870: cdc_trf_state = 2;
 19714  0027C4  0E02               	movlw	2
 19715  0027C6  D001               	goto	L12
 19716  0027C8                     l11456:
 19717                           
 19718                           ; BSR set to: 0
 19719                           ;usb_device_cdc.c: 871: else
 19720                           ;usb_device_cdc.c: 872: cdc_trf_state = 3;
 19721  0027C8  0E03               	movlw	3
 19722  0027CA                     L12:
 19723  0027CA  6E23               	movwf	_cdc_trf_state,c
 19724  0027CC                     l11458:
 19725                           
 19726                           ; BSR set to: 0
 19727                           ;usb_device_cdc.c: 873: }
 19728                           ;usb_device_cdc.c: 874: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 19729  0027CC  0E01               	movlw	1
 19730  0027CE  0100               	movlb	0	; () banked
 19731  0027D0  6FC3               	movwf	USBTransferOnePacket@dir& (0+255),b
 19732  0027D2  0E00               	movlw	0
 19733  0027D4  0100               	movlb	0	; () banked
 19734  0027D6  6FC4               	movwf	USBTransferOnePacket@data& (0+255),b
 19735  0027D8  0E05               	movlw	5
 19736  0027DA  0100               	movlb	0	; () banked
 19737  0027DC  6FC5               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 19738  0027DE  C0CE  F0C6         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 19739  0027E2  0E02               	movlw	2
 19740  0027E4  EC1D  F01F         	call	_USBTransferOnePacket
 19741  0027E8  C0C3  F076         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 19742  0027EC  C0C4  F077         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 19743  0027F0                     l11460:
 19744                           
 19745                           ;usb_device_cdc.c: 876: }
 19746                           ;usb_device_cdc.c: 878: {PIE3bits.USBIE = 1;};
 19747  0027F0  84A3               	bsf	4003,2,c	;volatile
 19748  0027F2  0012               	return		;funcret
 19749  0027F4                     __end_of_CDCTxService:
 19750                           	opt stack 0
 19751                           tblptru	equ	0xFF8
 19752                           tblptrh	equ	0xFF7
 19753                           tblptrl	equ	0xFF6
 19754                           tablat	equ	0xFF5
 19755                           prodh	equ	0xFF4
 19756                           prodl	equ	0xFF3
 19757                           intcon	equ	0xFF2
 19758                           indf0	equ	0xFEF
 19759                           postinc0	equ	0xFEE
 19760                           fsr0h	equ	0xFEA
 19761                           fsr0l	equ	0xFE9
 19762                           wreg	equ	0xFE8
 19763                           indf1	equ	0xFE7
 19764                           postdec1	equ	0xFE5
 19765                           fsr1h	equ	0xFE2
 19766                           fsr1l	equ	0xFE1
 19767                           indf2	equ	0xFDF
 19768                           postinc2	equ	0xFDE
 19769                           fsr2h	equ	0xFDA
 19770                           fsr2l	equ	0xFD9
 19771                           status	equ	0xFD8
 19772                           
 19773 ;; *************** function _USBTransferOnePacket *****************
 19774 ;; Defined at:
 19775 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 19776 ;; Parameters:    Size  Location     Type
 19777 ;;  ep              1    wreg     unsigned char 
 19778 ;;  dir             1    0[BANK0 ] unsigned char 
 19779 ;;  data            2    1[BANK0 ] PTR unsigned char 
 19780 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 19781 ;;  len             1    3[BANK0 ] unsigned char 
 19782 ;; Auto vars:     Size  Location     Type
 19783 ;;  ep              1    4[BANK0 ] unsigned char 
 19784 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 19785 ;;		 -> BDT(48), NULL(0), 
 19786 ;; Return value:  Size  Location     Type
 19787 ;;                  2    0[BANK0 ] PTR void 
 19788 ;; Registers used:
 19789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19790 ;; Tracked objects:
 19791 ;;		On entry : 0/0
 19792 ;;		On exit  : 0/0
 19793 ;;		Unchanged: 0/0
 19794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19795 ;;      Params:         0       4       0       0       0       0       0       0       0
 19796 ;;      Locals:         0       3       0       0       0       0       0       0       0
 19797 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19798 ;;      Totals:         0       7       0       0       0       0       0       0       0
 19799 ;;Total ram usage:        7 bytes
 19800 ;; Hardware stack levels used:    1
 19801 ;; Hardware stack levels required when called:   11
 19802 ;; This function calls:
 19803 ;;		Nothing
 19804 ;; This function is called by:
 19805 ;;		_getsUSBUSART
 19806 ;;		_CDCTxService
 19807 ;;		_USBCDCEventHandler
 19808 ;; This function uses a non-reentrant model
 19809 ;;
 19810                           
 19811                           	psect	text70
 19812  003E3A                     __ptext70:
 19813                           	opt stack 0
 19814  003E3A                     _USBTransferOnePacket:
 19815                           	opt stack 16
 19816                           
 19817                           ;incstack = 0
 19818                           ;USBTransferOnePacket@ep stored from wreg
 19819  003E3A  0100               	movlb	0	; () banked
 19820  003E3C  6FC7               	movwf	USBTransferOnePacket@ep& (0+255),b
 19821                           
 19822                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 19823                           ;usb_device.c: 762: if(dir != 0)
 19824  003E3E  0100               	movlb	0	; () banked
 19825  003E40  51C3               	movf	USBTransferOnePacket@dir& (0+255),w,b
 19826  003E42  0100               	movlb	0	; () banked
 19827  003E44  B4D8               	btfsc	status,2,c
 19828  003E46  D008               	goto	l10868
 19829                           
 19830                           ; BSR set to: 0
 19831                           ;usb_device.c: 763: {
 19832                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 19833  003E48  0100               	movlb	0	; () banked
 19834  003E4A  51C7               	movf	USBTransferOnePacket@ep& (0+255),w,b
 19835  003E4C  0D02               	mullw	2
 19836  003E4E  0E0F               	movlw	low _pBDTEntryIn
 19837  003E50  24F3               	addwf	prodl,w,c
 19838  003E52  6ED9               	movwf	fsr2l,c
 19839  003E54  0E00               	movlw	high _pBDTEntryIn
 19840  003E56  D007               	goto	L13
 19841  003E58                     l10868:
 19842                           
 19843                           ; BSR set to: 0
 19844                           ;usb_device.c: 767: else
 19845                           ;usb_device.c: 768: {
 19846                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 19847  003E58  0100               	movlb	0	; () banked
 19848  003E5A  51C7               	movf	USBTransferOnePacket@ep& (0+255),w,b
 19849  003E5C  0D02               	mullw	2
 19850  003E5E  0E60               	movlw	low _pBDTEntryOut
 19851  003E60  24F3               	addwf	prodl,w,c
 19852  003E62  6ED9               	movwf	fsr2l,c
 19853  003E64  0E00               	movlw	high _pBDTEntryOut
 19854  003E66                     L13:
 19855  003E66  20F4               	addwfc	prodh,w,c
 19856  003E68  6EDA               	movwf	fsr2h,c
 19857  003E6A  CFDE F0C8          	movff	postinc2,USBTransferOnePacket@handle
 19858  003E6E  CFDD F0C9          	movff	postdec2,USBTransferOnePacket@handle+1
 19859                           
 19860                           ; BSR set to: 0
 19861                           ;usb_device.c: 771: }
 19862                           ;usb_device.c: 775: if(handle == 0)
 19863                           
 19864                           ; BSR set to: 0
 19865  003E72  0100               	movlb	0	; () banked
 19866  003E74  51C8               	movf	USBTransferOnePacket@handle& (0+255),w,b
 19867  003E76  0100               	movlb	0	; () banked
 19868  003E78  11C9               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 19869  003E7A  A4D8               	btfss	status,2,c
 19870  003E7C  D007               	goto	l10876
 19871                           
 19872                           ; BSR set to: 0
 19873                           ;usb_device.c: 776: {
 19874                           ;usb_device.c: 777: return 0;
 19875  003E7E  0E00               	movlw	0
 19876  003E80  0100               	movlb	0	; () banked
 19877  003E82  6FC3               	movwf	?_USBTransferOnePacket& (0+255),b
 19878  003E84  0E00               	movlw	0
 19879  003E86  0100               	movlb	0	; () banked
 19880  003E88  6FC4               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 19881                           
 19882                           ; BSR set to: 0
 19883  003E8A  0012               	return	
 19884  003E8C                     l10876:
 19885                           
 19886                           ; BSR set to: 0
 19887                           ;usb_device.c: 778: }
 19888                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 19889  003E8C  0100               	movlb	0	; () banked
 19890  003E8E  EE20 F002          	lfsr	2,2
 19891  003E92  51C8               	movf	USBTransferOnePacket@handle& (0+255),w,b
 19892  003E94  26D9               	addwf	fsr2l,f,c
 19893  003E96  51C9               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 19894  003E98  22DA               	addwfc	fsr2h,f,c
 19895  003E9A  C0C4  FFDE         	movff	USBTransferOnePacket@data,postinc2
 19896  003E9E  C0C5  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 19897                           
 19898                           ;usb_device.c: 781: handle->CNT = len;
 19899  003EA2  0100               	movlb	0	; () banked
 19900  003EA4  EE20 F001          	lfsr	2,1
 19901  003EA8  51C8               	movf	USBTransferOnePacket@handle& (0+255),w,b
 19902  003EAA  26D9               	addwf	fsr2l,f,c
 19903  003EAC  51C9               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 19904  003EAE  22DA               	addwfc	fsr2h,f,c
 19905  003EB0  C0C6  FFDF         	movff	USBTransferOnePacket@len,indf2
 19906                           
 19907                           ; BSR set to: 0
 19908                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 19909  003EB4  C0C8  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 19910  003EB8  C0C9  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 19911  003EBC  0E40               	movlw	64
 19912  003EBE  16DF               	andwf	indf2,f,c
 19913                           
 19914                           ; BSR set to: 0
 19915                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 19916  003EC0  C0C8  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 19917  003EC4  C0C9  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 19918  003EC8  0E00               	movlw	0
 19919  003ECA  86DB               	bsf	plusw2,3,c
 19920                           
 19921                           ; BSR set to: 0
 19922                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 19923  003ECC  C0C8  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 19924  003ED0  C0C9  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 19925  003ED4  0E00               	movlw	0
 19926  003ED6  8EDB               	bsf	plusw2,7,c
 19927                           
 19928                           ; BSR set to: 0
 19929                           ;usb_device.c: 787: if(dir != 0)
 19930  003ED8  0100               	movlb	0	; () banked
 19931  003EDA  51C3               	movf	USBTransferOnePacket@dir& (0+255),w,b
 19932  003EDC  0100               	movlb	0	; () banked
 19933  003EDE  B4D8               	btfsc	status,2,c
 19934  003EE0  D008               	goto	l10888
 19935                           
 19936                           ; BSR set to: 0
 19937                           ;usb_device.c: 788: {
 19938                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 19939  003EE2  0100               	movlb	0	; () banked
 19940  003EE4  51C7               	movf	USBTransferOnePacket@ep& (0+255),w,b
 19941  003EE6  0D02               	mullw	2
 19942  003EE8  0E0F               	movlw	low _pBDTEntryIn
 19943  003EEA  24F3               	addwf	prodl,w,c
 19944  003EEC  6ED9               	movwf	fsr2l,c
 19945  003EEE  0E00               	movlw	high _pBDTEntryIn
 19946  003EF0  D007               	goto	L14
 19947  003EF2                     l10888:
 19948                           
 19949                           ; BSR set to: 0
 19950                           ;usb_device.c: 792: else
 19951                           ;usb_device.c: 793: {
 19952                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 19953  003EF2  0100               	movlb	0	; () banked
 19954  003EF4  51C7               	movf	USBTransferOnePacket@ep& (0+255),w,b
 19955  003EF6  0D02               	mullw	2
 19956  003EF8  0E60               	movlw	low _pBDTEntryOut
 19957  003EFA  24F3               	addwf	prodl,w,c
 19958  003EFC  6ED9               	movwf	fsr2l,c
 19959  003EFE  0E00               	movlw	high _pBDTEntryOut
 19960  003F00                     L14:
 19961  003F00  20F4               	addwfc	prodh,w,c
 19962  003F02  6EDA               	movwf	fsr2h,c
 19963  003F04  0E04               	movlw	4
 19964  003F06  1ADF               	xorwf	indf2,f,c
 19965                           
 19966                           ; BSR set to: 0
 19967                           ;usb_device.c: 796: }
 19968                           ;usb_device.c: 797: return (void*)handle;
 19969                           
 19970                           ; BSR set to: 0
 19971  003F08  C0C8  F0C3         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 19972  003F0C  C0C9  F0C4         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 19973  003F10  0012               	return	
 19974  003F12                     __end_of_USBTransferOnePacket:
 19975                           	opt stack 0
 19976                           tblptru	equ	0xFF8
 19977                           tblptrh	equ	0xFF7
 19978                           tblptrl	equ	0xFF6
 19979                           tablat	equ	0xFF5
 19980                           prodh	equ	0xFF4
 19981                           prodl	equ	0xFF3
 19982                           intcon	equ	0xFF2
 19983                           indf0	equ	0xFEF
 19984                           postinc0	equ	0xFEE
 19985                           fsr0h	equ	0xFEA
 19986                           fsr0l	equ	0xFE9
 19987                           wreg	equ	0xFE8
 19988                           indf1	equ	0xFE7
 19989                           postdec1	equ	0xFE5
 19990                           fsr1h	equ	0xFE2
 19991                           fsr1l	equ	0xFE1
 19992                           indf2	equ	0xFDF
 19993                           postinc2	equ	0xFDE
 19994                           postdec2	equ	0xFDD
 19995                           plusw2	equ	0xFDB
 19996                           fsr2h	equ	0xFDA
 19997                           fsr2l	equ	0xFD9
 19998                           status	equ	0xFD8
 19999                           
 20000 ;; *************** function _USBDeviceInit *****************
 20001 ;; Defined at:
 20002 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 20003 ;; Parameters:    Size  Location     Type
 20004 ;;		None
 20005 ;; Auto vars:     Size  Location     Type
 20006 ;;  i               1    8[BANK0 ] unsigned char 
 20007 ;; Return value:  Size  Location     Type
 20008 ;;		None               void
 20009 ;; Registers used:
 20010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20011 ;; Tracked objects:
 20012 ;;		On entry : 0/0
 20013 ;;		On exit  : 0/0
 20014 ;;		Unchanged: 0/0
 20015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20016 ;;      Params:         0       0       0       0       0       0       0       0       0
 20017 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20018 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20019 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20020 ;;Total ram usage:        1 bytes
 20021 ;; Hardware stack levels used:    1
 20022 ;; Hardware stack levels required when called:   12
 20023 ;; This function calls:
 20024 ;;		_memset
 20025 ;; This function is called by:
 20026 ;;		_main
 20027 ;; This function uses a non-reentrant model
 20028 ;;
 20029                           
 20030                           	psect	text71
 20031  0027F4                     __ptext71:
 20032                           	opt stack 0
 20033  0027F4                     _USBDeviceInit:
 20034                           	opt stack 18
 20035                           
 20036                           ;usb_device.c: 239: uint8_t i;
 20037                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 20038                           
 20039                           ; BSR set to: 0
 20040                           ;incstack = 0
 20041  0027F4  94A3               	bcf	4003,2,c	;volatile
 20042                           
 20043                           ;usb_device.c: 244: {UEIR = 0;};
 20044  0027F6  0E00               	movlw	0
 20045  0027F8  6E67               	movwf	3943,c	;volatile
 20046                           
 20047                           ;usb_device.c: 247: {UIR = 0;};
 20048  0027FA  0E00               	movlw	0
 20049  0027FC  6E65               	movwf	3941,c	;volatile
 20050                           
 20051                           ;usb_device.c: 250: UEP0 = 0;
 20052  0027FE  0E00               	movlw	0
 20053  002800  6E6A               	movwf	3946,c	;volatile
 20054                           
 20055                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 20056  002802  0E6B               	movlw	107
 20057  002804  0100               	movlb	0	; () banked
 20058  002806  6FC3               	movwf	memset@p1& (0+255),b
 20059  002808  0E0F               	movlw	15
 20060  00280A  0100               	movlb	0	; () banked
 20061  00280C  6FC4               	movwf	(memset@p1+1)& (0+255),b
 20062  00280E  0E00               	movlw	0
 20063  002810  0100               	movlb	0	; () banked
 20064  002812  6FC6               	movwf	(memset@c+1)& (0+255),b
 20065  002814  0E00               	movlw	0
 20066  002816  6FC5               	movwf	memset@c& (0+255),b
 20067  002818  0E00               	movlw	0
 20068  00281A  0100               	movlb	0	; () banked
 20069  00281C  6FC8               	movwf	(memset@n+1)& (0+255),b
 20070  00281E  0E02               	movlw	2
 20071  002820  6FC7               	movwf	memset@n& (0+255),b
 20072  002822  ECE2  F02A         	call	_memset	;wreg free
 20073                           
 20074                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 20075  002826  0E16               	movlw	22
 20076  002828  6E62               	movwf	3938,c	;volatile
 20077  00282A  0E9F               	movlw	159
 20078  00282C  6E66               	movwf	3942,c	;volatile
 20079  00282E  0E7B               	movlw	123
 20080  002830  6E64               	movwf	3940,c	;volatile
 20081                           
 20082                           ;usb_device.c: 257: ;
 20083                           ;usb_device.c: 260: ;
 20084                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 20085  002832  0E00               	movlw	0
 20086  002834  0100               	movlb	0	; () banked
 20087  002836  6FCB               	movwf	USBDeviceInit@i& (0+255),b
 20088  002838                     l12748:
 20089                           
 20090                           ; BSR set to: 0
 20091  002838  0E0B               	movlw	11
 20092  00283A  0100               	movlb	0	; () banked
 20093  00283C  65CB               	cpfsgt	USBDeviceInit@i& (0+255),b
 20094  00283E  D001               	goto	l12752
 20095  002840  D010               	goto	l1622
 20096  002842                     l12752:
 20097                           
 20098                           ; BSR set to: 0
 20099                           ;usb_device.c: 264: {
 20100                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 20101  002842  0100               	movlb	0	; () banked
 20102  002844  51CB               	movf	USBDeviceInit@i& (0+255),w,b
 20103  002846  0D04               	mullw	4
 20104  002848  0E00               	movlw	0
 20105  00284A  24F3               	addwf	prodl,w,c
 20106  00284C  6ED9               	movwf	fsr2l,c
 20107  00284E  0E04               	movlw	4
 20108  002850  20F4               	addwfc	prodh,w,c
 20109  002852  6EDA               	movwf	fsr2h,c
 20110  002854  6ADE               	clrf	postinc2,c
 20111  002856  6ADE               	clrf	postinc2,c
 20112  002858  6ADE               	clrf	postinc2,c
 20113  00285A  6ADD               	clrf	postdec2,c
 20114                           
 20115                           ; BSR set to: 0
 20116  00285C  0100               	movlb	0	; () banked
 20117  00285E  2BCB               	incf	USBDeviceInit@i& (0+255),f,b
 20118  002860  D7EB               	goto	l12748
 20119  002862                     l1622:
 20120                           
 20121                           ; BSR set to: 0
 20122                           ;usb_device.c: 266: }
 20123                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 20124  002862  8C60               	bsf	3936,6,c	;volatile
 20125                           
 20126                           ; BSR set to: 0
 20127                           ;usb_device.c: 272: UADDR = 0x00;
 20128  002864  0E00               	movlw	0
 20129  002866  6E63               	movwf	3939,c	;volatile
 20130                           
 20131                           ; BSR set to: 0
 20132                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 20133  002868  9860               	bcf	3936,4,c	;volatile
 20134                           
 20135                           ; BSR set to: 0
 20136                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 20137  00286A  9C60               	bcf	3936,6,c	;volatile
 20138                           
 20139                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 20140  00286C  D009               	goto	l12772
 20141  00286E                     l12764:
 20142                           
 20143                           ;usb_device.c: 282: {
 20144                           ;usb_device.c: 283: (UIR &= 0xF7);
 20145  00286E  9665               	bcf	3941,3,c	;volatile
 20146                           
 20147                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 20148  002870  0E00               	movlw	0
 20149  002872  6E0C               	movwf	_inPipes+3,c	;volatile
 20150                           
 20151                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 20152  002874  0E00               	movlw	0
 20153  002876  6E04               	movwf	_outPipes+3,c	;volatile
 20154                           
 20155                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 20156  002878  0E00               	movlw	0
 20157  00287A  6E06               	movwf	_outPipes+5,c	;volatile
 20158  00287C  0E00               	movlw	0
 20159  00287E  6E05               	movwf	_outPipes+4,c	;volatile
 20160  002880                     l12772:
 20161  002880  B665               	btfsc	3941,3,c	;volatile
 20162  002882  D7F5               	goto	l12764
 20163                           
 20164                           ;usb_device.c: 288: }
 20165                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 20166  002884  0E01               	movlw	1
 20167  002886  0100               	movlb	0	; () banked
 20168  002888  6F98               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 20169                           
 20170                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 20171  00288A  0E01               	movlw	1
 20172  00288C  0100               	movlb	0	; () banked
 20173  00288E  6F99               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 20174                           
 20175                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 20176  002890  0E00               	movlw	0
 20177  002892  0100               	movlb	0	; () banked
 20178  002894  6F95               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 20179                           
 20180                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 20181  002896  0E00               	movlw	0
 20182  002898  0100               	movlb	0	; () banked
 20183  00289A  6F96               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 20184                           
 20185                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 20186  00289C  0E00               	movlw	0
 20187  00289E  0100               	movlb	0	; () banked
 20188  0028A0  6F94               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 20189                           
 20190                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 20191  0028A2  0E00               	movlw	0
 20192  0028A4  0100               	movlb	0	; () banked
 20193  0028A6  6FCB               	movwf	USBDeviceInit@i& (0+255),b
 20194  0028A8                     l12776:
 20195                           
 20196                           ; BSR set to: 0
 20197  0028A8  0E02               	movlw	2
 20198  0028AA  0100               	movlb	0	; () banked
 20199  0028AC  65CB               	cpfsgt	USBDeviceInit@i& (0+255),b
 20200  0028AE  D001               	goto	l12780
 20201  0028B0  D033               	goto	l12786
 20202  0028B2                     l12780:
 20203                           
 20204                           ; BSR set to: 0
 20205                           ;usb_device.c: 302: {
 20206                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 20207  0028B2  0100               	movlb	0	; () banked
 20208  0028B4  51CB               	movf	USBDeviceInit@i& (0+255),w,b
 20209  0028B6  0D02               	mullw	2
 20210  0028B8  0E0F               	movlw	low _pBDTEntryIn
 20211  0028BA  24F3               	addwf	prodl,w,c
 20212  0028BC  6ED9               	movwf	fsr2l,c
 20213  0028BE  0E00               	movlw	high _pBDTEntryIn
 20214  0028C0  20F4               	addwfc	prodh,w,c
 20215  0028C2  6EDA               	movwf	fsr2h,c
 20216  0028C4  0E00               	movlw	0
 20217  0028C6  6EDE               	movwf	postinc2,c
 20218  0028C8  0E00               	movlw	0
 20219  0028CA  6EDD               	movwf	postdec2,c
 20220                           
 20221                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 20222  0028CC  0100               	movlb	0	; () banked
 20223  0028CE  51CB               	movf	USBDeviceInit@i& (0+255),w,b
 20224  0028D0  0D02               	mullw	2
 20225  0028D2  0E60               	movlw	low _pBDTEntryOut
 20226  0028D4  24F3               	addwf	prodl,w,c
 20227  0028D6  6ED9               	movwf	fsr2l,c
 20228  0028D8  0E00               	movlw	high _pBDTEntryOut
 20229  0028DA  20F4               	addwfc	prodh,w,c
 20230  0028DC  6EDA               	movwf	fsr2h,c
 20231  0028DE  0E00               	movlw	0
 20232  0028E0  6EDE               	movwf	postinc2,c
 20233  0028E2  0E00               	movlw	0
 20234  0028E4  6EDD               	movwf	postdec2,c
 20235                           
 20236                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 20237  0028E6  0100               	movlb	0	; () banked
 20238  0028E8  51CB               	movf	USBDeviceInit@i& (0+255),w,b
 20239  0028EA  0D01               	mullw	1
 20240  0028EC  0E6A               	movlw	low _ep_data_in
 20241  0028EE  24F3               	addwf	prodl,w,c
 20242  0028F0  6ED9               	movwf	fsr2l,c
 20243  0028F2  0E00               	movlw	high _ep_data_in
 20244  0028F4  20F4               	addwfc	prodh,w,c
 20245  0028F6  6EDA               	movwf	fsr2h,c
 20246  0028F8  0E00               	movlw	0
 20247  0028FA  6EDF               	movwf	indf2,c
 20248                           
 20249                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 20250  0028FC  0100               	movlb	0	; () banked
 20251  0028FE  51CB               	movf	USBDeviceInit@i& (0+255),w,b
 20252  002900  0D01               	mullw	1
 20253  002902  0E6D               	movlw	low _ep_data_out
 20254  002904  24F3               	addwf	prodl,w,c
 20255  002906  6ED9               	movwf	fsr2l,c
 20256  002908  0E00               	movlw	high _ep_data_out
 20257  00290A  20F4               	addwfc	prodh,w,c
 20258  00290C  6EDA               	movwf	fsr2h,c
 20259  00290E  0E00               	movlw	0
 20260  002910  6EDF               	movwf	indf2,c
 20261                           
 20262                           ; BSR set to: 0
 20263  002912  0100               	movlb	0	; () banked
 20264  002914  2BCB               	incf	USBDeviceInit@i& (0+255),f,b
 20265  002916  D7C8               	goto	l12776
 20266  002918                     l12786:
 20267                           
 20268                           ; BSR set to: 0
 20269                           ;usb_device.c: 307: }
 20270                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 20271  002918  0E08               	movlw	8
 20272  00291A  6E0F               	movwf	_pBDTEntryIn,c
 20273  00291C  0E04               	movlw	4
 20274  00291E  6E10               	movwf	_pBDTEntryIn+1,c
 20275                           
 20276                           ; BSR set to: 0
 20277                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 20278  002920  0E16               	movlw	22
 20279  002922  6E6A               	movwf	3946,c	;volatile
 20280                           
 20281                           ; BSR set to: 0
 20282                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 20283  002924  0E04               	movlw	4
 20284  002926  0104               	movlb	4	; () banked
 20285  002928  6F03               	movwf	3,b	;volatile
 20286  00292A  0E30               	movlw	48
 20287  00292C  6F02               	movwf	2,b	;volatile
 20288                           
 20289                           ; BSR set to: 4
 20290                           ;usb_device.c: 315: BDT[0].CNT = 8;
 20291  00292E  0E08               	movlw	8
 20292  002930  0104               	movlb	4	; () banked
 20293  002932  6F01               	movwf	1,b	;volatile
 20294                           
 20295                           ; BSR set to: 4
 20296                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 20297  002934  0E04               	movlw	4
 20298  002936  0104               	movlb	4	; () banked
 20299  002938  6F00               	movwf	0,b	;volatile
 20300                           
 20301                           ; BSR set to: 4
 20302                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 20303  00293A  0104               	movlb	4	; () banked
 20304  00293C  8F00               	bsf	0,7,b	;volatile
 20305                           
 20306                           ; BSR set to: 4
 20307                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 20308  00293E  0E00               	movlw	0
 20309  002940  6E2C               	movwf	_USBActiveConfiguration,c	;volatile
 20310                           
 20311                           ; BSR set to: 4
 20312                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 20313  002942  0E00               	movlw	0
 20314  002944  0100               	movlb	0	; () banked
 20315  002946  6F97               	movwf	_USBDeviceState& (0+255),b	;volatile
 20316                           
 20317                           ; BSR set to: 0
 20318  002948  0012               	return		;funcret
 20319  00294A                     __end_of_USBDeviceInit:
 20320                           	opt stack 0
 20321                           tblptru	equ	0xFF8
 20322                           tblptrh	equ	0xFF7
 20323                           tblptrl	equ	0xFF6
 20324                           tablat	equ	0xFF5
 20325                           prodh	equ	0xFF4
 20326                           prodl	equ	0xFF3
 20327                           intcon	equ	0xFF2
 20328                           indf0	equ	0xFEF
 20329                           postinc0	equ	0xFEE
 20330                           fsr0h	equ	0xFEA
 20331                           fsr0l	equ	0xFE9
 20332                           wreg	equ	0xFE8
 20333                           indf1	equ	0xFE7
 20334                           postdec1	equ	0xFE5
 20335                           fsr1h	equ	0xFE2
 20336                           fsr1l	equ	0xFE1
 20337                           indf2	equ	0xFDF
 20338                           postinc2	equ	0xFDE
 20339                           postdec2	equ	0xFDD
 20340                           plusw2	equ	0xFDB
 20341                           fsr2h	equ	0xFDA
 20342                           fsr2l	equ	0xFD9
 20343                           status	equ	0xFD8
 20344                           
 20345 ;; *************** function _memset *****************
 20346 ;; Defined at:
 20347 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 20348 ;; Parameters:    Size  Location     Type
 20349 ;;  p1              2    0[BANK0 ] PTR void 
 20350 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 20351 ;;  c               2    2[BANK0 ] int 
 20352 ;;  n               2    4[BANK0 ] unsigned int 
 20353 ;; Auto vars:     Size  Location     Type
 20354 ;;  p               2    6[BANK0 ] PTR unsigned char 
 20355 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 20356 ;; Return value:  Size  Location     Type
 20357 ;;                  2    0[BANK0 ] PTR void 
 20358 ;; Registers used:
 20359 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20360 ;; Tracked objects:
 20361 ;;		On entry : 0/0
 20362 ;;		On exit  : 0/0
 20363 ;;		Unchanged: 0/0
 20364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20365 ;;      Params:         0       6       0       0       0       0       0       0       0
 20366 ;;      Locals:         0       2       0       0       0       0       0       0       0
 20367 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20368 ;;      Totals:         0       8       0       0       0       0       0       0       0
 20369 ;;Total ram usage:        8 bytes
 20370 ;; Hardware stack levels used:    1
 20371 ;; Hardware stack levels required when called:   11
 20372 ;; This function calls:
 20373 ;;		Nothing
 20374 ;; This function is called by:
 20375 ;;		_USBDeviceInit
 20376 ;; This function uses a non-reentrant model
 20377 ;;
 20378                           
 20379                           	psect	text72
 20380  0055C4                     __ptext72:
 20381                           	opt stack 0
 20382  0055C4                     _memset:
 20383                           	opt stack 18
 20384                           
 20385                           ; BSR set to: 0
 20386                           ;incstack = 0
 20387  0055C4  C0C3  F0C9         	movff	memset@p1,memset@p
 20388  0055C8  C0C4  F0CA         	movff	memset@p1+1,memset@p+1
 20389  0055CC  D009               	goto	l12716
 20390  0055CE                     l12712:
 20391  0055CE  C0C9  FFD9         	movff	memset@p,fsr2l
 20392  0055D2  C0CA  FFDA         	movff	memset@p+1,fsr2h
 20393  0055D6  C0C5  FFDF         	movff	memset@c,indf2
 20394  0055DA  0100               	movlb	0	; () banked
 20395  0055DC  4BC9               	infsnz	memset@p& (0+255),f,b
 20396  0055DE  2BCA               	incf	(memset@p+1)& (0+255),f,b
 20397  0055E0                     l12716:
 20398  0055E0  0100               	movlb	0	; () banked
 20399  0055E2  07C7               	decf	memset@n& (0+255),f,b
 20400  0055E4  A0D8               	btfss	status,0,c
 20401  0055E6  07C8               	decf	(memset@n+1)& (0+255),f,b
 20402  0055E8  0100               	movlb	0	; () banked
 20403  0055EA  29C7               	incf	memset@n& (0+255),w,b
 20404  0055EC  E1F0               	bnz	l12712
 20405  0055EE  0100               	movlb	0	; () banked
 20406  0055F0  29C8               	incf	(memset@n+1)& (0+255),w,b
 20407  0055F2  B4D8               	btfsc	status,2,c
 20408  0055F4  0012               	return	
 20409  0055F6  D7EB               	goto	l12712
 20410  0055F8                     __end_of_memset:
 20411                           	opt stack 0
 20412                           tblptru	equ	0xFF8
 20413                           tblptrh	equ	0xFF7
 20414                           tblptrl	equ	0xFF6
 20415                           tablat	equ	0xFF5
 20416                           prodh	equ	0xFF4
 20417                           prodl	equ	0xFF3
 20418                           intcon	equ	0xFF2
 20419                           indf0	equ	0xFEF
 20420                           postinc0	equ	0xFEE
 20421                           fsr0h	equ	0xFEA
 20422                           fsr0l	equ	0xFE9
 20423                           wreg	equ	0xFE8
 20424                           indf1	equ	0xFE7
 20425                           postdec1	equ	0xFE5
 20426                           fsr1h	equ	0xFE2
 20427                           fsr1l	equ	0xFE1
 20428                           indf2	equ	0xFDF
 20429                           postinc2	equ	0xFDE
 20430                           postdec2	equ	0xFDD
 20431                           plusw2	equ	0xFDB
 20432                           fsr2h	equ	0xFDA
 20433                           fsr2l	equ	0xFD9
 20434                           status	equ	0xFD8
 20435                           
 20436 ;; *************** function _USBDeviceAttach *****************
 20437 ;; Defined at:
 20438 ;;		line 1046 in file "../Includes/Usb/Framework/usb_device.c"
 20439 ;; Parameters:    Size  Location     Type
 20440 ;;		None
 20441 ;; Auto vars:     Size  Location     Type
 20442 ;;		None
 20443 ;; Return value:  Size  Location     Type
 20444 ;;		None               void
 20445 ;; Registers used:
 20446 ;;		wreg, status,2
 20447 ;; Tracked objects:
 20448 ;;		On entry : 0/0
 20449 ;;		On exit  : 0/0
 20450 ;;		Unchanged: 0/0
 20451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20452 ;;      Params:         0       0       0       0       0       0       0       0       0
 20453 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20454 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20455 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20456 ;;Total ram usage:        0 bytes
 20457 ;; Hardware stack levels used:    1
 20458 ;; Hardware stack levels required when called:   11
 20459 ;; This function calls:
 20460 ;;		Nothing
 20461 ;; This function is called by:
 20462 ;;		_main
 20463 ;; This function uses a non-reentrant model
 20464 ;;
 20465                           
 20466                           	psect	text73
 20467  0055F8                     __ptext73:
 20468                           	opt stack 0
 20469  0055F8                     _USBDeviceAttach:
 20470                           	opt stack 19
 20471                           
 20472                           ;usb_device.c: 1050: {
 20473                           ;usb_device.c: 1051: if(1 == 1)
 20474                           
 20475                           ; BSR set to: 0
 20476                           ;incstack = 0
 20477  0055F8  0100               	movlb	0	; () banked
 20478  0055FA  5197               	movf	_USBDeviceState& (0+255),w,b	;volatile
 20479  0055FC  A4D8               	btfss	status,2,c
 20480  0055FE  0012               	return	
 20481                           
 20482                           ; BSR set to: 0
 20483                           ;usb_device.c: 1052: {
 20484                           ;usb_device.c: 1054: UCON = 0;
 20485  005600  0E00               	movlw	0
 20486  005602  6E60               	movwf	3936,c	;volatile
 20487                           
 20488                           ;usb_device.c: 1057: UIE = 0;
 20489  005604  0E00               	movlw	0
 20490  005606  6E64               	movwf	3940,c	;volatile
 20491                           
 20492                           ;usb_device.c: 1061: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 20493  005608  0E16               	movlw	22
 20494  00560A  6E62               	movwf	3938,c	;volatile
 20495  00560C  0E9F               	movlw	159
 20496  00560E  6E66               	movwf	3942,c	;volatile
 20497  005610  0E7B               	movlw	123
 20498  005612  6E64               	movwf	3940,c	;volatile
 20499                           
 20500                           ; BSR set to: 0
 20501                           ;usb_device.c: 1063: {RCONbits.IPEN = 1;IPR3bits.USBIP = 1;PIE3bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 20502  005614  8ED0               	bsf	4048,7,c	;volatile
 20503                           
 20504                           ; BSR set to: 0
 20505  005616  84A5               	bsf	4005,2,c	;volatile
 20506                           
 20507                           ; BSR set to: 0
 20508  005618  84A3               	bsf	4003,2,c	;volatile
 20509                           
 20510                           ; BSR set to: 0
 20511  00561A  8EF2               	bsf	intcon,7,c	;volatile
 20512                           
 20513                           ;usb_device.c: 1066: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 20514  00561C  D001               	goto	l1683
 20515  00561E                     l1684:
 20516  00561E  8660               	bsf	3936,3,c	;volatile
 20517  005620                     l1683:
 20518  005620  A660               	btfss	3936,3,c	;volatile
 20519  005622  D7FD               	goto	l1684
 20520                           
 20521                           ;usb_device.c: 1069: USBDeviceState = ATTACHED_STATE;
 20522  005624  0E01               	movlw	1
 20523  005626  0100               	movlb	0	; () banked
 20524  005628  6F97               	movwf	_USBDeviceState& (0+255),b	;volatile
 20525                           
 20526                           ; BSR set to: 0
 20527  00562A  0012               	return	
 20528  00562C                     __end_of_USBDeviceAttach:
 20529                           	opt stack 0
 20530                           tblptru	equ	0xFF8
 20531                           tblptrh	equ	0xFF7
 20532                           tblptrl	equ	0xFF6
 20533                           tablat	equ	0xFF5
 20534                           prodh	equ	0xFF4
 20535                           prodl	equ	0xFF3
 20536                           intcon	equ	0xFF2
 20537                           indf0	equ	0xFEF
 20538                           postinc0	equ	0xFEE
 20539                           fsr0h	equ	0xFEA
 20540                           fsr0l	equ	0xFE9
 20541                           wreg	equ	0xFE8
 20542                           indf1	equ	0xFE7
 20543                           postdec1	equ	0xFE5
 20544                           fsr1h	equ	0xFE2
 20545                           fsr1l	equ	0xFE1
 20546                           indf2	equ	0xFDF
 20547                           postinc2	equ	0xFDE
 20548                           postdec2	equ	0xFDD
 20549                           plusw2	equ	0xFDB
 20550                           fsr2h	equ	0xFDA
 20551                           fsr2l	equ	0xFD9
 20552                           status	equ	0xFD8
 20553                           
 20554 ;; *************** function _SYSTEM_Initialize *****************
 20555 ;; Defined at:
 20556 ;;		line 93 in file "../Includes/MccGenerated/mcc.c"
 20557 ;; Parameters:    Size  Location     Type
 20558 ;;		None
 20559 ;; Auto vars:     Size  Location     Type
 20560 ;;		None
 20561 ;; Return value:  Size  Location     Type
 20562 ;;		None               void
 20563 ;; Registers used:
 20564 ;;		wreg, status,2, status,0, cstack
 20565 ;; Tracked objects:
 20566 ;;		On entry : 0/0
 20567 ;;		On exit  : 0/0
 20568 ;;		Unchanged: 0/0
 20569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20570 ;;      Params:         0       0       0       0       0       0       0       0       0
 20571 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20572 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20573 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20574 ;;Total ram usage:        0 bytes
 20575 ;; Hardware stack levels used:    1
 20576 ;; Hardware stack levels required when called:   13
 20577 ;; This function calls:
 20578 ;;		_ADC_Initialize
 20579 ;;		_CMP1_Initialize
 20580 ;;		_EUSART_Initialize
 20581 ;;		_OSCILLATOR_Initialize
 20582 ;;		_PIN_MANAGER_Initialize
 20583 ;;		_SPI_Initialize
 20584 ;;		_TMR1_Initialize
 20585 ;;		_TMR2_Initialize
 20586 ;; This function is called by:
 20587 ;;		_main
 20588 ;; This function uses a non-reentrant model
 20589 ;;
 20590                           
 20591                           	psect	text74
 20592  0057D2                     __ptext74:
 20593                           	opt stack 0
 20594  0057D2                     _SYSTEM_Initialize:
 20595                           	opt stack 17
 20596                           
 20597                           ;mcc.c: 95: OSCILLATOR_Initialize();
 20598                           
 20599                           ; BSR set to: 0
 20600                           ;incstack = 0
 20601  0057D2  EC56  F02C         	call	_OSCILLATOR_Initialize	;wreg free
 20602                           
 20603                           ;mcc.c: 96: PIN_MANAGER_Initialize();
 20604  0057D6  ECE8  F028         	call	_PIN_MANAGER_Initialize	;wreg free
 20605                           
 20606                           ;mcc.c: 97: SPI_Initialize();
 20607  0057DA  EC88  F02C         	call	_SPI_Initialize	;wreg free
 20608                           
 20609                           ;mcc.c: 98: TMR1_Initialize();
 20610  0057DE  EC90  F02A         	call	_TMR1_Initialize	;wreg free
 20611                           
 20612                           ;mcc.c: 99: TMR2_Initialize();
 20613  0057E2  EC6C  F02C         	call	_TMR2_Initialize	;wreg free
 20614                           
 20615                           ;mcc.c: 100: EUSART_Initialize();
 20616  0057E6  ECFC  F029         	call	_EUSART_Initialize	;wreg free
 20617                           
 20618                           ;mcc.c: 101: ADC_Initialize();
 20619  0057EA  EC33  F02C         	call	_ADC_Initialize	;wreg free
 20620                           
 20621                           ;mcc.c: 102: CMP1_Initialize();
 20622  0057EE  EC91  F02C         	call	_CMP1_Initialize	;wreg free
 20623  0057F2  0012               	return		;funcret
 20624  0057F4                     __end_of_SYSTEM_Initialize:
 20625                           	opt stack 0
 20626                           tblptru	equ	0xFF8
 20627                           tblptrh	equ	0xFF7
 20628                           tblptrl	equ	0xFF6
 20629                           tablat	equ	0xFF5
 20630                           prodh	equ	0xFF4
 20631                           prodl	equ	0xFF3
 20632                           intcon	equ	0xFF2
 20633                           indf0	equ	0xFEF
 20634                           postinc0	equ	0xFEE
 20635                           fsr0h	equ	0xFEA
 20636                           fsr0l	equ	0xFE9
 20637                           wreg	equ	0xFE8
 20638                           indf1	equ	0xFE7
 20639                           postdec1	equ	0xFE5
 20640                           fsr1h	equ	0xFE2
 20641                           fsr1l	equ	0xFE1
 20642                           indf2	equ	0xFDF
 20643                           postinc2	equ	0xFDE
 20644                           postdec2	equ	0xFDD
 20645                           plusw2	equ	0xFDB
 20646                           fsr2h	equ	0xFDA
 20647                           fsr2l	equ	0xFD9
 20648                           status	equ	0xFD8
 20649                           
 20650 ;; *************** function _TMR2_Initialize *****************
 20651 ;; Defined at:
 20652 ;;		line 58 in file "../Includes/MccGenerated/tmr2.c"
 20653 ;; Parameters:    Size  Location     Type
 20654 ;;		None
 20655 ;; Auto vars:     Size  Location     Type
 20656 ;;		None
 20657 ;; Return value:  Size  Location     Type
 20658 ;;		None               void
 20659 ;; Registers used:
 20660 ;;		wreg, status,2, cstack
 20661 ;; Tracked objects:
 20662 ;;		On entry : 0/0
 20663 ;;		On exit  : 0/0
 20664 ;;		Unchanged: 0/0
 20665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20666 ;;      Params:         0       0       0       0       0       0       0       0       0
 20667 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20668 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20669 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20670 ;;Total ram usage:        0 bytes
 20671 ;; Hardware stack levels used:    1
 20672 ;; Hardware stack levels required when called:   12
 20673 ;; This function calls:
 20674 ;;		_TMR2_StartTimer
 20675 ;; This function is called by:
 20676 ;;		_SYSTEM_Initialize
 20677 ;; This function uses a non-reentrant model
 20678 ;;
 20679                           
 20680                           	psect	text75
 20681  0058D8                     __ptext75:
 20682                           	opt stack 0
 20683  0058D8                     _TMR2_Initialize:
 20684                           	opt stack 17
 20685                           
 20686                           ;tmr2.c: 62: T2CON = 0x7A;
 20687                           
 20688                           ;incstack = 0
 20689  0058D8  0E7A               	movlw	122
 20690  0058DA  6EBA               	movwf	4026,c	;volatile
 20691                           
 20692                           ;tmr2.c: 65: PR2 = 0x9B;
 20693  0058DC  0E9B               	movlw	155
 20694  0058DE  6EBB               	movwf	4027,c	;volatile
 20695                           
 20696                           ;tmr2.c: 68: TMR2 = 0x00;
 20697  0058E0  0E00               	movlw	0
 20698  0058E2  6EBC               	movwf	4028,c	;volatile
 20699                           
 20700                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
 20701  0058E4  929E               	bcf	3998,1,c	;volatile
 20702                           
 20703                           ;tmr2.c: 74: TMR2_StartTimer();
 20704  0058E6  ECE4  F02C         	call	_TMR2_StartTimer	;wreg free
 20705  0058EA  0012               	return		;funcret
 20706  0058EC                     __end_of_TMR2_Initialize:
 20707                           	opt stack 0
 20708                           tblptru	equ	0xFF8
 20709                           tblptrh	equ	0xFF7
 20710                           tblptrl	equ	0xFF6
 20711                           tablat	equ	0xFF5
 20712                           prodh	equ	0xFF4
 20713                           prodl	equ	0xFF3
 20714                           intcon	equ	0xFF2
 20715                           indf0	equ	0xFEF
 20716                           postinc0	equ	0xFEE
 20717                           fsr0h	equ	0xFEA
 20718                           fsr0l	equ	0xFE9
 20719                           wreg	equ	0xFE8
 20720                           indf1	equ	0xFE7
 20721                           postdec1	equ	0xFE5
 20722                           fsr1h	equ	0xFE2
 20723                           fsr1l	equ	0xFE1
 20724                           indf2	equ	0xFDF
 20725                           postinc2	equ	0xFDE
 20726                           postdec2	equ	0xFDD
 20727                           plusw2	equ	0xFDB
 20728                           fsr2h	equ	0xFDA
 20729                           fsr2l	equ	0xFD9
 20730                           status	equ	0xFD8
 20731                           
 20732 ;; *************** function _TMR2_StartTimer *****************
 20733 ;; Defined at:
 20734 ;;		line 77 in file "../Includes/MccGenerated/tmr2.c"
 20735 ;; Parameters:    Size  Location     Type
 20736 ;;		None
 20737 ;; Auto vars:     Size  Location     Type
 20738 ;;		None
 20739 ;; Return value:  Size  Location     Type
 20740 ;;		None               void
 20741 ;; Registers used:
 20742 ;;		None
 20743 ;; Tracked objects:
 20744 ;;		On entry : 0/0
 20745 ;;		On exit  : 0/0
 20746 ;;		Unchanged: 0/0
 20747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20748 ;;      Params:         0       0       0       0       0       0       0       0       0
 20749 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20750 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20751 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20752 ;;Total ram usage:        0 bytes
 20753 ;; Hardware stack levels used:    1
 20754 ;; Hardware stack levels required when called:   11
 20755 ;; This function calls:
 20756 ;;		Nothing
 20757 ;; This function is called by:
 20758 ;;		_TMR2_Initialize
 20759 ;; This function uses a non-reentrant model
 20760 ;;
 20761                           
 20762                           	psect	text76
 20763  0059C8                     __ptext76:
 20764                           	opt stack 0
 20765  0059C8                     _TMR2_StartTimer:
 20766                           	opt stack 17
 20767                           
 20768                           ;tmr2.c: 79: T2CONbits.TMR2ON = 1;
 20769                           
 20770                           ;incstack = 0
 20771  0059C8  84BA               	bsf	4026,2,c	;volatile
 20772  0059CA  0012               	return		;funcret
 20773  0059CC                     __end_of_TMR2_StartTimer:
 20774                           	opt stack 0
 20775                           tblptru	equ	0xFF8
 20776                           tblptrh	equ	0xFF7
 20777                           tblptrl	equ	0xFF6
 20778                           tablat	equ	0xFF5
 20779                           prodh	equ	0xFF4
 20780                           prodl	equ	0xFF3
 20781                           intcon	equ	0xFF2
 20782                           indf0	equ	0xFEF
 20783                           postinc0	equ	0xFEE
 20784                           fsr0h	equ	0xFEA
 20785                           fsr0l	equ	0xFE9
 20786                           wreg	equ	0xFE8
 20787                           indf1	equ	0xFE7
 20788                           postdec1	equ	0xFE5
 20789                           fsr1h	equ	0xFE2
 20790                           fsr1l	equ	0xFE1
 20791                           indf2	equ	0xFDF
 20792                           postinc2	equ	0xFDE
 20793                           postdec2	equ	0xFDD
 20794                           plusw2	equ	0xFDB
 20795                           fsr2h	equ	0xFDA
 20796                           fsr2l	equ	0xFD9
 20797                           status	equ	0xFD8
 20798                           
 20799 ;; *************** function _TMR1_Initialize *****************
 20800 ;; Defined at:
 20801 ;;		line 63 in file "../Includes/MccGenerated/tmr1.c"
 20802 ;; Parameters:    Size  Location     Type
 20803 ;;		None
 20804 ;; Auto vars:     Size  Location     Type
 20805 ;;		None
 20806 ;; Return value:  Size  Location     Type
 20807 ;;		None               void
 20808 ;; Registers used:
 20809 ;;		wreg, status,2, status,0, cstack
 20810 ;; Tracked objects:
 20811 ;;		On entry : 0/0
 20812 ;;		On exit  : 0/0
 20813 ;;		Unchanged: 0/0
 20814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20815 ;;      Params:         0       0       0       0       0       0       0       0       0
 20816 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20817 ;;      Temps:          0       2       0       0       0       0       0       0       0
 20818 ;;      Totals:         0       2       0       0       0       0       0       0       0
 20819 ;;Total ram usage:        2 bytes
 20820 ;; Hardware stack levels used:    1
 20821 ;; Hardware stack levels required when called:   12
 20822 ;; This function calls:
 20823 ;;		_TMR1_StartTimer
 20824 ;; This function is called by:
 20825 ;;		_SYSTEM_Initialize
 20826 ;; This function uses a non-reentrant model
 20827 ;;
 20828                           
 20829                           	psect	text77
 20830  005520                     __ptext77:
 20831                           	opt stack 0
 20832  005520                     _TMR1_Initialize:
 20833                           	opt stack 17
 20834                           
 20835                           ;tmr1.c: 68: T1CON = 0x00;
 20836                           
 20837                           ;incstack = 0
 20838  005520  0E00               	movlw	0
 20839  005522  6ECD               	movwf	4045,c	;volatile
 20840                           
 20841                           ;tmr1.c: 71: T1GCON = 0x00;
 20842  005524  0E00               	movlw	0
 20843  005526  6ECC               	movwf	4044,c	;volatile
 20844                           
 20845                           ;tmr1.c: 74: TMR1H = 0xD0;
 20846  005528  0ED0               	movlw	208
 20847  00552A  6ECF               	movwf	4047,c	;volatile
 20848                           
 20849                           ;tmr1.c: 77: TMR1L = 0x20;
 20850  00552C  0E20               	movlw	32
 20851  00552E  6ECE               	movwf	4046,c	;volatile
 20852                           
 20853                           ;tmr1.c: 80: timer1ReloadVal=(TMR1H << 8) | TMR1L;
 20854  005530  50CE               	movf	4046,w,c	;volatile
 20855  005532  CFCF F0C3          	movff	4047,??_TMR1_Initialize	;volatile
 20856  005536  0100               	movlb	0	; () banked
 20857  005538  6BC4               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 20858  00553A  C0C3  F0C4         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 20859  00553E  0100               	movlb	0	; () banked
 20860  005540  6BC3               	clrf	??_TMR1_Initialize& (0+255),b
 20861  005542  0100               	movlb	0	; () banked
 20862  005544  11C3               	iorwf	??_TMR1_Initialize& (0+255),w,b
 20863  005546  6E1B               	movwf	_timer1ReloadVal,c	;volatile
 20864  005548  0100               	movlb	0	; () banked
 20865  00554A  51C4               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 20866  00554C  6E1C               	movwf	_timer1ReloadVal+1,c	;volatile
 20867                           
 20868                           ; BSR set to: 0
 20869                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
 20870  00554E  909E               	bcf	3998,0,c	;volatile
 20871                           
 20872                           ; BSR set to: 0
 20873                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
 20874  005550  809D               	bsf	3997,0,c	;volatile
 20875                           
 20876                           ; BSR set to: 0
 20877                           ;tmr1.c: 89: TMR1_StartTimer();
 20878  005552  ECE6  F02C         	call	_TMR1_StartTimer	;wreg free
 20879  005556  0012               	return		;funcret
 20880  005558                     __end_of_TMR1_Initialize:
 20881                           	opt stack 0
 20882                           tblptru	equ	0xFF8
 20883                           tblptrh	equ	0xFF7
 20884                           tblptrl	equ	0xFF6
 20885                           tablat	equ	0xFF5
 20886                           prodh	equ	0xFF4
 20887                           prodl	equ	0xFF3
 20888                           intcon	equ	0xFF2
 20889                           indf0	equ	0xFEF
 20890                           postinc0	equ	0xFEE
 20891                           fsr0h	equ	0xFEA
 20892                           fsr0l	equ	0xFE9
 20893                           wreg	equ	0xFE8
 20894                           indf1	equ	0xFE7
 20895                           postdec1	equ	0xFE5
 20896                           fsr1h	equ	0xFE2
 20897                           fsr1l	equ	0xFE1
 20898                           indf2	equ	0xFDF
 20899                           postinc2	equ	0xFDE
 20900                           postdec2	equ	0xFDD
 20901                           plusw2	equ	0xFDB
 20902                           fsr2h	equ	0xFDA
 20903                           fsr2l	equ	0xFD9
 20904                           status	equ	0xFD8
 20905                           
 20906 ;; *************** function _TMR1_StartTimer *****************
 20907 ;; Defined at:
 20908 ;;		line 92 in file "../Includes/MccGenerated/tmr1.c"
 20909 ;; Parameters:    Size  Location     Type
 20910 ;;		None
 20911 ;; Auto vars:     Size  Location     Type
 20912 ;;		None
 20913 ;; Return value:  Size  Location     Type
 20914 ;;		None               void
 20915 ;; Registers used:
 20916 ;;		None
 20917 ;; Tracked objects:
 20918 ;;		On entry : 0/0
 20919 ;;		On exit  : 0/0
 20920 ;;		Unchanged: 0/0
 20921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20922 ;;      Params:         0       0       0       0       0       0       0       0       0
 20923 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20924 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20925 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20926 ;;Total ram usage:        0 bytes
 20927 ;; Hardware stack levels used:    1
 20928 ;; Hardware stack levels required when called:   11
 20929 ;; This function calls:
 20930 ;;		Nothing
 20931 ;; This function is called by:
 20932 ;;		_TMR1_Initialize
 20933 ;; This function uses a non-reentrant model
 20934 ;;
 20935                           
 20936                           	psect	text78
 20937  0059CC                     __ptext78:
 20938                           	opt stack 0
 20939  0059CC                     _TMR1_StartTimer:
 20940                           	opt stack 17
 20941                           
 20942                           ;tmr1.c: 95: T1CONbits.TMR1ON = 1;
 20943                           
 20944                           ;incstack = 0
 20945  0059CC  80CD               	bsf	4045,0,c	;volatile
 20946  0059CE  0012               	return		;funcret
 20947  0059D0                     __end_of_TMR1_StartTimer:
 20948                           	opt stack 0
 20949                           tblptru	equ	0xFF8
 20950                           tblptrh	equ	0xFF7
 20951                           tblptrl	equ	0xFF6
 20952                           tablat	equ	0xFF5
 20953                           prodh	equ	0xFF4
 20954                           prodl	equ	0xFF3
 20955                           intcon	equ	0xFF2
 20956                           indf0	equ	0xFEF
 20957                           postinc0	equ	0xFEE
 20958                           fsr0h	equ	0xFEA
 20959                           fsr0l	equ	0xFE9
 20960                           wreg	equ	0xFE8
 20961                           indf1	equ	0xFE7
 20962                           postdec1	equ	0xFE5
 20963                           fsr1h	equ	0xFE2
 20964                           fsr1l	equ	0xFE1
 20965                           indf2	equ	0xFDF
 20966                           postinc2	equ	0xFDE
 20967                           postdec2	equ	0xFDD
 20968                           plusw2	equ	0xFDB
 20969                           fsr2h	equ	0xFDA
 20970                           fsr2l	equ	0xFD9
 20971                           status	equ	0xFD8
 20972                           
 20973 ;; *************** function _SPI_Initialize *****************
 20974 ;; Defined at:
 20975 ;;		line 64 in file "../Includes/MccGenerated/spi.c"
 20976 ;; Parameters:    Size  Location     Type
 20977 ;;		None
 20978 ;; Auto vars:     Size  Location     Type
 20979 ;;		None
 20980 ;; Return value:  Size  Location     Type
 20981 ;;		None               void
 20982 ;; Registers used:
 20983 ;;		wreg, status,2
 20984 ;; Tracked objects:
 20985 ;;		On entry : 0/0
 20986 ;;		On exit  : 0/0
 20987 ;;		Unchanged: 0/0
 20988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20989 ;;      Params:         0       0       0       0       0       0       0       0       0
 20990 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20991 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20992 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20993 ;;Total ram usage:        0 bytes
 20994 ;; Hardware stack levels used:    1
 20995 ;; Hardware stack levels required when called:   11
 20996 ;; This function calls:
 20997 ;;		Nothing
 20998 ;; This function is called by:
 20999 ;;		_SYSTEM_Initialize
 21000 ;; This function uses a non-reentrant model
 21001 ;;
 21002                           
 21003                           	psect	text79
 21004  005910                     __ptext79:
 21005                           	opt stack 0
 21006  005910                     _SPI_Initialize:
 21007                           	opt stack 18
 21008                           
 21009                           ;spi.c: 69: SSP1STAT = 0x00;
 21010                           
 21011                           ;incstack = 0
 21012  005910  0E00               	movlw	0
 21013  005912  6EC7               	movwf	4039,c	;volatile
 21014                           
 21015                           ;spi.c: 72: SSP1CON1 = 0x21;
 21016  005914  0E21               	movlw	33
 21017  005916  6EC6               	movwf	4038,c	;volatile
 21018                           
 21019                           ;spi.c: 75: SSP1ADD = 0x00;
 21020  005918  0E00               	movlw	0
 21021  00591A  6EC8               	movwf	4040,c	;volatile
 21022                           
 21023                           ;spi.c: 77: CKP = 1;
 21024  00591C  88C6               	bsf	4038,4,c	;volatile
 21025                           
 21026                           ;spi.c: 78: CKE = 0;
 21027  00591E  9CC7               	bcf	4039,6,c	;volatile
 21028  005920  0012               	return		;funcret
 21029  005922                     __end_of_SPI_Initialize:
 21030                           	opt stack 0
 21031                           tblptru	equ	0xFF8
 21032                           tblptrh	equ	0xFF7
 21033                           tblptrl	equ	0xFF6
 21034                           tablat	equ	0xFF5
 21035                           prodh	equ	0xFF4
 21036                           prodl	equ	0xFF3
 21037                           intcon	equ	0xFF2
 21038                           indf0	equ	0xFEF
 21039                           postinc0	equ	0xFEE
 21040                           fsr0h	equ	0xFEA
 21041                           fsr0l	equ	0xFE9
 21042                           wreg	equ	0xFE8
 21043                           indf1	equ	0xFE7
 21044                           postdec1	equ	0xFE5
 21045                           fsr1h	equ	0xFE2
 21046                           fsr1l	equ	0xFE1
 21047                           indf2	equ	0xFDF
 21048                           postinc2	equ	0xFDE
 21049                           postdec2	equ	0xFDD
 21050                           plusw2	equ	0xFDB
 21051                           fsr2h	equ	0xFDA
 21052                           fsr2l	equ	0xFD9
 21053                           status	equ	0xFD8
 21054                           
 21055 ;; *************** function _PIN_MANAGER_Initialize *****************
 21056 ;; Defined at:
 21057 ;;		line 51 in file "../Includes/MccGenerated/pin_manager.c"
 21058 ;; Parameters:    Size  Location     Type
 21059 ;;		None
 21060 ;; Auto vars:     Size  Location     Type
 21061 ;;		None
 21062 ;; Return value:  Size  Location     Type
 21063 ;;		None               void
 21064 ;; Registers used:
 21065 ;;		None
 21066 ;; Tracked objects:
 21067 ;;		On entry : 0/0
 21068 ;;		On exit  : 0/0
 21069 ;;		Unchanged: 0/0
 21070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21071 ;;      Params:         0       0       0       0       0       0       0       0       0
 21072 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21073 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21074 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21075 ;;Total ram usage:        0 bytes
 21076 ;; Hardware stack levels used:    1
 21077 ;; Hardware stack levels required when called:   11
 21078 ;; This function calls:
 21079 ;;		Nothing
 21080 ;; This function is called by:
 21081 ;;		_moteApp_GoToSleep
 21082 ;;		_SYSTEM_Initialize
 21083 ;; This function uses a non-reentrant model
 21084 ;;
 21085                           
 21086                           	psect	text80
 21087  0051D0                     __ptext80:
 21088                           	opt stack 0
 21089  0051D0                     _PIN_MANAGER_Initialize:
 21090                           	opt stack 16
 21091                           
 21092                           ;pin_manager.c: 55: TRISAbits.TRISA0 = 1;
 21093                           
 21094                           ;incstack = 0
 21095  0051D0  8092               	bsf	3986,0,c	;volatile
 21096                           
 21097                           ;pin_manager.c: 56: TRISAbits.TRISA1 = 1;
 21098  0051D2  8292               	bsf	3986,1,c	;volatile
 21099                           
 21100                           ;pin_manager.c: 57: TRISAbits.TRISA2 = 1;
 21101  0051D4  8492               	bsf	3986,2,c	;volatile
 21102                           
 21103                           ;pin_manager.c: 58: TRISAbits.TRISA3 = 1;
 21104  0051D6  8692               	bsf	3986,3,c	;volatile
 21105                           
 21106                           ;pin_manager.c: 59: TRISAbits.TRISA4 = 0;
 21107  0051D8  9892               	bcf	3986,4,c	;volatile
 21108                           
 21109                           ;pin_manager.c: 60: TRISAbits.TRISA5 = 0;
 21110  0051DA  9A92               	bcf	3986,5,c	;volatile
 21111                           
 21112                           ;pin_manager.c: 61: TRISAbits.TRISA6 = 0;
 21113  0051DC  9C92               	bcf	3986,6,c	;volatile
 21114                           
 21115                           ;pin_manager.c: 62: TRISAbits.TRISA7 = 0;
 21116  0051DE  9E92               	bcf	3986,7,c	;volatile
 21117                           
 21118                           ;pin_manager.c: 64: TRISBbits.TRISB0 = 0;
 21119  0051E0  9093               	bcf	3987,0,c	;volatile
 21120                           
 21121                           ;pin_manager.c: 65: TRISBbits.TRISB1 = 0;
 21122  0051E2  9293               	bcf	3987,1,c	;volatile
 21123                           
 21124                           ;pin_manager.c: 66: TRISBbits.TRISB2 = 0;
 21125  0051E4  9493               	bcf	3987,2,c	;volatile
 21126                           
 21127                           ;pin_manager.c: 67: TRISBbits.TRISB3 = 0;
 21128  0051E6  9693               	bcf	3987,3,c	;volatile
 21129                           
 21130                           ;pin_manager.c: 68: TRISBbits.TRISB5 = 0;
 21131  0051E8  9A93               	bcf	3987,5,c	;volatile
 21132                           
 21133                           ;pin_manager.c: 70: TRISCbits.TRISC0 = 1;
 21134  0051EA  8094               	bsf	3988,0,c	;volatile
 21135                           
 21136                           ;pin_manager.c: 71: TRISCbits.TRISC1 = 1;
 21137  0051EC  8294               	bsf	3988,1,c	;volatile
 21138                           
 21139                           ;pin_manager.c: 72: TRISCbits.TRISC2 = 1;
 21140  0051EE  8494               	bsf	3988,2,c	;volatile
 21141                           
 21142                           ;pin_manager.c: 73: TRISCbits.TRISC6 = 0;
 21143  0051F0  9C94               	bcf	3988,6,c	;volatile
 21144                           
 21145                           ;pin_manager.c: 74: TRISCbits.TRISC7 = 1;
 21146  0051F2  8E94               	bsf	3988,7,c	;volatile
 21147                           
 21148                           ;pin_manager.c: 77: LATAbits.LATA4 = 1;
 21149  0051F4  8889               	bsf	3977,4,c	;volatile
 21150                           
 21151                           ;pin_manager.c: 78: LATAbits.LATA5 = 0;
 21152  0051F6  9A89               	bcf	3977,5,c	;volatile
 21153                           
 21154                           ;pin_manager.c: 79: LATAbits.LATA6 = 0;
 21155  0051F8  9C89               	bcf	3977,6,c	;volatile
 21156                           
 21157                           ;pin_manager.c: 80: LATAbits.LATA7 = 0;
 21158  0051FA  9E89               	bcf	3977,7,c	;volatile
 21159                           
 21160                           ;pin_manager.c: 82: LATBbits.LATB2 = 0;
 21161  0051FC  948A               	bcf	3978,2,c	;volatile
 21162                           
 21163                           ;pin_manager.c: 83: LATBbits.LATB0 = 0;
 21164  0051FE  908A               	bcf	3978,0,c	;volatile
 21165                           
 21166                           ;pin_manager.c: 84: LATBbits.LATB5 = 0;
 21167  005200  9A8A               	bcf	3978,5,c	;volatile
 21168                           
 21169                           ;pin_manager.c: 86: LATCbits.LATC2 = 0;
 21170  005202  948B               	bcf	3979,2,c	;volatile
 21171                           
 21172                           ;pin_manager.c: 87: LATCbits.LATC6 = 0;
 21173  005204  9C8B               	bcf	3979,6,c	;volatile
 21174                           
 21175                           ;pin_manager.c: 89: ANSELAbits.ANSA0 = 0;
 21176  005206  010F               	movlb	15	; () banked
 21177  005208  915B               	bcf	91,0,b	;volatile
 21178                           
 21179                           ;pin_manager.c: 90: ANSELAbits.ANSA1 = 1;
 21180  00520A  010F               	movlb	15	; () banked
 21181  00520C  835B               	bsf	91,1,b	;volatile
 21182                           
 21183                           ;pin_manager.c: 91: ANSELAbits.ANSA2 = 1;
 21184  00520E  010F               	movlb	15	; () banked
 21185  005210  855B               	bsf	91,2,b	;volatile
 21186                           
 21187                           ;pin_manager.c: 92: ANSELAbits.ANSA3 = 1;
 21188  005212  010F               	movlb	15	; () banked
 21189  005214  875B               	bsf	91,3,b	;volatile
 21190                           
 21191                           ;pin_manager.c: 93: ANSELCbits.ANSC7 = 0;
 21192  005216  010F               	movlb	15	; () banked
 21193  005218  9F5D               	bcf	93,7,b	;volatile
 21194                           
 21195                           ;pin_manager.c: 94: ANSELCbits.ANSC6 = 0;
 21196  00521A  010F               	movlb	15	; () banked
 21197  00521C  9D5D               	bcf	93,6,b	;volatile
 21198                           
 21199                           ; BSR set to: 15
 21200  00521E  0012               	return		;funcret
 21201  005220                     __end_of_PIN_MANAGER_Initialize:
 21202                           	opt stack 0
 21203                           tblptru	equ	0xFF8
 21204                           tblptrh	equ	0xFF7
 21205                           tblptrl	equ	0xFF6
 21206                           tablat	equ	0xFF5
 21207                           prodh	equ	0xFF4
 21208                           prodl	equ	0xFF3
 21209                           intcon	equ	0xFF2
 21210                           indf0	equ	0xFEF
 21211                           postinc0	equ	0xFEE
 21212                           fsr0h	equ	0xFEA
 21213                           fsr0l	equ	0xFE9
 21214                           wreg	equ	0xFE8
 21215                           indf1	equ	0xFE7
 21216                           postdec1	equ	0xFE5
 21217                           fsr1h	equ	0xFE2
 21218                           fsr1l	equ	0xFE1
 21219                           indf2	equ	0xFDF
 21220                           postinc2	equ	0xFDE
 21221                           postdec2	equ	0xFDD
 21222                           plusw2	equ	0xFDB
 21223                           fsr2h	equ	0xFDA
 21224                           fsr2l	equ	0xFD9
 21225                           status	equ	0xFD8
 21226                           
 21227 ;; *************** function _OSCILLATOR_Initialize *****************
 21228 ;; Defined at:
 21229 ;;		line 105 in file "../Includes/MccGenerated/mcc.c"
 21230 ;; Parameters:    Size  Location     Type
 21231 ;;		None
 21232 ;; Auto vars:     Size  Location     Type
 21233 ;;		None
 21234 ;; Return value:  Size  Location     Type
 21235 ;;		None               void
 21236 ;; Registers used:
 21237 ;;		wreg, status,2
 21238 ;; Tracked objects:
 21239 ;;		On entry : 0/0
 21240 ;;		On exit  : 0/0
 21241 ;;		Unchanged: 0/0
 21242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21243 ;;      Params:         0       0       0       0       0       0       0       0       0
 21244 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21245 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21246 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21247 ;;Total ram usage:        0 bytes
 21248 ;; Hardware stack levels used:    1
 21249 ;; Hardware stack levels required when called:   11
 21250 ;; This function calls:
 21251 ;;		Nothing
 21252 ;; This function is called by:
 21253 ;;		_SYSTEM_Initialize
 21254 ;; This function uses a non-reentrant model
 21255 ;;
 21256                           
 21257                           	psect	text81
 21258  0058AC                     __ptext81:
 21259                           	opt stack 0
 21260  0058AC                     _OSCILLATOR_Initialize:
 21261                           	opt stack 18
 21262                           
 21263                           ;mcc.c: 107: OSCTUNE = 0x80;
 21264                           
 21265                           ; BSR set to: 15
 21266                           ;incstack = 0
 21267  0058AC  0E80               	movlw	128
 21268  0058AE  6E9B               	movwf	3995,c	;volatile
 21269                           
 21270                           ;mcc.c: 108: OSCCON = 0x70;
 21271  0058B0  0E70               	movlw	112
 21272  0058B2  6ED3               	movwf	4051,c	;volatile
 21273                           
 21274                           ;mcc.c: 109: OSCCON2 = 0x10;
 21275  0058B4  0E10               	movlw	16
 21276  0058B6  6ED2               	movwf	4050,c	;volatile
 21277  0058B8                     l1203:
 21278  0058B8  AED2               	btfss	4050,7,c	;volatile
 21279  0058BA  D7FE               	goto	l1203
 21280                           
 21281                           ;mcc.c: 111: ACTCON = 0x90;
 21282  0058BC  0E90               	movlw	144
 21283  0058BE  6EB5               	movwf	4021,c	;volatile
 21284  0058C0  0012               	return		;funcret
 21285  0058C2                     __end_of_OSCILLATOR_Initialize:
 21286                           	opt stack 0
 21287                           tblptru	equ	0xFF8
 21288                           tblptrh	equ	0xFF7
 21289                           tblptrl	equ	0xFF6
 21290                           tablat	equ	0xFF5
 21291                           prodh	equ	0xFF4
 21292                           prodl	equ	0xFF3
 21293                           intcon	equ	0xFF2
 21294                           indf0	equ	0xFEF
 21295                           postinc0	equ	0xFEE
 21296                           fsr0h	equ	0xFEA
 21297                           fsr0l	equ	0xFE9
 21298                           wreg	equ	0xFE8
 21299                           indf1	equ	0xFE7
 21300                           postdec1	equ	0xFE5
 21301                           fsr1h	equ	0xFE2
 21302                           fsr1l	equ	0xFE1
 21303                           indf2	equ	0xFDF
 21304                           postinc2	equ	0xFDE
 21305                           postdec2	equ	0xFDD
 21306                           plusw2	equ	0xFDB
 21307                           fsr2h	equ	0xFDA
 21308                           fsr2l	equ	0xFD9
 21309                           status	equ	0xFD8
 21310                           
 21311 ;; *************** function _EUSART_Initialize *****************
 21312 ;; Defined at:
 21313 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 21314 ;; Parameters:    Size  Location     Type
 21315 ;;		None
 21316 ;; Auto vars:     Size  Location     Type
 21317 ;;		None
 21318 ;; Return value:  Size  Location     Type
 21319 ;;		None               void
 21320 ;; Registers used:
 21321 ;;		wreg, status,2
 21322 ;; Tracked objects:
 21323 ;;		On entry : 0/0
 21324 ;;		On exit  : 0/0
 21325 ;;		Unchanged: 0/0
 21326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21327 ;;      Params:         0       0       0       0       0       0       0       0       0
 21328 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21329 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21330 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21331 ;;Total ram usage:        0 bytes
 21332 ;; Hardware stack levels used:    1
 21333 ;; Hardware stack levels required when called:   11
 21334 ;; This function calls:
 21335 ;;		Nothing
 21336 ;; This function is called by:
 21337 ;;		_SYSTEM_Initialize
 21338 ;; This function uses a non-reentrant model
 21339 ;;
 21340                           
 21341                           	psect	text82
 21342  0053F8                     __ptext82:
 21343                           	opt stack 0
 21344  0053F8                     _EUSART_Initialize:
 21345                           	opt stack 18
 21346                           
 21347                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 21348                           
 21349                           ;incstack = 0
 21350  0053F8  9A9D               	bcf	3997,5,c	;volatile
 21351                           
 21352                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 21353  0053FA  989D               	bcf	3997,4,c	;volatile
 21354                           
 21355                           ;eusart.c: 85: BAUDCON = 0x48;
 21356  0053FC  0E48               	movlw	72
 21357  0053FE  6EB8               	movwf	4024,c	;volatile
 21358                           
 21359                           ;eusart.c: 88: RCSTA = 0x90;
 21360  005400  0E90               	movlw	144
 21361  005402  6EAB               	movwf	4011,c	;volatile
 21362                           
 21363                           ;eusart.c: 91: TXSTA = 0x26;
 21364  005404  0E26               	movlw	38
 21365  005406  6EAC               	movwf	4012,c	;volatile
 21366                           
 21367                           ;eusart.c: 94: SPBRG = 0xD0;
 21368  005408  0ED0               	movlw	208
 21369  00540A  6EAF               	movwf	4015,c	;volatile
 21370                           
 21371                           ;eusart.c: 99: SPBRGH = 0x00;
 21372  00540C  0E00               	movlw	0
 21373  00540E  6EB0               	movwf	4016,c	;volatile
 21374                           
 21375                           ;eusart.c: 103: eusartTxHead = 0;
 21376  005410  0E00               	movlw	0
 21377  005412  6E28               	movwf	_eusartTxHead,c
 21378                           
 21379                           ;eusart.c: 104: eusartTxTail = 0;
 21380  005414  0E00               	movlw	0
 21381  005416  0100               	movlb	0	; () banked
 21382  005418  6FA6               	movwf	_eusartTxTail& (0+255),b
 21383                           
 21384                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 21385  00541A  0E40               	movlw	64
 21386  00541C  6E27               	movwf	_eusartTxBufferRemaining,c	;volatile
 21387                           
 21388                           ;eusart.c: 107: eusartRxHead = 0;
 21389  00541E  0E00               	movlw	0
 21390  005420  0100               	movlb	0	; () banked
 21391  005422  6FA4               	movwf	_eusartRxHead& (0+255),b
 21392                           
 21393                           ;eusart.c: 108: eusartRxTail = 0;
 21394  005424  0E00               	movlw	0
 21395  005426  0100               	movlb	0	; () banked
 21396  005428  6FA5               	movwf	_eusartRxTail& (0+255),b
 21397                           
 21398                           ;eusart.c: 109: eusartRxCount = 0;
 21399  00542A  0E00               	movlw	0
 21400  00542C  6E26               	movwf	_eusartRxCount,c	;volatile
 21401                           
 21402                           ; BSR set to: 0
 21403                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 21404  00542E  8A9D               	bsf	3997,5,c	;volatile
 21405                           
 21406                           ; BSR set to: 0
 21407                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 21408  005430  88AB               	bsf	4011,4,c	;volatile
 21409                           
 21410                           ; BSR set to: 0
 21411  005432  0012               	return		;funcret
 21412  005434                     __end_of_EUSART_Initialize:
 21413                           	opt stack 0
 21414                           tblptru	equ	0xFF8
 21415                           tblptrh	equ	0xFF7
 21416                           tblptrl	equ	0xFF6
 21417                           tablat	equ	0xFF5
 21418                           prodh	equ	0xFF4
 21419                           prodl	equ	0xFF3
 21420                           intcon	equ	0xFF2
 21421                           indf0	equ	0xFEF
 21422                           postinc0	equ	0xFEE
 21423                           fsr0h	equ	0xFEA
 21424                           fsr0l	equ	0xFE9
 21425                           wreg	equ	0xFE8
 21426                           indf1	equ	0xFE7
 21427                           postdec1	equ	0xFE5
 21428                           fsr1h	equ	0xFE2
 21429                           fsr1l	equ	0xFE1
 21430                           indf2	equ	0xFDF
 21431                           postinc2	equ	0xFDE
 21432                           postdec2	equ	0xFDD
 21433                           plusw2	equ	0xFDB
 21434                           fsr2h	equ	0xFDA
 21435                           fsr2l	equ	0xFD9
 21436                           status	equ	0xFD8
 21437                           
 21438 ;; *************** function _CMP1_Initialize *****************
 21439 ;; Defined at:
 21440 ;;		line 58 in file "../Includes/MccGenerated/cmp1.c"
 21441 ;; Parameters:    Size  Location     Type
 21442 ;;		None
 21443 ;; Auto vars:     Size  Location     Type
 21444 ;;		None
 21445 ;; Return value:  Size  Location     Type
 21446 ;;		None               void
 21447 ;; Registers used:
 21448 ;;		wreg, status,2
 21449 ;; Tracked objects:
 21450 ;;		On entry : 0/0
 21451 ;;		On exit  : 0/0
 21452 ;;		Unchanged: 0/0
 21453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21454 ;;      Params:         0       0       0       0       0       0       0       0       0
 21455 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21456 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21457 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21458 ;;Total ram usage:        0 bytes
 21459 ;; Hardware stack levels used:    1
 21460 ;; Hardware stack levels required when called:   11
 21461 ;; This function calls:
 21462 ;;		Nothing
 21463 ;; This function is called by:
 21464 ;;		_SYSTEM_Initialize
 21465 ;; This function uses a non-reentrant model
 21466 ;;
 21467                           
 21468                           	psect	text83
 21469  005922                     __ptext83:
 21470                           	opt stack 0
 21471  005922                     _CMP1_Initialize:
 21472                           	opt stack 18
 21473                           
 21474                           ;cmp1.c: 65: PIE2bits.C1IE = 0;
 21475                           
 21476                           ; BSR set to: 0
 21477                           ;incstack = 0
 21478  005922  9CA0               	bcf	4000,6,c	;volatile
 21479                           
 21480                           ;cmp1.c: 70: CM1CON0 = 0x9C;
 21481  005924  0E9C               	movlw	156
 21482  005926  6E98               	movwf	3992,c	;volatile
 21483                           
 21484                           ;cmp1.c: 73: CM2CON1bits.C1RSEL = 0x1;
 21485  005928  8A9A               	bsf	3994,5,c	;volatile
 21486                           
 21487                           ;cmp1.c: 76: CM2CON1bits.C1SYNC = 0x0;
 21488  00592A  929A               	bcf	3994,1,c	;volatile
 21489                           
 21490                           ;cmp1.c: 79: CM2CON1bits.C1HYS = 0x0;
 21491  00592C  969A               	bcf	3994,3,c	;volatile
 21492                           
 21493                           ;cmp1.c: 83: PIR2bits.C1IF = 0;
 21494  00592E  9CA1               	bcf	4001,6,c	;volatile
 21495                           
 21496                           ;cmp1.c: 86: PIE2bits.C1IE = 0;
 21497  005930  9CA0               	bcf	4000,6,c	;volatile
 21498  005932  0012               	return		;funcret
 21499  005934                     __end_of_CMP1_Initialize:
 21500                           	opt stack 0
 21501                           tblptru	equ	0xFF8
 21502                           tblptrh	equ	0xFF7
 21503                           tblptrl	equ	0xFF6
 21504                           tablat	equ	0xFF5
 21505                           prodh	equ	0xFF4
 21506                           prodl	equ	0xFF3
 21507                           intcon	equ	0xFF2
 21508                           indf0	equ	0xFEF
 21509                           postinc0	equ	0xFEE
 21510                           fsr0h	equ	0xFEA
 21511                           fsr0l	equ	0xFE9
 21512                           wreg	equ	0xFE8
 21513                           indf1	equ	0xFE7
 21514                           postdec1	equ	0xFE5
 21515                           fsr1h	equ	0xFE2
 21516                           fsr1l	equ	0xFE1
 21517                           indf2	equ	0xFDF
 21518                           postinc2	equ	0xFDE
 21519                           postdec2	equ	0xFDD
 21520                           plusw2	equ	0xFDB
 21521                           fsr2h	equ	0xFDA
 21522                           fsr2l	equ	0xFD9
 21523                           status	equ	0xFD8
 21524                           
 21525 ;; *************** function _ADC_Initialize *****************
 21526 ;; Defined at:
 21527 ;;		line 65 in file "../Includes/MccGenerated/adc.c"
 21528 ;; Parameters:    Size  Location     Type
 21529 ;;		None
 21530 ;; Auto vars:     Size  Location     Type
 21531 ;;		None
 21532 ;; Return value:  Size  Location     Type
 21533 ;;		None               void
 21534 ;; Registers used:
 21535 ;;		wreg, status,2
 21536 ;; Tracked objects:
 21537 ;;		On entry : 0/0
 21538 ;;		On exit  : 0/0
 21539 ;;		Unchanged: 0/0
 21540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21541 ;;      Params:         0       0       0       0       0       0       0       0       0
 21542 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21543 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21544 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21545 ;;Total ram usage:        0 bytes
 21546 ;; Hardware stack levels used:    1
 21547 ;; Hardware stack levels required when called:   11
 21548 ;; This function calls:
 21549 ;;		Nothing
 21550 ;; This function is called by:
 21551 ;;		_SYSTEM_Initialize
 21552 ;; This function uses a non-reentrant model
 21553 ;;
 21554                           
 21555                           	psect	text84
 21556  005866                     __ptext84:
 21557                           	opt stack 0
 21558  005866                     _ADC_Initialize:
 21559                           	opt stack 18
 21560                           
 21561                           ;adc.c: 68: VREFCON0 = 0b10100000;
 21562                           
 21563                           ;incstack = 0
 21564  005866  0EA0               	movlw	160
 21565  005868  6E7D               	movwf	3965,c	;volatile
 21566                           
 21567                           ;adc.c: 70: ADCON0 = 0x01;
 21568  00586A  0E01               	movlw	1
 21569  00586C  6EC2               	movwf	4034,c	;volatile
 21570                           
 21571                           ;adc.c: 73: ADCON1 = 0x08;
 21572  00586E  0E08               	movlw	8
 21573  005870  6EC1               	movwf	4033,c	;volatile
 21574                           
 21575                           ;adc.c: 76: ADCON2 = 0b10001110;
 21576  005872  0E8E               	movlw	142
 21577  005874  6EC0               	movwf	4032,c	;volatile
 21578                           
 21579                           ;adc.c: 79: ADRESL = 0x00;
 21580  005876  0E00               	movlw	0
 21581  005878  6EC3               	movwf	4035,c	;volatile
 21582                           
 21583                           ;adc.c: 82: ADRESH = 0x00;
 21584  00587A  0E00               	movlw	0
 21585  00587C  6EC4               	movwf	4036,c	;volatile
 21586  00587E  0012               	return		;funcret
 21587  005880                     __end_of_ADC_Initialize:
 21588                           	opt stack 0
 21589                           tblptru	equ	0xFF8
 21590                           tblptrh	equ	0xFF7
 21591                           tblptrl	equ	0xFF6
 21592                           tablat	equ	0xFF5
 21593                           prodh	equ	0xFF4
 21594                           prodl	equ	0xFF3
 21595                           intcon	equ	0xFF2
 21596                           indf0	equ	0xFEF
 21597                           postinc0	equ	0xFEE
 21598                           fsr0h	equ	0xFEA
 21599                           fsr0l	equ	0xFE9
 21600                           wreg	equ	0xFE8
 21601                           indf1	equ	0xFE7
 21602                           postdec1	equ	0xFE5
 21603                           fsr1h	equ	0xFE2
 21604                           fsr1l	equ	0xFE1
 21605                           indf2	equ	0xFDF
 21606                           postinc2	equ	0xFDE
 21607                           postdec2	equ	0xFDD
 21608                           plusw2	equ	0xFDB
 21609                           fsr2h	equ	0xFDA
 21610                           fsr2l	equ	0xFD9
 21611                           status	equ	0xFD8
 21612                           
 21613 ;; *************** function _MOTEapp_handlerState *****************
 21614 ;; Defined at:
 21615 ;;		line 177 in file "../Includes/Board/MOTEapp.c"
 21616 ;; Parameters:    Size  Location     Type
 21617 ;;  state           1    wreg     enum E6449
 21618 ;; Auto vars:     Size  Location     Type
 21619 ;;  state           1    0[BANK0 ] enum E6449
 21620 ;; Return value:  Size  Location     Type
 21621 ;;		None               void
 21622 ;; Registers used:
 21623 ;;		wreg
 21624 ;; Tracked objects:
 21625 ;;		On entry : 0/0
 21626 ;;		On exit  : 0/0
 21627 ;;		Unchanged: 0/0
 21628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21629 ;;      Params:         0       0       0       0       0       0       0       0       0
 21630 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21631 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21632 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21633 ;;Total ram usage:        1 bytes
 21634 ;; Hardware stack levels used:    1
 21635 ;; Hardware stack levels required when called:   11
 21636 ;; This function calls:
 21637 ;;		Nothing
 21638 ;; This function is called by:
 21639 ;;		_main
 21640 ;; This function uses a non-reentrant model
 21641 ;;
 21642                           
 21643                           	psect	text85
 21644  005998                     __ptext85:
 21645                           	opt stack 0
 21646  005998                     _MOTEapp_handlerState:
 21647                           	opt stack 19
 21648                           
 21649                           ;incstack = 0
 21650                           ;MOTEapp_handlerState@state stored from wreg
 21651  005998  0100               	movlb	0	; () banked
 21652  00599A  6FC3               	movwf	MOTEapp_handlerState@state& (0+255),b
 21653                           
 21654                           ;MOTEapp.c: 179: moteState = state;
 21655  00599C  C0C3  F0F7         	movff	MOTEapp_handlerState@state,_moteState
 21656  0059A0  0012               	return		;funcret
 21657  0059A2                     __end_of_MOTEapp_handlerState:
 21658                           	opt stack 0
 21659                           tblptru	equ	0xFF8
 21660                           tblptrh	equ	0xFF7
 21661                           tblptrl	equ	0xFF6
 21662                           tablat	equ	0xFF5
 21663                           prodh	equ	0xFF4
 21664                           prodl	equ	0xFF3
 21665                           intcon	equ	0xFF2
 21666                           indf0	equ	0xFEF
 21667                           postinc0	equ	0xFEE
 21668                           fsr0h	equ	0xFEA
 21669                           fsr0l	equ	0xFE9
 21670                           wreg	equ	0xFE8
 21671                           indf1	equ	0xFE7
 21672                           postdec1	equ	0xFE5
 21673                           fsr1h	equ	0xFE2
 21674                           fsr1l	equ	0xFE1
 21675                           indf2	equ	0xFDF
 21676                           postinc2	equ	0xFDE
 21677                           postdec2	equ	0xFDD
 21678                           plusw2	equ	0xFDB
 21679                           fsr2h	equ	0xFDA
 21680                           fsr2l	equ	0xFD9
 21681                           status	equ	0xFD8
 21682                           
 21683 ;; *************** function _DATAEE_ReadByte *****************
 21684 ;; Defined at:
 21685 ;;		line 188 in file "../Includes/MccGenerated/memory.c"
 21686 ;; Parameters:    Size  Location     Type
 21687 ;;  bAdd            1    wreg     unsigned char 
 21688 ;; Auto vars:     Size  Location     Type
 21689 ;;  bAdd            1    0[BANK0 ] unsigned char 
 21690 ;; Return value:  Size  Location     Type
 21691 ;;                  1    wreg      unsigned char 
 21692 ;; Registers used:
 21693 ;;		wreg, status,2
 21694 ;; Tracked objects:
 21695 ;;		On entry : 0/0
 21696 ;;		On exit  : 0/0
 21697 ;;		Unchanged: 0/0
 21698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21699 ;;      Params:         0       0       0       0       0       0       0       0       0
 21700 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21701 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21702 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21703 ;;Total ram usage:        1 bytes
 21704 ;; Hardware stack levels used:    1
 21705 ;; Hardware stack levels required when called:   11
 21706 ;; This function calls:
 21707 ;;		Nothing
 21708 ;; This function is called by:
 21709 ;;		_main
 21710 ;; This function uses a non-reentrant model
 21711 ;;
 21712                           
 21713                           	psect	text86
 21714  0058C2                     __ptext86:
 21715                           	opt stack 0
 21716  0058C2                     _DATAEE_ReadByte:
 21717                           	opt stack 19
 21718                           
 21719                           ;incstack = 0
 21720                           ;DATAEE_ReadByte@bAdd stored from wreg
 21721  0058C2  0100               	movlb	0	; () banked
 21722  0058C4  6FC3               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 21723                           
 21724                           ;memory.c: 190: EEADR = (bAdd & 0xFF);
 21725  0058C6  C0C3  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
 21726                           
 21727                           ;memory.c: 191: EECON1bits.CFGS = 0;
 21728  0058CA  9CA6               	bcf	4006,6,c	;volatile
 21729                           
 21730                           ;memory.c: 192: EECON1bits.EEPGD = 0;
 21731  0058CC  9EA6               	bcf	4006,7,c	;volatile
 21732                           
 21733                           ;memory.c: 193: EECON1bits.RD = 1;
 21734  0058CE  80A6               	bsf	4006,0,c	;volatile
 21735                           
 21736                           ;memory.c: 194: __nop();
 21737  0058D0  F000               	nop	
 21738                           
 21739                           ;memory.c: 195: __nop();
 21740  0058D2  F000               	nop	
 21741                           
 21742                           ;memory.c: 197: return (EEDATA);
 21743  0058D4  50A8               	movf	4008,w,c	;volatile
 21744  0058D6  0012               	return	
 21745  0058D8                     __end_of_DATAEE_ReadByte:
 21746                           	opt stack 0
 21747                           tblptru	equ	0xFF8
 21748                           tblptrh	equ	0xFF7
 21749                           tblptrl	equ	0xFF6
 21750                           tablat	equ	0xFF5
 21751                           prodh	equ	0xFF4
 21752                           prodl	equ	0xFF3
 21753                           intcon	equ	0xFF2
 21754                           indf0	equ	0xFEF
 21755                           postinc0	equ	0xFEE
 21756                           fsr0h	equ	0xFEA
 21757                           fsr0l	equ	0xFE9
 21758                           wreg	equ	0xFE8
 21759                           indf1	equ	0xFE7
 21760                           postdec1	equ	0xFE5
 21761                           fsr1h	equ	0xFE2
 21762                           fsr1l	equ	0xFE1
 21763                           indf2	equ	0xFDF
 21764                           postinc2	equ	0xFDE
 21765                           postdec2	equ	0xFDD
 21766                           plusw2	equ	0xFDB
 21767                           fsr2h	equ	0xFDA
 21768                           fsr2l	equ	0xFD9
 21769                           status	equ	0xFD8
 21770                           
 21771 ;; *************** function _INTERRUPT_InterruptManager *****************
 21772 ;; Defined at:
 21773 ;;		line 55 in file "../Includes/MccGenerated/interrupt_manager.c"
 21774 ;; Parameters:    Size  Location     Type
 21775 ;;		None
 21776 ;; Auto vars:     Size  Location     Type
 21777 ;;		None
 21778 ;; Return value:  Size  Location     Type
 21779 ;;		None               void
 21780 ;; Registers used:
 21781 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 21782 ;; Tracked objects:
 21783 ;;		On entry : 0/0
 21784 ;;		On exit  : 0/0
 21785 ;;		Unchanged: 0/0
 21786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21787 ;;      Params:         0       0       0       0       0       0       0       0       0
 21788 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21789 ;;      Temps:         14       0       0       0       0       0       0       0       0
 21790 ;;      Totals:        14       0       0       0       0       0       0       0       0
 21791 ;;Total ram usage:       14 bytes
 21792 ;; Hardware stack levels used:    1
 21793 ;; Hardware stack levels required when called:   10
 21794 ;; This function calls:
 21795 ;;		_CMP1_ISR
 21796 ;;		_EUSART_Receive_ISR
 21797 ;;		_EUSART_Transmit_ISR
 21798 ;;		_TMR1_ISR
 21799 ;;		_TMRapp_Tick
 21800 ;;		_USBDeviceTasks
 21801 ;;		_USBapp_setrxByteFlag
 21802 ;; This function is called by:
 21803 ;;		Interrupt level 2
 21804 ;; This function uses a non-reentrant model
 21805 ;;
 21806                           
 21807                           	psect	intcode
 21808  000008                     __pintcode:
 21809                           	opt stack 0
 21810  000008                     _INTERRUPT_InterruptManager:
 21811                           	opt stack 10
 21812                           
 21813                           ;incstack = 0
 21814  000008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 21815  00000A  CFFA F04D          	movff	pclath,??_INTERRUPT_InterruptManager
 21816  00000E  CFFB F04E          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 21817  000012  CFE9 F04F          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 21818  000016  CFEA F050          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 21819  00001A  CFE1 F051          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 21820  00001E  CFE2 F052          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 21821  000022  CFD9 F053          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 21822  000026  CFDA F054          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 21823  00002A  CFF3 F055          	movff	prodl,??_INTERRUPT_InterruptManager+8
 21824  00002E  CFF4 F056          	movff	prodh,??_INTERRUPT_InterruptManager+9
 21825  000032  CFF6 F057          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 21826  000036  CFF7 F058          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 21827  00003A  CFF8 F059          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 21828  00003E  CFF5 F05A          	movff	tablat,??_INTERRUPT_InterruptManager+13
 21829                           
 21830                           ;interrupt_manager.c: 58: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 21831  000042  B09D               	btfsc	3997,0,c	;volatile
 21832  000044  A09E               	btfss	3998,0,c	;volatile
 21833  000046  D005               	goto	i2l1163
 21834                           
 21835                           ;interrupt_manager.c: 59: {
 21836                           ;interrupt_manager.c: 60: TMR1_ISR();
 21837  000048  ECB1  F02C         	call	_TMR1_ISR	;wreg free
 21838                           
 21839                           ;interrupt_manager.c: 62: TMRapp_Tick();
 21840  00004C  ECDF  F02C         	call	_TMRapp_Tick	;wreg free
 21841                           
 21842                           ;interrupt_manager.c: 63: }
 21843  000050  D016               	goto	i2l1171
 21844  000052                     i2l1163:
 21845                           
 21846                           ;interrupt_manager.c: 64: else if( (PIE1bits.RCIE == 1) && (PIR1bits.RCIF == 1) )
 21847  000052  BA9D               	btfsc	3997,5,c	;volatile
 21848  000054  AA9E               	btfss	3998,5,c	;volatile
 21849  000056  D005               	goto	i2l1165
 21850                           
 21851                           ;interrupt_manager.c: 65: {
 21852                           ;interrupt_manager.c: 66: USBapp_setrxByteFlag();
 21853  000058  ECDC  F02C         	call	_USBapp_setrxByteFlag	;wreg free
 21854                           
 21855                           ;interrupt_manager.c: 67: EUSART_Receive_ISR();
 21856  00005C  ECC7  F02A         	call	_EUSART_Receive_ISR	;wreg free
 21857                           
 21858                           ;interrupt_manager.c: 68: }
 21859  000060  D00E               	goto	i2l1171
 21860  000062                     i2l1165:
 21861                           
 21862                           ;interrupt_manager.c: 69: else if( (PIE1bits.TXIE == 1) && (PIR1bits.TXIF == 1) )
 21863  000062  B89D               	btfsc	3997,4,c	;volatile
 21864  000064  A89E               	btfss	3998,4,c	;volatile
 21865  000066  D003               	goto	i2l1167
 21866                           
 21867                           ;interrupt_manager.c: 70: {
 21868                           ;interrupt_manager.c: 71: EUSART_Transmit_ISR();
 21869  000068  ECAC  F02A         	call	_EUSART_Transmit_ISR	;wreg free
 21870                           
 21871                           ;interrupt_manager.c: 72: }
 21872  00006C  D008               	goto	i2l1171
 21873  00006E                     i2l1167:
 21874                           
 21875                           ;interrupt_manager.c: 73: else if(PIE2bits.C1IE == 1 && PIR2bits.C1IF == 1)
 21876  00006E  BCA0               	btfsc	4000,6,c	;volatile
 21877  000070  ACA1               	btfss	4001,6,c	;volatile
 21878  000072  D003               	goto	i2l10406
 21879                           
 21880                           ;interrupt_manager.c: 74: {
 21881                           ;interrupt_manager.c: 75: CMP1_ISR();
 21882  000074  ECE8  F02C         	call	_CMP1_ISR	;wreg free
 21883                           
 21884                           ;interrupt_manager.c: 76: }
 21885  000078  D002               	goto	i2l1171
 21886  00007A                     i2l10406:
 21887                           
 21888                           ;interrupt_manager.c: 77: else
 21889                           ;interrupt_manager.c: 78: {
 21890                           ;interrupt_manager.c: 80: USBDeviceTasks();
 21891  00007A  EC7E  F016         	call	_USBDeviceTasks	;wreg free
 21892  00007E                     i2l1171:
 21893  00007E  C05A  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 21894  000082  C059  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 21895  000086  C058  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 21896  00008A  C057  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 21897  00008E  C056  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 21898  000092  C055  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 21899  000096  C054  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 21900  00009A  C053  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 21901  00009E  C052  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 21902  0000A2  C051  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 21903  0000A6  C050  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 21904  0000AA  C04F  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 21905  0000AE  C04E  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 21906  0000B2  C04D  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 21907  0000B6  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 21908  0000B8  0011               	retfie		f
 21909  0000BA                     __end_of_INTERRUPT_InterruptManager:
 21910                           	opt stack 0
 21911                           pclatu	equ	0xFFB
 21912                           pclath	equ	0xFFA
 21913                           tblptru	equ	0xFF8
 21914                           tblptrh	equ	0xFF7
 21915                           tblptrl	equ	0xFF6
 21916                           tablat	equ	0xFF5
 21917                           prodh	equ	0xFF4
 21918                           prodl	equ	0xFF3
 21919                           intcon	equ	0xFF2
 21920                           indf0	equ	0xFEF
 21921                           postinc0	equ	0xFEE
 21922                           fsr0h	equ	0xFEA
 21923                           fsr0l	equ	0xFE9
 21924                           wreg	equ	0xFE8
 21925                           indf1	equ	0xFE7
 21926                           postdec1	equ	0xFE5
 21927                           fsr1h	equ	0xFE2
 21928                           fsr1l	equ	0xFE1
 21929                           indf2	equ	0xFDF
 21930                           postinc2	equ	0xFDE
 21931                           postdec2	equ	0xFDD
 21932                           plusw2	equ	0xFDB
 21933                           fsr2h	equ	0xFDA
 21934                           fsr2l	equ	0xFD9
 21935                           status	equ	0xFD8
 21936                           
 21937 ;; *************** function _USBapp_setrxByteFlag *****************
 21938 ;; Defined at:
 21939 ;;		line 246 in file "../Includes/Board/USBapp.c"
 21940 ;; Parameters:    Size  Location     Type
 21941 ;;		None
 21942 ;; Auto vars:     Size  Location     Type
 21943 ;;		None
 21944 ;; Return value:  Size  Location     Type
 21945 ;;		None               void
 21946 ;; Registers used:
 21947 ;;		wreg, status,2
 21948 ;; Tracked objects:
 21949 ;;		On entry : 0/0
 21950 ;;		On exit  : 0/0
 21951 ;;		Unchanged: 0/0
 21952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21953 ;;      Params:         0       0       0       0       0       0       0       0       0
 21954 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21955 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21956 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21957 ;;Total ram usage:        0 bytes
 21958 ;; Hardware stack levels used:    1
 21959 ;; This function calls:
 21960 ;;		Nothing
 21961 ;; This function is called by:
 21962 ;;		_INTERRUPT_InterruptManager
 21963 ;; This function uses a non-reentrant model
 21964 ;;
 21965                           
 21966                           	psect	text88
 21967  0059B8                     __ptext88:
 21968                           	opt stack 0
 21969  0059B8                     _USBapp_setrxByteFlag:
 21970                           	opt stack 19
 21971                           
 21972                           ;USBapp.c: 248: rxByteFlag = 1;
 21973                           
 21974                           ;incstack = 0
 21975  0059B8  0E01               	movlw	1
 21976  0059BA  6E2A               	movwf	_rxByteFlag,c	;volatile
 21977  0059BC  0012               	return		;funcret
 21978  0059BE                     __end_of_USBapp_setrxByteFlag:
 21979                           	opt stack 0
 21980                           pclatu	equ	0xFFB
 21981                           pclath	equ	0xFFA
 21982                           tblptru	equ	0xFF8
 21983                           tblptrh	equ	0xFF7
 21984                           tblptrl	equ	0xFF6
 21985                           tablat	equ	0xFF5
 21986                           prodh	equ	0xFF4
 21987                           prodl	equ	0xFF3
 21988                           intcon	equ	0xFF2
 21989                           indf0	equ	0xFEF
 21990                           postinc0	equ	0xFEE
 21991                           fsr0h	equ	0xFEA
 21992                           fsr0l	equ	0xFE9
 21993                           wreg	equ	0xFE8
 21994                           indf1	equ	0xFE7
 21995                           postdec1	equ	0xFE5
 21996                           fsr1h	equ	0xFE2
 21997                           fsr1l	equ	0xFE1
 21998                           indf2	equ	0xFDF
 21999                           postinc2	equ	0xFDE
 22000                           postdec2	equ	0xFDD
 22001                           plusw2	equ	0xFDB
 22002                           fsr2h	equ	0xFDA
 22003                           fsr2l	equ	0xFD9
 22004                           status	equ	0xFD8
 22005                           
 22006 ;; *************** function _USBDeviceTasks *****************
 22007 ;; Defined at:
 22008 ;;		line 428 in file "../Includes/Usb/Framework/usb_device.c"
 22009 ;; Parameters:    Size  Location     Type
 22010 ;;		None
 22011 ;; Auto vars:     Size  Location     Type
 22012 ;;  i               1   30[COMRAM] unsigned char 
 22013 ;; Return value:  Size  Location     Type
 22014 ;;		None               void
 22015 ;; Registers used:
 22016 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 22017 ;; Tracked objects:
 22018 ;;		On entry : 0/0
 22019 ;;		On exit  : 0/0
 22020 ;;		Unchanged: 0/0
 22021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22022 ;;      Params:         0       0       0       0       0       0       0       0       0
 22023 ;;      Locals:         1       0       0       0       0       0       0       0       0
 22024 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22025 ;;      Totals:         1       0       0       0       0       0       0       0       0
 22026 ;;Total ram usage:        1 bytes
 22027 ;; Hardware stack levels used:    1
 22028 ;; Hardware stack levels required when called:    9
 22029 ;; This function calls:
 22030 ;;		_USBCtrlEPAllowStatusStage
 22031 ;;		_USBCtrlEPService
 22032 ;;		_USBStallHandler
 22033 ;;		_USBSuspend
 22034 ;;		_USBWakeFromSuspend
 22035 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22036 ;;		i2_USBDeviceInit
 22037 ;; This function is called by:
 22038 ;;		_INTERRUPT_InterruptManager
 22039 ;; This function uses a non-reentrant model
 22040 ;;
 22041                           
 22042                           	psect	text89
 22043  002CFC                     __ptext89:
 22044                           	opt stack 0
 22045  002CFC                     _USBDeviceTasks:
 22046                           	opt stack 10
 22047                           
 22048                           ;usb_device.c: 430: uint8_t i;
 22049                           ;usb_device.c: 432: if(USBDeviceState == ATTACHED_STATE)
 22050                           
 22051                           ;incstack = 0
 22052  002CFC  0100               	movlb	0	; () banked
 22053  002CFE  0597               	decf	_USBDeviceState& (0+255),w,b	;volatile
 22054  002D00  B4D8               	btfsc	status,2,c
 22055                           
 22056                           ; BSR set to: 0
 22057                           ;usb_device.c: 433: {
 22058                           ;usb_device.c: 443: if(!UCONbits.SE0)
 22059  002D02  BA60               	btfsc	3936,5,c	;volatile
 22060  002D04  D007               	goto	i2l10114
 22061                           
 22062                           ; BSR set to: 0
 22063                           ;usb_device.c: 444: {
 22064                           ;usb_device.c: 445: {UIR = 0;};
 22065  002D06  0E00               	movlw	0
 22066  002D08  6E65               	movwf	3941,c	;volatile
 22067                           
 22068                           ; BSR set to: 0
 22069                           ;usb_device.c: 446: UIEbits.URSTIE = 1;
 22070  002D0A  8064               	bsf	3940,0,c	;volatile
 22071                           
 22072                           ; BSR set to: 0
 22073                           ;usb_device.c: 447: UIEbits.IDLEIE = 1;
 22074  002D0C  8864               	bsf	3940,4,c	;volatile
 22075                           
 22076                           ;usb_device.c: 448: USBDeviceState = POWERED_STATE;
 22077  002D0E  0E02               	movlw	2
 22078  002D10  0100               	movlb	0	; () banked
 22079  002D12  6F97               	movwf	_USBDeviceState& (0+255),b	;volatile
 22080  002D14                     i2l10114:
 22081                           
 22082                           ; BSR set to: 0
 22083                           ;usb_device.c: 449: }
 22084                           ;usb_device.c: 450: }
 22085                           ;usb_device.c: 454: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 22086  002D14  B465               	btfsc	3941,2,c	;volatile
 22087                           
 22088                           ; BSR set to: 0
 22089  002D16  A464               	btfss	3940,2,c	;volatile
 22090  002D18  D003               	goto	i2l10122
 22091                           
 22092                           ; BSR set to: 0
 22093                           ;usb_device.c: 455: {
 22094                           ;usb_device.c: 456: (UIR &= 0xFB);
 22095  002D1A  9465               	bcf	3941,2,c	;volatile
 22096                           
 22097                           ; BSR set to: 0
 22098                           ;usb_device.c: 457: USBWakeFromSuspend();
 22099  002D1C  EC47  F02B         	call	_USBWakeFromSuspend	;wreg free
 22100  002D20                     i2l10122:
 22101                           
 22102                           ;usb_device.c: 458: }
 22103                           ;usb_device.c: 463: if(UCONbits.SUSPND==1)
 22104  002D20  A260               	btfss	3936,1,c	;volatile
 22105  002D22  D002               	goto	i2l1634
 22106                           
 22107                           ;usb_device.c: 464: {
 22108                           ;usb_device.c: 465: PIR3bits.USBIF = 0;;
 22109  002D24  94A4               	bcf	4004,2,c	;volatile
 22110                           
 22111                           ;usb_device.c: 466: return;
 22112  002D26  0012               	return	
 22113  002D28                     i2l1634:
 22114                           
 22115                           ;usb_device.c: 467: }
 22116                           ;usb_device.c: 479: if(UIRbits.URSTIF && UIEbits.URSTIE)
 22117  002D28  B065               	btfsc	3941,0,c	;volatile
 22118  002D2A  A064               	btfss	3940,0,c	;volatile
 22119  002D2C  D007               	goto	i2l10136
 22120                           
 22121                           ;usb_device.c: 480: {
 22122                           ;usb_device.c: 481: USBDeviceInit();
 22123  002D2E  ECE2  F015         	call	i2_USBDeviceInit	;wreg free
 22124                           
 22125                           ;usb_device.c: 485: {PIE3bits.USBIE = 1;};
 22126  002D32  84A3               	bsf	4003,2,c	;volatile
 22127                           
 22128                           ;usb_device.c: 487: USBDeviceState = DEFAULT_STATE;
 22129  002D34  0E04               	movlw	4
 22130  002D36  0100               	movlb	0	; () banked
 22131  002D38  6F97               	movwf	_USBDeviceState& (0+255),b	;volatile
 22132                           
 22133                           ; BSR set to: 0
 22134                           ;usb_device.c: 489: (UIR &= 0xFE);
 22135  002D3A  9065               	bcf	3941,0,c	;volatile
 22136  002D3C                     i2l10136:
 22137                           
 22138                           ;usb_device.c: 490: }
 22139                           ;usb_device.c: 495: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 22140  002D3C  B865               	btfsc	3941,4,c	;volatile
 22141  002D3E  A864               	btfss	3940,4,c	;volatile
 22142  002D40  D003               	goto	i2l10144
 22143                           
 22144                           ;usb_device.c: 496: {
 22145                           ;usb_device.c: 497: USBSuspend();
 22146  002D42  EC75  F02B         	call	_USBSuspend	;wreg free
 22147                           
 22148                           ;usb_device.c: 498: (UIR &= 0xEF);
 22149  002D46  9865               	bcf	3941,4,c	;volatile
 22150  002D48                     i2l10144:
 22151                           
 22152                           ;usb_device.c: 499: }
 22153                           ;usb_device.c: 501: if(UIRbits.SOFIF)
 22154  002D48  AC65               	btfss	3941,6,c	;volatile
 22155  002D4A  D018               	goto	i2l10160
 22156                           
 22157                           ;usb_device.c: 502: {
 22158                           ;usb_device.c: 503: if(UIEbits.SOFIE)
 22159  002D4C  AC64               	btfss	3940,6,c	;volatile
 22160  002D4E  D00E               	goto	i2l10150
 22161                           
 22162                           ;usb_device.c: 504: {
 22163                           ;usb_device.c: 505: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 22164  002D50  0E00               	movlw	0
 22165  002D52  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 22166  002D54  0E73               	movlw	115
 22167  002D56  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 22168  002D58  0E00               	movlw	0
 22169  002D5A  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 22170  002D5C  0E00               	movlw	0
 22171  002D5E  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 22172  002D60  0E00               	movlw	0
 22173  002D62  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 22174  002D64  0E01               	movlw	1
 22175  002D66  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 22176  002D68  EC34  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 22177  002D6C                     i2l10150:
 22178                           
 22179                           ;usb_device.c: 506: }
 22180                           ;usb_device.c: 507: (UIR &= 0xBF);
 22181  002D6C  9C65               	bcf	3941,6,c	;volatile
 22182                           
 22183                           ;usb_device.c: 512: if(USBStatusStageTimeoutCounter != 0u)
 22184  002D6E  5022               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 22185  002D70  A4D8               	btfss	status,2,c
 22186                           
 22187                           ;usb_device.c: 513: {
 22188                           ;usb_device.c: 514: USBStatusStageTimeoutCounter--;
 22189  002D72  0622               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 22190                           
 22191                           ;usb_device.c: 515: }
 22192                           ;usb_device.c: 521: if(USBStatusStageTimeoutCounter == 0)
 22193  002D74  5022               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 22194  002D76  B4D8               	btfsc	status,2,c
 22195                           
 22196                           ;usb_device.c: 522: {
 22197                           ;usb_device.c: 523: USBCtrlEPAllowStatusStage();
 22198  002D78  EC57  F020         	call	_USBCtrlEPAllowStatusStage	;wreg free
 22199  002D7C                     i2l10160:
 22200                           
 22201                           ;usb_device.c: 524: }
 22202                           ;usb_device.c: 525: }
 22203                           ;usb_device.c: 527: if(UIRbits.STALLIF && UIEbits.STALLIE)
 22204  002D7C  BA65               	btfsc	3941,5,c	;volatile
 22205  002D7E  AA64               	btfss	3940,5,c	;volatile
 22206  002D80  D002               	goto	i2l10166
 22207                           
 22208                           ;usb_device.c: 528: {
 22209                           ;usb_device.c: 529: USBStallHandler();
 22210  002D82  EC9F  F029         	call	_USBStallHandler	;wreg free
 22211  002D86                     i2l10166:
 22212                           
 22213                           ;usb_device.c: 530: }
 22214                           ;usb_device.c: 532: if(UIRbits.UERRIF && UIEbits.UERRIE)
 22215  002D86  B265               	btfsc	3941,1,c	;volatile
 22216  002D88  A264               	btfss	3940,1,c	;volatile
 22217  002D8A  D00F               	goto	i2l10174
 22218                           
 22219                           ;usb_device.c: 533: {
 22220                           ;usb_device.c: 534: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 22221  002D8C  0E7F               	movlw	127
 22222  002D8E  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 22223  002D90  683B               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 22224  002D92  0E00               	movlw	0
 22225  002D94  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 22226  002D96  0E00               	movlw	0
 22227  002D98  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 22228  002D9A  0E00               	movlw	0
 22229  002D9C  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 22230  002D9E  0E01               	movlw	1
 22231  002DA0  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 22232  002DA2  EC34  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 22233                           
 22234                           ;usb_device.c: 535: {UEIR = 0;};
 22235  002DA6  0E00               	movlw	0
 22236  002DA8  6E67               	movwf	3943,c	;volatile
 22237  002DAA                     i2l10174:
 22238                           
 22239                           ;usb_device.c: 536: }
 22240                           ;usb_device.c: 543: if(USBDeviceState < DEFAULT_STATE)
 22241  002DAA  0E04               	movlw	4
 22242  002DAC  0100               	movlb	0	; () banked
 22243  002DAE  6197               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 22244  002DB0  D002               	goto	i2l1644
 22245                           
 22246                           ; BSR set to: 0
 22247                           ;usb_device.c: 544: {
 22248                           ;usb_device.c: 545: PIR3bits.USBIF = 0;;
 22249  002DB2  94A4               	bcf	4004,2,c	;volatile
 22250                           
 22251                           ;usb_device.c: 546: return;
 22252  002DB4  0012               	return	
 22253  002DB6                     i2l1644:
 22254                           
 22255                           ; BSR set to: 0
 22256                           ;usb_device.c: 547: }
 22257                           ;usb_device.c: 552: if(UIEbits.TRNIE)
 22258  002DB6  A664               	btfss	3940,3,c	;volatile
 22259  002DB8  D039               	goto	i2l1645
 22260                           
 22261                           ; BSR set to: 0
 22262                           ;usb_device.c: 553: {
 22263                           ;usb_device.c: 554: for(i = 0; i < 4u; i++)
 22264  002DBA  0E00               	movlw	0
 22265  002DBC  6E4C               	movwf	USBDeviceTasks@i,c
 22266  002DBE                     i2l10180:
 22267                           
 22268                           ; BSR set to: 0
 22269  002DBE  0E03               	movlw	3
 22270  002DC0  644C               	cpfsgt	USBDeviceTasks@i,c
 22271  002DC2  D001               	goto	i2l1646
 22272  002DC4  D033               	goto	i2l1645
 22273  002DC6                     i2l1646:
 22274                           
 22275                           ;usb_device.c: 555: {
 22276                           ;usb_device.c: 556: if(UIRbits.TRNIF)
 22277  002DC6  A665               	btfss	3941,3,c	;volatile
 22278  002DC8  D031               	goto	i2l1645
 22279                           
 22280                           ;usb_device.c: 557: {
 22281                           ;usb_device.c: 559: USTATcopy.Val = USTAT;
 22282  002DCA  CF61 F02D          	movff	3937,_USTATcopy	;volatile
 22283                           
 22284                           ;usb_device.c: 560: endpoint_number = USTATcopy.endpoint_number;
 22285  002DCE  302D               	rrcf	_USTATcopy,w,c	;volatile
 22286  002DD0  32E8               	rrcf	wreg,f,c
 22287  002DD2  32E8               	rrcf	wreg,f,c
 22288  002DD4  0B0F               	andlw	15
 22289  002DD6  6E25               	movwf	_endpoint_number,c	;volatile
 22290                           
 22291                           ;usb_device.c: 562: (UIR &= 0xF7);
 22292  002DD8  9665               	bcf	3941,3,c	;volatile
 22293                           
 22294                           ;usb_device.c: 566: if(USTATcopy.direction == 0)
 22295  002DDA  B42D               	btfsc	_USTATcopy,2,c	;volatile
 22296  002DDC  D007               	goto	i2l10194
 22297                           
 22298                           ;usb_device.c: 567: {
 22299                           ;usb_device.c: 568: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 22300  002DDE  5025               	movf	_endpoint_number,w,c	;volatile
 22301  002DE0  0D01               	mullw	1
 22302  002DE2  0E6D               	movlw	low _ep_data_out
 22303  002DE4  24F3               	addwf	prodl,w,c
 22304  002DE6  6ED9               	movwf	fsr2l,c
 22305  002DE8  0E00               	movlw	high _ep_data_out
 22306  002DEA  D006               	goto	L15
 22307  002DEC                     i2l10194:
 22308                           
 22309                           ;usb_device.c: 570: else
 22310                           ;usb_device.c: 571: {
 22311                           ;usb_device.c: 572: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 22312  002DEC  5025               	movf	_endpoint_number,w,c	;volatile
 22313  002DEE  0D01               	mullw	1
 22314  002DF0  0E6A               	movlw	low _ep_data_in
 22315  002DF2  24F3               	addwf	prodl,w,c
 22316  002DF4  6ED9               	movwf	fsr2l,c
 22317  002DF6  0E00               	movlw	high _ep_data_in
 22318  002DF8                     L15:
 22319  002DF8  20F4               	addwfc	prodh,w,c
 22320  002DFA  6EDA               	movwf	fsr2h,c
 22321  002DFC  0100               	movlb	0	; () banked
 22322  002DFE  70DF               	btg	indf2,0,c
 22323                           
 22324                           ; BSR set to: 0
 22325                           ;usb_device.c: 573: }
 22326                           ;usb_device.c: 577: if(endpoint_number == 0)
 22327                           
 22328                           ; BSR set to: 0
 22329  002E00  5025               	movf	_endpoint_number,w,c	;volatile
 22330  002E02  A4D8               	btfss	status,2,c
 22331  002E04  D003               	goto	i2l10200
 22332                           
 22333                           ; BSR set to: 0
 22334                           ;usb_device.c: 578: {
 22335                           ;usb_device.c: 579: USBCtrlEPService();
 22336  002E06  ECF0  F01F         	call	_USBCtrlEPService	;wreg free
 22337                           
 22338                           ;usb_device.c: 580: }
 22339  002E0A  D00E               	goto	i2l10202
 22340  002E0C                     i2l10200:
 22341                           
 22342                           ;usb_device.c: 581: else
 22343                           ;usb_device.c: 582: {
 22344                           ;usb_device.c: 583: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 22345  002E0C  0E00               	movlw	0
 22346  002E0E  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 22347  002E10  0E72               	movlw	114
 22348  002E12  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 22349  002E14  0E2D               	movlw	low _USTATcopy
 22350  002E16  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 22351  002E18  0E00               	movlw	high _USTATcopy
 22352  002E1A  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 22353  002E1C  0E00               	movlw	0
 22354  002E1E  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 22355  002E20  0E00               	movlw	0
 22356  002E22  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 22357  002E24  EC34  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 22358  002E28                     i2l10202:
 22359  002E28  2A4C               	incf	USBDeviceTasks@i,f,c
 22360  002E2A  D7C9               	goto	i2l10180
 22361  002E2C                     i2l1645:
 22362                           
 22363                           ;usb_device.c: 589: }
 22364                           ;usb_device.c: 590: }
 22365                           ;usb_device.c: 591: }
 22366                           ;usb_device.c: 593: PIR3bits.USBIF = 0;;
 22367  002E2C  94A4               	bcf	4004,2,c	;volatile
 22368  002E2E  0012               	return		;funcret
 22369  002E30                     __end_of_USBDeviceTasks:
 22370                           	opt stack 0
 22371                           pclatu	equ	0xFFB
 22372                           pclath	equ	0xFFA
 22373                           tblptru	equ	0xFF8
 22374                           tblptrh	equ	0xFF7
 22375                           tblptrl	equ	0xFF6
 22376                           tablat	equ	0xFF5
 22377                           prodh	equ	0xFF4
 22378                           prodl	equ	0xFF3
 22379                           intcon	equ	0xFF2
 22380                           indf0	equ	0xFEF
 22381                           postinc0	equ	0xFEE
 22382                           fsr0h	equ	0xFEA
 22383                           fsr0l	equ	0xFE9
 22384                           wreg	equ	0xFE8
 22385                           indf1	equ	0xFE7
 22386                           postdec1	equ	0xFE5
 22387                           fsr1h	equ	0xFE2
 22388                           fsr1l	equ	0xFE1
 22389                           indf2	equ	0xFDF
 22390                           postinc2	equ	0xFDE
 22391                           postdec2	equ	0xFDD
 22392                           plusw2	equ	0xFDB
 22393                           fsr2h	equ	0xFDA
 22394                           fsr2l	equ	0xFD9
 22395                           status	equ	0xFD8
 22396                           
 22397 ;; *************** function i2_USBDeviceInit *****************
 22398 ;; Defined at:
 22399 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 22400 ;; Parameters:    Size  Location     Type
 22401 ;;		None
 22402 ;; Auto vars:     Size  Location     Type
 22403 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 22404 ;; Return value:  Size  Location     Type
 22405 ;;		None               void
 22406 ;; Registers used:
 22407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22408 ;; Tracked objects:
 22409 ;;		On entry : 0/0
 22410 ;;		On exit  : 0/0
 22411 ;;		Unchanged: 0/0
 22412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22413 ;;      Params:         0       0       0       0       0       0       0       0       0
 22414 ;;      Locals:         1       0       0       0       0       0       0       0       0
 22415 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22416 ;;      Totals:         1       0       0       0       0       0       0       0       0
 22417 ;;Total ram usage:        1 bytes
 22418 ;; Hardware stack levels used:    1
 22419 ;; Hardware stack levels required when called:    1
 22420 ;; This function calls:
 22421 ;;		i2_memset
 22422 ;; This function is called by:
 22423 ;;		_USBDeviceTasks
 22424 ;; This function uses a non-reentrant model
 22425 ;;
 22426                           
 22427                           	psect	text90
 22428  002BC4                     __ptext90:
 22429                           	opt stack 0
 22430  002BC4                     i2_USBDeviceInit:
 22431                           	opt stack 17
 22432                           
 22433                           ;usb_device.c: 239: uint8_t i;
 22434                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 22435                           
 22436                           ;incstack = 0
 22437  002BC4  94A3               	bcf	4003,2,c	;volatile
 22438                           
 22439                           ;usb_device.c: 244: {UEIR = 0;};
 22440  002BC6  0E00               	movlw	0
 22441  002BC8  6E67               	movwf	3943,c	;volatile
 22442                           
 22443                           ;usb_device.c: 247: {UIR = 0;};
 22444  002BCA  0E00               	movlw	0
 22445  002BCC  6E65               	movwf	3941,c	;volatile
 22446                           
 22447                           ;usb_device.c: 250: UEP0 = 0;
 22448  002BCE  0E00               	movlw	0
 22449  002BD0  6E6A               	movwf	3946,c	;volatile
 22450                           
 22451                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 22452  002BD2  0E6B               	movlw	107
 22453  002BD4  6E2E               	movwf	i2memset@p1,c
 22454  002BD6  0E0F               	movlw	15
 22455  002BD8  6E2F               	movwf	i2memset@p1+1,c
 22456  002BDA  0E00               	movlw	0
 22457  002BDC  6E31               	movwf	i2memset@c+1,c
 22458  002BDE  0E00               	movlw	0
 22459  002BE0  6E30               	movwf	i2memset@c,c
 22460  002BE2  0E00               	movlw	0
 22461  002BE4  6E33               	movwf	i2memset@n+1,c
 22462  002BE6  0E02               	movlw	2
 22463  002BE8  6E32               	movwf	i2memset@n,c
 22464  002BEA  EC5F  F02B         	call	i2_memset	;wreg free
 22465                           
 22466                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 22467  002BEE  0E16               	movlw	22
 22468  002BF0  6E62               	movwf	3938,c	;volatile
 22469  002BF2  0E9F               	movlw	159
 22470  002BF4  6E66               	movwf	3942,c	;volatile
 22471  002BF6  0E7B               	movlw	123
 22472  002BF8  6E64               	movwf	3940,c	;volatile
 22473                           
 22474                           ;usb_device.c: 257: ;
 22475                           ;usb_device.c: 260: ;
 22476                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 22477  002BFA  0E00               	movlw	0
 22478  002BFC  6E36               	movwf	i2USBDeviceInit@i,c
 22479  002BFE                     i2l9686:
 22480  002BFE  0E0B               	movlw	11
 22481  002C00  6436               	cpfsgt	i2USBDeviceInit@i,c
 22482  002C02  D001               	goto	i2l9690
 22483  002C04  D00E               	goto	i2l1622
 22484  002C06                     i2l9690:
 22485                           
 22486                           ;usb_device.c: 264: {
 22487                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 22488  002C06  5036               	movf	i2USBDeviceInit@i,w,c
 22489  002C08  0D04               	mullw	4
 22490  002C0A  0E00               	movlw	0
 22491  002C0C  24F3               	addwf	prodl,w,c
 22492  002C0E  6ED9               	movwf	fsr2l,c
 22493  002C10  0E04               	movlw	4
 22494  002C12  20F4               	addwfc	prodh,w,c
 22495  002C14  6EDA               	movwf	fsr2h,c
 22496  002C16  6ADE               	clrf	postinc2,c
 22497  002C18  6ADE               	clrf	postinc2,c
 22498  002C1A  6ADE               	clrf	postinc2,c
 22499  002C1C  6ADD               	clrf	postdec2,c
 22500  002C1E  2A36               	incf	i2USBDeviceInit@i,f,c
 22501  002C20  D7EE               	goto	i2l9686
 22502  002C22                     i2l1622:
 22503                           
 22504                           ;usb_device.c: 266: }
 22505                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 22506  002C22  8C60               	bsf	3936,6,c	;volatile
 22507                           
 22508                           ;usb_device.c: 272: UADDR = 0x00;
 22509  002C24  0E00               	movlw	0
 22510  002C26  6E63               	movwf	3939,c	;volatile
 22511                           
 22512                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 22513  002C28  9860               	bcf	3936,4,c	;volatile
 22514                           
 22515                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 22516  002C2A  9C60               	bcf	3936,6,c	;volatile
 22517                           
 22518                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 22519  002C2C  D009               	goto	i2l9710
 22520  002C2E                     i2l9702:
 22521                           
 22522                           ;usb_device.c: 282: {
 22523                           ;usb_device.c: 283: (UIR &= 0xF7);
 22524  002C2E  9665               	bcf	3941,3,c	;volatile
 22525                           
 22526                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 22527  002C30  0E00               	movlw	0
 22528  002C32  6E0C               	movwf	_inPipes+3,c	;volatile
 22529                           
 22530                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 22531  002C34  0E00               	movlw	0
 22532  002C36  6E04               	movwf	_outPipes+3,c	;volatile
 22533                           
 22534                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 22535  002C38  0E00               	movlw	0
 22536  002C3A  6E06               	movwf	_outPipes+5,c	;volatile
 22537  002C3C  0E00               	movlw	0
 22538  002C3E  6E05               	movwf	_outPipes+4,c	;volatile
 22539  002C40                     i2l9710:
 22540  002C40  B665               	btfsc	3941,3,c	;volatile
 22541  002C42  D7F5               	goto	i2l9702
 22542                           
 22543                           ;usb_device.c: 288: }
 22544                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 22545  002C44  0E01               	movlw	1
 22546  002C46  0100               	movlb	0	; () banked
 22547  002C48  6F98               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 22548                           
 22549                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 22550  002C4A  0E01               	movlw	1
 22551  002C4C  0100               	movlb	0	; () banked
 22552  002C4E  6F99               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 22553                           
 22554                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 22555  002C50  0E00               	movlw	0
 22556  002C52  0100               	movlb	0	; () banked
 22557  002C54  6F95               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 22558                           
 22559                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 22560  002C56  0E00               	movlw	0
 22561  002C58  0100               	movlb	0	; () banked
 22562  002C5A  6F96               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 22563                           
 22564                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 22565  002C5C  0E00               	movlw	0
 22566  002C5E  0100               	movlb	0	; () banked
 22567  002C60  6F94               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 22568                           
 22569                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 22570  002C62  0E00               	movlw	0
 22571  002C64  6E36               	movwf	i2USBDeviceInit@i,c
 22572  002C66                     i2l9714:
 22573                           
 22574                           ; BSR set to: 0
 22575  002C66  0E02               	movlw	2
 22576  002C68  6436               	cpfsgt	i2USBDeviceInit@i,c
 22577  002C6A  D001               	goto	i2l9718
 22578  002C6C  D02E               	goto	i2l9724
 22579  002C6E                     i2l9718:
 22580                           
 22581                           ;usb_device.c: 302: {
 22582                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 22583  002C6E  5036               	movf	i2USBDeviceInit@i,w,c
 22584  002C70  0D02               	mullw	2
 22585  002C72  0E0F               	movlw	low _pBDTEntryIn
 22586  002C74  24F3               	addwf	prodl,w,c
 22587  002C76  6ED9               	movwf	fsr2l,c
 22588  002C78  0E00               	movlw	high _pBDTEntryIn
 22589  002C7A  20F4               	addwfc	prodh,w,c
 22590  002C7C  6EDA               	movwf	fsr2h,c
 22591  002C7E  0E00               	movlw	0
 22592  002C80  6EDE               	movwf	postinc2,c
 22593  002C82  0E00               	movlw	0
 22594  002C84  6EDD               	movwf	postdec2,c
 22595                           
 22596                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 22597  002C86  5036               	movf	i2USBDeviceInit@i,w,c
 22598  002C88  0D02               	mullw	2
 22599  002C8A  0E60               	movlw	low _pBDTEntryOut
 22600  002C8C  24F3               	addwf	prodl,w,c
 22601  002C8E  6ED9               	movwf	fsr2l,c
 22602  002C90  0E00               	movlw	high _pBDTEntryOut
 22603  002C92  20F4               	addwfc	prodh,w,c
 22604  002C94  6EDA               	movwf	fsr2h,c
 22605  002C96  0E00               	movlw	0
 22606  002C98  6EDE               	movwf	postinc2,c
 22607  002C9A  0E00               	movlw	0
 22608  002C9C  6EDD               	movwf	postdec2,c
 22609                           
 22610                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 22611  002C9E  5036               	movf	i2USBDeviceInit@i,w,c
 22612  002CA0  0D01               	mullw	1
 22613  002CA2  0E6A               	movlw	low _ep_data_in
 22614  002CA4  24F3               	addwf	prodl,w,c
 22615  002CA6  6ED9               	movwf	fsr2l,c
 22616  002CA8  0E00               	movlw	high _ep_data_in
 22617  002CAA  20F4               	addwfc	prodh,w,c
 22618  002CAC  6EDA               	movwf	fsr2h,c
 22619  002CAE  0E00               	movlw	0
 22620  002CB0  6EDF               	movwf	indf2,c
 22621                           
 22622                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 22623  002CB2  5036               	movf	i2USBDeviceInit@i,w,c
 22624  002CB4  0D01               	mullw	1
 22625  002CB6  0E6D               	movlw	low _ep_data_out
 22626  002CB8  24F3               	addwf	prodl,w,c
 22627  002CBA  6ED9               	movwf	fsr2l,c
 22628  002CBC  0E00               	movlw	high _ep_data_out
 22629  002CBE  20F4               	addwfc	prodh,w,c
 22630  002CC0  6EDA               	movwf	fsr2h,c
 22631  002CC2  0E00               	movlw	0
 22632  002CC4  6EDF               	movwf	indf2,c
 22633  002CC6  2A36               	incf	i2USBDeviceInit@i,f,c
 22634  002CC8  D7CE               	goto	i2l9714
 22635  002CCA                     i2l9724:
 22636                           
 22637                           ;usb_device.c: 307: }
 22638                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 22639  002CCA  0E08               	movlw	8
 22640  002CCC  6E0F               	movwf	_pBDTEntryIn,c
 22641  002CCE  0E04               	movlw	4
 22642  002CD0  6E10               	movwf	_pBDTEntryIn+1,c
 22643                           
 22644                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 22645  002CD2  0E16               	movlw	22
 22646  002CD4  6E6A               	movwf	3946,c	;volatile
 22647                           
 22648                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 22649  002CD6  0E04               	movlw	4
 22650  002CD8  0104               	movlb	4	; () banked
 22651  002CDA  6F03               	movwf	3,b	;volatile
 22652  002CDC  0E30               	movlw	48
 22653  002CDE  6F02               	movwf	2,b	;volatile
 22654                           
 22655                           ; BSR set to: 4
 22656                           ;usb_device.c: 315: BDT[0].CNT = 8;
 22657  002CE0  0E08               	movlw	8
 22658  002CE2  0104               	movlb	4	; () banked
 22659  002CE4  6F01               	movwf	1,b	;volatile
 22660                           
 22661                           ; BSR set to: 4
 22662                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 22663  002CE6  0E04               	movlw	4
 22664  002CE8  0104               	movlb	4	; () banked
 22665  002CEA  6F00               	movwf	0,b	;volatile
 22666                           
 22667                           ; BSR set to: 4
 22668                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 22669  002CEC  0104               	movlb	4	; () banked
 22670  002CEE  8F00               	bsf	0,7,b	;volatile
 22671                           
 22672                           ; BSR set to: 4
 22673                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 22674  002CF0  0E00               	movlw	0
 22675  002CF2  6E2C               	movwf	_USBActiveConfiguration,c	;volatile
 22676                           
 22677                           ; BSR set to: 4
 22678                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 22679  002CF4  0E00               	movlw	0
 22680  002CF6  0100               	movlb	0	; () banked
 22681  002CF8  6F97               	movwf	_USBDeviceState& (0+255),b	;volatile
 22682                           
 22683                           ; BSR set to: 0
 22684  002CFA  0012               	return		;funcret
 22685  002CFC                     __end_ofi2_USBDeviceInit:
 22686                           	opt stack 0
 22687                           pclatu	equ	0xFFB
 22688                           pclath	equ	0xFFA
 22689                           tblptru	equ	0xFF8
 22690                           tblptrh	equ	0xFF7
 22691                           tblptrl	equ	0xFF6
 22692                           tablat	equ	0xFF5
 22693                           prodh	equ	0xFF4
 22694                           prodl	equ	0xFF3
 22695                           intcon	equ	0xFF2
 22696                           indf0	equ	0xFEF
 22697                           postinc0	equ	0xFEE
 22698                           fsr0h	equ	0xFEA
 22699                           fsr0l	equ	0xFE9
 22700                           wreg	equ	0xFE8
 22701                           indf1	equ	0xFE7
 22702                           postdec1	equ	0xFE5
 22703                           fsr1h	equ	0xFE2
 22704                           fsr1l	equ	0xFE1
 22705                           indf2	equ	0xFDF
 22706                           postinc2	equ	0xFDE
 22707                           postdec2	equ	0xFDD
 22708                           plusw2	equ	0xFDB
 22709                           fsr2h	equ	0xFDA
 22710                           fsr2l	equ	0xFD9
 22711                           status	equ	0xFD8
 22712                           
 22713 ;; *************** function _USBWakeFromSuspend *****************
 22714 ;; Defined at:
 22715 ;;		line 1944 in file "../Includes/Usb/Framework/usb_device.c"
 22716 ;; Parameters:    Size  Location     Type
 22717 ;;		None
 22718 ;; Auto vars:     Size  Location     Type
 22719 ;;		None
 22720 ;; Return value:  Size  Location     Type
 22721 ;;		None               void
 22722 ;; Registers used:
 22723 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22724 ;; Tracked objects:
 22725 ;;		On entry : 0/0
 22726 ;;		On exit  : 0/0
 22727 ;;		Unchanged: 0/0
 22728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22729 ;;      Params:         0       0       0       0       0       0       0       0       0
 22730 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22731 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22732 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22733 ;;Total ram usage:        0 bytes
 22734 ;; Hardware stack levels used:    1
 22735 ;; Hardware stack levels required when called:    5
 22736 ;; This function calls:
 22737 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22738 ;; This function is called by:
 22739 ;;		_USBDeviceTasks
 22740 ;; This function uses a non-reentrant model
 22741 ;;
 22742                           
 22743                           	psect	text91
 22744  00568E                     __ptext91:
 22745                           	opt stack 0
 22746  00568E                     _USBWakeFromSuspend:
 22747                           	opt stack 13
 22748                           
 22749                           ;usb_device.c: 1946: USBBusIsSuspended = 0;
 22750                           
 22751                           ; BSR set to: 0
 22752                           ;incstack = 0
 22753  00568E  0E00               	movlw	0
 22754  005690  0100               	movlb	0	; () banked
 22755  005692  6F94               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 22756                           
 22757                           ; BSR set to: 0
 22758                           ;usb_device.c: 1952: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 22759  005694  0E00               	movlw	0
 22760  005696  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 22761  005698  0E74               	movlw	116
 22762  00569A  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 22763  00569C  0E00               	movlw	0
 22764  00569E  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 22765  0056A0  0E00               	movlw	0
 22766  0056A2  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 22767  0056A4  0E00               	movlw	0
 22768  0056A6  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 22769  0056A8  0E00               	movlw	0
 22770  0056AA  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 22771  0056AC  EC34  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 22772                           
 22773                           ;usb_device.c: 1958: UCONbits.SUSPND = 0;
 22774  0056B0  9260               	bcf	3936,1,c	;volatile
 22775                           
 22776                           ;usb_device.c: 1960: UIEbits.ACTVIE = 0;
 22777  0056B2  9464               	bcf	3940,2,c	;volatile
 22778                           
 22779                           ;usb_device.c: 1976: while(UIRbits.ACTVIF)
 22780  0056B4  D001               	goto	i2l9612
 22781  0056B6                     i2l9610:
 22782                           
 22783                           ;usb_device.c: 1977: {
 22784                           ;usb_device.c: 1978: (UIR &= 0xFB);
 22785  0056B6  9465               	bcf	3941,2,c	;volatile
 22786  0056B8                     i2l9612:
 22787  0056B8  A465               	btfss	3941,2,c	;volatile
 22788  0056BA  0012               	return	
 22789  0056BC  D7FC               	goto	i2l9610
 22790  0056BE                     __end_of_USBWakeFromSuspend:
 22791                           	opt stack 0
 22792                           pclatu	equ	0xFFB
 22793                           pclath	equ	0xFFA
 22794                           tblptru	equ	0xFF8
 22795                           tblptrh	equ	0xFF7
 22796                           tblptrl	equ	0xFF6
 22797                           tablat	equ	0xFF5
 22798                           prodh	equ	0xFF4
 22799                           prodl	equ	0xFF3
 22800                           intcon	equ	0xFF2
 22801                           indf0	equ	0xFEF
 22802                           postinc0	equ	0xFEE
 22803                           fsr0h	equ	0xFEA
 22804                           fsr0l	equ	0xFE9
 22805                           wreg	equ	0xFE8
 22806                           indf1	equ	0xFE7
 22807                           postdec1	equ	0xFE5
 22808                           fsr1h	equ	0xFE2
 22809                           fsr1l	equ	0xFE1
 22810                           indf2	equ	0xFDF
 22811                           postinc2	equ	0xFDE
 22812                           postdec2	equ	0xFDD
 22813                           plusw2	equ	0xFDB
 22814                           fsr2h	equ	0xFDA
 22815                           fsr2l	equ	0xFD9
 22816                           status	equ	0xFD8
 22817                           
 22818 ;; *************** function _USBSuspend *****************
 22819 ;; Defined at:
 22820 ;;		line 1889 in file "../Includes/Usb/Framework/usb_device.c"
 22821 ;; Parameters:    Size  Location     Type
 22822 ;;		None
 22823 ;; Auto vars:     Size  Location     Type
 22824 ;;		None
 22825 ;; Return value:  Size  Location     Type
 22826 ;;		None               void
 22827 ;; Registers used:
 22828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22829 ;; Tracked objects:
 22830 ;;		On entry : 0/0
 22831 ;;		On exit  : 0/0
 22832 ;;		Unchanged: 0/0
 22833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22834 ;;      Params:         0       0       0       0       0       0       0       0       0
 22835 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22836 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22837 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22838 ;;Total ram usage:        0 bytes
 22839 ;; Hardware stack levels used:    1
 22840 ;; Hardware stack levels required when called:    5
 22841 ;; This function calls:
 22842 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22843 ;; This function is called by:
 22844 ;;		_USBDeviceTasks
 22845 ;; This function uses a non-reentrant model
 22846 ;;
 22847                           
 22848                           	psect	text92
 22849  0056EA                     __ptext92:
 22850                           	opt stack 0
 22851  0056EA                     _USBSuspend:
 22852                           	opt stack 13
 22853                           
 22854                           ;usb_device.c: 1914: UIEbits.ACTVIE = 1;
 22855                           
 22856                           ;incstack = 0
 22857  0056EA  8464               	bsf	3940,2,c	;volatile
 22858                           
 22859                           ;usb_device.c: 1915: (UIR &= 0xEF);
 22860  0056EC  9865               	bcf	3941,4,c	;volatile
 22861                           
 22862                           ;usb_device.c: 1917: UCONbits.SUSPND = 1;
 22863  0056EE  8260               	bsf	3936,1,c	;volatile
 22864                           
 22865                           ;usb_device.c: 1919: USBBusIsSuspended = 1;
 22866  0056F0  0E01               	movlw	1
 22867  0056F2  0100               	movlb	0	; () banked
 22868  0056F4  6F94               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 22869                           
 22870                           ; BSR set to: 0
 22871                           ;usb_device.c: 1926: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 22872  0056F6  0E00               	movlw	0
 22873  0056F8  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 22874  0056FA  0E75               	movlw	117
 22875  0056FC  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 22876  0056FE  0E00               	movlw	0
 22877  005700  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 22878  005702  0E00               	movlw	0
 22879  005704  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 22880  005706  0E00               	movlw	0
 22881  005708  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 22882  00570A  0E00               	movlw	0
 22883  00570C  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 22884  00570E  EC34  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 22885  005712  0012               	return		;funcret
 22886  005714                     __end_of_USBSuspend:
 22887                           	opt stack 0
 22888                           pclatu	equ	0xFFB
 22889                           pclath	equ	0xFFA
 22890                           tblptru	equ	0xFF8
 22891                           tblptrh	equ	0xFF7
 22892                           tblptrl	equ	0xFF6
 22893                           tablat	equ	0xFF5
 22894                           prodh	equ	0xFF4
 22895                           prodl	equ	0xFF3
 22896                           intcon	equ	0xFF2
 22897                           indf0	equ	0xFEF
 22898                           postinc0	equ	0xFEE
 22899                           fsr0h	equ	0xFEA
 22900                           fsr0l	equ	0xFE9
 22901                           wreg	equ	0xFE8
 22902                           indf1	equ	0xFE7
 22903                           postdec1	equ	0xFE5
 22904                           fsr1h	equ	0xFE2
 22905                           fsr1l	equ	0xFE1
 22906                           indf2	equ	0xFDF
 22907                           postinc2	equ	0xFDE
 22908                           postdec2	equ	0xFDD
 22909                           plusw2	equ	0xFDB
 22910                           fsr2h	equ	0xFDA
 22911                           fsr2l	equ	0xFD9
 22912                           status	equ	0xFD8
 22913                           
 22914 ;; *************** function _USBStallHandler *****************
 22915 ;; Defined at:
 22916 ;;		line 1846 in file "../Includes/Usb/Framework/usb_device.c"
 22917 ;; Parameters:    Size  Location     Type
 22918 ;;		None
 22919 ;; Auto vars:     Size  Location     Type
 22920 ;;		None
 22921 ;; Return value:  Size  Location     Type
 22922 ;;		None               void
 22923 ;; Registers used:
 22924 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22925 ;; Tracked objects:
 22926 ;;		On entry : 0/0
 22927 ;;		On exit  : 0/0
 22928 ;;		Unchanged: 0/0
 22929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22930 ;;      Params:         0       0       0       0       0       0       0       0       0
 22931 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22932 ;;      Temps:          1       0       0       0       0       0       0       0       0
 22933 ;;      Totals:         1       0       0       0       0       0       0       0       0
 22934 ;;Total ram usage:        1 bytes
 22935 ;; Hardware stack levels used:    1
 22936 ;; This function calls:
 22937 ;;		Nothing
 22938 ;; This function is called by:
 22939 ;;		_USBDeviceTasks
 22940 ;; This function uses a non-reentrant model
 22941 ;;
 22942                           
 22943                           	psect	text93
 22944  00533E                     __ptext93:
 22945                           	opt stack 0
 22946  00533E                     _USBStallHandler:
 22947                           	opt stack 18
 22948                           
 22949                           ;usb_device.c: 1858: if(UEP0bits.EPSTALL == 1)
 22950                           
 22951                           ;incstack = 0
 22952  00533E  A06A               	btfss	3946,0,c	;volatile
 22953  005340  D01D               	goto	i2l1784
 22954                           
 22955                           ;usb_device.c: 1859: {
 22956                           ;usb_device.c: 1861: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 22957  005342  C017  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 22958  005346  C018  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 22959  00534A  0E80               	movlw	128
 22960  00534C  18DE               	xorwf	postinc2,w,c
 22961  00534E  A4D8               	btfss	status,2,c
 22962  005350  D014               	goto	i2l9634
 22963  005352  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 22964  005356  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22965  00535A  0E84               	movlw	132
 22966  00535C  18DE               	xorwf	postinc2,w,c
 22967  00535E  A4D8               	btfss	status,2,c
 22968  005360  D00C               	goto	i2l9634
 22969                           
 22970                           ;usb_device.c: 1862: {
 22971                           ;usb_device.c: 1864: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 22972  005362  C017  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 22973  005366  C018  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 22974  00536A  0E0C               	movlw	12
 22975  00536C  6EDF               	movwf	indf2,c
 22976                           
 22977                           ;usb_device.c: 1865: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 22978  00536E  C017  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 22979  005372  C018  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 22980  005376  0E00               	movlw	0
 22981  005378  8EDB               	bsf	plusw2,7,c
 22982  00537A                     i2l9634:
 22983                           
 22984                           ;usb_device.c: 1866: }
 22985                           ;usb_device.c: 1867: UEP0bits.EPSTALL = 0;
 22986  00537A  906A               	bcf	3946,0,c	;volatile
 22987  00537C                     i2l1784:
 22988                           
 22989                           ;usb_device.c: 1868: }
 22990                           ;usb_device.c: 1870: (UIR &= 0xDF);
 22991  00537C  9A65               	bcf	3941,5,c	;volatile
 22992  00537E  0012               	return		;funcret
 22993  005380                     __end_of_USBStallHandler:
 22994                           	opt stack 0
 22995                           pclatu	equ	0xFFB
 22996                           pclath	equ	0xFFA
 22997                           tblptru	equ	0xFF8
 22998                           tblptrh	equ	0xFF7
 22999                           tblptrl	equ	0xFF6
 23000                           tablat	equ	0xFF5
 23001                           prodh	equ	0xFF4
 23002                           prodl	equ	0xFF3
 23003                           intcon	equ	0xFF2
 23004                           indf0	equ	0xFEF
 23005                           postinc0	equ	0xFEE
 23006                           fsr0h	equ	0xFEA
 23007                           fsr0l	equ	0xFE9
 23008                           wreg	equ	0xFE8
 23009                           indf1	equ	0xFE7
 23010                           postdec1	equ	0xFE5
 23011                           fsr1h	equ	0xFE2
 23012                           fsr1l	equ	0xFE1
 23013                           indf2	equ	0xFDF
 23014                           postinc2	equ	0xFDE
 23015                           postdec2	equ	0xFDD
 23016                           plusw2	equ	0xFDB
 23017                           fsr2h	equ	0xFDA
 23018                           fsr2l	equ	0xFD9
 23019                           status	equ	0xFD8
 23020                           
 23021 ;; *************** function _USBCtrlEPService *****************
 23022 ;; Defined at:
 23023 ;;		line 2004 in file "../Includes/Usb/Framework/usb_device.c"
 23024 ;; Parameters:    Size  Location     Type
 23025 ;;		None
 23026 ;; Auto vars:     Size  Location     Type
 23027 ;;  setup_cnt       1   29[COMRAM] unsigned char 
 23028 ;; Return value:  Size  Location     Type
 23029 ;;		None               void
 23030 ;; Registers used:
 23031 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23032 ;; Tracked objects:
 23033 ;;		On entry : 0/0
 23034 ;;		On exit  : 0/0
 23035 ;;		Unchanged: 0/0
 23036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23037 ;;      Params:         0       0       0       0       0       0       0       0       0
 23038 ;;      Locals:         1       0       0       0       0       0       0       0       0
 23039 ;;      Temps:          2       0       0       0       0       0       0       0       0
 23040 ;;      Totals:         3       0       0       0       0       0       0       0       0
 23041 ;;Total ram usage:        3 bytes
 23042 ;; Hardware stack levels used:    1
 23043 ;; Hardware stack levels required when called:    8
 23044 ;; This function calls:
 23045 ;;		_USBCtrlTrfInHandler
 23046 ;;		_USBCtrlTrfOutHandler
 23047 ;;		_USBCtrlTrfSetupHandler
 23048 ;; This function is called by:
 23049 ;;		_USBDeviceTasks
 23050 ;; This function uses a non-reentrant model
 23051 ;;
 23052                           
 23053                           	psect	text94
 23054  003FE0                     __ptext94:
 23055                           	opt stack 0
 23056  003FE0                     _USBCtrlEPService:
 23057                           	opt stack 10
 23058                           
 23059                           ;usb_device.c: 2009: USBStatusStageTimeoutCounter = (uint8_t)45;
 23060                           
 23061                           ;incstack = 0
 23062  003FE0  0E2D               	movlw	45
 23063  003FE2  6E22               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 23064                           
 23065                           ;usb_device.c: 2012: if((USTATcopy.Val & ~0x02) == 0x00)
 23066  003FE4  C02D  F049         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 23067  003FE8  0EFD               	movlw	253
 23068  003FEA  1649               	andwf	??_USBCtrlEPService,f,c
 23069  003FEC  A4D8               	btfss	status,2,c
 23070  003FEE  D057               	goto	i2l9668
 23071                           
 23072                           ;usb_device.c: 2013: {
 23073                           ;usb_device.c: 2015: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 23074  003FF0  C02D  F049         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 23075  003FF4  90D8               	bcf	status,0,c
 23076  003FF6  3249               	rrcf	??_USBCtrlEPService,f,c
 23077  003FF8  0E3F               	movlw	63
 23078  003FFA  1649               	andwf	??_USBCtrlEPService,f,c
 23079  003FFC  5049               	movf	??_USBCtrlEPService,w,c
 23080  003FFE  0D04               	mullw	4
 23081  004000  0E00               	movlw	0
 23082  004002  24F3               	addwf	prodl,w,c
 23083  004004  6E17               	movwf	_pBDTEntryEP0OutCurrent,c
 23084  004006  0E04               	movlw	4
 23085  004008  20F4               	addwfc	prodh,w,c
 23086  00400A  6E18               	movwf	_pBDTEntryEP0OutCurrent+1,c
 23087                           
 23088                           ;usb_device.c: 2019: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 23089  00400C  C017  F019         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 23090  004010  C018  F01A         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 23091                           
 23092                           ;usb_device.c: 2021: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 23093  004014  0E04               	movlw	4
 23094  004016  1A19               	xorwf	_pBDTEntryEP0OutNext,f,c
 23095                           
 23096                           ;usb_device.c: 2024: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 23097  004018  C017  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 23098  00401C  C018  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 23099  004020  30DF               	rrcf	indf2,w,c
 23100  004022  32E8               	rrcf	wreg,f,c
 23101  004024  0B0F               	andlw	15
 23102  004026  0A0D               	xorlw	13
 23103  004028  A4D8               	btfss	status,2,c
 23104  00402A  D036               	goto	i2l9666
 23105                           
 23106                           ;usb_device.c: 2025: {
 23107                           ;usb_device.c: 2026: unsigned char setup_cnt;
 23108                           ;usb_device.c: 2032: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 23109  00402C  0E00               	movlw	0
 23110  00402E  6E4B               	movwf	USBCtrlEPService@setup_cnt,c
 23111  004030                     i2l9650:
 23112  004030  0E07               	movlw	7
 23113  004032  644B               	cpfsgt	USBCtrlEPService@setup_cnt,c
 23114  004034  D001               	goto	i2l9654
 23115  004036  D023               	goto	i2l9662
 23116  004038                     i2l9654:
 23117                           
 23118                           ;usb_device.c: 2033: {
 23119                           ;usb_device.c: 2034: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 23120  004038  EE20 F002          	lfsr	2,2
 23121  00403C  5017               	movf	_pBDTEntryEP0OutCurrent,w,c
 23122  00403E  26D9               	addwf	fsr2l,f,c
 23123  004040  5018               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 23124  004042  22DA               	addwfc	fsr2h,f,c
 23125  004044  CFDE F049          	movff	postinc2,??_USBCtrlEPService
 23126  004048  CFDD F04A          	movff	postdec2,??_USBCtrlEPService+1
 23127  00404C  C049  FFD9         	movff	??_USBCtrlEPService,fsr2l
 23128  004050  C04A  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 23129  004054  504B               	movf	USBCtrlEPService@setup_cnt,w,c
 23130  004056  0D01               	mullw	1
 23131  004058  0E30               	movlw	48
 23132  00405A  24F3               	addwf	prodl,w,c
 23133  00405C  6EE1               	movwf	fsr1l,c
 23134  00405E  0E04               	movlw	4
 23135  004060  20F4               	addwfc	prodh,w,c
 23136  004062  6EE2               	movwf	fsr1h,c
 23137  004064  CFDF FFE7          	movff	indf2,indf1
 23138                           
 23139                           ;usb_device.c: 2035: pBDTEntryEP0OutCurrent->ADR++;
 23140  004068  EE20 F002          	lfsr	2,2
 23141  00406C  5017               	movf	_pBDTEntryEP0OutCurrent,w,c
 23142  00406E  26D9               	addwf	fsr2l,f,c
 23143  004070  5018               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 23144  004072  22DA               	addwfc	fsr2h,f,c
 23145  004074  2ADE               	incf	postinc2,f,c
 23146  004076  0E00               	movlw	0
 23147  004078  22DD               	addwfc	postdec2,f,c
 23148  00407A  2A4B               	incf	USBCtrlEPService@setup_cnt,f,c
 23149  00407C  D7D9               	goto	i2l9650
 23150  00407E                     i2l9662:
 23151                           
 23152                           ;usb_device.c: 2036: }
 23153                           ;usb_device.c: 2037: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 23154  00407E  EE20 F002          	lfsr	2,2
 23155  004082  5017               	movf	_pBDTEntryEP0OutCurrent,w,c
 23156  004084  26D9               	addwf	fsr2l,f,c
 23157  004086  5018               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 23158  004088  22DA               	addwfc	fsr2h,f,c
 23159  00408A  0E30               	movlw	48
 23160  00408C  6EDE               	movwf	postinc2,c
 23161  00408E  0E04               	movlw	4
 23162  004090  6EDD               	movwf	postdec2,c
 23163                           
 23164                           ;usb_device.c: 2040: USBCtrlTrfSetupHandler();
 23165  004092  EC66  F025         	call	_USBCtrlTrfSetupHandler	;wreg free
 23166                           
 23167                           ;usb_device.c: 2041: }
 23168  004096  0012               	return	
 23169  004098                     i2l9666:
 23170                           
 23171                           ;usb_device.c: 2042: else
 23172                           ;usb_device.c: 2043: {
 23173                           ;usb_device.c: 2045: USBCtrlTrfOutHandler();
 23174  004098  ECA7  F027         	call	_USBCtrlTrfOutHandler	;wreg free
 23175                           
 23176                           ;usb_device.c: 2046: }
 23177                           ;usb_device.c: 2047: }
 23178  00409C  0012               	return	
 23179  00409E                     i2l9668:
 23180                           
 23181                           ;usb_device.c: 2048: else if((USTATcopy.Val & ~0x02) == 0x04)
 23182  00409E  502D               	movf	_USTATcopy,w,c	;volatile
 23183  0040A0  0BFD               	andlw	253
 23184  0040A2  0A04               	xorlw	4
 23185  0040A4  A4D8               	btfss	status,2,c
 23186  0040A6  0012               	return	
 23187                           
 23188                           ;usb_device.c: 2049: {
 23189                           ;usb_device.c: 2052: USBCtrlTrfInHandler();
 23190  0040A8  EC89  F01C         	call	_USBCtrlTrfInHandler	;wreg free
 23191  0040AC  0012               	return	
 23192  0040AE                     __end_of_USBCtrlEPService:
 23193                           	opt stack 0
 23194                           pclatu	equ	0xFFB
 23195                           pclath	equ	0xFFA
 23196                           tblptru	equ	0xFF8
 23197                           tblptrh	equ	0xFF7
 23198                           tblptrl	equ	0xFF6
 23199                           tablat	equ	0xFF5
 23200                           prodh	equ	0xFF4
 23201                           prodl	equ	0xFF3
 23202                           intcon	equ	0xFF2
 23203                           indf0	equ	0xFEF
 23204                           postinc0	equ	0xFEE
 23205                           fsr0h	equ	0xFEA
 23206                           fsr0l	equ	0xFE9
 23207                           wreg	equ	0xFE8
 23208                           indf1	equ	0xFE7
 23209                           postdec1	equ	0xFE5
 23210                           fsr1h	equ	0xFE2
 23211                           fsr1l	equ	0xFE1
 23212                           indf2	equ	0xFDF
 23213                           postinc2	equ	0xFDE
 23214                           postdec2	equ	0xFDD
 23215                           plusw2	equ	0xFDB
 23216                           fsr2h	equ	0xFDA
 23217                           fsr2l	equ	0xFD9
 23218                           status	equ	0xFD8
 23219                           
 23220 ;; *************** function _USBCtrlTrfSetupHandler *****************
 23221 ;; Defined at:
 23222 ;;		line 2097 in file "../Includes/Usb/Framework/usb_device.c"
 23223 ;; Parameters:    Size  Location     Type
 23224 ;;		None
 23225 ;; Auto vars:     Size  Location     Type
 23226 ;;		None
 23227 ;; Return value:  Size  Location     Type
 23228 ;;		None               void
 23229 ;; Registers used:
 23230 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23231 ;; Tracked objects:
 23232 ;;		On entry : 0/0
 23233 ;;		On exit  : 0/0
 23234 ;;		Unchanged: 0/0
 23235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23236 ;;      Params:         0       0       0       0       0       0       0       0       0
 23237 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23238 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23239 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23240 ;;Total ram usage:        0 bytes
 23241 ;; Hardware stack levels used:    1
 23242 ;; Hardware stack levels required when called:    7
 23243 ;; This function calls:
 23244 ;;		_USBCheckStdRequest
 23245 ;;		_USBCtrlEPServiceComplete
 23246 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 23247 ;; This function is called by:
 23248 ;;		_USBCtrlEPService
 23249 ;; This function uses a non-reentrant model
 23250 ;;
 23251                           
 23252                           	psect	text95
 23253  004ACC                     __ptext95:
 23254                           	opt stack 0
 23255  004ACC                     _USBCtrlTrfSetupHandler:
 23256                           	opt stack 10
 23257                           
 23258                           ;usb_device.c: 2102: shortPacketStatus = 0;
 23259                           
 23260                           ;incstack = 0
 23261  004ACC  0E00               	movlw	0
 23262  004ACE  6E2B               	movwf	_shortPacketStatus,c	;volatile
 23263                           
 23264                           ;usb_device.c: 2103: USBDeferStatusStagePacket = 0;
 23265  004AD0  0E00               	movlw	0
 23266  004AD2  6E21               	movwf	_USBDeferStatusStagePacket,c	;volatile
 23267                           
 23268                           ;usb_device.c: 2104: USBDeferINDataStagePackets = 0;
 23269  004AD4  0E00               	movlw	0
 23270  004AD6  0100               	movlb	0	; () banked
 23271  004AD8  6F95               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 23272                           
 23273                           ;usb_device.c: 2105: USBDeferOUTDataStagePackets = 0;
 23274  004ADA  0E00               	movlw	0
 23275  004ADC  0100               	movlb	0	; () banked
 23276  004ADE  6F96               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 23277                           
 23278                           ;usb_device.c: 2106: BothEP0OutUOWNsSet = 0;
 23279  004AE0  0E00               	movlw	0
 23280  004AE2  0100               	movlb	0	; () banked
 23281  004AE4  6F8C               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 23282                           
 23283                           ;usb_device.c: 2107: controlTransferState = 0;
 23284  004AE6  0E00               	movlw	0
 23285  004AE8  6E24               	movwf	_controlTransferState,c	;volatile
 23286                           
 23287                           ; BSR set to: 0
 23288                           ;usb_device.c: 2116: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 23289  004AEA  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 23290  004AEE  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23291  004AF2  0E7F               	movlw	127
 23292  004AF4  16DF               	andwf	indf2,f,c
 23293                           
 23294                           ; BSR set to: 0
 23295                           ;usb_device.c: 2117: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 23296  004AF6  0E04               	movlw	4
 23297  004AF8  1A0F               	xorwf	_pBDTEntryIn,f,c
 23298                           
 23299                           ; BSR set to: 0
 23300                           ;usb_device.c: 2118: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 23301  004AFA  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 23302  004AFE  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23303  004B02  0E7F               	movlw	127
 23304  004B04  16DF               	andwf	indf2,f,c
 23305                           
 23306                           ; BSR set to: 0
 23307                           ;usb_device.c: 2119: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 23308  004B06  0E04               	movlw	4
 23309  004B08  1A0F               	xorwf	_pBDTEntryIn,f,c
 23310                           
 23311                           ; BSR set to: 0
 23312                           ;usb_device.c: 2120: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 23313  004B0A  C019  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23314  004B0E  C01A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23315  004B12  0E7F               	movlw	127
 23316  004B14  16DF               	andwf	indf2,f,c
 23317                           
 23318                           ; BSR set to: 0
 23319                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 23320  004B16  0E00               	movlw	0
 23321  004B18  6E0C               	movwf	_inPipes+3,c	;volatile
 23322                           
 23323                           ; BSR set to: 0
 23324                           ;usb_device.c: 2123: inPipes[0].wCount.Val = 0;
 23325  004B1A  0E00               	movlw	0
 23326  004B1C  6E0E               	movwf	_inPipes+5,c	;volatile
 23327  004B1E  0E00               	movlw	0
 23328  004B20  6E0D               	movwf	_inPipes+4,c	;volatile
 23329                           
 23330                           ; BSR set to: 0
 23331                           ;usb_device.c: 2124: outPipes[0].info.Val = 0;
 23332  004B22  0E00               	movlw	0
 23333  004B24  6E04               	movwf	_outPipes+3,c	;volatile
 23334                           
 23335                           ; BSR set to: 0
 23336                           ;usb_device.c: 2125: outPipes[0].wCount.Val = 0;
 23337  004B26  0E00               	movlw	0
 23338  004B28  6E06               	movwf	_outPipes+5,c	;volatile
 23339  004B2A  0E00               	movlw	0
 23340  004B2C  6E05               	movwf	_outPipes+4,c	;volatile
 23341                           
 23342                           ; BSR set to: 0
 23343                           ;usb_device.c: 2131: USBCheckStdRequest();
 23344  004B2E  ECD6  F01D         	call	_USBCheckStdRequest	;wreg free
 23345                           
 23346                           ;usb_device.c: 2132: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 23347  004B32  0E00               	movlw	0
 23348  004B34  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 23349  004B36  0E03               	movlw	3
 23350  004B38  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 23351  004B3A  0E00               	movlw	0
 23352  004B3C  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 23353  004B3E  0E00               	movlw	0
 23354  004B40  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 23355  004B42  0E00               	movlw	0
 23356  004B44  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 23357  004B46  0E00               	movlw	0
 23358  004B48  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 23359  004B4A  EC34  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 23360                           
 23361                           ;usb_device.c: 2145: USBCtrlEPServiceComplete();
 23362  004B4E  ECCD  F018         	call	_USBCtrlEPServiceComplete	;wreg free
 23363  004B52  0012               	return		;funcret
 23364  004B54                     __end_of_USBCtrlTrfSetupHandler:
 23365                           	opt stack 0
 23366                           pclatu	equ	0xFFB
 23367                           pclath	equ	0xFFA
 23368                           tblptru	equ	0xFF8
 23369                           tblptrh	equ	0xFF7
 23370                           tblptrl	equ	0xFF6
 23371                           tablat	equ	0xFF5
 23372                           prodh	equ	0xFF4
 23373                           prodl	equ	0xFF3
 23374                           intcon	equ	0xFF2
 23375                           indf0	equ	0xFEF
 23376                           postinc0	equ	0xFEE
 23377                           fsr0h	equ	0xFEA
 23378                           fsr0l	equ	0xFE9
 23379                           wreg	equ	0xFE8
 23380                           indf1	equ	0xFE7
 23381                           postdec1	equ	0xFE5
 23382                           fsr1h	equ	0xFE2
 23383                           fsr1l	equ	0xFE1
 23384                           indf2	equ	0xFDF
 23385                           postinc2	equ	0xFDE
 23386                           postdec2	equ	0xFDD
 23387                           plusw2	equ	0xFDB
 23388                           fsr2h	equ	0xFDA
 23389                           fsr2l	equ	0xFD9
 23390                           status	equ	0xFD8
 23391                           
 23392 ;; *************** function _USBCtrlEPServiceComplete *****************
 23393 ;; Defined at:
 23394 ;;		line 1282 in file "../Includes/Usb/Framework/usb_device.c"
 23395 ;; Parameters:    Size  Location     Type
 23396 ;;		None
 23397 ;; Auto vars:     Size  Location     Type
 23398 ;;		None
 23399 ;; Return value:  Size  Location     Type
 23400 ;;		None               void
 23401 ;; Registers used:
 23402 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23403 ;; Tracked objects:
 23404 ;;		On entry : 0/0
 23405 ;;		On exit  : 0/0
 23406 ;;		Unchanged: 0/0
 23407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23408 ;;      Params:         0       0       0       0       0       0       0       0       0
 23409 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23410 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23411 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23412 ;;Total ram usage:        0 bytes
 23413 ;; Hardware stack levels used:    1
 23414 ;; Hardware stack levels required when called:    2
 23415 ;; This function calls:
 23416 ;;		_USBCtrlEPAllowDataStage
 23417 ;;		_USBCtrlEPAllowStatusStage
 23418 ;; This function is called by:
 23419 ;;		_USBCtrlTrfSetupHandler
 23420 ;; This function uses a non-reentrant model
 23421 ;;
 23422                           
 23423                           	psect	text96
 23424  00319A                     __ptext96:
 23425                           	opt stack 0
 23426  00319A                     _USBCtrlEPServiceComplete:
 23427                           	opt stack 14
 23428                           
 23429                           ;usb_device.c: 1288: UCONbits.PKTDIS = 0;
 23430                           
 23431                           ;incstack = 0
 23432  00319A  9860               	bcf	3936,4,c	;volatile
 23433                           
 23434                           ;usb_device.c: 1294: if(inPipes[0].info.bits.busy == 0)
 23435  00319C  BE0C               	btfsc	_inPipes+3,7,c	;volatile
 23436  00319E  D03B               	goto	i2l1708
 23437                           
 23438                           ;usb_device.c: 1295: {
 23439                           ;usb_device.c: 1296: if(outPipes[0].info.bits.busy == 1)
 23440  0031A0  AE04               	btfss	_outPipes+3,7,c	;volatile
 23441  0031A2  D00E               	goto	i2l7570
 23442                           
 23443                           ;usb_device.c: 1297: {
 23444                           ;usb_device.c: 1298: controlTransferState = 2;
 23445  0031A4  0E02               	movlw	2
 23446  0031A6  6E24               	movwf	_controlTransferState,c	;volatile
 23447                           
 23448                           ;usb_device.c: 1309: if(USBDeferOUTDataStagePackets == 0)
 23449  0031A8  0100               	movlb	0	; () banked
 23450  0031AA  5196               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 23451  0031AC  B4D8               	btfsc	status,2,c
 23452                           
 23453                           ; BSR set to: 0
 23454                           ;usb_device.c: 1310: {
 23455                           ;usb_device.c: 1311: USBCtrlEPAllowDataStage();
 23456  0031AE  EC88  F024         	call	_USBCtrlEPAllowDataStage	;wreg free
 23457                           
 23458                           ;usb_device.c: 1312: }
 23459                           ;usb_device.c: 1316: USBStatusStageEnabledFlag2 = 0;
 23460  0031B2  0E00               	movlw	0
 23461  0031B4  0100               	movlb	0	; () banked
 23462  0031B6  6F99               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 23463                           
 23464                           ; BSR set to: 0
 23465                           ;usb_device.c: 1317: USBStatusStageEnabledFlag1 = 0;
 23466  0031B8  0E00               	movlw	0
 23467  0031BA  0100               	movlb	0	; () banked
 23468  0031BC  6F98               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 23469                           
 23470                           ;usb_device.c: 1318: }
 23471  0031BE  0012               	return	
 23472  0031C0                     i2l7570:
 23473                           
 23474                           ;usb_device.c: 1319: else
 23475                           ;usb_device.c: 1320: {
 23476                           ;usb_device.c: 1325: pBDTEntryEP0OutNext->CNT = 8;
 23477  0031C0  EE20 F001          	lfsr	2,1
 23478  0031C4  5019               	movf	_pBDTEntryEP0OutNext,w,c
 23479  0031C6  26D9               	addwf	fsr2l,f,c
 23480  0031C8  501A               	movf	_pBDTEntryEP0OutNext+1,w,c
 23481  0031CA  22DA               	addwfc	fsr2h,f,c
 23482  0031CC  0E08               	movlw	8
 23483  0031CE  6EDF               	movwf	indf2,c
 23484                           
 23485                           ;usb_device.c: 1326: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 23486  0031D0  EE20 F002          	lfsr	2,2
 23487  0031D4  5019               	movf	_pBDTEntryEP0OutNext,w,c
 23488  0031D6  26D9               	addwf	fsr2l,f,c
 23489  0031D8  501A               	movf	_pBDTEntryEP0OutNext+1,w,c
 23490  0031DA  22DA               	addwfc	fsr2h,f,c
 23491  0031DC  0E30               	movlw	48
 23492  0031DE  6EDE               	movwf	postinc2,c
 23493  0031E0  0E04               	movlw	4
 23494  0031E2  6EDD               	movwf	postdec2,c
 23495                           
 23496                           ;usb_device.c: 1327: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 23497  0031E4  C019  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23498  0031E8  C01A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23499  0031EC  0E0C               	movlw	12
 23500  0031EE  6EDF               	movwf	indf2,c
 23501                           
 23502                           ;usb_device.c: 1328: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 23503  0031F0  C019  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23504  0031F4  C01A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23505  0031F8  0E00               	movlw	0
 23506  0031FA  8EDB               	bsf	plusw2,7,c
 23507                           
 23508                           ;usb_device.c: 1329: pBDTEntryIn[0]->STAT.Val = 0x04;
 23509  0031FC  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 23510  003200  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23511  003204  0E04               	movlw	4
 23512  003206  6EDF               	movwf	indf2,c
 23513                           
 23514                           ;usb_device.c: 1330: pBDTEntryIn[0]->STAT.Val |= 0x80;
 23515  003208  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 23516  00320C  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23517  003210  0E00               	movlw	0
 23518  003212  8EDB               	bsf	plusw2,7,c
 23519                           
 23520                           ;usb_device.c: 1331: }
 23521                           ;usb_device.c: 1332: }
 23522  003214  0012               	return	
 23523  003216                     i2l1708:
 23524                           
 23525                           ;usb_device.c: 1333: else
 23526                           ;usb_device.c: 1334: {
 23527                           ;usb_device.c: 1335: if(SetupPkt.DataDir == (0x80>>7))
 23528  003216  0104               	movlb	4	; () banked
 23529  003218  AF30               	btfss	48,7,b	;volatile
 23530  00321A  D013               	goto	i2l7590
 23531                           
 23532                           ; BSR set to: 4
 23533                           ;usb_device.c: 1336: {
 23534                           ;usb_device.c: 1337: controlTransferState = 1;
 23535  00321C  0E01               	movlw	1
 23536  00321E  6E24               	movwf	_controlTransferState,c	;volatile
 23537                           
 23538                           ;usb_device.c: 1351: if(USBDeferINDataStagePackets == 0)
 23539  003220  0100               	movlb	0	; () banked
 23540  003222  5195               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 23541  003224  B4D8               	btfsc	status,2,c
 23542                           
 23543                           ; BSR set to: 0
 23544                           ;usb_device.c: 1352: {
 23545                           ;usb_device.c: 1353: USBCtrlEPAllowDataStage();
 23546  003226  EC88  F024         	call	_USBCtrlEPAllowDataStage	;wreg free
 23547                           
 23548                           ;usb_device.c: 1354: }
 23549                           ;usb_device.c: 1376: USBStatusStageEnabledFlag2 = 0;
 23550  00322A  0E00               	movlw	0
 23551  00322C  0100               	movlb	0	; () banked
 23552  00322E  6F99               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 23553                           
 23554                           ; BSR set to: 0
 23555                           ;usb_device.c: 1377: USBStatusStageEnabledFlag1 = 0;
 23556  003230  0E00               	movlw	0
 23557  003232  0100               	movlb	0	; () banked
 23558  003234  6F98               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 23559                           
 23560                           ; BSR set to: 0
 23561                           ;usb_device.c: 1378: if(USBDeferStatusStagePacket == 0)
 23562  003236  5021               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 23563  003238  A4D8               	btfss	status,2,c
 23564  00323A  0012               	return	
 23565                           
 23566                           ; BSR set to: 0
 23567                           ;usb_device.c: 1379: {
 23568                           ;usb_device.c: 1380: USBCtrlEPAllowStatusStage();
 23569  00323C  EC57  F020         	call	_USBCtrlEPAllowStatusStage	;wreg free
 23570                           
 23571                           ;usb_device.c: 1381: }
 23572                           ;usb_device.c: 1382: }
 23573  003240  0012               	return	
 23574  003242                     i2l7590:
 23575                           
 23576                           ;usb_device.c: 1383: else
 23577                           ;usb_device.c: 1384: {
 23578                           ;usb_device.c: 1395: controlTransferState = 2;
 23579  003242  0E02               	movlw	2
 23580  003244  6E24               	movwf	_controlTransferState,c	;volatile
 23581                           
 23582                           ;usb_device.c: 1398: pBDTEntryEP0OutNext->CNT = 8;
 23583  003246  EE20 F001          	lfsr	2,1
 23584  00324A  5019               	movf	_pBDTEntryEP0OutNext,w,c
 23585  00324C  26D9               	addwf	fsr2l,f,c
 23586  00324E  501A               	movf	_pBDTEntryEP0OutNext+1,w,c
 23587  003250  22DA               	addwfc	fsr2h,f,c
 23588  003252  0E08               	movlw	8
 23589  003254  6EDF               	movwf	indf2,c
 23590                           
 23591                           ;usb_device.c: 1399: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 23592  003256  EE20 F002          	lfsr	2,2
 23593  00325A  5019               	movf	_pBDTEntryEP0OutNext,w,c
 23594  00325C  26D9               	addwf	fsr2l,f,c
 23595  00325E  501A               	movf	_pBDTEntryEP0OutNext+1,w,c
 23596  003260  22DA               	addwfc	fsr2h,f,c
 23597  003262  0E30               	movlw	48
 23598  003264  6EDE               	movwf	postinc2,c
 23599  003266  0E04               	movlw	4
 23600  003268  6EDD               	movwf	postdec2,c
 23601                           
 23602                           ;usb_device.c: 1400: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 23603  00326A  C019  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23604  00326E  C01A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23605  003272  0E04               	movlw	4
 23606  003274  6EDF               	movwf	indf2,c
 23607                           
 23608                           ;usb_device.c: 1401: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 23609  003276  C019  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23610  00327A  C01A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23611  00327E  0E00               	movlw	0
 23612  003280  8EDB               	bsf	plusw2,7,c
 23613                           
 23614                           ;usb_device.c: 1404: USBStatusStageEnabledFlag2 = 0;
 23615  003282  0E00               	movlw	0
 23616  003284  0100               	movlb	0	; () banked
 23617  003286  6F99               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 23618                           
 23619                           ; BSR set to: 0
 23620                           ;usb_device.c: 1405: USBStatusStageEnabledFlag1 = 0;
 23621  003288  0E00               	movlw	0
 23622  00328A  0100               	movlb	0	; () banked
 23623  00328C  6F98               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 23624                           
 23625                           ; BSR set to: 0
 23626                           ;usb_device.c: 1406: if(USBDeferStatusStagePacket == 0)
 23627  00328E  5021               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 23628  003290  A4D8               	btfss	status,2,c
 23629  003292  0012               	return	
 23630                           
 23631                           ; BSR set to: 0
 23632                           ;usb_device.c: 1407: {
 23633                           ;usb_device.c: 1408: USBCtrlEPAllowStatusStage();
 23634  003294  EC57  F020         	call	_USBCtrlEPAllowStatusStage	;wreg free
 23635  003298  0012               	return	
 23636  00329A                     __end_of_USBCtrlEPServiceComplete:
 23637                           	opt stack 0
 23638                           pclatu	equ	0xFFB
 23639                           pclath	equ	0xFFA
 23640                           tblptru	equ	0xFF8
 23641                           tblptrh	equ	0xFF7
 23642                           tblptrl	equ	0xFF6
 23643                           tablat	equ	0xFF5
 23644                           prodh	equ	0xFF4
 23645                           prodl	equ	0xFF3
 23646                           intcon	equ	0xFF2
 23647                           indf0	equ	0xFEF
 23648                           postinc0	equ	0xFEE
 23649                           fsr0h	equ	0xFEA
 23650                           fsr0l	equ	0xFE9
 23651                           wreg	equ	0xFE8
 23652                           indf1	equ	0xFE7
 23653                           postdec1	equ	0xFE5
 23654                           fsr1h	equ	0xFE2
 23655                           fsr1l	equ	0xFE1
 23656                           indf2	equ	0xFDF
 23657                           postinc2	equ	0xFDE
 23658                           postdec2	equ	0xFDD
 23659                           plusw2	equ	0xFDB
 23660                           fsr2h	equ	0xFDA
 23661                           fsr2l	equ	0xFD9
 23662                           status	equ	0xFD8
 23663                           
 23664 ;; *************** function _USBCtrlEPAllowDataStage *****************
 23665 ;; Defined at:
 23666 ;;		line 1173 in file "../Includes/Usb/Framework/usb_device.c"
 23667 ;; Parameters:    Size  Location     Type
 23668 ;;		None
 23669 ;; Auto vars:     Size  Location     Type
 23670 ;;		None
 23671 ;; Return value:  Size  Location     Type
 23672 ;;		None               void
 23673 ;; Registers used:
 23674 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23675 ;; Tracked objects:
 23676 ;;		On entry : 0/0
 23677 ;;		On exit  : 0/0
 23678 ;;		Unchanged: 0/0
 23679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23680 ;;      Params:         0       0       0       0       0       0       0       0       0
 23681 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23682 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23683 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23684 ;;Total ram usage:        0 bytes
 23685 ;; Hardware stack levels used:    1
 23686 ;; Hardware stack levels required when called:    1
 23687 ;; This function calls:
 23688 ;;		_USBCtrlTrfTxService
 23689 ;; This function is called by:
 23690 ;;		_USBCtrlEPServiceComplete
 23691 ;; This function uses a non-reentrant model
 23692 ;;
 23693                           
 23694                           	psect	text97
 23695  004910                     __ptext97:
 23696                           	opt stack 0
 23697  004910                     _USBCtrlEPAllowDataStage:
 23698                           	opt stack 14
 23699                           
 23700                           ;usb_device.c: 1175: USBDeferINDataStagePackets = 0;
 23701                           
 23702                           ;incstack = 0
 23703  004910  0E00               	movlw	0
 23704  004912  0100               	movlb	0	; () banked
 23705  004914  6F95               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 23706                           
 23707                           ;usb_device.c: 1176: USBDeferOUTDataStagePackets = 0;
 23708  004916  0E00               	movlw	0
 23709  004918  0100               	movlb	0	; () banked
 23710  00491A  6F96               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 23711                           
 23712                           ; BSR set to: 0
 23713                           ;usb_device.c: 1178: if(controlTransferState == 2)
 23714  00491C  0E02               	movlw	2
 23715  00491E  1824               	xorwf	_controlTransferState,w,c	;volatile
 23716  004920  A4D8               	btfss	status,2,c
 23717  004922  D01F               	goto	i2l7234
 23718                           
 23719                           ; BSR set to: 0
 23720                           ;usb_device.c: 1179: {
 23721                           ;usb_device.c: 1181: pBDTEntryEP0OutNext->CNT = 8;
 23722  004924  EE20 F001          	lfsr	2,1
 23723  004928  5019               	movf	_pBDTEntryEP0OutNext,w,c
 23724  00492A  26D9               	addwf	fsr2l,f,c
 23725  00492C  501A               	movf	_pBDTEntryEP0OutNext+1,w,c
 23726  00492E  22DA               	addwfc	fsr2h,f,c
 23727  004930  0E08               	movlw	8
 23728  004932  6EDF               	movwf	indf2,c
 23729                           
 23730                           ;usb_device.c: 1182: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 23731  004934  EE20 F002          	lfsr	2,2
 23732  004938  5019               	movf	_pBDTEntryEP0OutNext,w,c
 23733  00493A  26D9               	addwf	fsr2l,f,c
 23734  00493C  501A               	movf	_pBDTEntryEP0OutNext+1,w,c
 23735  00493E  22DA               	addwfc	fsr2h,f,c
 23736  004940  0E38               	movlw	56
 23737  004942  6EDE               	movwf	postinc2,c
 23738  004944  0E04               	movlw	4
 23739  004946  6EDD               	movwf	postdec2,c
 23740                           
 23741                           ; BSR set to: 0
 23742                           ;usb_device.c: 1183: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 23743  004948  C019  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23744  00494C  C01A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23745  004950  0E48               	movlw	72
 23746  004952  6EDF               	movwf	indf2,c
 23747                           
 23748                           ; BSR set to: 0
 23749                           ;usb_device.c: 1184: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 23750  004954  C019  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 23751  004958  C01A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 23752  00495C  0E00               	movlw	0
 23753  00495E  8EDB               	bsf	plusw2,7,c
 23754                           
 23755                           ;usb_device.c: 1185: }
 23756  004960  0012               	return	
 23757  004962                     i2l7234:
 23758                           
 23759                           ; BSR set to: 0
 23760                           ;usb_device.c: 1186: else
 23761                           ;usb_device.c: 1187: {
 23762                           ;usb_device.c: 1190: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 23763  004962  500D               	movf	_inPipes+4,w,c	;volatile
 23764  004964  0104               	movlb	4	; () banked
 23765  004966  5D36               	subwf	54,w,b	;volatile
 23766  004968  500E               	movf	_inPipes+5,w,c	;volatile
 23767  00496A  0104               	movlb	4	; () banked
 23768  00496C  5937               	subwfb	55,w,b	;volatile
 23769  00496E  B0D8               	btfsc	status,0,c
 23770  004970  D004               	goto	i2l7238
 23771                           
 23772                           ; BSR set to: 4
 23773                           ;usb_device.c: 1191: {
 23774                           ;usb_device.c: 1192: inPipes[0].wCount.Val = SetupPkt.wLength;
 23775  004972  C436 F00D          	movff	1078,_inPipes+4	;volatile
 23776  004976  C437 F00E          	movff	1079,_inPipes+5	;volatile
 23777  00497A                     i2l7238:
 23778                           
 23779                           ; BSR set to: 4
 23780                           ;usb_device.c: 1193: }
 23781                           ;usb_device.c: 1194: USBCtrlTrfTxService();
 23782  00497A  ECBE  F020         	call	_USBCtrlTrfTxService	;wreg free
 23783                           
 23784                           ;usb_device.c: 1199: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 23785  00497E  EE20 F002          	lfsr	2,2
 23786  004982  500F               	movf	_pBDTEntryIn,w,c
 23787  004984  26D9               	addwf	fsr2l,f,c
 23788  004986  5010               	movf	_pBDTEntryIn+1,w,c
 23789  004988  22DA               	addwfc	fsr2h,f,c
 23790  00498A  0E38               	movlw	56
 23791  00498C  6EDE               	movwf	postinc2,c
 23792  00498E  0E04               	movlw	4
 23793  004990  6EDD               	movwf	postdec2,c
 23794                           
 23795                           ;usb_device.c: 1200: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 23796  004992  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 23797  004996  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23798  00499A  0E48               	movlw	72
 23799  00499C  6EDF               	movwf	indf2,c
 23800                           
 23801                           ;usb_device.c: 1201: pBDTEntryIn[0]->STAT.Val |= 0x80;
 23802  00499E  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 23803  0049A2  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23804  0049A6  0E00               	movlw	0
 23805  0049A8  8EDB               	bsf	plusw2,7,c
 23806  0049AA  0012               	return	
 23807  0049AC                     __end_of_USBCtrlEPAllowDataStage:
 23808                           	opt stack 0
 23809                           pclatu	equ	0xFFB
 23810                           pclath	equ	0xFFA
 23811                           tblptru	equ	0xFF8
 23812                           tblptrh	equ	0xFF7
 23813                           tblptrl	equ	0xFF6
 23814                           tablat	equ	0xFF5
 23815                           prodh	equ	0xFF4
 23816                           prodl	equ	0xFF3
 23817                           intcon	equ	0xFF2
 23818                           indf0	equ	0xFEF
 23819                           postinc0	equ	0xFEE
 23820                           fsr0h	equ	0xFEA
 23821                           fsr0l	equ	0xFE9
 23822                           wreg	equ	0xFE8
 23823                           indf1	equ	0xFE7
 23824                           postdec1	equ	0xFE5
 23825                           fsr1h	equ	0xFE2
 23826                           fsr1l	equ	0xFE1
 23827                           indf2	equ	0xFDF
 23828                           postinc2	equ	0xFDE
 23829                           postdec2	equ	0xFDD
 23830                           plusw2	equ	0xFDB
 23831                           fsr2h	equ	0xFDA
 23832                           fsr2l	equ	0xFD9
 23833                           status	equ	0xFD8
 23834                           
 23835 ;; *************** function _USBCheckStdRequest *****************
 23836 ;; Defined at:
 23837 ;;		line 2317 in file "../Includes/Usb/Framework/usb_device.c"
 23838 ;; Parameters:    Size  Location     Type
 23839 ;;		None
 23840 ;; Auto vars:     Size  Location     Type
 23841 ;;		None
 23842 ;; Return value:  Size  Location     Type
 23843 ;;		None               void
 23844 ;; Registers used:
 23845 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23846 ;; Tracked objects:
 23847 ;;		On entry : 0/0
 23848 ;;		On exit  : 0/0
 23849 ;;		Unchanged: 0/0
 23850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23851 ;;      Params:         0       0       0       0       0       0       0       0       0
 23852 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23853 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23854 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23855 ;;Total ram usage:        0 bytes
 23856 ;; Hardware stack levels used:    1
 23857 ;; Hardware stack levels required when called:    6
 23858 ;; This function calls:
 23859 ;;		_USBStdFeatureReqHandler
 23860 ;;		_USBStdGetDscHandler
 23861 ;;		_USBStdGetStatusHandler
 23862 ;;		_USBStdSetCfgHandler
 23863 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 23864 ;; This function is called by:
 23865 ;;		_USBCtrlTrfSetupHandler
 23866 ;; This function uses a non-reentrant model
 23867 ;;
 23868                           
 23869                           	psect	text98
 23870  003BAC                     __ptext98:
 23871                           	opt stack 0
 23872  003BAC                     _USBCheckStdRequest:
 23873                           	opt stack 10
 23874                           
 23875                           ;usb_device.c: 2319: if(SetupPkt.RequestType != (0x00>>5)) return;
 23876                           
 23877                           ;incstack = 0
 23878  003BAC  0104               	movlb	4	; () banked
 23879  003BAE  3930               	swapf	48,w,b	;volatile
 23880  003BB0  32E8               	rrcf	wreg,f,c
 23881  003BB2  0B03               	andlw	3
 23882  003BB4  0900               	iorlw	0
 23883  003BB6  A4D8               	btfss	status,2,c
 23884  003BB8  0012               	return	
 23885  003BBA  D044               	goto	i2l7692
 23886  003BBC                     i2l1835:
 23887                           
 23888                           ; BSR set to: 4
 23889                           ;usb_device.c: 2324: inPipes[0].info.bits.busy = 1;
 23890  003BBC  8E0C               	bsf	_inPipes+3,7,c	;volatile
 23891                           
 23892                           ; BSR set to: 4
 23893                           ;usb_device.c: 2325: USBDeviceState = ADR_PENDING_STATE;
 23894  003BBE  0E08               	movlw	8
 23895  003BC0  0100               	movlb	0	; () banked
 23896  003BC2  6F97               	movwf	_USBDeviceState& (0+255),b	;volatile
 23897                           
 23898                           ;usb_device.c: 2327: break;
 23899  003BC4  0012               	return	
 23900  003BC6                     i2l7662:
 23901                           
 23902                           ;usb_device.c: 2329: USBStdGetDscHandler();
 23903  003BC6  ECB0  F017         	call	_USBStdGetDscHandler	;wreg free
 23904                           
 23905                           ;usb_device.c: 2330: break;
 23906  003BCA  0012               	return	
 23907  003BCC                     i2l7664:
 23908                           
 23909                           ;usb_device.c: 2332: USBStdSetCfgHandler();
 23910  003BCC  EC19  F01C         	call	_USBStdSetCfgHandler	;wreg free
 23911                           
 23912                           ;usb_device.c: 2333: break;
 23913  003BD0  0012               	return	
 23914  003BD2                     i2l7666:
 23915                           
 23916                           ;usb_device.c: 2335: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 23917  003BD2  0E2C               	movlw	low _USBActiveConfiguration
 23918  003BD4  6E09               	movwf	_inPipes,c	;volatile
 23919  003BD6  0E00               	movlw	high _USBActiveConfiguration
 23920  003BD8  6E0A               	movwf	_inPipes+1,c	;volatile
 23921                           
 23922                           ;usb_device.c: 2336: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 23923  003BDA  800C               	bsf	_inPipes+3,0,c	;volatile
 23924                           
 23925                           ;usb_device.c: 2337: inPipes[0].wCount.v[0] = 1;
 23926  003BDC  0E01               	movlw	1
 23927  003BDE  6E0D               	movwf	_inPipes+4,c	;volatile
 23928                           
 23929                           ;usb_device.c: 2338: inPipes[0].info.bits.busy = 1;
 23930  003BE0  8E0C               	bsf	_inPipes+3,7,c	;volatile
 23931                           
 23932                           ;usb_device.c: 2339: break;
 23933  003BE2  0012               	return	
 23934  003BE4                     i2l7674:
 23935                           
 23936                           ;usb_device.c: 2341: USBStdGetStatusHandler();
 23937  003BE4  ECE6  F022         	call	_USBStdGetStatusHandler	;wreg free
 23938                           
 23939                           ;usb_device.c: 2342: break;
 23940  003BE8  0012               	return	
 23941  003BEA                     i2l7676:
 23942                           
 23943                           ;usb_device.c: 2344: case 3:
 23944                           ;usb_device.c: 2345: USBStdFeatureReqHandler();
 23945  003BEA  EC65  F010         	call	_USBStdFeatureReqHandler	;wreg free
 23946                           
 23947                           ;usb_device.c: 2346: break;
 23948  003BEE  0012               	return	
 23949  003BF0                     i2l7678:
 23950                           
 23951                           ;usb_device.c: 2348: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 23952  003BF0  0104               	movlb	4	; () banked
 23953  003BF2  5134               	movf	52,w,b	;volatile
 23954  003BF4  0D01               	mullw	1
 23955  003BF6  0EC1               	movlw	low _USBAlternateInterface
 23956  003BF8  24F3               	addwf	prodl,w,c
 23957  003BFA  6E09               	movwf	_inPipes,c	;volatile
 23958  003BFC  0E00               	movlw	high _USBAlternateInterface
 23959  003BFE  20F4               	addwfc	prodh,w,c
 23960  003C00  6E0A               	movwf	_inPipes+1,c	;volatile
 23961                           
 23962                           ; BSR set to: 4
 23963                           ;usb_device.c: 2349: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 23964  003C02  800C               	bsf	_inPipes+3,0,c	;volatile
 23965                           
 23966                           ; BSR set to: 4
 23967                           ;usb_device.c: 2350: inPipes[0].wCount.v[0] = 1;
 23968  003C04  0E01               	movlw	1
 23969  003C06  6E0D               	movwf	_inPipes+4,c	;volatile
 23970                           
 23971                           ; BSR set to: 4
 23972                           ;usb_device.c: 2351: inPipes[0].info.bits.busy = 1;
 23973  003C08  8E0C               	bsf	_inPipes+3,7,c	;volatile
 23974                           
 23975                           ;usb_device.c: 2352: break;
 23976  003C0A  0012               	return	
 23977  003C0C                     i2l1844:
 23978                           
 23979                           ; BSR set to: 4
 23980                           ;usb_device.c: 2354: inPipes[0].info.bits.busy = 1;
 23981  003C0C  8E0C               	bsf	_inPipes+3,7,c	;volatile
 23982                           
 23983                           ; BSR set to: 4
 23984                           ;usb_device.c: 2355: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 23985  003C0E  0104               	movlb	4	; () banked
 23986  003C10  5134               	movf	52,w,b	;volatile
 23987  003C12  0D01               	mullw	1
 23988  003C14  0EC1               	movlw	low _USBAlternateInterface
 23989  003C16  24F3               	addwf	prodl,w,c
 23990  003C18  6ED9               	movwf	fsr2l,c
 23991  003C1A  0E00               	movlw	high _USBAlternateInterface
 23992  003C1C  20F4               	addwfc	prodh,w,c
 23993  003C1E  6EDA               	movwf	fsr2h,c
 23994  003C20  C432 FFDF          	movff	1074,indf2	;volatile
 23995                           
 23996                           ;usb_device.c: 2356: break;
 23997  003C24  0012               	return	
 23998  003C26                     i2l7688:
 23999                           
 24000                           ; BSR set to: 4
 24001                           ;usb_device.c: 2358: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 24002  003C26  0E00               	movlw	0
 24003  003C28  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24004  003C2A  0E02               	movlw	2
 24005  003C2C  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24006  003C2E  0E00               	movlw	0
 24007  003C30  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24008  003C32  0E00               	movlw	0
 24009  003C34  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24010  003C36  0E00               	movlw	0
 24011  003C38  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24012  003C3A  0E00               	movlw	0
 24013  003C3C  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24014  003C3E  EC34  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24015                           
 24016                           ;usb_device.c: 2363: }
 24017                           
 24018                           ;usb_device.c: 2362: break;
 24019                           
 24020                           ;usb_device.c: 2361: default:
 24021                           
 24022                           ;usb_device.c: 2360: case 12:
 24023                           
 24024                           ;usb_device.c: 2359: break;
 24025  003C42  0012               	return	
 24026  003C44                     i2l7692:
 24027  003C44  0104               	movlb	4	; () banked
 24028  003C46  5131               	movf	49,w,b	;volatile
 24029                           
 24030                           ; Switch size 1, requested type "space"
 24031                           ; Number of cases is 11, Range of values is 0 to 12
 24032                           ; switch strategies available:
 24033                           ; Name         Instructions Cycles
 24034                           ; simple_byte           34    18 (average)
 24035                           ;	Chosen strategy is simple_byte
 24036  003C48  0A00               	xorlw	0	; case 0
 24037  003C4A  B4D8               	btfsc	status,2,c
 24038  003C4C  D7CB               	goto	i2l7674
 24039  003C4E  0A01               	xorlw	1	; case 1
 24040  003C50  B4D8               	btfsc	status,2,c
 24041  003C52  D7CB               	goto	i2l7676
 24042  003C54  0A02               	xorlw	2	; case 3
 24043  003C56  B4D8               	btfsc	status,2,c
 24044  003C58  D7C8               	goto	i2l7676
 24045  003C5A  0A06               	xorlw	6	; case 5
 24046  003C5C  B4D8               	btfsc	status,2,c
 24047  003C5E  D7AE               	goto	i2l1835
 24048  003C60  0A03               	xorlw	3	; case 6
 24049  003C62  B4D8               	btfsc	status,2,c
 24050  003C64  D7B0               	goto	i2l7662
 24051  003C66  0A01               	xorlw	1	; case 7
 24052  003C68  B4D8               	btfsc	status,2,c
 24053  003C6A  D7DD               	goto	i2l7688
 24054  003C6C  0A0F               	xorlw	15	; case 8
 24055  003C6E  B4D8               	btfsc	status,2,c
 24056  003C70  D7B0               	goto	i2l7666
 24057  003C72  0A01               	xorlw	1	; case 9
 24058  003C74  B4D8               	btfsc	status,2,c
 24059  003C76  D7AA               	goto	i2l7664
 24060  003C78  0A03               	xorlw	3	; case 10
 24061  003C7A  B4D8               	btfsc	status,2,c
 24062  003C7C  D7B9               	goto	i2l7678
 24063  003C7E  0A01               	xorlw	1	; case 11
 24064  003C80  B4D8               	btfsc	status,2,c
 24065  003C82  D7C4               	goto	i2l1844
 24066  003C84  0A07               	xorlw	7	; case 12
 24067  003C86  0012               	return	
 24068  003C88                     __end_of_USBCheckStdRequest:
 24069                           	opt stack 0
 24070                           pclatu	equ	0xFFB
 24071                           pclath	equ	0xFFA
 24072                           tblptru	equ	0xFF8
 24073                           tblptrh	equ	0xFF7
 24074                           tblptrl	equ	0xFF6
 24075                           tablat	equ	0xFF5
 24076                           prodh	equ	0xFF4
 24077                           prodl	equ	0xFF3
 24078                           intcon	equ	0xFF2
 24079                           indf0	equ	0xFEF
 24080                           postinc0	equ	0xFEE
 24081                           fsr0h	equ	0xFEA
 24082                           fsr0l	equ	0xFE9
 24083                           wreg	equ	0xFE8
 24084                           indf1	equ	0xFE7
 24085                           postdec1	equ	0xFE5
 24086                           fsr1h	equ	0xFE2
 24087                           fsr1l	equ	0xFE1
 24088                           indf2	equ	0xFDF
 24089                           postinc2	equ	0xFDE
 24090                           postdec2	equ	0xFDD
 24091                           plusw2	equ	0xFDB
 24092                           fsr2h	equ	0xFDA
 24093                           fsr2l	equ	0xFD9
 24094                           status	equ	0xFD8
 24095                           
 24096 ;; *************** function _USBStdSetCfgHandler *****************
 24097 ;; Defined at:
 24098 ;;		line 1629 in file "../Includes/Usb/Framework/usb_device.c"
 24099 ;; Parameters:    Size  Location     Type
 24100 ;;		None
 24101 ;; Auto vars:     Size  Location     Type
 24102 ;;  i               1   21[COMRAM] unsigned char 
 24103 ;; Return value:  Size  Location     Type
 24104 ;;		None               void
 24105 ;; Registers used:
 24106 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24107 ;; Tracked objects:
 24108 ;;		On entry : 0/0
 24109 ;;		On exit  : 0/0
 24110 ;;		Unchanged: 0/0
 24111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24112 ;;      Params:         0       0       0       0       0       0       0       0       0
 24113 ;;      Locals:         1       0       0       0       0       0       0       0       0
 24114 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24115 ;;      Totals:         1       0       0       0       0       0       0       0       0
 24116 ;;Total ram usage:        1 bytes
 24117 ;; Hardware stack levels used:    1
 24118 ;; Hardware stack levels required when called:    5
 24119 ;; This function calls:
 24120 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24121 ;;		i2_memset
 24122 ;; This function is called by:
 24123 ;;		_USBCheckStdRequest
 24124 ;; This function uses a non-reentrant model
 24125 ;;
 24126                           
 24127                           	psect	text99
 24128  003832                     __ptext99:
 24129                           	opt stack 0
 24130  003832                     _USBStdSetCfgHandler:
 24131                           	opt stack 10
 24132                           
 24133                           ;usb_device.c: 1631: uint8_t i;
 24134                           ;usb_device.c: 1634: inPipes[0].info.bits.busy = 1;
 24135                           
 24136                           ;incstack = 0
 24137  003832  8E0C               	bsf	_inPipes+3,7,c	;volatile
 24138                           
 24139                           ;usb_device.c: 1637: memset((void*)&UEP1,0x00,(2));;
 24140  003834  0E6B               	movlw	107
 24141  003836  6E2E               	movwf	i2memset@p1,c
 24142  003838  0E0F               	movlw	15
 24143  00383A  6E2F               	movwf	i2memset@p1+1,c
 24144  00383C  0E00               	movlw	0
 24145  00383E  6E31               	movwf	i2memset@c+1,c
 24146  003840  0E00               	movlw	0
 24147  003842  6E30               	movwf	i2memset@c,c
 24148  003844  0E00               	movlw	0
 24149  003846  6E33               	movwf	i2memset@n+1,c
 24150  003848  0E02               	movlw	2
 24151  00384A  6E32               	movwf	i2memset@n,c
 24152  00384C  EC5F  F02B         	call	i2_memset	;wreg free
 24153                           
 24154                           ;usb_device.c: 1640: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 24155  003850  0E00               	movlw	0
 24156  003852  6E2E               	movwf	i2memset@p1,c
 24157  003854  0E04               	movlw	4
 24158  003856  6E2F               	movwf	i2memset@p1+1,c
 24159  003858  0E00               	movlw	0
 24160  00385A  6E31               	movwf	i2memset@c+1,c
 24161  00385C  0E00               	movlw	0
 24162  00385E  6E30               	movwf	i2memset@c,c
 24163  003860  0E00               	movlw	0
 24164  003862  6E33               	movwf	i2memset@n+1,c
 24165  003864  0E30               	movlw	48
 24166  003866  6E32               	movwf	i2memset@n,c
 24167  003868  EC5F  F02B         	call	i2_memset	;wreg free
 24168                           
 24169                           ;usb_device.c: 1643: UCONbits.PPBRST = 1;
 24170  00386C  8C60               	bsf	3936,6,c	;volatile
 24171                           
 24172                           ;usb_device.c: 1648: for(i = 0; i < (uint8_t)(2+1u); i++)
 24173  00386E  0E00               	movlw	0
 24174  003870  6E43               	movwf	USBStdSetCfgHandler@i,c
 24175  003872                     i2l7254:
 24176  003872  0E02               	movlw	2
 24177  003874  6443               	cpfsgt	USBStdSetCfgHandler@i,c
 24178  003876  D001               	goto	i2l7258
 24179  003878  D016               	goto	i2l7264
 24180  00387A                     i2l7258:
 24181                           
 24182                           ;usb_device.c: 1649: {
 24183                           ;usb_device.c: 1650: ep_data_in[i].Val = 0u;
 24184  00387A  5043               	movf	USBStdSetCfgHandler@i,w,c
 24185  00387C  0D01               	mullw	1
 24186  00387E  0E6A               	movlw	low _ep_data_in
 24187  003880  24F3               	addwf	prodl,w,c
 24188  003882  6ED9               	movwf	fsr2l,c
 24189  003884  0E00               	movlw	high _ep_data_in
 24190  003886  20F4               	addwfc	prodh,w,c
 24191  003888  6EDA               	movwf	fsr2h,c
 24192  00388A  0E00               	movlw	0
 24193  00388C  6EDF               	movwf	indf2,c
 24194                           
 24195                           ;usb_device.c: 1651: ep_data_out[i].Val = 0u;
 24196  00388E  5043               	movf	USBStdSetCfgHandler@i,w,c
 24197  003890  0D01               	mullw	1
 24198  003892  0E6D               	movlw	low _ep_data_out
 24199  003894  24F3               	addwf	prodl,w,c
 24200  003896  6ED9               	movwf	fsr2l,c
 24201  003898  0E00               	movlw	high _ep_data_out
 24202  00389A  20F4               	addwfc	prodh,w,c
 24203  00389C  6EDA               	movwf	fsr2h,c
 24204  00389E  0E00               	movlw	0
 24205  0038A0  6EDF               	movwf	indf2,c
 24206  0038A2  2A43               	incf	USBStdSetCfgHandler@i,f,c
 24207  0038A4  D7E6               	goto	i2l7254
 24208  0038A6                     i2l7264:
 24209                           
 24210                           ;usb_device.c: 1652: }
 24211                           ;usb_device.c: 1655: memset((void*)&USBAlternateInterface,0x00,2);
 24212  0038A6  0EC1               	movlw	low _USBAlternateInterface
 24213  0038A8  6E2E               	movwf	i2memset@p1,c
 24214  0038AA  0E00               	movlw	high _USBAlternateInterface
 24215  0038AC  6E2F               	movwf	i2memset@p1+1,c
 24216  0038AE  0E00               	movlw	0
 24217  0038B0  6E31               	movwf	i2memset@c+1,c
 24218  0038B2  0E00               	movlw	0
 24219  0038B4  6E30               	movwf	i2memset@c,c
 24220  0038B6  0E00               	movlw	0
 24221  0038B8  6E33               	movwf	i2memset@n+1,c
 24222  0038BA  0E02               	movlw	2
 24223  0038BC  6E32               	movwf	i2memset@n,c
 24224  0038BE  EC5F  F02B         	call	i2_memset	;wreg free
 24225                           
 24226                           ;usb_device.c: 1658: UCONbits.PPBRST = 0;
 24227  0038C2  9C60               	bcf	3936,6,c	;volatile
 24228                           
 24229                           ;usb_device.c: 1660: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 24230  0038C4  0E08               	movlw	8
 24231  0038C6  6E0F               	movwf	_pBDTEntryIn,c
 24232  0038C8  0E04               	movlw	4
 24233  0038CA  6E10               	movwf	_pBDTEntryIn+1,c
 24234                           
 24235                           ;usb_device.c: 1663: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 24236  0038CC  0E00               	movlw	0
 24237  0038CE  6E17               	movwf	_pBDTEntryEP0OutCurrent,c
 24238  0038D0  0E04               	movlw	4
 24239  0038D2  6E18               	movwf	_pBDTEntryEP0OutCurrent+1,c
 24240                           
 24241                           ;usb_device.c: 1664: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 24242  0038D4  C017  F019         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 24243  0038D8  C018  F01A         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 24244                           
 24245                           ;usb_device.c: 1667: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 24246  0038DC  C432 F02C          	movff	1074,_USBActiveConfiguration	;volatile
 24247                           
 24248                           ;usb_device.c: 1670: if(USBActiveConfiguration == 0)
 24249  0038E0  502C               	movf	_USBActiveConfiguration,w,c	;volatile
 24250  0038E2  A4D8               	btfss	status,2,c
 24251  0038E4  D004               	goto	i2l7280
 24252                           
 24253                           ;usb_device.c: 1671: {
 24254                           ;usb_device.c: 1673: USBDeviceState = ADDRESS_STATE;
 24255  0038E6  0E10               	movlw	16
 24256  0038E8  0100               	movlb	0	; () banked
 24257  0038EA  6F97               	movwf	_USBDeviceState& (0+255),b	;volatile
 24258                           
 24259                           ;usb_device.c: 1674: }
 24260  0038EC  0012               	return	
 24261  0038EE                     i2l7280:
 24262                           
 24263                           ;usb_device.c: 1675: else
 24264                           ;usb_device.c: 1676: {
 24265                           ;usb_device.c: 1678: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 24266  0038EE  0E00               	movlw	0
 24267  0038F0  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24268  0038F2  0E01               	movlw	1
 24269  0038F4  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24270  0038F6  0E2C               	movlw	low _USBActiveConfiguration
 24271  0038F8  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24272  0038FA  0E00               	movlw	high _USBActiveConfiguration
 24273  0038FC  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24274  0038FE  0E00               	movlw	0
 24275  003900  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24276  003902  0E01               	movlw	1
 24277  003904  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24278  003906  EC34  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24279                           
 24280                           ;usb_device.c: 1683: USBDeviceState = CONFIGURED_STATE;
 24281  00390A  0E20               	movlw	32
 24282  00390C  0100               	movlb	0	; () banked
 24283  00390E  6F97               	movwf	_USBDeviceState& (0+255),b	;volatile
 24284  003910  0012               	return	
 24285  003912                     __end_of_USBStdSetCfgHandler:
 24286                           	opt stack 0
 24287                           pclatu	equ	0xFFB
 24288                           pclath	equ	0xFFA
 24289                           tblptru	equ	0xFF8
 24290                           tblptrh	equ	0xFF7
 24291                           tblptrl	equ	0xFF6
 24292                           tablat	equ	0xFF5
 24293                           prodh	equ	0xFF4
 24294                           prodl	equ	0xFF3
 24295                           intcon	equ	0xFF2
 24296                           indf0	equ	0xFEF
 24297                           postinc0	equ	0xFEE
 24298                           fsr0h	equ	0xFEA
 24299                           fsr0l	equ	0xFE9
 24300                           wreg	equ	0xFE8
 24301                           indf1	equ	0xFE7
 24302                           postdec1	equ	0xFE5
 24303                           fsr1h	equ	0xFE2
 24304                           fsr1l	equ	0xFE1
 24305                           indf2	equ	0xFDF
 24306                           postinc2	equ	0xFDE
 24307                           postdec2	equ	0xFDD
 24308                           plusw2	equ	0xFDB
 24309                           fsr2h	equ	0xFDA
 24310                           fsr2l	equ	0xFD9
 24311                           status	equ	0xFD8
 24312                           
 24313 ;; *************** function i2_memset *****************
 24314 ;; Defined at:
 24315 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 24316 ;; Parameters:    Size  Location     Type
 24317 ;;  p1              2    0[COMRAM] PTR void 
 24318 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 24319 ;;  c               2    2[COMRAM] int 
 24320 ;;  n               2    4[COMRAM] unsigned int 
 24321 ;; Auto vars:     Size  Location     Type
 24322 ;;  memset          2    6[COMRAM] PTR unsigned char 
 24323 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 24324 ;; Return value:  Size  Location     Type
 24325 ;;                  2    0[COMRAM] PTR void 
 24326 ;; Registers used:
 24327 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24328 ;; Tracked objects:
 24329 ;;		On entry : 0/0
 24330 ;;		On exit  : 0/0
 24331 ;;		Unchanged: 0/0
 24332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24333 ;;      Params:         6       0       0       0       0       0       0       0       0
 24334 ;;      Locals:         2       0       0       0       0       0       0       0       0
 24335 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24336 ;;      Totals:         8       0       0       0       0       0       0       0       0
 24337 ;;Total ram usage:        8 bytes
 24338 ;; Hardware stack levels used:    1
 24339 ;; This function calls:
 24340 ;;		Nothing
 24341 ;; This function is called by:
 24342 ;;		_USBStdSetCfgHandler
 24343 ;;		i2_USBDeviceInit
 24344 ;; This function uses a non-reentrant model
 24345 ;;
 24346                           
 24347                           	psect	text100
 24348  0056BE                     __ptext100:
 24349                           	opt stack 0
 24350  0056BE                     i2_memset:
 24351                           	opt stack 17
 24352                           
 24353                           ; BSR set to: 0
 24354                           ;incstack = 0
 24355  0056BE  C02E  F034         	movff	i2memset@p1,i2memset@p
 24356  0056C2  C02F  F035         	movff	i2memset@p1+1,i2memset@p+1
 24357  0056C6  D008               	goto	i2l7062
 24358  0056C8                     i2l7058:
 24359  0056C8  C034  FFD9         	movff	i2memset@p,fsr2l
 24360  0056CC  C035  FFDA         	movff	i2memset@p+1,fsr2h
 24361  0056D0  C030  FFDF         	movff	i2memset@c,indf2
 24362  0056D4  4A34               	infsnz	i2memset@p,f,c
 24363  0056D6  2A35               	incf	i2memset@p+1,f,c
 24364  0056D8                     i2l7062:
 24365  0056D8  0632               	decf	i2memset@n,f,c
 24366  0056DA  A0D8               	btfss	status,0,c
 24367  0056DC  0633               	decf	i2memset@n+1,f,c
 24368  0056DE  2832               	incf	i2memset@n,w,c
 24369  0056E0  E1F3               	bnz	i2l7058
 24370  0056E2  2833               	incf	i2memset@n+1,w,c
 24371  0056E4  B4D8               	btfsc	status,2,c
 24372  0056E6  0012               	return	
 24373  0056E8  D7EF               	goto	i2l7058
 24374  0056EA                     __end_ofi2_memset:
 24375                           	opt stack 0
 24376                           pclatu	equ	0xFFB
 24377                           pclath	equ	0xFFA
 24378                           tblptru	equ	0xFF8
 24379                           tblptrh	equ	0xFF7
 24380                           tblptrl	equ	0xFF6
 24381                           tablat	equ	0xFF5
 24382                           prodh	equ	0xFF4
 24383                           prodl	equ	0xFF3
 24384                           intcon	equ	0xFF2
 24385                           indf0	equ	0xFEF
 24386                           postinc0	equ	0xFEE
 24387                           fsr0h	equ	0xFEA
 24388                           fsr0l	equ	0xFE9
 24389                           wreg	equ	0xFE8
 24390                           indf1	equ	0xFE7
 24391                           postdec1	equ	0xFE5
 24392                           fsr1h	equ	0xFE2
 24393                           fsr1l	equ	0xFE1
 24394                           indf2	equ	0xFDF
 24395                           postinc2	equ	0xFDE
 24396                           postdec2	equ	0xFDD
 24397                           plusw2	equ	0xFDB
 24398                           fsr2h	equ	0xFDA
 24399                           fsr2l	equ	0xFD9
 24400                           status	equ	0xFD8
 24401                           
 24402 ;; *************** function _USBStdGetStatusHandler *****************
 24403 ;; Defined at:
 24404 ;;		line 1773 in file "../Includes/Usb/Framework/usb_device.c"
 24405 ;; Parameters:    Size  Location     Type
 24406 ;;		None
 24407 ;; Auto vars:     Size  Location     Type
 24408 ;;  p               2    1[COMRAM] PTR struct __BDT
 24409 ;;		 -> BDT(48), NULL(0), 
 24410 ;; Return value:  Size  Location     Type
 24411 ;;		None               void
 24412 ;; Registers used:
 24413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24414 ;; Tracked objects:
 24415 ;;		On entry : 0/0
 24416 ;;		On exit  : 0/0
 24417 ;;		Unchanged: 0/0
 24418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24419 ;;      Params:         0       0       0       0       0       0       0       0       0
 24420 ;;      Locals:         2       0       0       0       0       0       0       0       0
 24421 ;;      Temps:          1       0       0       0       0       0       0       0       0
 24422 ;;      Totals:         3       0       0       0       0       0       0       0       0
 24423 ;;Total ram usage:        3 bytes
 24424 ;; Hardware stack levels used:    1
 24425 ;; This function calls:
 24426 ;;		Nothing
 24427 ;; This function is called by:
 24428 ;;		_USBCheckStdRequest
 24429 ;; This function uses a non-reentrant model
 24430 ;;
 24431                           
 24432                           	psect	text101
 24433  0045CC                     __ptext101:
 24434                           	opt stack 0
 24435  0045CC                     _USBStdGetStatusHandler:
 24436                           	opt stack 15
 24437                           
 24438                           ;usb_device.c: 1775: CtrlTrfData[0] = 0;
 24439                           
 24440                           ;incstack = 0
 24441  0045CC  0E00               	movlw	0
 24442  0045CE  0104               	movlb	4	; () banked
 24443  0045D0  6F38               	movwf	56,b	;volatile
 24444                           
 24445                           ;usb_device.c: 1776: CtrlTrfData[1] = 0;
 24446  0045D2  0E00               	movlw	0
 24447  0045D4  0104               	movlb	4	; () banked
 24448  0045D6  6F39               	movwf	57,b	;volatile
 24449                           
 24450                           ;usb_device.c: 1778: switch(SetupPkt.Recipient)
 24451  0045D8  D039               	goto	i2l7336
 24452  0045DA                     i2l1771:
 24453                           
 24454                           ; BSR set to: 4
 24455                           ;usb_device.c: 1781: inPipes[0].info.bits.busy = 1;
 24456  0045DA  8E0C               	bsf	_inPipes+3,7,c	;volatile
 24457                           
 24458                           ; BSR set to: 4
 24459                           ;usb_device.c: 1789: }
 24460                           ;usb_device.c: 1791: if(RemoteWakeup == 1)
 24461                           
 24462                           ; BSR set to: 4
 24463                           
 24464                           ; BSR set to: 4
 24465                           ;usb_device.c: 1787: {
 24466                           ;usb_device.c: 1788: CtrlTrfData[0]|=0x01;
 24467                           
 24468                           ;usb_device.c: 1786: if(0 == 1)
 24469  0045DC  0100               	movlb	0	; () banked
 24470  0045DE  0591               	decf	_RemoteWakeup& (0+255),w,b	;volatile
 24471  0045E0  A4D8               	btfss	status,2,c
 24472  0045E2  D040               	goto	i2l1774
 24473                           
 24474                           ; BSR set to: 0
 24475                           ;usb_device.c: 1792: {
 24476                           ;usb_device.c: 1793: CtrlTrfData[0]|=0x02;
 24477  0045E4  0104               	movlb	4	; () banked
 24478  0045E6  8338               	bsf	56,1,b	;volatile
 24479                           
 24480                           ; BSR set to: 4
 24481                           ;usb_device.c: 1794: }
 24482                           ;usb_device.c: 1795: break;
 24483  0045E8  D03D               	goto	i2l1774
 24484  0045EA                     i2l1775:
 24485                           
 24486                           ; BSR set to: 4
 24487                           ;usb_device.c: 1797: inPipes[0].info.bits.busy = 1;
 24488  0045EA  8E0C               	bsf	_inPipes+3,7,c	;volatile
 24489                           
 24490                           ;usb_device.c: 1798: break;
 24491  0045EC  D03B               	goto	i2l1774
 24492  0045EE                     i2l1776:
 24493                           
 24494                           ; BSR set to: 4
 24495                           ;usb_device.c: 1800: inPipes[0].info.bits.busy = 1;
 24496  0045EE  8E0C               	bsf	_inPipes+3,7,c	;volatile
 24497                           
 24498                           ;usb_device.c: 1804: {
 24499                           ;usb_device.c: 1805: BDT_ENTRY *p;
 24500                           ;usb_device.c: 1807: if(SetupPkt.EPDir == 0)
 24501  0045F0  0104               	movlb	4	; () banked
 24502  0045F2  BF34               	btfsc	52,7,b	;volatile
 24503  0045F4  D00B               	goto	i2l7326
 24504                           
 24505                           ; BSR set to: 4
 24506                           ;usb_device.c: 1808: {
 24507                           ;usb_device.c: 1809: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 24508  0045F6  0104               	movlb	4	; () banked
 24509  0045F8  5134               	movf	52,w,b	;volatile
 24510  0045FA  0B0F               	andlw	15
 24511  0045FC  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 24512  0045FE  502E               	movf	??_USBStdGetStatusHandler,w,c
 24513  004600  0D02               	mullw	2
 24514  004602  0E60               	movlw	low _pBDTEntryOut
 24515  004604  24F3               	addwf	prodl,w,c
 24516  004606  6ED9               	movwf	fsr2l,c
 24517  004608  0E00               	movlw	high _pBDTEntryOut
 24518  00460A  D00A               	goto	L16
 24519  00460C                     i2l7326:
 24520                           
 24521                           ; BSR set to: 4
 24522                           ;usb_device.c: 1811: else
 24523                           ;usb_device.c: 1812: {
 24524                           ;usb_device.c: 1813: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 24525  00460C  0104               	movlb	4	; () banked
 24526  00460E  5134               	movf	52,w,b	;volatile
 24527  004610  0B0F               	andlw	15
 24528  004612  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 24529  004614  502E               	movf	??_USBStdGetStatusHandler,w,c
 24530  004616  0D02               	mullw	2
 24531  004618  0E0F               	movlw	low _pBDTEntryIn
 24532  00461A  24F3               	addwf	prodl,w,c
 24533  00461C  6ED9               	movwf	fsr2l,c
 24534  00461E  0E00               	movlw	high _pBDTEntryIn
 24535  004620                     L16:
 24536  004620  20F4               	addwfc	prodh,w,c
 24537  004622  6EDA               	movwf	fsr2h,c
 24538  004624  CFDE F02F          	movff	postinc2,USBStdGetStatusHandler@p
 24539  004628  CFDD F030          	movff	postdec2,USBStdGetStatusHandler@p+1
 24540                           
 24541                           ; BSR set to: 4
 24542                           ;usb_device.c: 1814: }
 24543                           ;usb_device.c: 1816: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 24544                           
 24545                           ; BSR set to: 4
 24546  00462C  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 24547  004630  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 24548  004634  AEDF               	btfss	indf2,7,c
 24549  004636  D016               	goto	i2l1774
 24550                           
 24551                           ; BSR set to: 4
 24552  004638  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 24553  00463C  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 24554  004640  A4DF               	btfss	indf2,2,c
 24555  004642  D010               	goto	i2l1774
 24556                           
 24557                           ; BSR set to: 4
 24558                           ;usb_device.c: 1817: CtrlTrfData[0]=0x01;
 24559  004644  0E01               	movlw	1
 24560  004646  0104               	movlb	4	; () banked
 24561  004648  6F38               	movwf	56,b	;volatile
 24562                           
 24563                           ; BSR set to: 4
 24564                           ;usb_device.c: 1819: }
 24565                           ;usb_device.c: 1820: }
 24566                           
 24567                           ; BSR set to: 4
 24568                           ;usb_device.c: 1818: break;
 24569  00464A  D00C               	goto	i2l1774
 24570  00464C                     i2l7336:
 24571                           
 24572                           ; BSR set to: 4
 24573  00464C  0104               	movlb	4	; () banked
 24574  00464E  5130               	movf	48,w,b	;volatile
 24575  004650  0B1F               	andlw	31
 24576                           
 24577                           ; Switch size 1, requested type "space"
 24578                           ; Number of cases is 3, Range of values is 0 to 2
 24579                           ; switch strategies available:
 24580                           ; Name         Instructions Cycles
 24581                           ; simple_byte           10     6 (average)
 24582                           ;	Chosen strategy is simple_byte
 24583  004652  0A00               	xorlw	0	; case 0
 24584  004654  B4D8               	btfsc	status,2,c
 24585  004656  D7C1               	goto	i2l1771
 24586  004658  0A01               	xorlw	1	; case 1
 24587  00465A  B4D8               	btfsc	status,2,c
 24588  00465C  D7C6               	goto	i2l1775
 24589  00465E  0A03               	xorlw	3	; case 2
 24590  004660  B4D8               	btfsc	status,2,c
 24591  004662  D7C5               	goto	i2l1776
 24592  004664                     i2l1774:
 24593                           
 24594                           ;usb_device.c: 1822: if(inPipes[0].info.bits.busy == 1)
 24595  004664  AE0C               	btfss	_inPipes+3,7,c	;volatile
 24596  004666  0012               	return	
 24597                           
 24598                           ;usb_device.c: 1823: {
 24599                           ;usb_device.c: 1824: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 24600  004668  0E38               	movlw	56
 24601  00466A  6E09               	movwf	_inPipes,c	;volatile
 24602  00466C  0E04               	movlw	4
 24603  00466E  6E0A               	movwf	_inPipes+1,c	;volatile
 24604                           
 24605                           ;usb_device.c: 1825: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 24606  004670  800C               	bsf	_inPipes+3,0,c	;volatile
 24607                           
 24608                           ;usb_device.c: 1826: inPipes[0].wCount.v[0] = 2;
 24609  004672  0E02               	movlw	2
 24610  004674  6E0D               	movwf	_inPipes+4,c	;volatile
 24611  004676  0012               	return	
 24612  004678                     __end_of_USBStdGetStatusHandler:
 24613                           	opt stack 0
 24614                           pclatu	equ	0xFFB
 24615                           pclath	equ	0xFFA
 24616                           tblptru	equ	0xFF8
 24617                           tblptrh	equ	0xFF7
 24618                           tblptrl	equ	0xFF6
 24619                           tablat	equ	0xFF5
 24620                           prodh	equ	0xFF4
 24621                           prodl	equ	0xFF3
 24622                           intcon	equ	0xFF2
 24623                           indf0	equ	0xFEF
 24624                           postinc0	equ	0xFEE
 24625                           fsr0h	equ	0xFEA
 24626                           fsr0l	equ	0xFE9
 24627                           wreg	equ	0xFE8
 24628                           indf1	equ	0xFE7
 24629                           postdec1	equ	0xFE5
 24630                           fsr1h	equ	0xFE2
 24631                           fsr1l	equ	0xFE1
 24632                           indf2	equ	0xFDF
 24633                           postinc2	equ	0xFDE
 24634                           postdec2	equ	0xFDD
 24635                           plusw2	equ	0xFDB
 24636                           fsr2h	equ	0xFDA
 24637                           fsr2l	equ	0xFD9
 24638                           status	equ	0xFD8
 24639                           
 24640 ;; *************** function _USBStdGetDscHandler *****************
 24641 ;; Defined at:
 24642 ;;		line 1704 in file "../Includes/Usb/Framework/usb_device.c"
 24643 ;; Parameters:    Size  Location     Type
 24644 ;;		None
 24645 ;; Auto vars:     Size  Location     Type
 24646 ;;		None
 24647 ;; Return value:  Size  Location     Type
 24648 ;;		None               void
 24649 ;; Registers used:
 24650 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 24651 ;; Tracked objects:
 24652 ;;		On entry : 0/0
 24653 ;;		On exit  : 0/0
 24654 ;;		Unchanged: 0/0
 24655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24656 ;;      Params:         0       0       0       0       0       0       0       0       0
 24657 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24658 ;;      Temps:          2       0       0       0       0       0       0       0       0
 24659 ;;      Totals:         2       0       0       0       0       0       0       0       0
 24660 ;;Total ram usage:        2 bytes
 24661 ;; Hardware stack levels used:    1
 24662 ;; This function calls:
 24663 ;;		Nothing
 24664 ;; This function is called by:
 24665 ;;		_USBCheckStdRequest
 24666 ;; This function uses a non-reentrant model
 24667 ;;
 24668                           
 24669                           	psect	text102
 24670  002F60                     __ptext102:
 24671                           	opt stack 0
 24672  002F60                     _USBStdGetDscHandler:
 24673                           	opt stack 15
 24674                           
 24675                           ;usb_device.c: 1706: if(SetupPkt.bmRequestType == 0x80)
 24676                           
 24677                           ;incstack = 0
 24678  002F60  0E80               	movlw	128
 24679  002F62  0104               	movlb	4	; () banked
 24680  002F64  1930               	xorwf	48,w,b	;volatile
 24681  002F66  A4D8               	btfss	status,2,c
 24682  002F68  0012               	return	
 24683                           
 24684                           ; BSR set to: 4
 24685                           ;usb_device.c: 1707: {
 24686                           ;usb_device.c: 1708: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 24687  002F6A  0EC0               	movlw	192
 24688  002F6C  6E0C               	movwf	_inPipes+3,c	;volatile
 24689                           
 24690                           ;usb_device.c: 1710: switch(SetupPkt.bDescriptorType)
 24691  002F6E  D07C               	goto	i2l7314
 24692  002F70                     i2l7288:
 24693                           
 24694                           ; BSR set to: 4
 24695                           ;usb_device.c: 1713: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 24696  002F70  0E36               	movlw	low _device_dsc
 24697  002F72  6E09               	movwf	_inPipes,c	;volatile
 24698  002F74  0E79               	movlw	high _device_dsc
 24699  002F76  6E0A               	movwf	_inPipes+1,c	;volatile
 24700                           
 24701                           ; BSR set to: 4
 24702                           ;usb_device.c: 1714: inPipes[0].wCount.Val = sizeof(device_dsc);
 24703  002F78  0E00               	movlw	0
 24704  002F7A  6E0E               	movwf	_inPipes+5,c	;volatile
 24705  002F7C  0E12               	movlw	18
 24706  002F7E  6E0D               	movwf	_inPipes+4,c	;volatile
 24707                           
 24708                           ;usb_device.c: 1715: break;
 24709  002F80  0012               	return	
 24710  002F82                     i2l7292:
 24711                           
 24712                           ; BSR set to: 4
 24713                           ;usb_device.c: 1720: if(SetupPkt.bDscIndex < 1)
 24714  002F82  0104               	movlb	4	; () banked
 24715  002F84  5132               	movf	50,w,b	;volatile
 24716  002F86  A4D8               	btfss	status,2,c
 24717  002F88  D03E               	goto	i2l7300
 24718                           
 24719                           ; BSR set to: 4
 24720                           ;usb_device.c: 1721: {
 24721                           ;usb_device.c: 1722: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 24722  002F8A  0104               	movlb	4	; () banked
 24723  002F8C  5132               	movf	50,w,b	;volatile
 24724  002F8E  0D02               	mullw	2
 24725  002F90  0E89               	movlw	low _USB_CD_Ptr
 24726  002F92  24F3               	addwf	prodl,w,c
 24727  002F94  6EF6               	movwf	tblptrl,c
 24728  002F96  0E75               	movlw	high _USB_CD_Ptr
 24729  002F98  20F4               	addwfc	prodh,w,c
 24730  002F9A  6EF7               	movwf	tblptrh,c
 24731  002F9C                     	if	0	;There are less than 3 active tblptr bytes
 24732  002F9C                     	endif
 24733  002F9C  0009               	tblrd		*+
 24734  002F9E  CFF5 F009          	movff	tablat,_inPipes	;volatile
 24735  002FA2  000A               	tblrd		*-
 24736  002FA4  CFF5 F00A          	movff	tablat,_inPipes+1	;volatile
 24737                           
 24738                           ; BSR set to: 4
 24739                           ;usb_device.c: 1727: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 24740  002FA8  0E02               	movlw	2
 24741  002FAA  2409               	addwf	_inPipes,w,c	;volatile
 24742  002FAC  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 24743  002FAE  0E00               	movlw	0
 24744  002FB0  200A               	addwfc	_inPipes+1,w,c	;volatile
 24745  002FB2  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 24746  002FB4  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 24747  002FB8  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 24748  002FBC  6AF8               	clrf	tblptru,c
 24749  002FBE  0E07               	movlw	(high __ramtop+-1)
 24750  002FC0  64F7               	cpfsgt	tblptrh,c
 24751  002FC2  D003               	bra	i2u510_47
 24752  002FC4  0008               	tblrd		*
 24753  002FC6  50F5               	movf	tablat,w,c
 24754  002FC8  D005               	bra	i2u510_40
 24755  002FCA                     i2u510_47:
 24756  002FCA  CFF6 FFE9          	movff	tblptrl,fsr0l
 24757  002FCE  CFF7 FFEA          	movff	tblptrh,fsr0h
 24758  002FD2  50EF               	movf	indf0,w,c
 24759  002FD4                     i2u510_40:
 24760  002FD4  6E0D               	movwf	_inPipes+4,c	;volatile
 24761                           
 24762                           ;usb_device.c: 1728: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 24763  002FD6  0E03               	movlw	3
 24764  002FD8  2409               	addwf	_inPipes,w,c	;volatile
 24765  002FDA  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 24766  002FDC  0E00               	movlw	0
 24767  002FDE  200A               	addwfc	_inPipes+1,w,c	;volatile
 24768  002FE0  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 24769  002FE2  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 24770  002FE6  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 24771  002FEA  6AF8               	clrf	tblptru,c
 24772  002FEC  0E07               	movlw	(high __ramtop+-1)
 24773  002FEE  64F7               	cpfsgt	tblptrh,c
 24774  002FF0  D003               	bra	i2u511_47
 24775  002FF2  0008               	tblrd		*
 24776  002FF4  50F5               	movf	tablat,w,c
 24777  002FF6  D005               	bra	i2u511_40
 24778  002FF8                     i2u511_47:
 24779  002FF8  CFF6 FFE9          	movff	tblptrl,fsr0l
 24780  002FFC  CFF7 FFEA          	movff	tblptrh,fsr0h
 24781  003000  50EF               	movf	indf0,w,c
 24782  003002                     i2u511_40:
 24783  003002  6E0E               	movwf	_inPipes+5,c	;volatile
 24784                           
 24785                           ;usb_device.c: 1729: }
 24786  003004  0012               	return	
 24787  003006                     i2l7300:
 24788                           
 24789                           ;usb_device.c: 1730: else
 24790                           ;usb_device.c: 1731: {
 24791                           ;usb_device.c: 1732: inPipes[0].info.Val = 0;
 24792  003006  0E00               	movlw	0
 24793  003008  6E0C               	movwf	_inPipes+3,c	;volatile
 24794                           
 24795                           ;usb_device.c: 1733: }
 24796                           ;usb_device.c: 1734: break;
 24797  00300A  0012               	return	
 24798  00300C                     i2l7302:
 24799                           
 24800                           ;usb_device.c: 1739: if(SetupPkt.bDscIndex<3)
 24801  00300C  0E03               	movlw	3
 24802  00300E  0104               	movlb	4	; () banked
 24803  003010  6132               	cpfslt	50,b	;volatile
 24804  003012  D024               	goto	i2l7308
 24805                           
 24806                           ; BSR set to: 4
 24807                           ;usb_device.c: 1740: {
 24808                           ;usb_device.c: 1742: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 24809  003014  0104               	movlb	4	; () banked
 24810  003016  5132               	movf	50,w,b	;volatile
 24811  003018  0D02               	mullw	2
 24812  00301A  0E83               	movlw	low _USB_SD_Ptr
 24813  00301C  24F3               	addwf	prodl,w,c
 24814  00301E  6EF6               	movwf	tblptrl,c
 24815  003020  0E75               	movlw	high _USB_SD_Ptr
 24816  003022  20F4               	addwfc	prodh,w,c
 24817  003024  6EF7               	movwf	tblptrh,c
 24818  003026                     	if	0	;There are less than 3 active tblptr bytes
 24819  003026                     	endif
 24820  003026  0009               	tblrd		*+
 24821  003028  CFF5 F009          	movff	tablat,_inPipes	;volatile
 24822  00302C  000A               	tblrd		*-
 24823  00302E  CFF5 F00A          	movff	tablat,_inPipes+1	;volatile
 24824                           
 24825                           ; BSR set to: 4
 24826                           ;usb_device.c: 1744: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 24827  003032  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 24828  003036  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 24829  00303A  6AF8               	clrf	tblptru,c
 24830  00303C  0E07               	movlw	(high __ramtop+-1)
 24831  00303E  64F7               	cpfsgt	tblptrh,c
 24832  003040  D003               	bra	i2u513_47
 24833  003042  0008               	tblrd		*
 24834  003044  50F5               	movf	tablat,w,c
 24835  003046  D005               	bra	i2u513_40
 24836  003048                     i2u513_47:
 24837  003048  CFF6 FFE9          	movff	tblptrl,fsr0l
 24838  00304C  CFF7 FFEA          	movff	tblptrh,fsr0h
 24839  003050  50EF               	movf	indf0,w,c
 24840  003052                     i2u513_40:
 24841  003052  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 24842  003054  502E               	movf	??_USBStdGetDscHandler,w,c
 24843  003056  6E0D               	movwf	_inPipes+4,c	;volatile
 24844  003058  6A0E               	clrf	_inPipes+5,c	;volatile
 24845                           
 24846                           ;usb_device.c: 1745: }
 24847  00305A  0012               	return	
 24848  00305C                     i2l7308:
 24849                           
 24850                           ;usb_device.c: 1746: else
 24851                           ;usb_device.c: 1747: {
 24852                           ;usb_device.c: 1748: inPipes[0].info.Val = 0;
 24853  00305C  0E00               	movlw	0
 24854  00305E  6E0C               	movwf	_inPipes+3,c	;volatile
 24855                           
 24856                           ;usb_device.c: 1749: }
 24857                           ;usb_device.c: 1750: break;
 24858  003060  0012               	return	
 24859  003062                     i2l7310:
 24860                           
 24861                           ;usb_device.c: 1752: inPipes[0].info.Val = 0;
 24862  003062  0E00               	movlw	0
 24863  003064  6E0C               	movwf	_inPipes+3,c	;volatile
 24864                           
 24865                           ;usb_device.c: 1754: }
 24866                           
 24867                           ;usb_device.c: 1753: break;
 24868  003066  0012               	return	
 24869  003068                     i2l7314:
 24870  003068  0104               	movlb	4	; () banked
 24871  00306A  5133               	movf	51,w,b	;volatile
 24872                           
 24873                           ; Switch size 1, requested type "space"
 24874                           ; Number of cases is 3, Range of values is 1 to 3
 24875                           ; switch strategies available:
 24876                           ; Name         Instructions Cycles
 24877                           ; simple_byte           10     6 (average)
 24878                           ;	Chosen strategy is simple_byte
 24879  00306C  0A01               	xorlw	1	; case 1
 24880  00306E  B4D8               	btfsc	status,2,c
 24881  003070  D77F               	goto	i2l7288
 24882  003072  0A03               	xorlw	3	; case 2
 24883  003074  B4D8               	btfsc	status,2,c
 24884  003076  D785               	goto	i2l7292
 24885  003078  0A01               	xorlw	1	; case 3
 24886  00307A  B4D8               	btfsc	status,2,c
 24887  00307C  D7C7               	goto	i2l7302
 24888  00307E  D7F1               	goto	i2l7310
 24889  003080                     __end_of_USBStdGetDscHandler:
 24890                           	opt stack 0
 24891                           pclatu	equ	0xFFB
 24892                           pclath	equ	0xFFA
 24893                           tblptru	equ	0xFF8
 24894                           tblptrh	equ	0xFF7
 24895                           tblptrl	equ	0xFF6
 24896                           tablat	equ	0xFF5
 24897                           prodh	equ	0xFF4
 24898                           prodl	equ	0xFF3
 24899                           intcon	equ	0xFF2
 24900                           indf0	equ	0xFEF
 24901                           postinc0	equ	0xFEE
 24902                           fsr0h	equ	0xFEA
 24903                           fsr0l	equ	0xFE9
 24904                           wreg	equ	0xFE8
 24905                           indf1	equ	0xFE7
 24906                           postdec1	equ	0xFE5
 24907                           fsr1h	equ	0xFE2
 24908                           fsr1l	equ	0xFE1
 24909                           indf2	equ	0xFDF
 24910                           postinc2	equ	0xFDE
 24911                           postdec2	equ	0xFDD
 24912                           plusw2	equ	0xFDB
 24913                           fsr2h	equ	0xFDA
 24914                           fsr2l	equ	0xFD9
 24915                           status	equ	0xFD8
 24916                           
 24917 ;; *************** function _USBStdFeatureReqHandler *****************
 24918 ;; Defined at:
 24919 ;;		line 2385 in file "../Includes/Usb/Framework/usb_device.c"
 24920 ;; Parameters:    Size  Location     Type
 24921 ;;		None
 24922 ;; Auto vars:     Size  Location     Type
 24923 ;;  p               2   25[COMRAM] PTR struct __BDT
 24924 ;;		 -> BDT(48), NULL(0), 
 24925 ;;  pUEP            2   22[COMRAM] PTR unsigned char 
 24926 ;;		 -> UEP0(1), 
 24927 ;;  current_ep_d    1   24[COMRAM] struct .
 24928 ;; Return value:  Size  Location     Type
 24929 ;;		None               void
 24930 ;; Registers used:
 24931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24932 ;; Tracked objects:
 24933 ;;		On entry : 0/0
 24934 ;;		On exit  : 0/0
 24935 ;;		Unchanged: 0/0
 24936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24937 ;;      Params:         0       0       0       0       0       0       0       0       0
 24938 ;;      Locals:         5       0       0       0       0       0       0       0       0
 24939 ;;      Temps:          1       0       0       0       0       0       0       0       0
 24940 ;;      Totals:         6       0       0       0       0       0       0       0       0
 24941 ;;Total ram usage:        6 bytes
 24942 ;; Hardware stack levels used:    1
 24943 ;; Hardware stack levels required when called:    5
 24944 ;; This function calls:
 24945 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24946 ;; This function is called by:
 24947 ;;		_USBCheckStdRequest
 24948 ;; This function uses a non-reentrant model
 24949 ;;
 24950                           
 24951                           	psect	text103
 24952  0020CA                     __ptext103:
 24953                           	opt stack 0
 24954  0020CA                     _USBStdFeatureReqHandler:
 24955                           	opt stack 10
 24956                           
 24957                           ;usb_device.c: 2387: BDT_ENTRY *p;
 24958                           ;usb_device.c: 2388: EP_STATUS current_ep_data;
 24959                           ;usb_device.c: 2390: unsigned char* pUEP;
 24960                           ;usb_device.c: 2393: if((SetupPkt.bFeature == 1)&&
 24961                           ;usb_device.c: 2394: (SetupPkt.Recipient == (0x00)))
 24962                           
 24963                           ;incstack = 0
 24964  0020CA  0104               	movlb	4	; () banked
 24965  0020CC  0532               	decf	50,w,b	;volatile
 24966  0020CE  A4D8               	btfss	status,2,c
 24967  0020D0  D011               	goto	i2l1850
 24968                           
 24969                           ; BSR set to: 4
 24970  0020D2  0104               	movlb	4	; () banked
 24971  0020D4  5130               	movf	48,w,b	;volatile
 24972  0020D6  0B1F               	andlw	31
 24973  0020D8  0900               	iorlw	0
 24974  0020DA  A4D8               	btfss	status,2,c
 24975  0020DC  D00B               	goto	i2l1850
 24976                           
 24977                           ; BSR set to: 4
 24978                           ;usb_device.c: 2395: {
 24979                           ;usb_device.c: 2396: inPipes[0].info.bits.busy = 1;
 24980  0020DE  8E0C               	bsf	_inPipes+3,7,c	;volatile
 24981                           
 24982                           ; BSR set to: 4
 24983                           ;usb_device.c: 2397: if(SetupPkt.bRequest == 3)
 24984  0020E0  0E03               	movlw	3
 24985  0020E2  0104               	movlb	4	; () banked
 24986  0020E4  1931               	xorwf	49,w,b	;volatile
 24987  0020E6  A4D8               	btfss	status,2,c
 24988  0020E8  D002               	goto	i2l7354
 24989                           
 24990                           ; BSR set to: 4
 24991                           ;usb_device.c: 2398: RemoteWakeup = 1;
 24992  0020EA  0E01               	movlw	1
 24993  0020EC  D001               	goto	L17
 24994  0020EE                     i2l7354:
 24995                           
 24996                           ;usb_device.c: 2399: else
 24997                           ;usb_device.c: 2400: RemoteWakeup = 0;
 24998  0020EE  0E00               	movlw	0
 24999  0020F0                     L17:
 25000  0020F0  0100               	movlb	0	; () banked
 25001  0020F2  6F91               	movwf	_RemoteWakeup& (0+255),b	;volatile
 25002  0020F4                     i2l1850:
 25003                           
 25004                           ;usb_device.c: 2401: }
 25005                           ;usb_device.c: 2404: if((SetupPkt.bFeature == 0)&&
 25006                           ;usb_device.c: 2405: (SetupPkt.Recipient == (0x02))&&
 25007                           ;usb_device.c: 2406: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 25008                           ;usb_device.c: 2407: (USBDeviceState == CONFIGURED_STATE))
 25009  0020F4  0104               	movlb	4	; () banked
 25010  0020F6  5132               	movf	50,w,b	;volatile
 25011  0020F8  A4D8               	btfss	status,2,c
 25012  0020FA  0012               	return	
 25013                           
 25014                           ; BSR set to: 4
 25015  0020FC  0104               	movlb	4	; () banked
 25016  0020FE  5130               	movf	48,w,b	;volatile
 25017  002100  0B1F               	andlw	31
 25018  002102  0A02               	xorlw	2
 25019  002104  A4D8               	btfss	status,2,c
 25020  002106  0012               	return	
 25021                           
 25022                           ; BSR set to: 4
 25023  002108  0104               	movlb	4	; () banked
 25024  00210A  5134               	movf	52,w,b	;volatile
 25025  00210C  0B0F               	andlw	15
 25026  00210E  0900               	iorlw	0
 25027  002110  B4D8               	btfsc	status,2,c
 25028  002112  0012               	return	
 25029                           
 25030                           ; BSR set to: 4
 25031  002114  0104               	movlb	4	; () banked
 25032  002116  5134               	movf	52,w,b	;volatile
 25033  002118  0B0F               	andlw	15
 25034  00211A  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 25035  00211C  0E03               	movlw	3
 25036  00211E  6043               	cpfslt	??_USBStdFeatureReqHandler,c
 25037  002120  0012               	return	
 25038                           
 25039                           ; BSR set to: 4
 25040  002122  0E20               	movlw	32
 25041  002124  0100               	movlb	0	; () banked
 25042  002126  1997               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 25043  002128  A4D8               	btfss	status,2,c
 25044  00212A  0012               	return	
 25045                           
 25046                           ; BSR set to: 0
 25047                           ;usb_device.c: 2408: {
 25048                           ;usb_device.c: 2411: inPipes[0].info.bits.busy = 1;
 25049  00212C  8E0C               	bsf	_inPipes+3,7,c	;volatile
 25050                           
 25051                           ;usb_device.c: 2414: if(SetupPkt.EPDir == 0)
 25052  00212E  0104               	movlb	4	; () banked
 25053  002130  BF34               	btfsc	52,7,b	;volatile
 25054  002132  D01B               	goto	i2l7368
 25055                           
 25056                           ; BSR set to: 4
 25057                           ;usb_device.c: 2415: {
 25058                           ;usb_device.c: 2416: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 25059  002134  0104               	movlb	4	; () banked
 25060  002136  5134               	movf	52,w,b	;volatile
 25061  002138  0B0F               	andlw	15
 25062  00213A  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 25063  00213C  5043               	movf	??_USBStdFeatureReqHandler,w,c
 25064  00213E  0D02               	mullw	2
 25065  002140  0E60               	movlw	low _pBDTEntryOut
 25066  002142  24F3               	addwf	prodl,w,c
 25067  002144  6ED9               	movwf	fsr2l,c
 25068  002146  0E00               	movlw	high _pBDTEntryOut
 25069  002148  20F4               	addwfc	prodh,w,c
 25070  00214A  6EDA               	movwf	fsr2h,c
 25071  00214C  CFDE F047          	movff	postinc2,USBStdFeatureReqHandler@p
 25072  002150  CFDD F048          	movff	postdec2,USBStdFeatureReqHandler@p+1
 25073                           
 25074                           ;usb_device.c: 2417: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 25075  002154  0104               	movlb	4	; () banked
 25076  002156  5134               	movf	52,w,b	;volatile
 25077  002158  0B0F               	andlw	15
 25078  00215A  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 25079  00215C  5043               	movf	??_USBStdFeatureReqHandler,w,c
 25080  00215E  0D01               	mullw	1
 25081  002160  0E6D               	movlw	low _ep_data_out
 25082  002162  24F3               	addwf	prodl,w,c
 25083  002164  6ED9               	movwf	fsr2l,c
 25084  002166  0E00               	movlw	high _ep_data_out
 25085  002168  D01A               	goto	L18
 25086  00216A                     i2l7368:
 25087                           
 25088                           ; BSR set to: 4
 25089                           ;usb_device.c: 2419: else
 25090                           ;usb_device.c: 2420: {
 25091                           ;usb_device.c: 2421: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 25092  00216A  0104               	movlb	4	; () banked
 25093  00216C  5134               	movf	52,w,b	;volatile
 25094  00216E  0B0F               	andlw	15
 25095  002170  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 25096  002172  5043               	movf	??_USBStdFeatureReqHandler,w,c
 25097  002174  0D02               	mullw	2
 25098  002176  0E0F               	movlw	low _pBDTEntryIn
 25099  002178  24F3               	addwf	prodl,w,c
 25100  00217A  6ED9               	movwf	fsr2l,c
 25101  00217C  0E00               	movlw	high _pBDTEntryIn
 25102  00217E  20F4               	addwfc	prodh,w,c
 25103  002180  6EDA               	movwf	fsr2h,c
 25104  002182  CFDE F047          	movff	postinc2,USBStdFeatureReqHandler@p
 25105  002186  CFDD F048          	movff	postdec2,USBStdFeatureReqHandler@p+1
 25106                           
 25107                           ;usb_device.c: 2422: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 25108  00218A  0104               	movlb	4	; () banked
 25109  00218C  5134               	movf	52,w,b	;volatile
 25110  00218E  0B0F               	andlw	15
 25111  002190  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 25112  002192  5043               	movf	??_USBStdFeatureReqHandler,w,c
 25113  002194  0D01               	mullw	1
 25114  002196  0E6A               	movlw	low _ep_data_in
 25115  002198  24F3               	addwf	prodl,w,c
 25116  00219A  6ED9               	movwf	fsr2l,c
 25117  00219C  0E00               	movlw	high _ep_data_in
 25118  00219E                     L18:
 25119  00219E  20F4               	addwfc	prodh,w,c
 25120  0021A0  6EDA               	movwf	fsr2h,c
 25121  0021A2  50DF               	movf	indf2,w,c
 25122  0021A4  6E46               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 25123                           
 25124                           ; BSR set to: 4
 25125                           ;usb_device.c: 2423: }
 25126                           ;usb_device.c: 2428: if(current_ep_data.bits.ping_pong_state == 0)
 25127                           
 25128                           ; BSR set to: 4
 25129  0021A6  B046               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 25130  0021A8  D002               	goto	i2l7374
 25131                           
 25132                           ; BSR set to: 4
 25133                           ;usb_device.c: 2429: {
 25134                           ;usb_device.c: 2430: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 25135  0021AA  9447               	bcf	USBStdFeatureReqHandler@p,2,c
 25136                           
 25137                           ;usb_device.c: 2431: }
 25138  0021AC  D001               	goto	i2l7376
 25139  0021AE                     i2l7374:
 25140                           
 25141                           ; BSR set to: 4
 25142                           ;usb_device.c: 2432: else
 25143                           ;usb_device.c: 2433: {
 25144                           ;usb_device.c: 2434: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 25145  0021AE  8447               	bsf	USBStdFeatureReqHandler@p,2,c
 25146  0021B0                     i2l7376:
 25147                           
 25148                           ; BSR set to: 4
 25149                           ;usb_device.c: 2435: }
 25150                           ;usb_device.c: 2439: if(SetupPkt.EPDir == 0)
 25151  0021B0  0104               	movlb	4	; () banked
 25152  0021B2  BF34               	btfsc	52,7,b	;volatile
 25153  0021B4  D00B               	goto	i2l7380
 25154                           
 25155                           ; BSR set to: 4
 25156                           ;usb_device.c: 2440: {
 25157                           ;usb_device.c: 2441: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 25158  0021B6  0104               	movlb	4	; () banked
 25159  0021B8  5134               	movf	52,w,b	;volatile
 25160  0021BA  0B0F               	andlw	15
 25161  0021BC  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 25162  0021BE  5043               	movf	??_USBStdFeatureReqHandler,w,c
 25163  0021C0  0D02               	mullw	2
 25164  0021C2  0E60               	movlw	low _pBDTEntryOut
 25165  0021C4  24F3               	addwf	prodl,w,c
 25166  0021C6  6ED9               	movwf	fsr2l,c
 25167  0021C8  0E00               	movlw	high _pBDTEntryOut
 25168  0021CA  D00A               	goto	L19
 25169  0021CC                     i2l7380:
 25170                           
 25171                           ; BSR set to: 4
 25172                           ;usb_device.c: 2443: else
 25173                           ;usb_device.c: 2444: {
 25174                           ;usb_device.c: 2445: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 25175  0021CC  0104               	movlb	4	; () banked
 25176  0021CE  5134               	movf	52,w,b	;volatile
 25177  0021D0  0B0F               	andlw	15
 25178  0021D2  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 25179  0021D4  5043               	movf	??_USBStdFeatureReqHandler,w,c
 25180  0021D6  0D02               	mullw	2
 25181  0021D8  0E0F               	movlw	low _pBDTEntryIn
 25182  0021DA  24F3               	addwf	prodl,w,c
 25183  0021DC  6ED9               	movwf	fsr2l,c
 25184  0021DE  0E00               	movlw	high _pBDTEntryIn
 25185  0021E0                     L19:
 25186  0021E0  20F4               	addwfc	prodh,w,c
 25187  0021E2  6EDA               	movwf	fsr2h,c
 25188  0021E4  C047  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 25189  0021E8  C048  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 25190                           
 25191                           ; BSR set to: 4
 25192                           ;usb_device.c: 2446: }
 25193                           ;usb_device.c: 2449: if(SetupPkt.bRequest == 3)
 25194                           
 25195                           ; BSR set to: 4
 25196  0021EC  0E03               	movlw	3
 25197  0021EE  0104               	movlb	4	; () banked
 25198  0021F0  1931               	xorwf	49,w,b	;volatile
 25199  0021F2  A4D8               	btfss	status,2,c
 25200  0021F4  D02F               	goto	i2l7396
 25201                           
 25202                           ; BSR set to: 4
 25203                           ;usb_device.c: 2450: {
 25204                           ;usb_device.c: 2451: if(p->STAT.UOWN == 1)
 25205  0021F6  C047  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 25206  0021FA  C048  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 25207  0021FE  AEDF               	btfss	indf2,7,c
 25208  002200  D01C               	goto	i2l7392
 25209                           
 25210                           ; BSR set to: 4
 25211                           ;usb_device.c: 2452: {
 25212                           ;usb_device.c: 2455: if(SetupPkt.EPDir == 0)
 25213  002202  0104               	movlb	4	; () banked
 25214  002204  BF34               	btfsc	52,7,b	;volatile
 25215  002206  D00B               	goto	i2l7390
 25216                           
 25217                           ; BSR set to: 4
 25218                           ;usb_device.c: 2456: {
 25219                           ;usb_device.c: 2457: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 25220  002208  0104               	movlb	4	; () banked
 25221  00220A  5134               	movf	52,w,b	;volatile
 25222  00220C  0B0F               	andlw	15
 25223  00220E  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 25224  002210  5043               	movf	??_USBStdFeatureReqHandler,w,c
 25225  002212  0D01               	mullw	1
 25226  002214  0E6D               	movlw	low _ep_data_out
 25227  002216  24F3               	addwf	prodl,w,c
 25228  002218  6ED9               	movwf	fsr2l,c
 25229  00221A  0E00               	movlw	high _ep_data_out
 25230  00221C  D00A               	goto	L20
 25231  00221E                     i2l7390:
 25232                           
 25233                           ;usb_device.c: 2459: else
 25234                           ;usb_device.c: 2460: {
 25235                           ;usb_device.c: 2461: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 25236  00221E  0104               	movlb	4	; () banked
 25237  002220  5134               	movf	52,w,b	;volatile
 25238  002222  0B0F               	andlw	15
 25239  002224  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 25240  002226  5043               	movf	??_USBStdFeatureReqHandler,w,c
 25241  002228  0D01               	mullw	1
 25242  00222A  0E6A               	movlw	low _ep_data_in
 25243  00222C  24F3               	addwf	prodl,w,c
 25244  00222E  6ED9               	movwf	fsr2l,c
 25245  002230  0E00               	movlw	high _ep_data_in
 25246  002232                     L20:
 25247  002232  20F4               	addwfc	prodh,w,c
 25248  002234  6EDA               	movwf	fsr2h,c
 25249  002236  0100               	movlb	0	; () banked
 25250  002238  82DF               	bsf	indf2,1,c
 25251  00223A                     i2l7392:
 25252                           
 25253                           ;usb_device.c: 2462: }
 25254                           ;usb_device.c: 2463: }
 25255                           ;usb_device.c: 2466: p->STAT.Val |= 0x04;
 25256  00223A  C047  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 25257  00223E  C048  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 25258  002242  0E00               	movlw	0
 25259  002244  84DB               	bsf	plusw2,2,c
 25260                           
 25261                           ;usb_device.c: 2467: p->STAT.Val |= 0x80;
 25262  002246  C047  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 25263  00224A  C048  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 25264  00224E  0E00               	movlw	0
 25265  002250  8EDB               	bsf	plusw2,7,c
 25266                           
 25267                           ;usb_device.c: 2468: }
 25268  002252  0012               	return	
 25269  002254                     i2l7396:
 25270                           
 25271                           ;usb_device.c: 2469: else
 25272                           ;usb_device.c: 2470: {
 25273                           ;usb_device.c: 2473: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 25274  002254  0E04               	movlw	4
 25275  002256  1A47               	xorwf	USBStdFeatureReqHandler@p,f,c
 25276                           
 25277                           ;usb_device.c: 2475: if(p->STAT.UOWN == 1)
 25278  002258  C047  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 25279  00225C  C048  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 25280  002260  AEDF               	btfss	indf2,7,c
 25281  002262  D01B               	goto	i2l7406
 25282                           
 25283                           ;usb_device.c: 2476: {
 25284                           ;usb_device.c: 2479: p->STAT.Val &= (~0x80);
 25285  002264  C047  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 25286  002268  C048  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 25287  00226C  0E7F               	movlw	127
 25288  00226E  16DF               	andwf	indf2,f,c
 25289                           
 25290                           ;usb_device.c: 2480: p->STAT.Val |= 0x40;
 25291  002270  C047  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 25292  002274  C048  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 25293  002278  0E00               	movlw	0
 25294  00227A  8CDB               	bsf	plusw2,6,c
 25295                           
 25296                           ;usb_device.c: 2481: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 25297  00227C  0E00               	movlw	0
 25298  00227E  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25299  002280  0E05               	movlw	5
 25300  002282  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25301  002284  C047  F03D         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 25302  002288  C048  F03E         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 25303  00228C  0E00               	movlw	0
 25304  00228E  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25305  002290  0E02               	movlw	2
 25306  002292  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25307  002294  EC34  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25308                           
 25309                           ;usb_device.c: 2482: }
 25310  002298  D006               	goto	i2l7408
 25311  00229A                     i2l7406:
 25312                           
 25313                           ;usb_device.c: 2483: else
 25314                           ;usb_device.c: 2484: {
 25315                           ;usb_device.c: 2486: p->STAT.Val |= 0x40;
 25316  00229A  C047  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 25317  00229E  C048  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 25318  0022A2  0E00               	movlw	0
 25319  0022A4  8CDB               	bsf	plusw2,6,c
 25320  0022A6                     i2l7408:
 25321                           
 25322                           ;usb_device.c: 2487: }
 25323                           ;usb_device.c: 2491: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 25324  0022A6  0E04               	movlw	4
 25325  0022A8  1A47               	xorwf	USBStdFeatureReqHandler@p,f,c
 25326                           
 25327                           ;usb_device.c: 2497: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 25328  0022AA  B246               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 25329  0022AC  D006               	goto	i2l1869
 25330  0022AE  C047  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 25331  0022B2  C048  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 25332  0022B6  AEDF               	btfss	indf2,7,c
 25333  0022B8  D031               	goto	i2l7422
 25334  0022BA                     i2l1869:
 25335                           
 25336                           ;usb_device.c: 2498: {
 25337                           ;usb_device.c: 2499: if(SetupPkt.EPDir == 0)
 25338  0022BA  0104               	movlb	4	; () banked
 25339  0022BC  BF34               	btfsc	52,7,b	;volatile
 25340  0022BE  D00B               	goto	i2l7416
 25341                           
 25342                           ; BSR set to: 4
 25343                           ;usb_device.c: 2500: {
 25344                           ;usb_device.c: 2501: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 25345  0022C0  0104               	movlb	4	; () banked
 25346  0022C2  5134               	movf	52,w,b	;volatile
 25347  0022C4  0B0F               	andlw	15
 25348  0022C6  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 25349  0022C8  5043               	movf	??_USBStdFeatureReqHandler,w,c
 25350  0022CA  0D01               	mullw	1
 25351  0022CC  0E6D               	movlw	low _ep_data_out
 25352  0022CE  24F3               	addwf	prodl,w,c
 25353  0022D0  6ED9               	movwf	fsr2l,c
 25354  0022D2  0E00               	movlw	high _ep_data_out
 25355  0022D4  D00A               	goto	L21
 25356  0022D6                     i2l7416:
 25357                           
 25358                           ;usb_device.c: 2503: else
 25359                           ;usb_device.c: 2504: {
 25360                           ;usb_device.c: 2505: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 25361  0022D6  0104               	movlb	4	; () banked
 25362  0022D8  5134               	movf	52,w,b	;volatile
 25363  0022DA  0B0F               	andlw	15
 25364  0022DC  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 25365  0022DE  5043               	movf	??_USBStdFeatureReqHandler,w,c
 25366  0022E0  0D01               	mullw	1
 25367  0022E2  0E6A               	movlw	low _ep_data_in
 25368  0022E4  24F3               	addwf	prodl,w,c
 25369  0022E6  6ED9               	movwf	fsr2l,c
 25370  0022E8  0E00               	movlw	high _ep_data_in
 25371  0022EA                     L21:
 25372  0022EA  20F4               	addwfc	prodh,w,c
 25373  0022EC  6EDA               	movwf	fsr2h,c
 25374  0022EE  0100               	movlb	0	; () banked
 25375  0022F0  92DF               	bcf	indf2,1,c
 25376                           
 25377                           ; BSR set to: 0
 25378                           ;usb_device.c: 2506: }
 25379                           ;usb_device.c: 2508: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 25380                           
 25381                           ; BSR set to: 0
 25382  0022F2  C047  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 25383  0022F6  C048  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 25384  0022FA  0E3B               	movlw	59
 25385  0022FC  16DF               	andwf	indf2,f,c
 25386                           
 25387                           ; BSR set to: 0
 25388                           ;usb_device.c: 2511: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 25389  0022FE  0E00               	movlw	0
 25390  002300  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25391  002302  0E05               	movlw	5
 25392  002304  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25393  002306  C047  F03D         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 25394  00230A  C048  F03E         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 25395  00230E  0E00               	movlw	0
 25396  002310  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25397  002312  0E02               	movlw	2
 25398  002314  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25399  002316  EC34  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25400                           
 25401                           ;usb_device.c: 2512: }
 25402  00231A  D006               	goto	i2l7424
 25403  00231C                     i2l7422:
 25404                           
 25405                           ;usb_device.c: 2513: else
 25406                           ;usb_device.c: 2514: {
 25407                           ;usb_device.c: 2516: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 25408  00231C  C047  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 25409  002320  C048  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 25410  002324  0E3B               	movlw	59
 25411  002326  16DF               	andwf	indf2,f,c
 25412  002328                     i2l7424:
 25413                           
 25414                           ;usb_device.c: 2517: }
 25415                           ;usb_device.c: 2519: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 25416  002328  0104               	movlb	4	; () banked
 25417  00232A  5134               	movf	52,w,b	;volatile
 25418  00232C  0B0F               	andlw	15
 25419  00232E  6E43               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 25420  002330  5043               	movf	??_USBStdFeatureReqHandler,w,c
 25421  002332  0D01               	mullw	1
 25422  002334  0E6A               	movlw	106
 25423  002336  24F3               	addwf	prodl,w,c
 25424  002338  6E44               	movwf	USBStdFeatureReqHandler@pUEP,c
 25425  00233A  0E0F               	movlw	15
 25426  00233C  20F4               	addwfc	prodh,w,c
 25427  00233E  6E45               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 25428                           
 25429                           ; BSR set to: 4
 25430                           ;usb_device.c: 2522: *pUEP &= ~0x0001;
 25431  002340  C044  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 25432  002344  C045  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 25433  002348  0EFE               	movlw	254
 25434  00234A  16DF               	andwf	indf2,f,c
 25435                           
 25436                           ; BSR set to: 4
 25437  00234C  0012               	return	
 25438  00234E                     __end_of_USBStdFeatureReqHandler:
 25439                           	opt stack 0
 25440                           pclatu	equ	0xFFB
 25441                           pclath	equ	0xFFA
 25442                           tblptru	equ	0xFF8
 25443                           tblptrh	equ	0xFF7
 25444                           tblptrl	equ	0xFF6
 25445                           tablat	equ	0xFF5
 25446                           prodh	equ	0xFF4
 25447                           prodl	equ	0xFF3
 25448                           intcon	equ	0xFF2
 25449                           indf0	equ	0xFEF
 25450                           postinc0	equ	0xFEE
 25451                           fsr0h	equ	0xFEA
 25452                           fsr0l	equ	0xFE9
 25453                           wreg	equ	0xFE8
 25454                           indf1	equ	0xFE7
 25455                           postdec1	equ	0xFE5
 25456                           fsr1h	equ	0xFE2
 25457                           fsr1l	equ	0xFE1
 25458                           indf2	equ	0xFDF
 25459                           postinc2	equ	0xFDE
 25460                           postdec2	equ	0xFDD
 25461                           plusw2	equ	0xFDB
 25462                           fsr2h	equ	0xFDA
 25463                           fsr2l	equ	0xFD9
 25464                           status	equ	0xFD8
 25465                           
 25466 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 25467 ;; Defined at:
 25468 ;;		line 291 in file "../Includes/Board/USBapp.c"
 25469 ;; Parameters:    Size  Location     Type
 25470 ;;  event           2   13[COMRAM] enum E6572
 25471 ;;  pdata           2   15[COMRAM] PTR void 
 25472 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(48), NULL(0), 
 25473 ;;  size            2   17[COMRAM] unsigned int 
 25474 ;; Auto vars:     Size  Location     Type
 25475 ;;		None
 25476 ;; Return value:  Size  Location     Type
 25477 ;;                  1    wreg      unsigned char 
 25478 ;; Registers used:
 25479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25480 ;; Tracked objects:
 25481 ;;		On entry : 0/0
 25482 ;;		On exit  : 0/0
 25483 ;;		Unchanged: 0/0
 25484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25485 ;;      Params:         6       0       0       0       0       0       0       0       0
 25486 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25487 ;;      Temps:          2       0       0       0       0       0       0       0       0
 25488 ;;      Totals:         8       0       0       0       0       0       0       0       0
 25489 ;;Total ram usage:        8 bytes
 25490 ;; Hardware stack levels used:    1
 25491 ;; Hardware stack levels required when called:    4
 25492 ;; This function calls:
 25493 ;;		_USBCheckCDCRequest
 25494 ;;		_USBapp_CdcEmulatorInitialize
 25495 ;; This function is called by:
 25496 ;;		_USBDeviceTasks
 25497 ;;		_USBStdSetCfgHandler
 25498 ;;		_USBSuspend
 25499 ;;		_USBWakeFromSuspend
 25500 ;;		_USBCtrlTrfSetupHandler
 25501 ;;		_USBCheckStdRequest
 25502 ;;		_USBStdFeatureReqHandler
 25503 ;; This function uses a non-reentrant model
 25504 ;;
 25505                           
 25506                           	psect	text104
 25507  005068                     __ptext104:
 25508                           	opt stack 0
 25509  005068                     _USER_USB_CALLBACK_EVENT_HANDLER:
 25510                           	opt stack 14
 25511                           
 25512                           ;USBapp.c: 293: switch( (int) event )
 25513                           
 25514                           ;incstack = 0
 25515  005068  D006               	goto	i2l6968
 25516  00506A                     i2l6962:
 25517                           
 25518                           ;USBapp.c: 317: USBapp_CdcEmulatorInitialize();
 25519  00506A  EC62  F028         	call	_USBapp_CdcEmulatorInitialize	;wreg free
 25520                           
 25521                           ;USBapp.c: 321: break;
 25522                           
 25523                           ;USBapp.c: 320: case EVENT_SET_DESCRIPTOR:
 25524                           
 25525                           ;USBapp.c: 318: break;
 25526  00506E  0012               	return	
 25527  005070                     i2l6964:
 25528                           
 25529                           ;USBapp.c: 326: USBCheckCDCRequest();
 25530  005070  EC3C  F023         	call	_USBCheckCDCRequest	;wreg free
 25531                           
 25532                           ;USBapp.c: 337: }
 25533                           
 25534                           ;USBapp.c: 336: break;
 25535                           
 25536                           ;USBapp.c: 335: default:
 25537                           
 25538                           ;USBapp.c: 333: break;
 25539                           
 25540                           ;USBapp.c: 332: case EVENT_TRANSFER_TERMINATED:
 25541                           
 25542                           ;USBapp.c: 330: break;
 25543                           
 25544                           ;USBapp.c: 329: case EVENT_BUS_ERROR:
 25545                           
 25546                           ;USBapp.c: 327: break;
 25547  005074  0012               	return	
 25548  005076                     i2l6968:
 25549  005076  C03B  F041         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 25550  00507A  C03C  F042         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 25551                           
 25552                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 25553                           ; Switch size 1, requested type "space"
 25554                           ; Number of cases is 2, Range of values is 0 to 127
 25555                           ; switch strategies available:
 25556                           ; Name         Instructions Cycles
 25557                           ; simple_byte            7     4 (average)
 25558                           ;	Chosen strategy is simple_byte
 25559  00507E  5042               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 25560  005080  0A00               	xorlw	0	; case 0
 25561  005082  B4D8               	btfsc	status,2,c
 25562  005084  D004               	goto	i2l13206
 25563  005086  0A7F               	xorlw	127	; case 127
 25564  005088  A4D8               	btfss	status,2,c
 25565  00508A  0012               	return	
 25566  00508C  D018               	goto	i2l13208
 25567  00508E                     i2l13206:
 25568                           
 25569                           ; Switch size 1, requested type "space"
 25570                           ; Number of cases is 8, Range of values is 1 to 117
 25571                           ; switch strategies available:
 25572                           ; Name         Instructions Cycles
 25573                           ; simple_byte           25    13 (average)
 25574                           ;	Chosen strategy is simple_byte
 25575  00508E  5041               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 25576  005090  0A01               	xorlw	1	; case 1
 25577  005092  B4D8               	btfsc	status,2,c
 25578  005094  D7EA               	goto	i2l6962
 25579  005096  0A03               	xorlw	3	; case 2
 25580  005098  B4D8               	btfsc	status,2,c
 25581  00509A  0012               	return	
 25582  00509C  0A01               	xorlw	1	; case 3
 25583  00509E  B4D8               	btfsc	status,2,c
 25584  0050A0  D7E7               	goto	i2l6964
 25585  0050A2  0A06               	xorlw	6	; case 5
 25586  0050A4  B4D8               	btfsc	status,2,c
 25587  0050A6  0012               	return	
 25588  0050A8  0A77               	xorlw	119	; case 114
 25589  0050AA  B4D8               	btfsc	status,2,c
 25590  0050AC  0012               	return	
 25591  0050AE  0A01               	xorlw	1	; case 115
 25592  0050B0  B4D8               	btfsc	status,2,c
 25593  0050B2  0012               	return	
 25594  0050B4  0A07               	xorlw	7	; case 116
 25595  0050B6  B4D8               	btfsc	status,2,c
 25596  0050B8  0012               	return	
 25597  0050BA  0A01               	xorlw	1	; case 117
 25598  0050BC  0012               	return	
 25599  0050BE                     i2l13208:
 25600                           
 25601                           ; Switch size 1, requested type "space"
 25602                           ; Number of cases is 1, Range of values is 255 to 255
 25603                           ; switch strategies available:
 25604                           ; Name         Instructions Cycles
 25605                           ; simple_byte            4     3 (average)
 25606                           ;	Chosen strategy is simple_byte
 25607  0050BE  5041               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 25608  0050C0  0AFF               	xorlw	255	; case 255
 25609  0050C2  0012               	return	
 25610  0050C4                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 25611                           	opt stack 0
 25612                           pclatu	equ	0xFFB
 25613                           pclath	equ	0xFFA
 25614                           tblptru	equ	0xFF8
 25615                           tblptrh	equ	0xFF7
 25616                           tblptrl	equ	0xFF6
 25617                           tablat	equ	0xFF5
 25618                           prodh	equ	0xFF4
 25619                           prodl	equ	0xFF3
 25620                           intcon	equ	0xFF2
 25621                           indf0	equ	0xFEF
 25622                           postinc0	equ	0xFEE
 25623                           fsr0h	equ	0xFEA
 25624                           fsr0l	equ	0xFE9
 25625                           wreg	equ	0xFE8
 25626                           indf1	equ	0xFE7
 25627                           postdec1	equ	0xFE5
 25628                           fsr1h	equ	0xFE2
 25629                           fsr1l	equ	0xFE1
 25630                           indf2	equ	0xFDF
 25631                           postinc2	equ	0xFDE
 25632                           postdec2	equ	0xFDD
 25633                           plusw2	equ	0xFDB
 25634                           fsr2h	equ	0xFDA
 25635                           fsr2l	equ	0xFD9
 25636                           status	equ	0xFD8
 25637                           
 25638 ;; *************** function _USBapp_CdcEmulatorInitialize *****************
 25639 ;; Defined at:
 25640 ;;		line 127 in file "../Includes/Board/USBapp.c"
 25641 ;; Parameters:    Size  Location     Type
 25642 ;;		None
 25643 ;; Auto vars:     Size  Location     Type
 25644 ;;  i               1   12[COMRAM] unsigned char 
 25645 ;; Return value:  Size  Location     Type
 25646 ;;		None               void
 25647 ;; Registers used:
 25648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25649 ;; Tracked objects:
 25650 ;;		On entry : 0/0
 25651 ;;		On exit  : 0/0
 25652 ;;		Unchanged: 0/0
 25653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25654 ;;      Params:         0       0       0       0       0       0       0       0       0
 25655 ;;      Locals:         1       0       0       0       0       0       0       0       0
 25656 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25657 ;;      Totals:         1       0       0       0       0       0       0       0       0
 25658 ;;Total ram usage:        1 bytes
 25659 ;; Hardware stack levels used:    1
 25660 ;; Hardware stack levels required when called:    3
 25661 ;; This function calls:
 25662 ;;		_CDCInitEP
 25663 ;;		i2_EUSART_Initialize
 25664 ;; This function is called by:
 25665 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25666 ;; This function uses a non-reentrant model
 25667 ;;
 25668                           
 25669                           	psect	text105
 25670  0050C4                     __ptext105:
 25671                           	opt stack 0
 25672  0050C4                     _USBapp_CdcEmulatorInitialize:
 25673                           	opt stack 14
 25674                           
 25675                           ;USBapp.c: 130: CDCInitEP();
 25676                           
 25677                           ;incstack = 0
 25678  0050C4  ECD6  F026         	call	_CDCInitEP	;wreg free
 25679                           
 25680                           ;USBapp.c: 131: line_coding.bCharFormat = 0;
 25681  0050C8  0E00               	movlw	0
 25682  0050CA  0100               	movlb	0	; () banked
 25683  0050CC  6FBB               	movwf	(_line_coding+4)& (0+255),b
 25684                           
 25685                           ; BSR set to: 0
 25686                           ;USBapp.c: 132: line_coding.bDataBits = 8;
 25687  0050CE  0E08               	movlw	8
 25688  0050D0  0100               	movlb	0	; () banked
 25689  0050D2  6FBD               	movwf	(_line_coding+6)& (0+255),b
 25690                           
 25691                           ; BSR set to: 0
 25692                           ;USBapp.c: 133: line_coding.bParityType = 0;
 25693  0050D4  0E00               	movlw	0
 25694  0050D6  0100               	movlb	0	; () banked
 25695  0050D8  6FBC               	movwf	(_line_coding+5)& (0+255),b
 25696                           
 25697                           ; BSR set to: 0
 25698                           ;USBapp.c: 134: line_coding.dwDTERate = 19200;
 25699  0050DA  0E00               	movlw	0
 25700  0050DC  0100               	movlb	0	; () banked
 25701  0050DE  6FB7               	movwf	_line_coding& (0+255),b
 25702  0050E0  0E4B               	movlw	75
 25703  0050E2  6FB8               	movwf	(_line_coding+1)& (0+255),b
 25704  0050E4  0E00               	movlw	0
 25705  0050E6  6FB9               	movwf	(_line_coding+2)& (0+255),b
 25706  0050E8  0E00               	movlw	0
 25707  0050EA  6FBA               	movwf	(_line_coding+3)& (0+255),b
 25708                           
 25709                           ; BSR set to: 0
 25710                           ;USBapp.c: 135: EUSART_Initialize();
 25711  0050EC  EC38  F02A         	call	i2_EUSART_Initialize	;wreg free
 25712                           
 25713                           ;USBapp.c: 137: for (unsigned char i = 0; i <sizeof (USB_Buffer); i++)
 25714  0050F0  0E00               	movlw	0
 25715  0050F2  6E3A               	movwf	USBapp_CdcEmulatorInitialize@i,c
 25716  0050F4                     i2l6886:
 25717  0050F4  0E3F               	movlw	63
 25718  0050F6  643A               	cpfsgt	USBapp_CdcEmulatorInitialize@i,c
 25719  0050F8  D001               	goto	i2l6890
 25720  0050FA  D00C               	goto	i2l6896
 25721  0050FC                     i2l6890:
 25722                           
 25723                           ;USBapp.c: 138: {
 25724                           ;USBapp.c: 139: USB_Buffer[i] = 0;
 25725  0050FC  503A               	movf	USBapp_CdcEmulatorInitialize@i,w,c
 25726  0050FE  0D01               	mullw	1
 25727  005100  0E24               	movlw	low _USB_Buffer
 25728  005102  24F3               	addwf	prodl,w,c
 25729  005104  6ED9               	movwf	fsr2l,c
 25730  005106  0E01               	movlw	high _USB_Buffer
 25731  005108  20F4               	addwfc	prodh,w,c
 25732  00510A  6EDA               	movwf	fsr2h,c
 25733  00510C  0E00               	movlw	0
 25734  00510E  6EDF               	movwf	indf2,c
 25735  005110  2A3A               	incf	USBapp_CdcEmulatorInitialize@i,f,c
 25736  005112  D7F0               	goto	i2l6886
 25737  005114                     i2l6896:
 25738                           
 25739                           ;USBapp.c: 140: }
 25740                           ;USBapp.c: 141: NextUSBOut = 0;
 25741  005114  0E00               	movlw	0
 25742  005116  6E1E               	movwf	_NextUSBOut,c
 25743                           
 25744                           ;USBapp.c: 142: LastRS232Out = 0;
 25745  005118  0E00               	movlw	0
 25746  00511A  6E1D               	movwf	_LastRS232Out,c
 25747  00511C  0012               	return		;funcret
 25748  00511E                     __end_of_USBapp_CdcEmulatorInitialize:
 25749                           	opt stack 0
 25750                           pclatu	equ	0xFFB
 25751                           pclath	equ	0xFFA
 25752                           tblptru	equ	0xFF8
 25753                           tblptrh	equ	0xFF7
 25754                           tblptrl	equ	0xFF6
 25755                           tablat	equ	0xFF5
 25756                           prodh	equ	0xFF4
 25757                           prodl	equ	0xFF3
 25758                           intcon	equ	0xFF2
 25759                           indf0	equ	0xFEF
 25760                           postinc0	equ	0xFEE
 25761                           fsr0h	equ	0xFEA
 25762                           fsr0l	equ	0xFE9
 25763                           wreg	equ	0xFE8
 25764                           indf1	equ	0xFE7
 25765                           postdec1	equ	0xFE5
 25766                           fsr1h	equ	0xFE2
 25767                           fsr1l	equ	0xFE1
 25768                           indf2	equ	0xFDF
 25769                           postinc2	equ	0xFDE
 25770                           postdec2	equ	0xFDD
 25771                           plusw2	equ	0xFDB
 25772                           fsr2h	equ	0xFDA
 25773                           fsr2l	equ	0xFD9
 25774                           status	equ	0xFD8
 25775                           
 25776 ;; *************** function _CDCInitEP *****************
 25777 ;; Defined at:
 25778 ;;		line 296 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 25779 ;; Parameters:    Size  Location     Type
 25780 ;;		None
 25781 ;; Auto vars:     Size  Location     Type
 25782 ;;		None
 25783 ;; Return value:  Size  Location     Type
 25784 ;;		None               void
 25785 ;; Registers used:
 25786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25787 ;; Tracked objects:
 25788 ;;		On entry : 0/0
 25789 ;;		On exit  : 0/0
 25790 ;;		Unchanged: 0/0
 25791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25792 ;;      Params:         0       0       0       0       0       0       0       0       0
 25793 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25794 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25795 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25796 ;;Total ram usage:        0 bytes
 25797 ;; Hardware stack levels used:    1
 25798 ;; Hardware stack levels required when called:    2
 25799 ;; This function calls:
 25800 ;;		_USBEnableEndpoint
 25801 ;;		i2_USBTransferOnePacket
 25802 ;; This function is called by:
 25803 ;;		_USBapp_CdcEmulatorInitialize
 25804 ;; This function uses a non-reentrant model
 25805 ;;
 25806                           
 25807                           	psect	text106
 25808  004DAC                     __ptext106:
 25809                           	opt stack 0
 25810  004DAC                     _CDCInitEP:
 25811                           	opt stack 14
 25812                           
 25813                           ;usb_device_cdc.c: 299: line_coding.dwDTERate = 19200;
 25814                           
 25815                           ;incstack = 0
 25816  004DAC  0E00               	movlw	0
 25817  004DAE  0100               	movlb	0	; () banked
 25818  004DB0  6FB7               	movwf	_line_coding& (0+255),b
 25819  004DB2  0E4B               	movlw	75
 25820  004DB4  6FB8               	movwf	(_line_coding+1)& (0+255),b
 25821  004DB6  0E00               	movlw	0
 25822  004DB8  6FB9               	movwf	(_line_coding+2)& (0+255),b
 25823  004DBA  0E00               	movlw	0
 25824  004DBC  6FBA               	movwf	(_line_coding+3)& (0+255),b
 25825                           
 25826                           ;usb_device_cdc.c: 300: line_coding.bCharFormat = 0x00;
 25827  004DBE  0E00               	movlw	0
 25828  004DC0  0100               	movlb	0	; () banked
 25829  004DC2  6FBB               	movwf	(_line_coding+4)& (0+255),b
 25830                           
 25831                           ;usb_device_cdc.c: 301: line_coding.bParityType = 0x00;
 25832  004DC4  0E00               	movlw	0
 25833  004DC6  0100               	movlb	0	; () banked
 25834  004DC8  6FBC               	movwf	(_line_coding+5)& (0+255),b
 25835                           
 25836                           ;usb_device_cdc.c: 302: line_coding.bDataBits = 0x08;
 25837  004DCA  0E08               	movlw	8
 25838  004DCC  0100               	movlb	0	; () banked
 25839  004DCE  6FBD               	movwf	(_line_coding+6)& (0+255),b
 25840                           
 25841                           ;usb_device_cdc.c: 304: cdc_rx_len = 0;
 25842  004DD0  0E00               	movlw	0
 25843  004DD2  0100               	movlb	0	; () banked
 25844  004DD4  6F9E               	movwf	_cdc_rx_len& (0+255),b
 25845                           
 25846                           ; BSR set to: 0
 25847                           ;usb_device_cdc.c: 317: USBEnableEndpoint(1,0x02|0x10|0x08);
 25848  004DD6  0E1A               	movlw	26
 25849  004DD8  6E36               	movwf	USBEnableEndpoint@options,c
 25850  004DDA  0E01               	movlw	1
 25851  004DDC  EC1A  F02A         	call	_USBEnableEndpoint
 25852                           
 25853                           ;usb_device_cdc.c: 318: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 25854  004DE0  0E1E               	movlw	30
 25855  004DE2  6E36               	movwf	USBEnableEndpoint@options,c
 25856  004DE4  0E02               	movlw	2
 25857  004DE6  EC1A  F02A         	call	_USBEnableEndpoint
 25858                           
 25859                           ;usb_device_cdc.c: 320: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 25860  004DEA  0E00               	movlw	0
 25861  004DEC  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 25862  004DEE  0E40               	movlw	64
 25863  004DF0  6E2F               	movwf	i2USBTransferOnePacket@data,c
 25864  004DF2  0E05               	movlw	5
 25865  004DF4  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 25866  004DF6  0E40               	movlw	64
 25867  004DF8  6E31               	movwf	i2USBTransferOnePacket@len,c
 25868  004DFA  0E02               	movlw	2
 25869  004DFC  EC84  F021         	call	i2_USBTransferOnePacket
 25870  004E00  C02E  F078         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 25871  004E04  C02F  F079         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 25872                           
 25873                           ;usb_device_cdc.c: 321: CDCDataInHandle = (0);
 25874  004E08  0E00               	movlw	0
 25875  004E0A  0100               	movlb	0	; () banked
 25876  004E0C  6F76               	movwf	_CDCDataInHandle& (0+255),b
 25877  004E0E  0E00               	movlw	0
 25878  004E10  0100               	movlb	0	; () banked
 25879  004E12  6F77               	movwf	(_CDCDataInHandle+1)& (0+255),b
 25880                           
 25881                           ; BSR set to: 0
 25882                           ;usb_device_cdc.c: 326: cdc_trf_state = 0;
 25883  004E14  0E00               	movlw	0
 25884  004E16  6E23               	movwf	_cdc_trf_state,c
 25885                           
 25886                           ; BSR set to: 0
 25887  004E18  0012               	return		;funcret
 25888  004E1A                     __end_of_CDCInitEP:
 25889                           	opt stack 0
 25890                           pclatu	equ	0xFFB
 25891                           pclath	equ	0xFFA
 25892                           tblptru	equ	0xFF8
 25893                           tblptrh	equ	0xFF7
 25894                           tblptrl	equ	0xFF6
 25895                           tablat	equ	0xFF5
 25896                           prodh	equ	0xFF4
 25897                           prodl	equ	0xFF3
 25898                           intcon	equ	0xFF2
 25899                           indf0	equ	0xFEF
 25900                           postinc0	equ	0xFEE
 25901                           fsr0h	equ	0xFEA
 25902                           fsr0l	equ	0xFE9
 25903                           wreg	equ	0xFE8
 25904                           indf1	equ	0xFE7
 25905                           postdec1	equ	0xFE5
 25906                           fsr1h	equ	0xFE2
 25907                           fsr1l	equ	0xFE1
 25908                           indf2	equ	0xFDF
 25909                           postinc2	equ	0xFDE
 25910                           postdec2	equ	0xFDD
 25911                           plusw2	equ	0xFDB
 25912                           fsr2h	equ	0xFDA
 25913                           fsr2l	equ	0xFD9
 25914                           status	equ	0xFD8
 25915                           
 25916 ;; *************** function i2_USBTransferOnePacket *****************
 25917 ;; Defined at:
 25918 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 25919 ;; Parameters:    Size  Location     Type
 25920 ;;  ep              1    wreg     unsigned char 
 25921 ;;  dir             1    0[COMRAM] unsigned char 
 25922 ;;  data            2    1[COMRAM] PTR unsigned char 
 25923 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 25924 ;;  len             1    3[COMRAM] unsigned char 
 25925 ;; Auto vars:     Size  Location     Type
 25926 ;;  ep              1    4[COMRAM] unsigned char 
 25927 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 25928 ;;		 -> BDT(48), NULL(0), 
 25929 ;; Return value:  Size  Location     Type
 25930 ;;                  2    0[COMRAM] PTR void 
 25931 ;; Registers used:
 25932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25933 ;; Tracked objects:
 25934 ;;		On entry : 0/0
 25935 ;;		On exit  : 0/0
 25936 ;;		Unchanged: 0/0
 25937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25938 ;;      Params:         4       0       0       0       0       0       0       0       0
 25939 ;;      Locals:         3       0       0       0       0       0       0       0       0
 25940 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25941 ;;      Totals:         7       0       0       0       0       0       0       0       0
 25942 ;;Total ram usage:        7 bytes
 25943 ;; Hardware stack levels used:    1
 25944 ;; This function calls:
 25945 ;;		Nothing
 25946 ;; This function is called by:
 25947 ;;		_CDCInitEP
 25948 ;; This function uses a non-reentrant model
 25949 ;;
 25950                           
 25951                           	psect	text107
 25952  004308                     __ptext107:
 25953                           	opt stack 0
 25954  004308                     i2_USBTransferOnePacket:
 25955                           	opt stack 15
 25956                           
 25957                           ; BSR set to: 0
 25958                           ;incstack = 0
 25959                           ;i2USBTransferOnePacket@ep stored from wreg
 25960  004308  6E32               	movwf	i2USBTransferOnePacket@ep,c
 25961                           
 25962                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 25963                           ;usb_device.c: 762: if(dir != 0)
 25964  00430A  502E               	movf	i2USBTransferOnePacket@dir,w,c
 25965  00430C  B4D8               	btfsc	status,2,c
 25966  00430E  D007               	goto	i2l6772
 25967                           
 25968                           ;usb_device.c: 763: {
 25969                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 25970  004310  5032               	movf	i2USBTransferOnePacket@ep,w,c
 25971  004312  0D02               	mullw	2
 25972  004314  0E0F               	movlw	low _pBDTEntryIn
 25973  004316  24F3               	addwf	prodl,w,c
 25974  004318  6ED9               	movwf	fsr2l,c
 25975  00431A  0E00               	movlw	high _pBDTEntryIn
 25976  00431C  D006               	goto	L22
 25977  00431E                     i2l6772:
 25978                           
 25979                           ;usb_device.c: 767: else
 25980                           ;usb_device.c: 768: {
 25981                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 25982  00431E  5032               	movf	i2USBTransferOnePacket@ep,w,c
 25983  004320  0D02               	mullw	2
 25984  004322  0E60               	movlw	low _pBDTEntryOut
 25985  004324  24F3               	addwf	prodl,w,c
 25986  004326  6ED9               	movwf	fsr2l,c
 25987  004328  0E00               	movlw	high _pBDTEntryOut
 25988  00432A                     L22:
 25989  00432A  20F4               	addwfc	prodh,w,c
 25990  00432C  6EDA               	movwf	fsr2h,c
 25991  00432E  CFDE F033          	movff	postinc2,i2USBTransferOnePacket@handle
 25992  004332  CFDD F034          	movff	postdec2,i2USBTransferOnePacket@handle+1
 25993                           
 25994                           ;usb_device.c: 771: }
 25995                           ;usb_device.c: 775: if(handle == 0)
 25996  004336  5033               	movf	i2USBTransferOnePacket@handle,w,c
 25997  004338  1034               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 25998  00433A  A4D8               	btfss	status,2,c
 25999  00433C  D005               	goto	i2l6780
 26000                           
 26001                           ;usb_device.c: 776: {
 26002                           ;usb_device.c: 777: return 0;
 26003  00433E  0E00               	movlw	0
 26004  004340  6E2E               	movwf	?i2_USBTransferOnePacket,c
 26005  004342  0E00               	movlw	0
 26006  004344  6E2F               	movwf	?i2_USBTransferOnePacket+1,c
 26007  004346  0012               	return	
 26008  004348                     i2l6780:
 26009                           
 26010                           ;usb_device.c: 778: }
 26011                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 26012  004348  EE20 F002          	lfsr	2,2
 26013  00434C  5033               	movf	i2USBTransferOnePacket@handle,w,c
 26014  00434E  26D9               	addwf	fsr2l,f,c
 26015  004350  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 26016  004352  22DA               	addwfc	fsr2h,f,c
 26017  004354  C02F  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 26018  004358  C030  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 26019                           
 26020                           ;usb_device.c: 781: handle->CNT = len;
 26021  00435C  EE20 F001          	lfsr	2,1
 26022  004360  5033               	movf	i2USBTransferOnePacket@handle,w,c
 26023  004362  26D9               	addwf	fsr2l,f,c
 26024  004364  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 26025  004366  22DA               	addwfc	fsr2h,f,c
 26026  004368  C031  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 26027                           
 26028                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 26029  00436C  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 26030  004370  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 26031  004374  0E40               	movlw	64
 26032  004376  16DF               	andwf	indf2,f,c
 26033                           
 26034                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 26035  004378  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 26036  00437C  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 26037  004380  0E00               	movlw	0
 26038  004382  86DB               	bsf	plusw2,3,c
 26039                           
 26040                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 26041  004384  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 26042  004388  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 26043  00438C  0E00               	movlw	0
 26044  00438E  8EDB               	bsf	plusw2,7,c
 26045                           
 26046                           ;usb_device.c: 787: if(dir != 0)
 26047  004390  502E               	movf	i2USBTransferOnePacket@dir,w,c
 26048  004392  B4D8               	btfsc	status,2,c
 26049  004394  D007               	goto	i2l6792
 26050                           
 26051                           ;usb_device.c: 788: {
 26052                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 26053  004396  5032               	movf	i2USBTransferOnePacket@ep,w,c
 26054  004398  0D02               	mullw	2
 26055  00439A  0E0F               	movlw	low _pBDTEntryIn
 26056  00439C  24F3               	addwf	prodl,w,c
 26057  00439E  6ED9               	movwf	fsr2l,c
 26058  0043A0  0E00               	movlw	high _pBDTEntryIn
 26059  0043A2  D006               	goto	L23
 26060  0043A4                     i2l6792:
 26061                           
 26062                           ;usb_device.c: 792: else
 26063                           ;usb_device.c: 793: {
 26064                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 26065  0043A4  5032               	movf	i2USBTransferOnePacket@ep,w,c
 26066  0043A6  0D02               	mullw	2
 26067  0043A8  0E60               	movlw	low _pBDTEntryOut
 26068  0043AA  24F3               	addwf	prodl,w,c
 26069  0043AC  6ED9               	movwf	fsr2l,c
 26070  0043AE  0E00               	movlw	high _pBDTEntryOut
 26071  0043B0                     L23:
 26072  0043B0  20F4               	addwfc	prodh,w,c
 26073  0043B2  6EDA               	movwf	fsr2h,c
 26074  0043B4  0E04               	movlw	4
 26075  0043B6  1ADF               	xorwf	indf2,f,c
 26076                           
 26077                           ;usb_device.c: 796: }
 26078                           ;usb_device.c: 797: return (void*)handle;
 26079  0043B8  C033  F02E         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 26080  0043BC  C034  F02F         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 26081  0043C0  0012               	return	
 26082  0043C2                     __end_ofi2_USBTransferOnePacket:
 26083                           	opt stack 0
 26084                           pclatu	equ	0xFFB
 26085                           pclath	equ	0xFFA
 26086                           tblptru	equ	0xFF8
 26087                           tblptrh	equ	0xFF7
 26088                           tblptrl	equ	0xFF6
 26089                           tablat	equ	0xFF5
 26090                           prodh	equ	0xFF4
 26091                           prodl	equ	0xFF3
 26092                           intcon	equ	0xFF2
 26093                           indf0	equ	0xFEF
 26094                           postinc0	equ	0xFEE
 26095                           fsr0h	equ	0xFEA
 26096                           fsr0l	equ	0xFE9
 26097                           wreg	equ	0xFE8
 26098                           indf1	equ	0xFE7
 26099                           postdec1	equ	0xFE5
 26100                           fsr1h	equ	0xFE2
 26101                           fsr1l	equ	0xFE1
 26102                           indf2	equ	0xFDF
 26103                           postinc2	equ	0xFDE
 26104                           postdec2	equ	0xFDD
 26105                           plusw2	equ	0xFDB
 26106                           fsr2h	equ	0xFDA
 26107                           fsr2l	equ	0xFD9
 26108                           status	equ	0xFD8
 26109                           
 26110 ;; *************** function _USBEnableEndpoint *****************
 26111 ;; Defined at:
 26112 ;;		line 645 in file "../Includes/Usb/Framework/usb_device.c"
 26113 ;; Parameters:    Size  Location     Type
 26114 ;;  ep              1    wreg     unsigned char 
 26115 ;;  options         1    8[COMRAM] unsigned char 
 26116 ;; Auto vars:     Size  Location     Type
 26117 ;;  ep              1   11[COMRAM] unsigned char 
 26118 ;;  p               2    9[COMRAM] PTR unsigned char 
 26119 ;;		 -> UEP0(1), 
 26120 ;; Return value:  Size  Location     Type
 26121 ;;		None               void
 26122 ;; Registers used:
 26123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26124 ;; Tracked objects:
 26125 ;;		On entry : 0/0
 26126 ;;		On exit  : 0/0
 26127 ;;		Unchanged: 0/0
 26128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26129 ;;      Params:         1       0       0       0       0       0       0       0       0
 26130 ;;      Locals:         3       0       0       0       0       0       0       0       0
 26131 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26132 ;;      Totals:         4       0       0       0       0       0       0       0       0
 26133 ;;Total ram usage:        4 bytes
 26134 ;; Hardware stack levels used:    1
 26135 ;; Hardware stack levels required when called:    1
 26136 ;; This function calls:
 26137 ;;		_USBConfigureEndpoint
 26138 ;; This function is called by:
 26139 ;;		_CDCInitEP
 26140 ;; This function uses a non-reentrant model
 26141 ;;
 26142                           
 26143                           	psect	text108
 26144  005434                     __ptext108:
 26145                           	opt stack 0
 26146  005434                     _USBEnableEndpoint:
 26147                           	opt stack 14
 26148                           
 26149                           ;incstack = 0
 26150                           ;USBEnableEndpoint@ep stored from wreg
 26151  005434  6E39               	movwf	USBEnableEndpoint@ep,c
 26152                           
 26153                           ;usb_device.c: 647: unsigned char* p;
 26154                           ;usb_device.c: 651: if(options & 0x04)
 26155  005436  A436               	btfss	USBEnableEndpoint@options,2,c
 26156  005438  D005               	goto	i2l6760
 26157                           
 26158                           ;usb_device.c: 652: {
 26159                           ;usb_device.c: 653: USBConfigureEndpoint(ep, 0);
 26160  00543A  0E00               	movlw	0
 26161  00543C  6E2E               	movwf	USBConfigureEndpoint@direction,c
 26162  00543E  5039               	movf	USBEnableEndpoint@ep,w,c
 26163  005440  ECD6  F024         	call	_USBConfigureEndpoint
 26164  005444                     i2l6760:
 26165                           
 26166                           ;usb_device.c: 654: }
 26167                           ;usb_device.c: 655: if(options & 0x02)
 26168  005444  A236               	btfss	USBEnableEndpoint@options,1,c
 26169  005446  D005               	goto	i2l6764
 26170                           
 26171                           ;usb_device.c: 656: {
 26172                           ;usb_device.c: 657: USBConfigureEndpoint(ep, 1);
 26173  005448  0E01               	movlw	1
 26174  00544A  6E2E               	movwf	USBConfigureEndpoint@direction,c
 26175  00544C  5039               	movf	USBEnableEndpoint@ep,w,c
 26176  00544E  ECD6  F024         	call	_USBConfigureEndpoint
 26177  005452                     i2l6764:
 26178                           
 26179                           ;usb_device.c: 658: }
 26180                           ;usb_device.c: 663: p = (unsigned char*)(&UEP0+ep);
 26181  005452  5039               	movf	USBEnableEndpoint@ep,w,c
 26182  005454  0D01               	mullw	1
 26183  005456  0E6A               	movlw	106
 26184  005458  24F3               	addwf	prodl,w,c
 26185  00545A  6E37               	movwf	USBEnableEndpoint@p,c
 26186  00545C  0E0F               	movlw	15
 26187  00545E  20F4               	addwfc	prodh,w,c
 26188  005460  6E38               	movwf	USBEnableEndpoint@p+1,c
 26189                           
 26190                           ;usb_device.c: 664: *p = options;
 26191  005462  C037  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 26192  005466  C038  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 26193  00546A  C036  FFDF         	movff	USBEnableEndpoint@options,indf2
 26194  00546E  0012               	return		;funcret
 26195  005470                     __end_of_USBEnableEndpoint:
 26196                           	opt stack 0
 26197                           pclatu	equ	0xFFB
 26198                           pclath	equ	0xFFA
 26199                           tblptru	equ	0xFF8
 26200                           tblptrh	equ	0xFF7
 26201                           tblptrl	equ	0xFF6
 26202                           tablat	equ	0xFF5
 26203                           prodh	equ	0xFF4
 26204                           prodl	equ	0xFF3
 26205                           intcon	equ	0xFF2
 26206                           indf0	equ	0xFEF
 26207                           postinc0	equ	0xFEE
 26208                           fsr0h	equ	0xFEA
 26209                           fsr0l	equ	0xFE9
 26210                           wreg	equ	0xFE8
 26211                           indf1	equ	0xFE7
 26212                           postdec1	equ	0xFE5
 26213                           fsr1h	equ	0xFE2
 26214                           fsr1l	equ	0xFE1
 26215                           indf2	equ	0xFDF
 26216                           postinc2	equ	0xFDE
 26217                           postdec2	equ	0xFDD
 26218                           plusw2	equ	0xFDB
 26219                           fsr2h	equ	0xFDA
 26220                           fsr2l	equ	0xFD9
 26221                           status	equ	0xFD8
 26222                           
 26223 ;; *************** function _USBConfigureEndpoint *****************
 26224 ;; Defined at:
 26225 ;;		line 1228 in file "../Includes/Usb/Framework/usb_device.c"
 26226 ;; Parameters:    Size  Location     Type
 26227 ;;  EPNum           1    wreg     unsigned char 
 26228 ;;  direction       1    0[COMRAM] unsigned char 
 26229 ;; Auto vars:     Size  Location     Type
 26230 ;;  EPNum           1    5[COMRAM] unsigned char 
 26231 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 26232 ;;		 -> BDT(48), 
 26233 ;; Return value:  Size  Location     Type
 26234 ;;		None               void
 26235 ;; Registers used:
 26236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26237 ;; Tracked objects:
 26238 ;;		On entry : 0/0
 26239 ;;		On exit  : 0/0
 26240 ;;		Unchanged: 0/0
 26241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26242 ;;      Params:         1       0       0       0       0       0       0       0       0
 26243 ;;      Locals:         3       0       0       0       0       0       0       0       0
 26244 ;;      Temps:          4       0       0       0       0       0       0       0       0
 26245 ;;      Totals:         8       0       0       0       0       0       0       0       0
 26246 ;;Total ram usage:        8 bytes
 26247 ;; Hardware stack levels used:    1
 26248 ;; This function calls:
 26249 ;;		Nothing
 26250 ;; This function is called by:
 26251 ;;		_USBEnableEndpoint
 26252 ;; This function uses a non-reentrant model
 26253 ;;
 26254                           
 26255                           	psect	text109
 26256  0049AC                     __ptext109:
 26257                           	opt stack 0
 26258  0049AC                     _USBConfigureEndpoint:
 26259                           	opt stack 14
 26260                           
 26261                           ;incstack = 0
 26262                           ;USBConfigureEndpoint@EPNum stored from wreg
 26263  0049AC  6E33               	movwf	USBConfigureEndpoint@EPNum,c
 26264                           
 26265                           ;usb_device.c: 1230: volatile BDT_ENTRY* handle;
 26266                           ;usb_device.c: 1234: handle = (volatile BDT_ENTRY*)&BDT[0];
 26267  0049AE  0E00               	movlw	0
 26268  0049B0  6E34               	movwf	USBConfigureEndpoint@handle,c
 26269  0049B2  0E04               	movlw	4
 26270  0049B4  6E35               	movwf	USBConfigureEndpoint@handle+1,c
 26271                           
 26272                           ;usb_device.c: 1235: handle += (4*EPNum+2*direction+0u);
 26273  0049B6  502E               	movf	USBConfigureEndpoint@direction,w,c
 26274  0049B8  6E2F               	movwf	??_USBConfigureEndpoint& (0+255),c
 26275  0049BA  6A30               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 26276  0049BC  90D8               	bcf	status,0,c
 26277  0049BE  362F               	rlcf	??_USBConfigureEndpoint,f,c
 26278  0049C0  3630               	rlcf	??_USBConfigureEndpoint+1,f,c
 26279  0049C2  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 26280  0049C4  6E31               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 26281  0049C6  6A32               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 26282  0049C8  90D8               	bcf	status,0,c
 26283  0049CA  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 26284  0049CC  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 26285  0049CE  90D8               	bcf	status,0,c
 26286  0049D0  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 26287  0049D2  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 26288  0049D4  502F               	movf	??_USBConfigureEndpoint,w,c
 26289  0049D6  2631               	addwf	??_USBConfigureEndpoint+2,f,c
 26290  0049D8  5030               	movf	??_USBConfigureEndpoint+1,w,c
 26291  0049DA  2232               	addwfc	??_USBConfigureEndpoint+3,f,c
 26292  0049DC  90D8               	bcf	status,0,c
 26293  0049DE  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 26294  0049E0  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 26295  0049E2  90D8               	bcf	status,0,c
 26296  0049E4  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 26297  0049E6  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 26298  0049E8  5031               	movf	??_USBConfigureEndpoint+2,w,c
 26299  0049EA  2634               	addwf	USBConfigureEndpoint@handle,f,c
 26300  0049EC  5032               	movf	??_USBConfigureEndpoint+3,w,c
 26301  0049EE  2235               	addwfc	USBConfigureEndpoint@handle+1,f,c
 26302                           
 26303                           ;usb_device.c: 1237: handle->STAT.UOWN = 0;
 26304  0049F0  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 26305  0049F4  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 26306  0049F8  9EDF               	bcf	indf2,7,c
 26307                           
 26308                           ;usb_device.c: 1242: if(direction == 0)
 26309  0049FA  502E               	movf	USBConfigureEndpoint@direction,w,c
 26310  0049FC  A4D8               	btfss	status,2,c
 26311  0049FE  D007               	goto	i2l6746
 26312                           
 26313                           ;usb_device.c: 1243: {
 26314                           ;usb_device.c: 1244: pBDTEntryOut[EPNum] = handle;
 26315  004A00  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 26316  004A02  0D02               	mullw	2
 26317  004A04  0E60               	movlw	low _pBDTEntryOut
 26318  004A06  24F3               	addwf	prodl,w,c
 26319  004A08  6ED9               	movwf	fsr2l,c
 26320  004A0A  0E00               	movlw	high _pBDTEntryOut
 26321  004A0C  D006               	goto	L24
 26322  004A0E                     i2l6746:
 26323                           
 26324                           ;usb_device.c: 1246: else
 26325                           ;usb_device.c: 1247: {
 26326                           ;usb_device.c: 1248: pBDTEntryIn[EPNum] = handle;
 26327  004A0E  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 26328  004A10  0D02               	mullw	2
 26329  004A12  0E0F               	movlw	low _pBDTEntryIn
 26330  004A14  24F3               	addwf	prodl,w,c
 26331  004A16  6ED9               	movwf	fsr2l,c
 26332  004A18  0E00               	movlw	high _pBDTEntryIn
 26333  004A1A                     L24:
 26334  004A1A  20F4               	addwfc	prodh,w,c
 26335  004A1C  6EDA               	movwf	fsr2h,c
 26336  004A1E  C034  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 26337  004A22  C035  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 26338                           
 26339                           ;usb_device.c: 1249: }
 26340                           ;usb_device.c: 1250: handle->STAT.DTS = 0;
 26341  004A26  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 26342  004A2A  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 26343  004A2E  9CDF               	bcf	indf2,6,c
 26344                           
 26345                           ;usb_device.c: 1251: (handle+1)->STAT.DTS = 1;
 26346  004A30  EE20 F004          	lfsr	2,4
 26347  004A34  5034               	movf	USBConfigureEndpoint@handle,w,c
 26348  004A36  26D9               	addwf	fsr2l,f,c
 26349  004A38  5035               	movf	USBConfigureEndpoint@handle+1,w,c
 26350  004A3A  22DA               	addwfc	fsr2h,f,c
 26351  004A3C  8CDF               	bsf	indf2,6,c
 26352  004A3E  0012               	return		;funcret
 26353  004A40                     __end_of_USBConfigureEndpoint:
 26354                           	opt stack 0
 26355                           pclatu	equ	0xFFB
 26356                           pclath	equ	0xFFA
 26357                           tblptru	equ	0xFF8
 26358                           tblptrh	equ	0xFF7
 26359                           tblptrl	equ	0xFF6
 26360                           tablat	equ	0xFF5
 26361                           prodh	equ	0xFF4
 26362                           prodl	equ	0xFF3
 26363                           intcon	equ	0xFF2
 26364                           indf0	equ	0xFEF
 26365                           postinc0	equ	0xFEE
 26366                           fsr0h	equ	0xFEA
 26367                           fsr0l	equ	0xFE9
 26368                           wreg	equ	0xFE8
 26369                           indf1	equ	0xFE7
 26370                           postdec1	equ	0xFE5
 26371                           fsr1h	equ	0xFE2
 26372                           fsr1l	equ	0xFE1
 26373                           indf2	equ	0xFDF
 26374                           postinc2	equ	0xFDE
 26375                           postdec2	equ	0xFDD
 26376                           plusw2	equ	0xFDB
 26377                           fsr2h	equ	0xFDA
 26378                           fsr2l	equ	0xFD9
 26379                           status	equ	0xFD8
 26380                           
 26381 ;; *************** function _USBCheckCDCRequest *****************
 26382 ;; Defined at:
 26383 ;;		line 184 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 26384 ;; Parameters:    Size  Location     Type
 26385 ;;		None
 26386 ;; Auto vars:     Size  Location     Type
 26387 ;;		None
 26388 ;; Return value:  Size  Location     Type
 26389 ;;		None               void
 26390 ;; Registers used:
 26391 ;;		wreg, status,2, status,0
 26392 ;; Tracked objects:
 26393 ;;		On entry : 0/0
 26394 ;;		On exit  : 0/0
 26395 ;;		Unchanged: 0/0
 26396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26397 ;;      Params:         0       0       0       0       0       0       0       0       0
 26398 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26399 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26400 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26401 ;;Total ram usage:        0 bytes
 26402 ;; Hardware stack levels used:    1
 26403 ;; This function calls:
 26404 ;;		Nothing
 26405 ;; This function is called by:
 26406 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26407 ;; This function uses a non-reentrant model
 26408 ;;
 26409                           
 26410                           	psect	text110
 26411  004678                     __ptext110:
 26412                           	opt stack 0
 26413  004678                     _USBCheckCDCRequest:
 26414                           	opt stack 17
 26415                           
 26416                           ;usb_device_cdc.c: 189: if(SetupPkt.Recipient != (0x01)) return;
 26417                           
 26418                           ;incstack = 0
 26419  004678  0104               	movlb	4	; () banked
 26420  00467A  5130               	movf	48,w,b	;volatile
 26421  00467C  0B1F               	andlw	31
 26422  00467E  06E8               	decf	wreg,f,c
 26423  004680  A4D8               	btfss	status,2,c
 26424  004682  0012               	return	
 26425                           
 26426                           ; BSR set to: 4
 26427                           ;usb_device_cdc.c: 194: if(SetupPkt.RequestType != (0x20>>5)) return;
 26428                           
 26429                           ; BSR set to: 4
 26430                           
 26431                           ; BSR set to: 4
 26432  004684  0104               	movlb	4	; () banked
 26433  004686  3930               	swapf	48,w,b	;volatile
 26434  004688  32E8               	rrcf	wreg,f,c
 26435  00468A  0B03               	andlw	3
 26436  00468C  06E8               	decf	wreg,f,c
 26437  00468E  A4D8               	btfss	status,2,c
 26438  004690  0012               	return	
 26439                           
 26440                           ; BSR set to: 4
 26441                           ;usb_device_cdc.c: 200: if((SetupPkt.bIntfID != 0x0)&&
 26442                           ;usb_device_cdc.c: 201: (SetupPkt.bIntfID != 0x01)) return;
 26443                           
 26444                           ; BSR set to: 4
 26445                           
 26446                           ; BSR set to: 4
 26447  004692  0104               	movlb	4	; () banked
 26448  004694  5134               	movf	52,w,b	;volatile
 26449  004696  B4D8               	btfsc	status,2,c
 26450  004698  D033               	goto	i2l6936
 26451                           
 26452                           ; BSR set to: 4
 26453  00469A  0104               	movlb	4	; () banked
 26454  00469C  0534               	decf	52,w,b	;volatile
 26455  00469E  A4D8               	btfss	status,2,c
 26456  0046A0  0012               	return	
 26457  0046A2  D02E               	goto	i2l6936
 26458  0046A4                     i2l6912:
 26459                           
 26460                           ; BSR set to: 4
 26461                           ;usb_device_cdc.c: 208: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 26462  0046A4  0EDE               	movlw	low _dummy_encapsulated_cmd_response
 26463  0046A6  6E09               	movwf	_inPipes,c	;volatile
 26464  0046A8  0E01               	movlw	high _dummy_encapsulated_cmd_response
 26465  0046AA  6E0A               	movwf	_inPipes+1,c	;volatile
 26466                           
 26467                           ; BSR set to: 4
 26468                           ;usb_device_cdc.c: 209: inPipes[0].wCount.Val = 0x08;
 26469  0046AC  0E00               	movlw	0
 26470  0046AE  6E0E               	movwf	_inPipes+5,c	;volatile
 26471  0046B0  0E08               	movlw	8
 26472  0046B2  6E0D               	movwf	_inPipes+4,c	;volatile
 26473                           
 26474                           ; BSR set to: 4
 26475                           ;usb_device_cdc.c: 210: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26476  0046B4  800C               	bsf	_inPipes+3,0,c	;volatile
 26477                           
 26478                           ; BSR set to: 4
 26479                           ;usb_device_cdc.c: 211: inPipes[0].info.bits.busy = 1;
 26480  0046B6  8E0C               	bsf	_inPipes+3,7,c	;volatile
 26481                           
 26482                           ;usb_device_cdc.c: 212: break;
 26483  0046B8  0012               	return	
 26484  0046BA                     i2l6920:
 26485                           
 26486                           ; BSR set to: 4
 26487                           ;usb_device_cdc.c: 215: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 26488  0046BA  0EDE               	movlw	low _dummy_encapsulated_cmd_response
 26489  0046BC  6E09               	movwf	_inPipes,c	;volatile
 26490  0046BE  0E01               	movlw	high _dummy_encapsulated_cmd_response
 26491  0046C0  6E0A               	movwf	_inPipes+1,c	;volatile
 26492                           
 26493                           ; BSR set to: 4
 26494                           ;usb_device_cdc.c: 216: inPipes[0].info.bits.busy = 1;
 26495  0046C2  8E0C               	bsf	_inPipes+3,7,c	;volatile
 26496                           
 26497                           ;usb_device_cdc.c: 217: break;
 26498  0046C4  0012               	return	
 26499  0046C6                     i2l1928:
 26500                           
 26501                           ; BSR set to: 4
 26502                           ;usb_device_cdc.c: 220: outPipes[0].wCount.Val = SetupPkt.wLength;
 26503  0046C6  C436 F005          	movff	1078,_outPipes+4	;volatile
 26504  0046CA  C437 F006          	movff	1079,_outPipes+5	;volatile
 26505                           
 26506                           ; BSR set to: 4
 26507                           ;usb_device_cdc.c: 221: outPipes[0].pDst.bRam = (uint8_t*)&cdc_notice.SetLineCoding._byt
      +                          e[0];
 26508  0046CE  0ED4               	movlw	low _cdc_notice
 26509  0046D0  6E01               	movwf	_outPipes,c	;volatile
 26510  0046D2  0E01               	movlw	high _cdc_notice
 26511  0046D4  6E02               	movwf	_outPipes+1,c	;volatile
 26512                           
 26513                           ;usb_device_cdc.c: 222: outPipes[0].pFunc = &USART_mySetLineCodingHandler;
 26514  0046D6  0E1E               	movlw	low _USART_mySetLineCodingHandler
 26515  0046D8  6E07               	movwf	_outPipes+6,c	;volatile
 26516  0046DA  0E51               	movlw	high _USART_mySetLineCodingHandler
 26517  0046DC  6E08               	movwf	_outPipes+7,c	;volatile
 26518                           
 26519                           ; BSR set to: 4
 26520                           ;usb_device_cdc.c: 223: outPipes[0].info.bits.busy = 1;
 26521  0046DE  8E04               	bsf	_outPipes+3,7,c	;volatile
 26522                           
 26523                           ;usb_device_cdc.c: 224: break;
 26524  0046E0  0012               	return	
 26525  0046E2                     i2l6928:
 26526                           
 26527                           ; BSR set to: 4
 26528                           ;usb_device_cdc.c: 227: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 26529  0046E2  0EB7               	movlw	low _line_coding
 26530  0046E4  6E09               	movwf	_inPipes,c	;volatile
 26531  0046E6  0E00               	movlw	high _line_coding
 26532  0046E8  6E0A               	movwf	_inPipes+1,c	;volatile
 26533                           
 26534                           ; BSR set to: 4
 26535  0046EA  0E00               	movlw	0
 26536  0046EC  6E0E               	movwf	_inPipes+5,c	;volatile
 26537  0046EE  0E07               	movlw	7
 26538  0046F0  6E0D               	movwf	_inPipes+4,c	;volatile
 26539                           
 26540                           ; BSR set to: 4
 26541  0046F2  0EC1               	movlw	193
 26542  0046F4  6E0C               	movwf	_inPipes+3,c	;volatile
 26543                           
 26544                           ;usb_device_cdc.c: 231: break;
 26545  0046F6  0012               	return	
 26546  0046F8                     i2l1930:
 26547                           
 26548                           ; BSR set to: 4
 26549                           ;usb_device_cdc.c: 234: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 26550  0046F8  C432 F0A0          	movff	1074,_control_signal_bitmap	;volatile
 26551                           
 26552                           ;usb_device_cdc.c: 255: inPipes[0].info.bits.busy = 1;
 26553  0046FC  8E0C               	bsf	_inPipes+3,7,c	;volatile
 26554                           
 26555                           ; BSR set to: 4
 26556                           ;usb_device_cdc.c: 260: }
 26557                           
 26558                           ; BSR set to: 4
 26559                           ;usb_device_cdc.c: 259: break;
 26560                           
 26561                           ;usb_device_cdc.c: 258: default:
 26562                           
 26563                           ;usb_device_cdc.c: 256: break;
 26564  0046FE  0012               	return	
 26565  004700                     i2l6936:
 26566                           
 26567                           ; BSR set to: 4
 26568  004700  0104               	movlb	4	; () banked
 26569  004702  5131               	movf	49,w,b	;volatile
 26570                           
 26571                           ; Switch size 1, requested type "space"
 26572                           ; Number of cases is 5, Range of values is 0 to 34
 26573                           ; switch strategies available:
 26574                           ; Name         Instructions Cycles
 26575                           ; simple_byte           16     9 (average)
 26576                           ;	Chosen strategy is simple_byte
 26577  004704  0A00               	xorlw	0	; case 0
 26578  004706  B4D8               	btfsc	status,2,c
 26579  004708  D7CD               	goto	i2l6912
 26580  00470A  0A01               	xorlw	1	; case 1
 26581  00470C  B4D8               	btfsc	status,2,c
 26582  00470E  D7D5               	goto	i2l6920
 26583  004710  0A21               	xorlw	33	; case 32
 26584  004712  B4D8               	btfsc	status,2,c
 26585  004714  D7D8               	goto	i2l1928
 26586  004716  0A01               	xorlw	1	; case 33
 26587  004718  B4D8               	btfsc	status,2,c
 26588  00471A  D7E3               	goto	i2l6928
 26589  00471C  0A03               	xorlw	3	; case 34
 26590  00471E  A4D8               	btfss	status,2,c
 26591  004720  0012               	return	
 26592  004722  D7EA               	goto	i2l1930
 26593  004724                     __end_of_USBCheckCDCRequest:
 26594                           	opt stack 0
 26595                           pclatu	equ	0xFFB
 26596                           pclath	equ	0xFFA
 26597                           tblptru	equ	0xFF8
 26598                           tblptrh	equ	0xFF7
 26599                           tblptrl	equ	0xFF6
 26600                           tablat	equ	0xFF5
 26601                           prodh	equ	0xFF4
 26602                           prodl	equ	0xFF3
 26603                           intcon	equ	0xFF2
 26604                           indf0	equ	0xFEF
 26605                           postinc0	equ	0xFEE
 26606                           fsr0h	equ	0xFEA
 26607                           fsr0l	equ	0xFE9
 26608                           wreg	equ	0xFE8
 26609                           indf1	equ	0xFE7
 26610                           postdec1	equ	0xFE5
 26611                           fsr1h	equ	0xFE2
 26612                           fsr1l	equ	0xFE1
 26613                           indf2	equ	0xFDF
 26614                           postinc2	equ	0xFDE
 26615                           postdec2	equ	0xFDD
 26616                           plusw2	equ	0xFDB
 26617                           fsr2h	equ	0xFDA
 26618                           fsr2l	equ	0xFD9
 26619                           status	equ	0xFD8
 26620                           
 26621 ;; *************** function _USBCtrlTrfOutHandler *****************
 26622 ;; Defined at:
 26623 ;;		line 2169 in file "../Includes/Usb/Framework/usb_device.c"
 26624 ;; Parameters:    Size  Location     Type
 26625 ;;		None
 26626 ;; Auto vars:     Size  Location     Type
 26627 ;;		None
 26628 ;; Return value:  Size  Location     Type
 26629 ;;		None               void
 26630 ;; Registers used:
 26631 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 26632 ;; Tracked objects:
 26633 ;;		On entry : 0/0
 26634 ;;		On exit  : 0/0
 26635 ;;		Unchanged: 0/0
 26636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26637 ;;      Params:         0       0       0       0       0       0       0       0       0
 26638 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26639 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26640 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26641 ;;Total ram usage:        0 bytes
 26642 ;; Hardware stack levels used:    1
 26643 ;; Hardware stack levels required when called:    3
 26644 ;; This function calls:
 26645 ;;		_USBCtrlTrfRxService
 26646 ;; This function is called by:
 26647 ;;		_USBCtrlEPService
 26648 ;; This function uses a non-reentrant model
 26649 ;;
 26650                           
 26651                           	psect	text111
 26652  004F4E                     __ptext111:
 26653                           	opt stack 0
 26654  004F4E                     _USBCtrlTrfOutHandler:
 26655                           	opt stack 14
 26656                           
 26657                           ;usb_device.c: 2171: if(controlTransferState == 2)
 26658                           
 26659                           ; BSR set to: 4
 26660                           ;incstack = 0
 26661  004F4E  0E02               	movlw	2
 26662  004F50  1824               	xorwf	_controlTransferState,w,c	;volatile
 26663  004F52  A4D8               	btfss	status,2,c
 26664  004F54  D003               	goto	i2l8296
 26665                           
 26666                           ;usb_device.c: 2172: {
 26667                           ;usb_device.c: 2173: USBCtrlTrfRxService();
 26668  004F56  EC18  F017         	call	_USBCtrlTrfRxService	;wreg free
 26669                           
 26670                           ;usb_device.c: 2174: }
 26671  004F5A  0012               	return	
 26672  004F5C                     i2l8296:
 26673                           
 26674                           ;usb_device.c: 2175: else
 26675                           ;usb_device.c: 2176: {
 26676                           ;usb_device.c: 2179: controlTransferState = 0;
 26677  004F5C  0E00               	movlw	0
 26678  004F5E  6E24               	movwf	_controlTransferState,c	;volatile
 26679                           
 26680                           ;usb_device.c: 2186: if(BothEP0OutUOWNsSet == 0)
 26681  004F60  0100               	movlb	0	; () banked
 26682  004F62  518C               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 26683  004F64  A4D8               	btfss	status,2,c
 26684  004F66  D01F               	goto	i2l8304
 26685                           
 26686                           ; BSR set to: 0
 26687                           ;usb_device.c: 2187: {
 26688                           ;usb_device.c: 2188: pBDTEntryEP0OutNext->CNT = 8;
 26689  004F68  EE20 F001          	lfsr	2,1
 26690  004F6C  5019               	movf	_pBDTEntryEP0OutNext,w,c
 26691  004F6E  26D9               	addwf	fsr2l,f,c
 26692  004F70  501A               	movf	_pBDTEntryEP0OutNext+1,w,c
 26693  004F72  22DA               	addwfc	fsr2h,f,c
 26694  004F74  0E08               	movlw	8
 26695  004F76  6EDF               	movwf	indf2,c
 26696                           
 26697                           ;usb_device.c: 2189: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 26698  004F78  EE20 F002          	lfsr	2,2
 26699  004F7C  5019               	movf	_pBDTEntryEP0OutNext,w,c
 26700  004F7E  26D9               	addwf	fsr2l,f,c
 26701  004F80  501A               	movf	_pBDTEntryEP0OutNext+1,w,c
 26702  004F82  22DA               	addwfc	fsr2h,f,c
 26703  004F84  0E30               	movlw	48
 26704  004F86  6EDE               	movwf	postinc2,c
 26705  004F88  0E04               	movlw	4
 26706  004F8A  6EDD               	movwf	postdec2,c
 26707                           
 26708                           ; BSR set to: 0
 26709                           ;usb_device.c: 2190: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 26710  004F8C  C019  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26711  004F90  C01A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26712  004F94  0E0C               	movlw	12
 26713  004F96  6EDF               	movwf	indf2,c
 26714                           
 26715                           ; BSR set to: 0
 26716                           ;usb_device.c: 2191: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26717  004F98  C019  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26718  004F9C  C01A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26719  004FA0  0E00               	movlw	0
 26720  004FA2  8EDB               	bsf	plusw2,7,c
 26721                           
 26722                           ;usb_device.c: 2192: }
 26723  004FA4  0012               	return	
 26724  004FA6                     i2l8304:
 26725                           
 26726                           ; BSR set to: 0
 26727                           ;usb_device.c: 2193: else
 26728                           ;usb_device.c: 2194: {
 26729                           ;usb_device.c: 2195: BothEP0OutUOWNsSet = 0;
 26730  004FA6  0E00               	movlw	0
 26731  004FA8  0100               	movlb	0	; () banked
 26732  004FAA  6F8C               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 26733                           
 26734                           ; BSR set to: 0
 26735  004FAC  0012               	return	
 26736  004FAE                     __end_of_USBCtrlTrfOutHandler:
 26737                           	opt stack 0
 26738                           pclatu	equ	0xFFB
 26739                           pclath	equ	0xFFA
 26740                           tblptru	equ	0xFF8
 26741                           tblptrh	equ	0xFF7
 26742                           tblptrl	equ	0xFF6
 26743                           tablat	equ	0xFF5
 26744                           prodh	equ	0xFF4
 26745                           prodl	equ	0xFF3
 26746                           intcon	equ	0xFF2
 26747                           indf0	equ	0xFEF
 26748                           postinc0	equ	0xFEE
 26749                           fsr0h	equ	0xFEA
 26750                           fsr0l	equ	0xFE9
 26751                           wreg	equ	0xFE8
 26752                           indf1	equ	0xFE7
 26753                           postdec1	equ	0xFE5
 26754                           fsr1h	equ	0xFE2
 26755                           fsr1l	equ	0xFE1
 26756                           indf2	equ	0xFDF
 26757                           postinc2	equ	0xFDE
 26758                           postdec2	equ	0xFDD
 26759                           plusw2	equ	0xFDB
 26760                           fsr2h	equ	0xFDA
 26761                           fsr2l	equ	0xFD9
 26762                           status	equ	0xFD8
 26763                           
 26764 ;; *************** function _USBCtrlTrfRxService *****************
 26765 ;; Defined at:
 26766 ;;		line 1518 in file "../Includes/Usb/Framework/usb_device.c"
 26767 ;; Parameters:    Size  Location     Type
 26768 ;;		None
 26769 ;; Auto vars:     Size  Location     Type
 26770 ;;  byteToRead      1   18[COMRAM] unsigned char 
 26771 ;;  i               1   17[COMRAM] unsigned char 
 26772 ;; Return value:  Size  Location     Type
 26773 ;;		None               void
 26774 ;; Registers used:
 26775 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 26776 ;; Tracked objects:
 26777 ;;		On entry : 0/0
 26778 ;;		On exit  : 0/0
 26779 ;;		Unchanged: 0/0
 26780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26781 ;;      Params:         0       0       0       0       0       0       0       0       0
 26782 ;;      Locals:         2       0       0       0       0       0       0       0       0
 26783 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26784 ;;      Totals:         2       0       0       0       0       0       0       0       0
 26785 ;;Total ram usage:        2 bytes
 26786 ;; Hardware stack levels used:    1
 26787 ;; Hardware stack levels required when called:    2
 26788 ;; This function calls:
 26789 ;;		_USART_mySetLineCodingHandler
 26790 ;;		_USBCtrlEPAllowStatusStage
 26791 ;; This function is called by:
 26792 ;;		_USBCtrlTrfOutHandler
 26793 ;; This function uses a non-reentrant model
 26794 ;;
 26795                           
 26796                           	psect	text112
 26797  002E30                     __ptext112:
 26798                           	opt stack 0
 26799  002E30                     _USBCtrlTrfRxService:
 26800                           	opt stack 14
 26801                           
 26802                           ;usb_device.c: 1520: uint8_t byteToRead;
 26803                           ;usb_device.c: 1521: uint8_t i;
 26804                           ;usb_device.c: 1525: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 26805                           
 26806                           ;incstack = 0
 26807  002E30  EE20 F001          	lfsr	2,1
 26808  002E34  5017               	movf	_pBDTEntryEP0OutCurrent,w,c
 26809  002E36  26D9               	addwf	fsr2l,f,c
 26810  002E38  5018               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 26811  002E3A  22DA               	addwfc	fsr2h,f,c
 26812  002E3C  50DF               	movf	indf2,w,c
 26813  002E3E  6E40               	movwf	USBCtrlTrfRxService@byteToRead,c
 26814                           
 26815                           ;usb_device.c: 1531: if(byteToRead > outPipes[0].wCount.Val)
 26816  002E40  5040               	movf	USBCtrlTrfRxService@byteToRead,w,c
 26817  002E42  5C05               	subwf	_outPipes+4,w,c	;volatile
 26818  002E44  0E00               	movlw	0
 26819  002E46  5806               	subwfb	_outPipes+5,w,c	;volatile
 26820  002E48  A0D8               	btfss	status,0,c
 26821                           
 26822                           ;usb_device.c: 1532: {
 26823                           ;usb_device.c: 1533: byteToRead = outPipes[0].wCount.Val;
 26824  002E4A  C005  F040         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 26825                           
 26826                           ;usb_device.c: 1534: }
 26827                           ;usb_device.c: 1536: outPipes[0].wCount.Val -= byteToRead;
 26828  002E4E  5040               	movf	USBCtrlTrfRxService@byteToRead,w,c
 26829  002E50  5E05               	subwf	_outPipes+4,f,c	;volatile
 26830  002E52  0E00               	movlw	0
 26831  002E54  5A06               	subwfb	_outPipes+5,f,c	;volatile
 26832                           
 26833                           ;usb_device.c: 1540: for(i=0;i<byteToRead;i++)
 26834  002E56  0E00               	movlw	0
 26835  002E58  6E3F               	movwf	USBCtrlTrfRxService@i,c
 26836  002E5A  D011               	goto	i2l7624
 26837  002E5C                     i2l7618:
 26838                           
 26839                           ;usb_device.c: 1541: {
 26840                           ;usb_device.c: 1542: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 26841  002E5C  503F               	movf	USBCtrlTrfRxService@i,w,c
 26842  002E5E  0D01               	mullw	1
 26843  002E60  0E38               	movlw	56
 26844  002E62  24F3               	addwf	prodl,w,c
 26845  002E64  6ED9               	movwf	fsr2l,c
 26846  002E66  0E04               	movlw	4
 26847  002E68  20F4               	addwfc	prodh,w,c
 26848  002E6A  6EDA               	movwf	fsr2h,c
 26849  002E6C  C001  FFE1         	movff	_outPipes,fsr1l	;volatile
 26850  002E70  C002  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 26851  002E74  CFDF FFE7          	movff	indf2,indf1
 26852  002E78  4A01               	infsnz	_outPipes,f,c	;volatile
 26853  002E7A  2A02               	incf	_outPipes+1,f,c	;volatile
 26854  002E7C  2A3F               	incf	USBCtrlTrfRxService@i,f,c
 26855  002E7E                     i2l7624:
 26856  002E7E  5040               	movf	USBCtrlTrfRxService@byteToRead,w,c
 26857  002E80  5C3F               	subwf	USBCtrlTrfRxService@i,w,c
 26858  002E82  A0D8               	btfss	status,0,c
 26859  002E84  D7EB               	goto	i2l7618
 26860                           
 26861                           ;usb_device.c: 1543: }
 26862                           ;usb_device.c: 1547: if(outPipes[0].wCount.Val > 0)
 26863  002E86  5005               	movf	_outPipes+4,w,c	;volatile
 26864  002E88  1006               	iorwf	_outPipes+5,w,c	;volatile
 26865  002E8A  B4D8               	btfsc	status,2,c
 26866  002E8C  D032               	goto	i2l7640
 26867                           
 26868                           ;usb_device.c: 1548: {
 26869                           ;usb_device.c: 1549: pBDTEntryEP0OutNext->CNT = 8;
 26870  002E8E  EE20 F001          	lfsr	2,1
 26871  002E92  5019               	movf	_pBDTEntryEP0OutNext,w,c
 26872  002E94  26D9               	addwf	fsr2l,f,c
 26873  002E96  501A               	movf	_pBDTEntryEP0OutNext+1,w,c
 26874  002E98  22DA               	addwfc	fsr2h,f,c
 26875  002E9A  0E08               	movlw	8
 26876  002E9C  6EDF               	movwf	indf2,c
 26877                           
 26878                           ;usb_device.c: 1550: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 26879  002E9E  EE20 F002          	lfsr	2,2
 26880  002EA2  5019               	movf	_pBDTEntryEP0OutNext,w,c
 26881  002EA4  26D9               	addwf	fsr2l,f,c
 26882  002EA6  501A               	movf	_pBDTEntryEP0OutNext+1,w,c
 26883  002EA8  22DA               	addwfc	fsr2h,f,c
 26884  002EAA  0E38               	movlw	56
 26885  002EAC  6EDE               	movwf	postinc2,c
 26886  002EAE  0E04               	movlw	4
 26887  002EB0  6EDD               	movwf	postdec2,c
 26888                           
 26889                           ;usb_device.c: 1551: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 26890  002EB2  C017  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 26891  002EB6  C018  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 26892  002EBA  BCDF               	btfsc	indf2,6,c
 26893  002EBC  D00D               	goto	i2l7636
 26894                           
 26895                           ;usb_device.c: 1552: {
 26896                           ;usb_device.c: 1553: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 26897  002EBE  C019  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26898  002EC2  C01A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26899  002EC6  0E48               	movlw	72
 26900  002EC8  6EDF               	movwf	indf2,c
 26901                           
 26902                           ;usb_device.c: 1554: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26903  002ECA  C019  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26904  002ECE  C01A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26905  002ED2  0E00               	movlw	0
 26906  002ED4  8EDB               	bsf	plusw2,7,c
 26907                           
 26908                           ;usb_device.c: 1555: }
 26909  002ED6  0012               	return	
 26910  002ED8                     i2l7636:
 26911                           
 26912                           ;usb_device.c: 1556: else
 26913                           ;usb_device.c: 1557: {
 26914                           ;usb_device.c: 1558: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 26915  002ED8  C019  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26916  002EDC  C01A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26917  002EE0  0E08               	movlw	8
 26918  002EE2  6EDF               	movwf	indf2,c
 26919                           
 26920                           ;usb_device.c: 1559: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26921  002EE4  C019  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26922  002EE8  C01A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26923  002EEC  0E00               	movlw	0
 26924  002EEE  8EDB               	bsf	plusw2,7,c
 26925                           
 26926                           ;usb_device.c: 1560: }
 26927                           ;usb_device.c: 1561: }
 26928  002EF0  0012               	return	
 26929  002EF2                     i2l7640:
 26930                           
 26931                           ;usb_device.c: 1562: else
 26932                           ;usb_device.c: 1563: {
 26933                           ;usb_device.c: 1567: pBDTEntryEP0OutNext->CNT = 8;
 26934  002EF2  EE20 F001          	lfsr	2,1
 26935  002EF6  5019               	movf	_pBDTEntryEP0OutNext,w,c
 26936  002EF8  26D9               	addwf	fsr2l,f,c
 26937  002EFA  501A               	movf	_pBDTEntryEP0OutNext+1,w,c
 26938  002EFC  22DA               	addwfc	fsr2h,f,c
 26939  002EFE  0E08               	movlw	8
 26940  002F00  6EDF               	movwf	indf2,c
 26941                           
 26942                           ;usb_device.c: 1568: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 26943  002F02  EE20 F002          	lfsr	2,2
 26944  002F06  5019               	movf	_pBDTEntryEP0OutNext,w,c
 26945  002F08  26D9               	addwf	fsr2l,f,c
 26946  002F0A  501A               	movf	_pBDTEntryEP0OutNext+1,w,c
 26947  002F0C  22DA               	addwfc	fsr2h,f,c
 26948  002F0E  0E30               	movlw	48
 26949  002F10  6EDE               	movwf	postinc2,c
 26950  002F12  0E04               	movlw	4
 26951  002F14  6EDD               	movwf	postdec2,c
 26952                           
 26953                           ;usb_device.c: 1572: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 26954  002F16  C019  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26955  002F1A  C01A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26956  002F1E  0E04               	movlw	4
 26957  002F20  6EDF               	movwf	indf2,c
 26958                           
 26959                           ;usb_device.c: 1573: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26960  002F22  C019  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26961  002F26  C01A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26962  002F2A  0E00               	movlw	0
 26963  002F2C  8EDB               	bsf	plusw2,7,c
 26964                           
 26965                           ;usb_device.c: 1580: if(outPipes[0].pFunc != (0))
 26966  002F2E  5007               	movf	_outPipes+6,w,c	;volatile
 26967  002F30  1008               	iorwf	_outPipes+7,w,c	;volatile
 26968  002F32  B4D8               	btfsc	status,2,c
 26969  002F34  D00E               	goto	i2l7650
 26970                           
 26971                           ;usb_device.c: 1581: {
 26972                           ;usb_device.c: 1586: outPipes[0].pFunc();
 26973  002F36  EE20  F007         	lfsr	2,_outPipes+6	;volatile
 26974  002F3A  D801               	call	i2u567_48
 26975  002F3C  D00A               	goto	i2l7650
 26976  002F3E                     i2u567_48:
 26977  002F3E  0005               	push	
 26978  002F40  6EFA               	movwf	pclath,c
 26979  002F42  50DE               	movf	postinc2,w,c
 26980  002F44  6EFD               	movwf	tosl,c
 26981  002F46  50DE               	movf	postinc2,w,c
 26982  002F48  6EFE               	movwf	tosh,c
 26983  002F4A  50F8               	movf	tblptru,w,c
 26984  002F4C  6EFF               	movwf	tosu,c
 26985  002F4E  50FA               	movf	pclath,w,c
 26986  002F50  0012               	return		;indir
 26987  002F52                     i2l7650:
 26988                           
 26989                           ;usb_device.c: 1588: }
 26990                           ;usb_device.c: 1589: outPipes[0].info.bits.busy = 0;
 26991  002F52  9E04               	bcf	_outPipes+3,7,c	;volatile
 26992                           
 26993                           ;usb_device.c: 1603: if(USBDeferStatusStagePacket == 0)
 26994  002F54  5021               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 26995  002F56  A4D8               	btfss	status,2,c
 26996  002F58  0012               	return	
 26997                           
 26998                           ;usb_device.c: 1604: {
 26999                           ;usb_device.c: 1605: USBCtrlEPAllowStatusStage();
 27000  002F5A  EC57  F020         	call	_USBCtrlEPAllowStatusStage	;wreg free
 27001  002F5E  0012               	return	
 27002  002F60                     __end_of_USBCtrlTrfRxService:
 27003                           	opt stack 0
 27004                           tosu	equ	0xFFF
 27005                           tosh	equ	0xFFE
 27006                           tosl	equ	0xFFD
 27007                           pclatu	equ	0xFFB
 27008                           pclath	equ	0xFFA
 27009                           tblptru	equ	0xFF8
 27010                           tblptrh	equ	0xFF7
 27011                           tblptrl	equ	0xFF6
 27012                           tablat	equ	0xFF5
 27013                           prodh	equ	0xFF4
 27014                           prodl	equ	0xFF3
 27015                           intcon	equ	0xFF2
 27016                           indf0	equ	0xFEF
 27017                           postinc0	equ	0xFEE
 27018                           fsr0h	equ	0xFEA
 27019                           fsr0l	equ	0xFE9
 27020                           wreg	equ	0xFE8
 27021                           indf1	equ	0xFE7
 27022                           postdec1	equ	0xFE5
 27023                           fsr1h	equ	0xFE2
 27024                           fsr1l	equ	0xFE1
 27025                           indf2	equ	0xFDF
 27026                           postinc2	equ	0xFDE
 27027                           postdec2	equ	0xFDD
 27028                           plusw2	equ	0xFDB
 27029                           fsr2h	equ	0xFDA
 27030                           fsr2l	equ	0xFD9
 27031                           status	equ	0xFD8
 27032                           
 27033 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 27034 ;; Defined at:
 27035 ;;		line 1104 in file "../Includes/Usb/Framework/usb_device.c"
 27036 ;; Parameters:    Size  Location     Type
 27037 ;;		None
 27038 ;; Auto vars:     Size  Location     Type
 27039 ;;		None
 27040 ;; Return value:  Size  Location     Type
 27041 ;;		None               void
 27042 ;; Registers used:
 27043 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27044 ;; Tracked objects:
 27045 ;;		On entry : 0/0
 27046 ;;		On exit  : 0/0
 27047 ;;		Unchanged: 0/0
 27048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27049 ;;      Params:         0       0       0       0       0       0       0       0       0
 27050 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27051 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27052 ;;      Totals:         0       0       0       0       0       0       0       0       0
 27053 ;;Total ram usage:        0 bytes
 27054 ;; Hardware stack levels used:    1
 27055 ;; This function calls:
 27056 ;;		Nothing
 27057 ;; This function is called by:
 27058 ;;		_USBDeviceTasks
 27059 ;;		_USBCtrlEPServiceComplete
 27060 ;;		_USBCtrlTrfRxService
 27061 ;; This function uses a non-reentrant model
 27062 ;;
 27063                           
 27064                           	psect	text113
 27065  0040AE                     __ptext113:
 27066                           	opt stack 0
 27067  0040AE                     _USBCtrlEPAllowStatusStage:
 27068                           	opt stack 15
 27069                           
 27070                           ;usb_device.c: 1111: if(USBStatusStageEnabledFlag1 == 0)
 27071                           
 27072                           ;incstack = 0
 27073  0040AE  0100               	movlb	0	; () banked
 27074  0040B0  5198               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 27075  0040B2  A4D8               	btfss	status,2,c
 27076  0040B4  0012               	return	
 27077                           
 27078                           ; BSR set to: 0
 27079                           ;usb_device.c: 1112: {
 27080                           ;usb_device.c: 1113: USBStatusStageEnabledFlag1 = 1;
 27081  0040B6  0E01               	movlw	1
 27082  0040B8  0100               	movlb	0	; () banked
 27083  0040BA  6F98               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 27084                           
 27085                           ;usb_device.c: 1114: if(USBStatusStageEnabledFlag2 == 0)
 27086  0040BC  0100               	movlb	0	; () banked
 27087  0040BE  5199               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 27088  0040C0  A4D8               	btfss	status,2,c
 27089  0040C2  0012               	return	
 27090                           
 27091                           ; BSR set to: 0
 27092                           ;usb_device.c: 1115: {
 27093                           ;usb_device.c: 1116: USBStatusStageEnabledFlag2 = 1;
 27094  0040C4  0E01               	movlw	1
 27095  0040C6  0100               	movlb	0	; () banked
 27096  0040C8  6F99               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 27097                           
 27098                           ; BSR set to: 0
 27099                           ;usb_device.c: 1120: if(controlTransferState == 2)
 27100  0040CA  0E02               	movlw	2
 27101  0040CC  1824               	xorwf	_controlTransferState,w,c	;volatile
 27102  0040CE  A4D8               	btfss	status,2,c
 27103  0040D0  D015               	goto	i2l7204
 27104                           
 27105                           ; BSR set to: 0
 27106                           ;usb_device.c: 1121: {
 27107                           ;usb_device.c: 1122: pBDTEntryIn[0]->CNT = 0;
 27108  0040D2  EE20 F001          	lfsr	2,1
 27109  0040D6  500F               	movf	_pBDTEntryIn,w,c
 27110  0040D8  26D9               	addwf	fsr2l,f,c
 27111  0040DA  5010               	movf	_pBDTEntryIn+1,w,c
 27112  0040DC  22DA               	addwfc	fsr2h,f,c
 27113  0040DE  0E00               	movlw	0
 27114  0040E0  6EDF               	movwf	indf2,c
 27115                           
 27116                           ; BSR set to: 0
 27117                           ;usb_device.c: 1123: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 27118  0040E2  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 27119  0040E6  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27120  0040EA  0E48               	movlw	72
 27121  0040EC  6EDF               	movwf	indf2,c
 27122                           
 27123                           ; BSR set to: 0
 27124                           ;usb_device.c: 1124: pBDTEntryIn[0]->STAT.Val |= 0x80;
 27125  0040EE  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 27126  0040F2  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27127  0040F6  0E00               	movlw	0
 27128  0040F8  8EDB               	bsf	plusw2,7,c
 27129                           
 27130                           ;usb_device.c: 1125: }
 27131  0040FA  0012               	return	
 27132  0040FC                     i2l7204:
 27133                           
 27134                           ; BSR set to: 0
 27135                           ;usb_device.c: 1126: else if(controlTransferState == 1)
 27136  0040FC  0424               	decf	_controlTransferState,w,c	;volatile
 27137  0040FE  A4D8               	btfss	status,2,c
 27138  004100  0012               	return	
 27139                           
 27140                           ; BSR set to: 0
 27141                           ;usb_device.c: 1127: {
 27142                           ;usb_device.c: 1128: BothEP0OutUOWNsSet = 0;
 27143  004102  0E00               	movlw	0
 27144  004104  0100               	movlb	0	; () banked
 27145  004106  6F8C               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 27146                           
 27147                           ; BSR set to: 0
 27148                           ;usb_device.c: 1132: pBDTEntryEP0OutCurrent->CNT = 8;
 27149  004108  EE20 F001          	lfsr	2,1
 27150  00410C  5017               	movf	_pBDTEntryEP0OutCurrent,w,c
 27151  00410E  26D9               	addwf	fsr2l,f,c
 27152  004110  5018               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 27153  004112  22DA               	addwfc	fsr2h,f,c
 27154  004114  0E08               	movlw	8
 27155  004116  6EDF               	movwf	indf2,c
 27156                           
 27157                           ; BSR set to: 0
 27158                           ;usb_device.c: 1133: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 27159  004118  EE20 F002          	lfsr	2,2
 27160  00411C  5017               	movf	_pBDTEntryEP0OutCurrent,w,c
 27161  00411E  26D9               	addwf	fsr2l,f,c
 27162  004120  5018               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 27163  004122  22DA               	addwfc	fsr2h,f,c
 27164  004124  0E30               	movlw	48
 27165  004126  6EDE               	movwf	postinc2,c
 27166  004128  0E04               	movlw	4
 27167  00412A  6EDD               	movwf	postdec2,c
 27168                           
 27169                           ; BSR set to: 0
 27170                           ;usb_device.c: 1134: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 27171  00412C  C017  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 27172  004130  C018  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 27173  004134  0E04               	movlw	4
 27174  004136  6EDF               	movwf	indf2,c
 27175                           
 27176                           ; BSR set to: 0
 27177                           ;usb_device.c: 1135: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 27178  004138  C017  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 27179  00413C  C018  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 27180  004140  0E00               	movlw	0
 27181  004142  8EDB               	bsf	plusw2,7,c
 27182                           
 27183                           ; BSR set to: 0
 27184                           ;usb_device.c: 1136: BothEP0OutUOWNsSet = 1;
 27185  004144  0E01               	movlw	1
 27186  004146  0100               	movlb	0	; () banked
 27187  004148  6F8C               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 27188                           
 27189                           ; BSR set to: 0
 27190                           ;usb_device.c: 1139: pBDTEntryEP0OutNext->CNT = 8;
 27191  00414A  EE20 F001          	lfsr	2,1
 27192  00414E  5019               	movf	_pBDTEntryEP0OutNext,w,c
 27193  004150  26D9               	addwf	fsr2l,f,c
 27194  004152  501A               	movf	_pBDTEntryEP0OutNext+1,w,c
 27195  004154  22DA               	addwfc	fsr2h,f,c
 27196  004156  0E08               	movlw	8
 27197  004158  6EDF               	movwf	indf2,c
 27198                           
 27199                           ; BSR set to: 0
 27200                           ;usb_device.c: 1140: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 27201  00415A  EE20 F002          	lfsr	2,2
 27202  00415E  5019               	movf	_pBDTEntryEP0OutNext,w,c
 27203  004160  26D9               	addwf	fsr2l,f,c
 27204  004162  501A               	movf	_pBDTEntryEP0OutNext+1,w,c
 27205  004164  22DA               	addwfc	fsr2h,f,c
 27206  004166  0E30               	movlw	48
 27207  004168  6EDE               	movwf	postinc2,c
 27208  00416A  0E04               	movlw	4
 27209  00416C  6EDD               	movwf	postdec2,c
 27210                           
 27211                           ; BSR set to: 0
 27212                           ;usb_device.c: 1141: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 27213  00416E  C019  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27214  004172  C01A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27215  004176  0E80               	movlw	128
 27216  004178  6EDF               	movwf	indf2,c
 27217                           
 27218                           ; BSR set to: 0
 27219                           
 27220                           ; BSR set to: 0
 27221                           
 27222                           ; BSR set to: 0
 27223  00417A  0012               	return	
 27224  00417C                     __end_of_USBCtrlEPAllowStatusStage:
 27225                           	opt stack 0
 27226                           tosu	equ	0xFFF
 27227                           tosh	equ	0xFFE
 27228                           tosl	equ	0xFFD
 27229                           pclatu	equ	0xFFB
 27230                           pclath	equ	0xFFA
 27231                           tblptru	equ	0xFF8
 27232                           tblptrh	equ	0xFF7
 27233                           tblptrl	equ	0xFF6
 27234                           tablat	equ	0xFF5
 27235                           prodh	equ	0xFF4
 27236                           prodl	equ	0xFF3
 27237                           intcon	equ	0xFF2
 27238                           indf0	equ	0xFEF
 27239                           postinc0	equ	0xFEE
 27240                           fsr0h	equ	0xFEA
 27241                           fsr0l	equ	0xFE9
 27242                           wreg	equ	0xFE8
 27243                           indf1	equ	0xFE7
 27244                           postdec1	equ	0xFE5
 27245                           fsr1h	equ	0xFE2
 27246                           fsr1l	equ	0xFE1
 27247                           indf2	equ	0xFDF
 27248                           postinc2	equ	0xFDE
 27249                           postdec2	equ	0xFDD
 27250                           plusw2	equ	0xFDB
 27251                           fsr2h	equ	0xFDA
 27252                           fsr2l	equ	0xFD9
 27253                           status	equ	0xFD8
 27254                           
 27255 ;; *************** function _USBCtrlTrfInHandler *****************
 27256 ;; Defined at:
 27257 ;;		line 2223 in file "../Includes/Usb/Framework/usb_device.c"
 27258 ;; Parameters:    Size  Location     Type
 27259 ;;		None
 27260 ;; Auto vars:     Size  Location     Type
 27261 ;;  lastDTS         1   17[COMRAM] unsigned char 
 27262 ;; Return value:  Size  Location     Type
 27263 ;;		None               void
 27264 ;; Registers used:
 27265 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 27266 ;; Tracked objects:
 27267 ;;		On entry : 0/0
 27268 ;;		On exit  : 0/0
 27269 ;;		Unchanged: 0/0
 27270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27271 ;;      Params:         0       0       0       0       0       0       0       0       0
 27272 ;;      Locals:         1       0       0       0       0       0       0       0       0
 27273 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27274 ;;      Totals:         1       0       0       0       0       0       0       0       0
 27275 ;;Total ram usage:        1 bytes
 27276 ;; Hardware stack levels used:    1
 27277 ;; Hardware stack levels required when called:    2
 27278 ;; This function calls:
 27279 ;;		_USART_mySetLineCodingHandler
 27280 ;;		_USBCtrlTrfTxService
 27281 ;; This function is called by:
 27282 ;;		_USBCtrlEPService
 27283 ;; This function uses a non-reentrant model
 27284 ;;
 27285                           
 27286                           	psect	text114
 27287  003912                     __ptext114:
 27288                           	opt stack 0
 27289  003912                     _USBCtrlTrfInHandler:
 27290                           	opt stack 15
 27291                           
 27292                           ;usb_device.c: 2225: uint8_t lastDTS;
 27293                           ;usb_device.c: 2227: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 27294                           
 27295                           ; BSR set to: 0
 27296                           ;incstack = 0
 27297  003912  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 27298  003916  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27299  00391A  0E00               	movlw	0
 27300  00391C  BCDF               	btfsc	indf2,6,c
 27301  00391E  0E01               	movlw	1
 27302  003920  6E3F               	movwf	USBCtrlTrfInHandler@lastDTS,c
 27303                           
 27304                           ;usb_device.c: 2230: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 27305  003922  0E04               	movlw	4
 27306  003924  1A0F               	xorwf	_pBDTEntryIn,f,c
 27307                           
 27308                           ;usb_device.c: 2235: if(USBDeviceState == ADR_PENDING_STATE)
 27309  003926  0E08               	movlw	8
 27310  003928  0100               	movlb	0	; () banked
 27311  00392A  1997               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 27312  00392C  A4D8               	btfss	status,2,c
 27313  00392E  D00C               	goto	i2l8320
 27314                           
 27315                           ; BSR set to: 0
 27316                           ;usb_device.c: 2236: {
 27317                           ;usb_device.c: 2237: UADDR = (SetupPkt.bDevADR & 0x7F);
 27318  003930  0104               	movlb	4	; () banked
 27319  003932  5132               	movf	50,w,b	;volatile
 27320  003934  0B7F               	andlw	127
 27321  003936  6E63               	movwf	3939,c	;volatile
 27322                           
 27323                           ; BSR set to: 4
 27324                           ;usb_device.c: 2238: if(UADDR != 0u)
 27325  003938  5063               	movf	3939,w,c	;volatile
 27326  00393A  B4D8               	btfsc	status,2,c
 27327  00393C  D002               	goto	i2l8318
 27328                           
 27329                           ; BSR set to: 4
 27330                           ;usb_device.c: 2239: {
 27331                           ;usb_device.c: 2240: USBDeviceState=ADDRESS_STATE;
 27332  00393E  0E10               	movlw	16
 27333  003940  D001               	goto	L25
 27334  003942                     i2l8318:
 27335                           
 27336                           ;usb_device.c: 2242: else
 27337                           ;usb_device.c: 2243: {
 27338                           ;usb_device.c: 2244: USBDeviceState=DEFAULT_STATE;
 27339  003942  0E04               	movlw	4
 27340  003944                     L25:
 27341  003944  0100               	movlb	0	; () banked
 27342  003946  6F97               	movwf	_USBDeviceState& (0+255),b	;volatile
 27343  003948                     i2l8320:
 27344                           
 27345                           ; BSR set to: 0
 27346                           ;usb_device.c: 2245: }
 27347                           ;usb_device.c: 2246: }
 27348                           ;usb_device.c: 2249: if(controlTransferState == 1)
 27349  003948  0424               	decf	_controlTransferState,w,c	;volatile
 27350  00394A  A4D8               	btfss	status,2,c
 27351  00394C  D03A               	goto	i2l1821
 27352                           
 27353                           ; BSR set to: 0
 27354                           ;usb_device.c: 2250: {
 27355                           ;usb_device.c: 2251: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 27356  00394E  EE20 F002          	lfsr	2,2
 27357  003952  500F               	movf	_pBDTEntryIn,w,c
 27358  003954  26D9               	addwf	fsr2l,f,c
 27359  003956  5010               	movf	_pBDTEntryIn+1,w,c
 27360  003958  22DA               	addwfc	fsr2h,f,c
 27361  00395A  0E38               	movlw	56
 27362  00395C  6EDE               	movwf	postinc2,c
 27363  00395E  0E04               	movlw	4
 27364  003960  6EDD               	movwf	postdec2,c
 27365                           
 27366                           ; BSR set to: 0
 27367                           ;usb_device.c: 2252: USBCtrlTrfTxService();
 27368  003962  ECBE  F020         	call	_USBCtrlTrfTxService	;wreg free
 27369                           
 27370                           ;usb_device.c: 2258: if(shortPacketStatus == 2)
 27371  003966  0E02               	movlw	2
 27372  003968  182B               	xorwf	_shortPacketStatus,w,c	;volatile
 27373  00396A  A4D8               	btfss	status,2,c
 27374  00396C  D00D               	goto	i2l8332
 27375                           
 27376                           ;usb_device.c: 2259: {
 27377                           ;usb_device.c: 2262: pBDTEntryIn[0]->STAT.Val = 0x04;
 27378  00396E  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 27379  003972  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27380  003976  0E04               	movlw	4
 27381  003978  6EDF               	movwf	indf2,c
 27382                           
 27383                           ;usb_device.c: 2263: pBDTEntryIn[0]->STAT.Val |= 0x80;
 27384  00397A  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 27385  00397E  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27386  003982  0E00               	movlw	0
 27387  003984  8EDB               	bsf	plusw2,7,c
 27388                           
 27389                           ;usb_device.c: 2264: }
 27390  003986  0012               	return	
 27391  003988                     i2l8332:
 27392                           
 27393                           ;usb_device.c: 2265: else
 27394                           ;usb_device.c: 2266: {
 27395                           ;usb_device.c: 2267: if(lastDTS == 0)
 27396  003988  503F               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 27397  00398A  A4D8               	btfss	status,2,c
 27398  00398C  D00D               	goto	i2l8338
 27399                           
 27400                           ;usb_device.c: 2268: {
 27401                           ;usb_device.c: 2269: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 27402  00398E  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 27403  003992  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27404  003996  0E48               	movlw	72
 27405  003998  6EDF               	movwf	indf2,c
 27406                           
 27407                           ;usb_device.c: 2270: pBDTEntryIn[0]->STAT.Val |= 0x80;
 27408  00399A  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 27409  00399E  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27410  0039A2  0E00               	movlw	0
 27411  0039A4  8EDB               	bsf	plusw2,7,c
 27412                           
 27413                           ;usb_device.c: 2271: }
 27414  0039A6  0012               	return	
 27415  0039A8                     i2l8338:
 27416                           
 27417                           ;usb_device.c: 2272: else
 27418                           ;usb_device.c: 2273: {
 27419                           ;usb_device.c: 2274: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 27420  0039A8  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 27421  0039AC  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27422  0039B0  0E08               	movlw	8
 27423  0039B2  6EDF               	movwf	indf2,c
 27424                           
 27425                           ;usb_device.c: 2275: pBDTEntryIn[0]->STAT.Val |= 0x80;
 27426  0039B4  C00F  FFD9         	movff	_pBDTEntryIn,fsr2l
 27427  0039B8  C010  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27428  0039BC  0E00               	movlw	0
 27429  0039BE  8EDB               	bsf	plusw2,7,c
 27430                           
 27431                           ;usb_device.c: 2276: }
 27432                           ;usb_device.c: 2277: }
 27433                           ;usb_device.c: 2278: }
 27434  0039C0  0012               	return	
 27435  0039C2                     i2l1821:
 27436                           
 27437                           ; BSR set to: 0
 27438                           ;usb_device.c: 2279: else
 27439                           ;usb_device.c: 2280: {
 27440                           ;usb_device.c: 2284: if(outPipes[0].info.bits.busy == 1)
 27441  0039C2  AE04               	btfss	_outPipes+3,7,c	;volatile
 27442  0039C4  D013               	goto	i2l8348
 27443                           
 27444                           ; BSR set to: 0
 27445                           ;usb_device.c: 2285: {
 27446                           ;usb_device.c: 2286: if(outPipes[0].pFunc != (0))
 27447  0039C6  5007               	movf	_outPipes+6,w,c	;volatile
 27448  0039C8  1008               	iorwf	_outPipes+7,w,c	;volatile
 27449  0039CA  B4D8               	btfsc	status,2,c
 27450  0039CC  D00E               	goto	i2l8346
 27451                           
 27452                           ; BSR set to: 0
 27453                           ;usb_device.c: 2287: {
 27454                           ;usb_device.c: 2288: outPipes[0].pFunc();
 27455  0039CE  EE20  F007         	lfsr	2,_outPipes+6	;volatile
 27456  0039D2  D801               	call	i2u638_48
 27457  0039D4  D00A               	goto	i2l8346
 27458  0039D6                     i2u638_48:
 27459  0039D6  0005               	push	
 27460  0039D8  6EFA               	movwf	pclath,c
 27461  0039DA  50DE               	movf	postinc2,w,c
 27462  0039DC  6EFD               	movwf	tosl,c
 27463  0039DE  50DE               	movf	postinc2,w,c
 27464  0039E0  6EFE               	movwf	tosh,c
 27465  0039E2  50F8               	movf	tblptru,w,c
 27466  0039E4  6EFF               	movwf	tosu,c
 27467  0039E6  50FA               	movf	pclath,w,c
 27468  0039E8  0012               	return		;indir
 27469  0039EA                     i2l8346:
 27470                           
 27471                           ;usb_device.c: 2289: }
 27472                           ;usb_device.c: 2290: outPipes[0].info.bits.busy = 0;
 27473  0039EA  9E04               	bcf	_outPipes+3,7,c	;volatile
 27474  0039EC                     i2l8348:
 27475                           
 27476                           ;usb_device.c: 2291: }
 27477                           ;usb_device.c: 2293: controlTransferState = 0;
 27478  0039EC  0E00               	movlw	0
 27479  0039EE  6E24               	movwf	_controlTransferState,c	;volatile
 27480  0039F0  0012               	return	
 27481  0039F2                     __end_of_USBCtrlTrfInHandler:
 27482                           	opt stack 0
 27483                           tosu	equ	0xFFF
 27484                           tosh	equ	0xFFE
 27485                           tosl	equ	0xFFD
 27486                           pclatu	equ	0xFFB
 27487                           pclath	equ	0xFFA
 27488                           tblptru	equ	0xFF8
 27489                           tblptrh	equ	0xFF7
 27490                           tblptrl	equ	0xFF6
 27491                           tablat	equ	0xFF5
 27492                           prodh	equ	0xFF4
 27493                           prodl	equ	0xFF3
 27494                           intcon	equ	0xFF2
 27495                           indf0	equ	0xFEF
 27496                           postinc0	equ	0xFEE
 27497                           fsr0h	equ	0xFEA
 27498                           fsr0l	equ	0xFE9
 27499                           wreg	equ	0xFE8
 27500                           indf1	equ	0xFE7
 27501                           postdec1	equ	0xFE5
 27502                           fsr1h	equ	0xFE2
 27503                           fsr1l	equ	0xFE1
 27504                           indf2	equ	0xFDF
 27505                           postinc2	equ	0xFDE
 27506                           postdec2	equ	0xFDD
 27507                           plusw2	equ	0xFDB
 27508                           fsr2h	equ	0xFDA
 27509                           fsr2l	equ	0xFD9
 27510                           status	equ	0xFD8
 27511                           
 27512 ;; *************** function _USBCtrlTrfTxService *****************
 27513 ;; Defined at:
 27514 ;;		line 1437 in file "../Includes/Usb/Framework/usb_device.c"
 27515 ;; Parameters:    Size  Location     Type
 27516 ;;		None
 27517 ;; Auto vars:     Size  Location     Type
 27518 ;;  byteToSend      1    0[COMRAM] unsigned char 
 27519 ;; Return value:  Size  Location     Type
 27520 ;;		None               void
 27521 ;; Registers used:
 27522 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 27523 ;; Tracked objects:
 27524 ;;		On entry : 0/0
 27525 ;;		On exit  : 0/0
 27526 ;;		Unchanged: 0/0
 27527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27528 ;;      Params:         0       0       0       0       0       0       0       0       0
 27529 ;;      Locals:         1       0       0       0       0       0       0       0       0
 27530 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27531 ;;      Totals:         1       0       0       0       0       0       0       0       0
 27532 ;;Total ram usage:        1 bytes
 27533 ;; Hardware stack levels used:    1
 27534 ;; This function calls:
 27535 ;;		Nothing
 27536 ;; This function is called by:
 27537 ;;		_USBCtrlEPAllowDataStage
 27538 ;;		_USBCtrlTrfInHandler
 27539 ;; This function uses a non-reentrant model
 27540 ;;
 27541                           
 27542                           	psect	text115
 27543  00417C                     __ptext115:
 27544                           	opt stack 0
 27545  00417C                     _USBCtrlTrfTxService:
 27546                           	opt stack 14
 27547                           
 27548                           ;usb_device.c: 1439: uint8_t byteToSend;
 27549                           ;usb_device.c: 1443: byteToSend = 8;
 27550                           
 27551                           ;incstack = 0
 27552  00417C  0E08               	movlw	8
 27553  00417E  6E2E               	movwf	USBCtrlTrfTxService@byteToSend,c
 27554                           
 27555                           ;usb_device.c: 1444: if(inPipes[0].wCount.Val < (uint8_t)8)
 27556  004180  500E               	movf	_inPipes+5,w,c	;volatile
 27557  004182  E110               	bnz	i2l7004
 27558  004184  0E08               	movlw	8
 27559  004186  5C0D               	subwf	_inPipes+4,w,c	;volatile
 27560  004188  B0D8               	btfsc	status,0,c
 27561  00418A  D00C               	goto	i2l7004
 27562                           
 27563                           ;usb_device.c: 1445: {
 27564                           ;usb_device.c: 1446: byteToSend = inPipes[0].wCount.Val;
 27565  00418C  C00D  F02E         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 27566                           
 27567                           ;usb_device.c: 1453: if(shortPacketStatus == 0)
 27568  004190  502B               	movf	_shortPacketStatus,w,c	;volatile
 27569  004192  A4D8               	btfss	status,2,c
 27570  004194  D002               	goto	i2l7000
 27571                           
 27572                           ;usb_device.c: 1454: {
 27573                           ;usb_device.c: 1455: shortPacketStatus = 1;
 27574  004196  0E01               	movlw	1
 27575  004198  D004               	goto	L26
 27576  00419A                     i2l7000:
 27577                           
 27578                           ;usb_device.c: 1457: else if(shortPacketStatus == 1)
 27579  00419A  042B               	decf	_shortPacketStatus,w,c	;volatile
 27580  00419C  A4D8               	btfss	status,2,c
 27581  00419E  D002               	goto	i2l7004
 27582                           
 27583                           ;usb_device.c: 1458: {
 27584                           ;usb_device.c: 1459: shortPacketStatus = 2;
 27585  0041A0  0E02               	movlw	2
 27586  0041A2                     L26:
 27587  0041A2  6E2B               	movwf	_shortPacketStatus,c	;volatile
 27588  0041A4                     i2l7004:
 27589                           
 27590                           ;usb_device.c: 1460: }
 27591                           ;usb_device.c: 1461: }
 27592                           ;usb_device.c: 1465: inPipes[0].wCount.Val -= byteToSend;
 27593  0041A4  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 27594  0041A6  5E0D               	subwf	_inPipes+4,f,c	;volatile
 27595  0041A8  0E00               	movlw	0
 27596  0041AA  5A0E               	subwfb	_inPipes+5,f,c	;volatile
 27597                           
 27598                           ;usb_device.c: 1470: pBDTEntryIn[0]->CNT = byteToSend;
 27599  0041AC  EE20 F001          	lfsr	2,1
 27600  0041B0  500F               	movf	_pBDTEntryIn,w,c
 27601  0041B2  26D9               	addwf	fsr2l,f,c
 27602  0041B4  5010               	movf	_pBDTEntryIn+1,w,c
 27603  0041B6  22DA               	addwfc	fsr2h,f,c
 27604  0041B8  C02E  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 27605                           
 27606                           ;usb_device.c: 1474: pDst = (volatile uint8_t*)CtrlTrfData;
 27607  0041BC  0E38               	movlw	56
 27608  0041BE  0100               	movlb	0	; () banked
 27609  0041C0  6F84               	movwf	_pDst& (0+255),b
 27610  0041C2  0E04               	movlw	4
 27611  0041C4  0100               	movlb	0	; () banked
 27612  0041C6  6F85               	movwf	(_pDst+1)& (0+255),b
 27613                           
 27614                           ; BSR set to: 0
 27615                           ;usb_device.c: 1475: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 27616  0041C8  A00C               	btfss	_inPipes+3,0,c	;volatile
 27617  0041CA  D01C               	goto	i2l7022
 27618  0041CC  D03A               	goto	i2l7032
 27619  0041CE                     i2l7014:
 27620                           
 27621                           ; BSR set to: 0
 27622                           ;usb_device.c: 1478: {
 27623                           ;usb_device.c: 1479: *pDst++ = *inPipes[0].pSrc.bRom++;
 27624  0041CE  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 27625  0041D2  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 27626  0041D6  6AF8               	clrf	tblptru,c
 27627  0041D8  C084  FFD9         	movff	_pDst,fsr2l
 27628  0041DC  C085  FFDA         	movff	_pDst+1,fsr2h
 27629  0041E0  0E07               	movlw	(high __ramtop+-1)
 27630  0041E2  64F7               	cpfsgt	tblptrh,c
 27631  0041E4  D003               	bra	i2u484_47
 27632  0041E6  0008               	tblrd		*
 27633  0041E8  50F5               	movf	tablat,w,c
 27634  0041EA  D005               	bra	i2u484_40
 27635  0041EC                     i2u484_47:
 27636  0041EC  CFF6 FFE9          	movff	tblptrl,fsr0l
 27637  0041F0  CFF7 FFEA          	movff	tblptrh,fsr0h
 27638  0041F4  50EF               	movf	indf0,w,c
 27639  0041F6                     i2u484_40:
 27640  0041F6  6EDF               	movwf	indf2,c
 27641  0041F8  4A09               	infsnz	_inPipes,f,c	;volatile
 27642  0041FA  2A0A               	incf	_inPipes+1,f,c	;volatile
 27643  0041FC  0100               	movlb	0	; () banked
 27644  0041FE  4B84               	infsnz	_pDst& (0+255),f,b
 27645  004200  2B85               	incf	(_pDst+1)& (0+255),f,b
 27646                           
 27647                           ; BSR set to: 0
 27648                           ;usb_device.c: 1480: byteToSend--;
 27649  004202  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 27650  004204                     i2l7022:
 27651                           
 27652                           ; BSR set to: 0
 27653  004204  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 27654  004206  B4D8               	btfsc	status,2,c
 27655  004208  0012               	return	
 27656  00420A  D7E1               	goto	i2l7014
 27657  00420C                     i2l7024:
 27658                           
 27659                           ; BSR set to: 0
 27660                           ;usb_device.c: 1486: {
 27661                           ;usb_device.c: 1487: *pDst++ = *inPipes[0].pSrc.bRam++;
 27662  00420C  C009  FFF6         	movff	_inPipes,tblptrl	;volatile
 27663  004210  C00A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 27664  004214  6AF8               	clrf	tblptru,c
 27665  004216  C084  FFD9         	movff	_pDst,fsr2l
 27666  00421A  C085  FFDA         	movff	_pDst+1,fsr2h
 27667  00421E  0E07               	movlw	(high __ramtop+-1)
 27668  004220  64F7               	cpfsgt	tblptrh,c
 27669  004222  D003               	bra	i2u486_47
 27670  004224  0008               	tblrd		*
 27671  004226  50F5               	movf	tablat,w,c
 27672  004228  D005               	bra	i2u486_40
 27673  00422A                     i2u486_47:
 27674  00422A  CFF6 FFE9          	movff	tblptrl,fsr0l
 27675  00422E  CFF7 FFEA          	movff	tblptrh,fsr0h
 27676  004232  50EF               	movf	indf0,w,c
 27677  004234                     i2u486_40:
 27678  004234  6EDF               	movwf	indf2,c
 27679  004236  4A09               	infsnz	_inPipes,f,c	;volatile
 27680  004238  2A0A               	incf	_inPipes+1,f,c	;volatile
 27681  00423A  0100               	movlb	0	; () banked
 27682  00423C  4B84               	infsnz	_pDst& (0+255),f,b
 27683  00423E  2B85               	incf	(_pDst+1)& (0+255),f,b
 27684                           
 27685                           ; BSR set to: 0
 27686                           ;usb_device.c: 1488: byteToSend--;
 27687  004240  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 27688  004242                     i2l7032:
 27689                           
 27690                           ; BSR set to: 0
 27691  004242  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 27692  004244  B4D8               	btfsc	status,2,c
 27693  004246  0012               	return	
 27694  004248  D7E1               	goto	i2l7024
 27695  00424A                     __end_of_USBCtrlTrfTxService:
 27696                           	opt stack 0
 27697                           tosu	equ	0xFFF
 27698                           tosh	equ	0xFFE
 27699                           tosl	equ	0xFFD
 27700                           pclatu	equ	0xFFB
 27701                           pclath	equ	0xFFA
 27702                           tblptru	equ	0xFF8
 27703                           tblptrh	equ	0xFF7
 27704                           tblptrl	equ	0xFF6
 27705                           tablat	equ	0xFF5
 27706                           prodh	equ	0xFF4
 27707                           prodl	equ	0xFF3
 27708                           intcon	equ	0xFF2
 27709                           indf0	equ	0xFEF
 27710                           postinc0	equ	0xFEE
 27711                           fsr0h	equ	0xFEA
 27712                           fsr0l	equ	0xFE9
 27713                           wreg	equ	0xFE8
 27714                           indf1	equ	0xFE7
 27715                           postdec1	equ	0xFE5
 27716                           fsr1h	equ	0xFE2
 27717                           fsr1l	equ	0xFE1
 27718                           indf2	equ	0xFDF
 27719                           postinc2	equ	0xFDE
 27720                           postdec2	equ	0xFDD
 27721                           plusw2	equ	0xFDB
 27722                           fsr2h	equ	0xFDA
 27723                           fsr2l	equ	0xFD9
 27724                           status	equ	0xFD8
 27725                           
 27726 ;; *************** function _USART_mySetLineCodingHandler *****************
 27727 ;; Defined at:
 27728 ;;		line 256 in file "../Includes/Board/USBapp.c"
 27729 ;; Parameters:    Size  Location     Type
 27730 ;;		None
 27731 ;; Auto vars:     Size  Location     Type
 27732 ;;  dwBaud          4   13[COMRAM] unsigned long 
 27733 ;; Return value:  Size  Location     Type
 27734 ;;		None               void
 27735 ;; Registers used:
 27736 ;;		wreg, status,2, status,0, cstack
 27737 ;; Tracked objects:
 27738 ;;		On entry : 0/0
 27739 ;;		On exit  : 0/0
 27740 ;;		Unchanged: 0/0
 27741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27742 ;;      Params:         0       0       0       0       0       0       0       0       0
 27743 ;;      Locals:         4       0       0       0       0       0       0       0       0
 27744 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27745 ;;      Totals:         4       0       0       0       0       0       0       0       0
 27746 ;;Total ram usage:        4 bytes
 27747 ;; Hardware stack levels used:    1
 27748 ;; Hardware stack levels required when called:    1
 27749 ;; This function calls:
 27750 ;;		___lldiv
 27751 ;;		i2_EUSART_Initialize
 27752 ;; This function is called by:
 27753 ;;		_USBCheckCDCRequest
 27754 ;;		_USBCtrlTrfRxService
 27755 ;;		_USBCtrlTrfInHandler
 27756 ;; This function uses a non-reentrant model
 27757 ;;
 27758                           
 27759                           	psect	text116
 27760  00511E                     __ptext116:
 27761                           	opt stack 0
 27762  00511E                     _USART_mySetLineCodingHandler:
 27763                           	opt stack 14
 27764                           
 27765                           ;USBapp.c: 259: {line_coding.dwDTERate=cdc_notice.GetLineCoding.dwDTERate;};
 27766                           
 27767                           ; BSR set to: 0
 27768                           ;incstack = 0
 27769  00511E  C1D4  F0B7         	movff	_cdc_notice,_line_coding
 27770  005122  C1D5  F0B8         	movff	_cdc_notice+1,_line_coding+1
 27771  005126  C1D6  F0B9         	movff	_cdc_notice+2,_line_coding+2
 27772  00512A  C1D7  F0BA         	movff	_cdc_notice+3,_line_coding+3
 27773                           
 27774                           ;USBapp.c: 261: uint32_t dwBaud;
 27775                           ;USBapp.c: 262: dwBaud = ((48000000/4) / line_coding.dwDTERate) - 1;
 27776  00512E  0E00               	movlw	0
 27777  005130  6E2E               	movwf	___lldiv@dividend,c
 27778  005132  0E1B               	movlw	27
 27779  005134  6E2F               	movwf	___lldiv@dividend+1,c
 27780  005136  0EB7               	movlw	183
 27781  005138  6E30               	movwf	___lldiv@dividend+2,c
 27782  00513A  0E00               	movlw	0
 27783  00513C  6E31               	movwf	___lldiv@dividend+3,c
 27784  00513E  C0B7  F032         	movff	_line_coding,___lldiv@divisor
 27785  005142  C0B8  F033         	movff	_line_coding+1,___lldiv@divisor+1
 27786  005146  C0B9  F034         	movff	_line_coding+2,___lldiv@divisor+2
 27787  00514A  C0BA  F035         	movff	_line_coding+3,___lldiv@divisor+3
 27788  00514E  ECAA  F025         	call	___lldiv	;wreg free
 27789  005152  0EFF               	movlw	255
 27790  005154  242E               	addwf	?___lldiv,w,c
 27791  005156  6E3B               	movwf	USART_mySetLineCodingHandler@dwBaud,c
 27792  005158  0EFF               	movlw	255
 27793  00515A  202F               	addwfc	?___lldiv+1,w,c
 27794  00515C  6E3C               	movwf	USART_mySetLineCodingHandler@dwBaud+1,c
 27795  00515E  0EFF               	movlw	255
 27796  005160  2030               	addwfc	?___lldiv+2,w,c
 27797  005162  6E3D               	movwf	USART_mySetLineCodingHandler@dwBaud+2,c
 27798  005164  0EFF               	movlw	255
 27799  005166  2031               	addwfc	?___lldiv+3,w,c
 27800  005168  6E3E               	movwf	USART_mySetLineCodingHandler@dwBaud+3,c
 27801                           
 27802                           ;USBapp.c: 263: SPBRG = (uint8_t) dwBaud;
 27803  00516A  C03B  FFAF         	movff	USART_mySetLineCodingHandler@dwBaud,4015	;volatile
 27804                           
 27805                           ;USBapp.c: 264: SPBRGH = (uint8_t)((uint16_t) (dwBaud >> 8));
 27806  00516E  C03C  FFB0         	movff	USART_mySetLineCodingHandler@dwBaud+1,4016	;volatile
 27807                           
 27808                           ;USBapp.c: 266: EUSART_Initialize();
 27809  005172  EC38  F02A         	call	i2_EUSART_Initialize	;wreg free
 27810  005176  0012               	return		;funcret
 27811  005178                     __end_of_USART_mySetLineCodingHandler:
 27812                           	opt stack 0
 27813                           tosu	equ	0xFFF
 27814                           tosh	equ	0xFFE
 27815                           tosl	equ	0xFFD
 27816                           pclatu	equ	0xFFB
 27817                           pclath	equ	0xFFA
 27818                           tblptru	equ	0xFF8
 27819                           tblptrh	equ	0xFF7
 27820                           tblptrl	equ	0xFF6
 27821                           tablat	equ	0xFF5
 27822                           prodh	equ	0xFF4
 27823                           prodl	equ	0xFF3
 27824                           intcon	equ	0xFF2
 27825                           indf0	equ	0xFEF
 27826                           postinc0	equ	0xFEE
 27827                           fsr0h	equ	0xFEA
 27828                           fsr0l	equ	0xFE9
 27829                           wreg	equ	0xFE8
 27830                           indf1	equ	0xFE7
 27831                           postdec1	equ	0xFE5
 27832                           fsr1h	equ	0xFE2
 27833                           fsr1l	equ	0xFE1
 27834                           indf2	equ	0xFDF
 27835                           postinc2	equ	0xFDE
 27836                           postdec2	equ	0xFDD
 27837                           plusw2	equ	0xFDB
 27838                           fsr2h	equ	0xFDA
 27839                           fsr2l	equ	0xFD9
 27840                           status	equ	0xFD8
 27841                           
 27842 ;; *************** function i2_EUSART_Initialize *****************
 27843 ;; Defined at:
 27844 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 27845 ;; Parameters:    Size  Location     Type
 27846 ;;		None
 27847 ;; Auto vars:     Size  Location     Type
 27848 ;;		None
 27849 ;; Return value:  Size  Location     Type
 27850 ;;		None               void
 27851 ;; Registers used:
 27852 ;;		wreg, status,2
 27853 ;; Tracked objects:
 27854 ;;		On entry : 0/0
 27855 ;;		On exit  : 0/0
 27856 ;;		Unchanged: 0/0
 27857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27858 ;;      Params:         0       0       0       0       0       0       0       0       0
 27859 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27860 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27861 ;;      Totals:         0       0       0       0       0       0       0       0       0
 27862 ;;Total ram usage:        0 bytes
 27863 ;; Hardware stack levels used:    1
 27864 ;; This function calls:
 27865 ;;		Nothing
 27866 ;; This function is called by:
 27867 ;;		_USBapp_CdcEmulatorInitialize
 27868 ;;		_USART_mySetLineCodingHandler
 27869 ;; This function uses a non-reentrant model
 27870 ;;
 27871                           
 27872                           	psect	text117
 27873  005470                     __ptext117:
 27874                           	opt stack 0
 27875  005470                     i2_EUSART_Initialize:
 27876                           	opt stack 16
 27877                           
 27878                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 27879                           
 27880                           ;incstack = 0
 27881  005470  9A9D               	bcf	3997,5,c	;volatile
 27882                           
 27883                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 27884  005472  989D               	bcf	3997,4,c	;volatile
 27885                           
 27886                           ;eusart.c: 85: BAUDCON = 0x48;
 27887  005474  0E48               	movlw	72
 27888  005476  6EB8               	movwf	4024,c	;volatile
 27889                           
 27890                           ;eusart.c: 88: RCSTA = 0x90;
 27891  005478  0E90               	movlw	144
 27892  00547A  6EAB               	movwf	4011,c	;volatile
 27893                           
 27894                           ;eusart.c: 91: TXSTA = 0x26;
 27895  00547C  0E26               	movlw	38
 27896  00547E  6EAC               	movwf	4012,c	;volatile
 27897                           
 27898                           ;eusart.c: 94: SPBRG = 0xD0;
 27899  005480  0ED0               	movlw	208
 27900  005482  6EAF               	movwf	4015,c	;volatile
 27901                           
 27902                           ;eusart.c: 99: SPBRGH = 0x00;
 27903  005484  0E00               	movlw	0
 27904  005486  6EB0               	movwf	4016,c	;volatile
 27905                           
 27906                           ;eusart.c: 103: eusartTxHead = 0;
 27907  005488  0E00               	movlw	0
 27908  00548A  6E28               	movwf	_eusartTxHead,c
 27909                           
 27910                           ;eusart.c: 104: eusartTxTail = 0;
 27911  00548C  0E00               	movlw	0
 27912  00548E  0100               	movlb	0	; () banked
 27913  005490  6FA6               	movwf	_eusartTxTail& (0+255),b
 27914                           
 27915                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 27916  005492  0E40               	movlw	64
 27917  005494  6E27               	movwf	_eusartTxBufferRemaining,c	;volatile
 27918                           
 27919                           ;eusart.c: 107: eusartRxHead = 0;
 27920  005496  0E00               	movlw	0
 27921  005498  0100               	movlb	0	; () banked
 27922  00549A  6FA4               	movwf	_eusartRxHead& (0+255),b
 27923                           
 27924                           ;eusart.c: 108: eusartRxTail = 0;
 27925  00549C  0E00               	movlw	0
 27926  00549E  0100               	movlb	0	; () banked
 27927  0054A0  6FA5               	movwf	_eusartRxTail& (0+255),b
 27928                           
 27929                           ;eusart.c: 109: eusartRxCount = 0;
 27930  0054A2  0E00               	movlw	0
 27931  0054A4  6E26               	movwf	_eusartRxCount,c	;volatile
 27932                           
 27933                           ; BSR set to: 0
 27934                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 27935  0054A6  8A9D               	bsf	3997,5,c	;volatile
 27936                           
 27937                           ; BSR set to: 0
 27938                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 27939  0054A8  88AB               	bsf	4011,4,c	;volatile
 27940                           
 27941                           ; BSR set to: 0
 27942  0054AA  0012               	return		;funcret
 27943  0054AC                     __end_ofi2_EUSART_Initialize:
 27944                           	opt stack 0
 27945                           tosu	equ	0xFFF
 27946                           tosh	equ	0xFFE
 27947                           tosl	equ	0xFFD
 27948                           pclatu	equ	0xFFB
 27949                           pclath	equ	0xFFA
 27950                           tblptru	equ	0xFF8
 27951                           tblptrh	equ	0xFF7
 27952                           tblptrl	equ	0xFF6
 27953                           tablat	equ	0xFF5
 27954                           prodh	equ	0xFF4
 27955                           prodl	equ	0xFF3
 27956                           intcon	equ	0xFF2
 27957                           indf0	equ	0xFEF
 27958                           postinc0	equ	0xFEE
 27959                           fsr0h	equ	0xFEA
 27960                           fsr0l	equ	0xFE9
 27961                           wreg	equ	0xFE8
 27962                           indf1	equ	0xFE7
 27963                           postdec1	equ	0xFE5
 27964                           fsr1h	equ	0xFE2
 27965                           fsr1l	equ	0xFE1
 27966                           indf2	equ	0xFDF
 27967                           postinc2	equ	0xFDE
 27968                           postdec2	equ	0xFDD
 27969                           plusw2	equ	0xFDB
 27970                           fsr2h	equ	0xFDA
 27971                           fsr2l	equ	0xFD9
 27972                           status	equ	0xFD8
 27973                           
 27974 ;; *************** function ___lldiv *****************
 27975 ;; Defined at:
 27976 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 27977 ;; Parameters:    Size  Location     Type
 27978 ;;  dividend        4    0[COMRAM] unsigned long 
 27979 ;;  divisor         4    4[COMRAM] unsigned long 
 27980 ;; Auto vars:     Size  Location     Type
 27981 ;;  quotient        4    8[COMRAM] unsigned long 
 27982 ;;  counter         1   12[COMRAM] unsigned char 
 27983 ;; Return value:  Size  Location     Type
 27984 ;;                  4    0[COMRAM] unsigned long 
 27985 ;; Registers used:
 27986 ;;		wreg, status,2, status,0
 27987 ;; Tracked objects:
 27988 ;;		On entry : 0/0
 27989 ;;		On exit  : 0/0
 27990 ;;		Unchanged: 0/0
 27991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27992 ;;      Params:         8       0       0       0       0       0       0       0       0
 27993 ;;      Locals:         5       0       0       0       0       0       0       0       0
 27994 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27995 ;;      Totals:        13       0       0       0       0       0       0       0       0
 27996 ;;Total ram usage:       13 bytes
 27997 ;; Hardware stack levels used:    1
 27998 ;; This function calls:
 27999 ;;		Nothing
 28000 ;; This function is called by:
 28001 ;;		_USART_mySetLineCodingHandler
 28002 ;; This function uses a non-reentrant model
 28003 ;;
 28004                           
 28005                           	psect	text118
 28006  004B54                     __ptext118:
 28007                           	opt stack 0
 28008  004B54                     ___lldiv:
 28009                           	opt stack 14
 28010                           
 28011                           ; BSR set to: 0
 28012                           ;incstack = 0
 28013  004B54  0E00               	movlw	0
 28014  004B56  6E36               	movwf	___lldiv@quotient,c
 28015  004B58  0E00               	movlw	0
 28016  004B5A  6E37               	movwf	___lldiv@quotient+1,c
 28017  004B5C  0E00               	movlw	0
 28018  004B5E  6E38               	movwf	___lldiv@quotient+2,c
 28019  004B60  0E00               	movlw	0
 28020  004B62  6E39               	movwf	___lldiv@quotient+3,c
 28021  004B64  5032               	movf	___lldiv@divisor,w,c
 28022  004B66  1033               	iorwf	___lldiv@divisor+1,w,c
 28023  004B68  1034               	iorwf	___lldiv@divisor+2,w,c
 28024  004B6A  1035               	iorwf	___lldiv@divisor+3,w,c
 28025  004B6C  B4D8               	btfsc	status,2,c
 28026  004B6E  D02A               	goto	i2l2363
 28027  004B70  0E01               	movlw	1
 28028  004B72  6E3A               	movwf	___lldiv@counter,c
 28029  004B74  D006               	goto	i2l7042
 28030  004B76                     i2l7040:
 28031  004B76  90D8               	bcf	status,0,c
 28032  004B78  3632               	rlcf	___lldiv@divisor,f,c
 28033  004B7A  3633               	rlcf	___lldiv@divisor+1,f,c
 28034  004B7C  3634               	rlcf	___lldiv@divisor+2,f,c
 28035  004B7E  3635               	rlcf	___lldiv@divisor+3,f,c
 28036  004B80  2A3A               	incf	___lldiv@counter,f,c
 28037  004B82                     i2l7042:
 28038  004B82  AE35               	btfss	___lldiv@divisor+3,7,c
 28039  004B84  D7F8               	goto	i2l7040
 28040  004B86                     i2l7044:
 28041  004B86  90D8               	bcf	status,0,c
 28042  004B88  3636               	rlcf	___lldiv@quotient,f,c
 28043  004B8A  3637               	rlcf	___lldiv@quotient+1,f,c
 28044  004B8C  3638               	rlcf	___lldiv@quotient+2,f,c
 28045  004B8E  3639               	rlcf	___lldiv@quotient+3,f,c
 28046  004B90  5032               	movf	___lldiv@divisor,w,c
 28047  004B92  5C2E               	subwf	___lldiv@dividend,w,c
 28048  004B94  5033               	movf	___lldiv@divisor+1,w,c
 28049  004B96  582F               	subwfb	___lldiv@dividend+1,w,c
 28050  004B98  5034               	movf	___lldiv@divisor+2,w,c
 28051  004B9A  5830               	subwfb	___lldiv@dividend+2,w,c
 28052  004B9C  5035               	movf	___lldiv@divisor+3,w,c
 28053  004B9E  5831               	subwfb	___lldiv@dividend+3,w,c
 28054  004BA0  A0D8               	btfss	status,0,c
 28055  004BA2  D009               	goto	i2l7052
 28056  004BA4  5032               	movf	___lldiv@divisor,w,c
 28057  004BA6  5E2E               	subwf	___lldiv@dividend,f,c
 28058  004BA8  5033               	movf	___lldiv@divisor+1,w,c
 28059  004BAA  5A2F               	subwfb	___lldiv@dividend+1,f,c
 28060  004BAC  5034               	movf	___lldiv@divisor+2,w,c
 28061  004BAE  5A30               	subwfb	___lldiv@dividend+2,f,c
 28062  004BB0  5035               	movf	___lldiv@divisor+3,w,c
 28063  004BB2  5A31               	subwfb	___lldiv@dividend+3,f,c
 28064  004BB4  8036               	bsf	___lldiv@quotient,0,c
 28065  004BB6                     i2l7052:
 28066  004BB6  90D8               	bcf	status,0,c
 28067  004BB8  3235               	rrcf	___lldiv@divisor+3,f,c
 28068  004BBA  3234               	rrcf	___lldiv@divisor+2,f,c
 28069  004BBC  3233               	rrcf	___lldiv@divisor+1,f,c
 28070  004BBE  3232               	rrcf	___lldiv@divisor,f,c
 28071  004BC0  2E3A               	decfsz	___lldiv@counter,f,c
 28072  004BC2  D7E1               	goto	i2l7044
 28073  004BC4                     i2l2363:
 28074  004BC4  C036  F02E         	movff	___lldiv@quotient,?___lldiv
 28075  004BC8  C037  F02F         	movff	___lldiv@quotient+1,?___lldiv+1
 28076  004BCC  C038  F030         	movff	___lldiv@quotient+2,?___lldiv+2
 28077  004BD0  C039  F031         	movff	___lldiv@quotient+3,?___lldiv+3
 28078  004BD4  0012               	return		;funcret
 28079  004BD6                     __end_of___lldiv:
 28080                           	opt stack 0
 28081                           tosu	equ	0xFFF
 28082                           tosh	equ	0xFFE
 28083                           tosl	equ	0xFFD
 28084                           pclatu	equ	0xFFB
 28085                           pclath	equ	0xFFA
 28086                           tblptru	equ	0xFF8
 28087                           tblptrh	equ	0xFF7
 28088                           tblptrl	equ	0xFF6
 28089                           tablat	equ	0xFF5
 28090                           prodh	equ	0xFF4
 28091                           prodl	equ	0xFF3
 28092                           intcon	equ	0xFF2
 28093                           indf0	equ	0xFEF
 28094                           postinc0	equ	0xFEE
 28095                           fsr0h	equ	0xFEA
 28096                           fsr0l	equ	0xFE9
 28097                           wreg	equ	0xFE8
 28098                           indf1	equ	0xFE7
 28099                           postdec1	equ	0xFE5
 28100                           fsr1h	equ	0xFE2
 28101                           fsr1l	equ	0xFE1
 28102                           indf2	equ	0xFDF
 28103                           postinc2	equ	0xFDE
 28104                           postdec2	equ	0xFDD
 28105                           plusw2	equ	0xFDB
 28106                           fsr2h	equ	0xFDA
 28107                           fsr2l	equ	0xFD9
 28108                           status	equ	0xFD8
 28109                           
 28110 ;; *************** function _TMRapp_Tick *****************
 28111 ;; Defined at:
 28112 ;;		line 45 in file "../Includes/Drivers/TMRapp.c"
 28113 ;; Parameters:    Size  Location     Type
 28114 ;;		None
 28115 ;; Auto vars:     Size  Location     Type
 28116 ;;		None
 28117 ;; Return value:  Size  Location     Type
 28118 ;;		None               void
 28119 ;; Registers used:
 28120 ;;		None
 28121 ;; Tracked objects:
 28122 ;;		On entry : 0/0
 28123 ;;		On exit  : 0/0
 28124 ;;		Unchanged: 0/0
 28125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28126 ;;      Params:         0       0       0       0       0       0       0       0       0
 28127 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28128 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28129 ;;      Totals:         0       0       0       0       0       0       0       0       0
 28130 ;;Total ram usage:        0 bytes
 28131 ;; Hardware stack levels used:    1
 28132 ;; This function calls:
 28133 ;;		Nothing
 28134 ;; This function is called by:
 28135 ;;		_INTERRUPT_InterruptManager
 28136 ;; This function uses a non-reentrant model
 28137 ;;
 28138                           
 28139                           	psect	text119
 28140  0059BE                     __ptext119:
 28141                           	opt stack 0
 28142  0059BE                     _TMRapp_Tick:
 28143                           	opt stack 19
 28144                           
 28145                           ;TMRapp.c: 48: appTimer.mSecTick = 1;
 28146                           
 28147                           ;incstack = 0
 28148  0059BE  0100               	movlb	0	; () banked
 28149  0059C0  819C               	bsf	_appTimer& (0+255),0,b
 28150                           
 28151                           ; BSR set to: 0
 28152  0059C2  0012               	return		;funcret
 28153  0059C4                     __end_of_TMRapp_Tick:
 28154                           	opt stack 0
 28155                           tosu	equ	0xFFF
 28156                           tosh	equ	0xFFE
 28157                           tosl	equ	0xFFD
 28158                           pclatu	equ	0xFFB
 28159                           pclath	equ	0xFFA
 28160                           tblptru	equ	0xFF8
 28161                           tblptrh	equ	0xFF7
 28162                           tblptrl	equ	0xFF6
 28163                           tablat	equ	0xFF5
 28164                           prodh	equ	0xFF4
 28165                           prodl	equ	0xFF3
 28166                           intcon	equ	0xFF2
 28167                           indf0	equ	0xFEF
 28168                           postinc0	equ	0xFEE
 28169                           fsr0h	equ	0xFEA
 28170                           fsr0l	equ	0xFE9
 28171                           wreg	equ	0xFE8
 28172                           indf1	equ	0xFE7
 28173                           postdec1	equ	0xFE5
 28174                           fsr1h	equ	0xFE2
 28175                           fsr1l	equ	0xFE1
 28176                           indf2	equ	0xFDF
 28177                           postinc2	equ	0xFDE
 28178                           postdec2	equ	0xFDD
 28179                           plusw2	equ	0xFDB
 28180                           fsr2h	equ	0xFDA
 28181                           fsr2l	equ	0xFD9
 28182                           status	equ	0xFD8
 28183                           
 28184 ;; *************** function _TMR1_ISR *****************
 28185 ;; Defined at:
 28186 ;;		line 152 in file "../Includes/MccGenerated/tmr1.c"
 28187 ;; Parameters:    Size  Location     Type
 28188 ;;		None
 28189 ;; Auto vars:     Size  Location     Type
 28190 ;;		None
 28191 ;; Return value:  Size  Location     Type
 28192 ;;		None               void
 28193 ;; Registers used:
 28194 ;;		wreg, status,2
 28195 ;; Tracked objects:
 28196 ;;		On entry : 0/0
 28197 ;;		On exit  : 0/0
 28198 ;;		Unchanged: 0/0
 28199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28200 ;;      Params:         0       0       0       0       0       0       0       0       0
 28201 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28202 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28203 ;;      Totals:         0       0       0       0       0       0       0       0       0
 28204 ;;Total ram usage:        0 bytes
 28205 ;; Hardware stack levels used:    1
 28206 ;; This function calls:
 28207 ;;		Nothing
 28208 ;; This function is called by:
 28209 ;;		_INTERRUPT_InterruptManager
 28210 ;; This function uses a non-reentrant model
 28211 ;;
 28212                           
 28213                           	psect	text120
 28214  005962                     __ptext120:
 28215                           	opt stack 0
 28216  005962                     _TMR1_ISR:
 28217                           	opt stack 19
 28218                           
 28219                           ;tmr1.c: 156: PIR1bits.TMR1IF = 0;
 28220                           
 28221                           ; BSR set to: 0
 28222                           ;incstack = 0
 28223  005962  909E               	bcf	3998,0,c	;volatile
 28224                           
 28225                           ;tmr1.c: 158: TMR1H = (timer1ReloadVal >> 8);
 28226  005964  501C               	movf	_timer1ReloadVal+1,w,c	;volatile
 28227  005966  6ECF               	movwf	4047,c	;volatile
 28228                           
 28229                           ;tmr1.c: 159: TMR1L = timer1ReloadVal;
 28230  005968  C01B  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 28231  00596C  0012               	return		;funcret
 28232  00596E                     __end_of_TMR1_ISR:
 28233                           	opt stack 0
 28234                           tosu	equ	0xFFF
 28235                           tosh	equ	0xFFE
 28236                           tosl	equ	0xFFD
 28237                           pclatu	equ	0xFFB
 28238                           pclath	equ	0xFFA
 28239                           tblptru	equ	0xFF8
 28240                           tblptrh	equ	0xFF7
 28241                           tblptrl	equ	0xFF6
 28242                           tablat	equ	0xFF5
 28243                           prodh	equ	0xFF4
 28244                           prodl	equ	0xFF3
 28245                           intcon	equ	0xFF2
 28246                           indf0	equ	0xFEF
 28247                           postinc0	equ	0xFEE
 28248                           fsr0h	equ	0xFEA
 28249                           fsr0l	equ	0xFE9
 28250                           wreg	equ	0xFE8
 28251                           indf1	equ	0xFE7
 28252                           postdec1	equ	0xFE5
 28253                           fsr1h	equ	0xFE2
 28254                           fsr1l	equ	0xFE1
 28255                           indf2	equ	0xFDF
 28256                           postinc2	equ	0xFDE
 28257                           postdec2	equ	0xFDD
 28258                           plusw2	equ	0xFDB
 28259                           fsr2h	equ	0xFDA
 28260                           fsr2l	equ	0xFD9
 28261                           status	equ	0xFD8
 28262                           
 28263 ;; *************** function _EUSART_Transmit_ISR *****************
 28264 ;; Defined at:
 28265 ;;		line 162 in file "../Includes/MccGenerated/eusart.c"
 28266 ;; Parameters:    Size  Location     Type
 28267 ;;		None
 28268 ;; Auto vars:     Size  Location     Type
 28269 ;;		None
 28270 ;; Return value:  Size  Location     Type
 28271 ;;		None               void
 28272 ;; Registers used:
 28273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28274 ;; Tracked objects:
 28275 ;;		On entry : 0/0
 28276 ;;		On exit  : 0/0
 28277 ;;		Unchanged: 0/0
 28278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28279 ;;      Params:         0       0       0       0       0       0       0       0       0
 28280 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28281 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28282 ;;      Totals:         0       0       0       0       0       0       0       0       0
 28283 ;;Total ram usage:        0 bytes
 28284 ;; Hardware stack levels used:    1
 28285 ;; This function calls:
 28286 ;;		Nothing
 28287 ;; This function is called by:
 28288 ;;		_INTERRUPT_InterruptManager
 28289 ;; This function uses a non-reentrant model
 28290 ;;
 28291                           
 28292                           	psect	text121
 28293  005558                     __ptext121:
 28294                           	opt stack 0
 28295  005558                     _EUSART_Transmit_ISR:
 28296                           	opt stack 19
 28297                           
 28298                           ;eusart.c: 166: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 28299                           
 28300                           ;incstack = 0
 28301  005558  0E40               	movlw	64
 28302  00555A  6027               	cpfslt	_eusartTxBufferRemaining,c	;volatile
 28303  00555C  D016               	goto	i2l1122
 28304                           
 28305                           ;eusart.c: 167: {
 28306                           ;eusart.c: 168: TXREG = eusartTxBuffer[eusartTxTail++];
 28307  00555E  0100               	movlb	0	; () banked
 28308  005560  51A6               	movf	_eusartTxTail& (0+255),w,b
 28309  005562  0D01               	mullw	1
 28310  005564  0E40               	movlw	low _eusartTxBuffer
 28311  005566  24F3               	addwf	prodl,w,c
 28312  005568  6ED9               	movwf	fsr2l,c
 28313  00556A  0E02               	movlw	high _eusartTxBuffer
 28314  00556C  20F4               	addwfc	prodh,w,c
 28315  00556E  6EDA               	movwf	fsr2h,c
 28316  005570  50DF               	movf	indf2,w,c
 28317  005572  6EAD               	movwf	4013,c	;volatile
 28318                           
 28319                           ; BSR set to: 0
 28320  005574  0100               	movlb	0	; () banked
 28321  005576  2BA6               	incf	_eusartTxTail& (0+255),f,b
 28322                           
 28323                           ; BSR set to: 0
 28324                           ;eusart.c: 169: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 28325  005578  0E3F               	movlw	63
 28326  00557A  0100               	movlb	0	; () banked
 28327  00557C  65A6               	cpfsgt	_eusartTxTail& (0+255),b
 28328  00557E  D003               	goto	i2l10088
 28329                           
 28330                           ; BSR set to: 0
 28331                           ;eusart.c: 170: {
 28332                           ;eusart.c: 171: eusartTxTail = 0;
 28333  005580  0E00               	movlw	0
 28334  005582  0100               	movlb	0	; () banked
 28335  005584  6FA6               	movwf	_eusartTxTail& (0+255),b
 28336  005586                     i2l10088:
 28337                           
 28338                           ; BSR set to: 0
 28339                           ;eusart.c: 172: }
 28340                           ;eusart.c: 173: eusartTxBufferRemaining++;
 28341  005586  2A27               	incf	_eusartTxBufferRemaining,f,c	;volatile
 28342                           
 28343                           ;eusart.c: 174: }
 28344  005588  0012               	return	
 28345  00558A                     i2l1122:
 28346                           
 28347                           ;eusart.c: 175: else
 28348                           ;eusart.c: 176: {
 28349                           ;eusart.c: 177: PIE1bits.TXIE = 0;
 28350  00558A  989D               	bcf	3997,4,c	;volatile
 28351  00558C  0012               	return	
 28352  00558E                     __end_of_EUSART_Transmit_ISR:
 28353                           	opt stack 0
 28354                           tosu	equ	0xFFF
 28355                           tosh	equ	0xFFE
 28356                           tosl	equ	0xFFD
 28357                           pclatu	equ	0xFFB
 28358                           pclath	equ	0xFFA
 28359                           tblptru	equ	0xFF8
 28360                           tblptrh	equ	0xFF7
 28361                           tblptrl	equ	0xFF6
 28362                           tablat	equ	0xFF5
 28363                           prodh	equ	0xFF4
 28364                           prodl	equ	0xFF3
 28365                           intcon	equ	0xFF2
 28366                           indf0	equ	0xFEF
 28367                           postinc0	equ	0xFEE
 28368                           fsr0h	equ	0xFEA
 28369                           fsr0l	equ	0xFE9
 28370                           wreg	equ	0xFE8
 28371                           indf1	equ	0xFE7
 28372                           postdec1	equ	0xFE5
 28373                           fsr1h	equ	0xFE2
 28374                           fsr1l	equ	0xFE1
 28375                           indf2	equ	0xFDF
 28376                           postinc2	equ	0xFDE
 28377                           postdec2	equ	0xFDD
 28378                           plusw2	equ	0xFDB
 28379                           fsr2h	equ	0xFDA
 28380                           fsr2l	equ	0xFD9
 28381                           status	equ	0xFD8
 28382                           
 28383 ;; *************** function _EUSART_Receive_ISR *****************
 28384 ;; Defined at:
 28385 ;;		line 181 in file "../Includes/MccGenerated/eusart.c"
 28386 ;; Parameters:    Size  Location     Type
 28387 ;;		None
 28388 ;; Auto vars:     Size  Location     Type
 28389 ;;		None
 28390 ;; Return value:  Size  Location     Type
 28391 ;;		None               void
 28392 ;; Registers used:
 28393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28394 ;; Tracked objects:
 28395 ;;		On entry : 0/0
 28396 ;;		On exit  : 0/0
 28397 ;;		Unchanged: 0/0
 28398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28399 ;;      Params:         0       0       0       0       0       0       0       0       0
 28400 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28401 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28402 ;;      Totals:         0       0       0       0       0       0       0       0       0
 28403 ;;Total ram usage:        0 bytes
 28404 ;; Hardware stack levels used:    1
 28405 ;; This function calls:
 28406 ;;		Nothing
 28407 ;; This function is called by:
 28408 ;;		_INTERRUPT_InterruptManager
 28409 ;; This function uses a non-reentrant model
 28410 ;;
 28411                           
 28412                           	psect	text122
 28413  00558E                     __ptext122:
 28414                           	opt stack 0
 28415  00558E                     _EUSART_Receive_ISR:
 28416                           	opt stack 19
 28417                           
 28418                           ;eusart.c: 183: if(1 == RCSTAbits.OERR)
 28419                           
 28420                           ;incstack = 0
 28421  00558E  A2AB               	btfss	4011,1,c	;volatile
 28422  005590  D003               	goto	i2l10094
 28423                           
 28424                           ;eusart.c: 184: {
 28425                           ;eusart.c: 187: RCSTAbits.CREN = 0;
 28426  005592  98AB               	bcf	4011,4,c	;volatile
 28427                           
 28428                           ;eusart.c: 188: RCSTAbits.CREN = 1;
 28429  005594  88AB               	bsf	4011,4,c	;volatile
 28430                           
 28431                           ;eusart.c: 189: }
 28432  005596  0012               	return	
 28433  005598                     i2l10094:
 28434                           
 28435                           ;eusart.c: 190: else
 28436                           ;eusart.c: 191: {
 28437                           ;eusart.c: 193: eusartRxBuffer[eusartRxHead++] = RCREG;
 28438  005598  0100               	movlb	0	; () banked
 28439  00559A  51A4               	movf	_eusartRxHead& (0+255),w,b
 28440  00559C  0D01               	mullw	1
 28441  00559E  0E00               	movlw	low _eusartRxBuffer
 28442  0055A0  24F3               	addwf	prodl,w,c
 28443  0055A2  6ED9               	movwf	fsr2l,c
 28444  0055A4  0E02               	movlw	high _eusartRxBuffer
 28445  0055A6  20F4               	addwfc	prodh,w,c
 28446  0055A8  6EDA               	movwf	fsr2h,c
 28447  0055AA  CFAE FFDF          	movff	4014,indf2	;volatile
 28448                           
 28449                           ; BSR set to: 0
 28450  0055AE  0100               	movlb	0	; () banked
 28451  0055B0  2BA4               	incf	_eusartRxHead& (0+255),f,b
 28452                           
 28453                           ; BSR set to: 0
 28454                           ;eusart.c: 194: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 28455  0055B2  0E3F               	movlw	63
 28456  0055B4  0100               	movlb	0	; () banked
 28457  0055B6  65A4               	cpfsgt	_eusartRxHead& (0+255),b
 28458  0055B8  D003               	goto	i2l10102
 28459                           
 28460                           ; BSR set to: 0
 28461                           ;eusart.c: 195: {
 28462                           ;eusart.c: 196: eusartRxHead = 0;
 28463  0055BA  0E00               	movlw	0
 28464  0055BC  0100               	movlb	0	; () banked
 28465  0055BE  6FA4               	movwf	_eusartRxHead& (0+255),b
 28466  0055C0                     i2l10102:
 28467                           
 28468                           ; BSR set to: 0
 28469                           ;eusart.c: 197: }
 28470                           ;eusart.c: 198: eusartRxCount++;
 28471  0055C0  2A26               	incf	_eusartRxCount,f,c	;volatile
 28472  0055C2  0012               	return	
 28473  0055C4                     __end_of_EUSART_Receive_ISR:
 28474                           	opt stack 0
 28475                           tosu	equ	0xFFF
 28476                           tosh	equ	0xFFE
 28477                           tosl	equ	0xFFD
 28478                           pclatu	equ	0xFFB
 28479                           pclath	equ	0xFFA
 28480                           tblptru	equ	0xFF8
 28481                           tblptrh	equ	0xFF7
 28482                           tblptrl	equ	0xFF6
 28483                           tablat	equ	0xFF5
 28484                           prodh	equ	0xFF4
 28485                           prodl	equ	0xFF3
 28486                           intcon	equ	0xFF2
 28487                           indf0	equ	0xFEF
 28488                           postinc0	equ	0xFEE
 28489                           fsr0h	equ	0xFEA
 28490                           fsr0l	equ	0xFE9
 28491                           wreg	equ	0xFE8
 28492                           indf1	equ	0xFE7
 28493                           postdec1	equ	0xFE5
 28494                           fsr1h	equ	0xFE2
 28495                           fsr1l	equ	0xFE1
 28496                           indf2	equ	0xFDF
 28497                           postinc2	equ	0xFDE
 28498                           postdec2	equ	0xFDD
 28499                           plusw2	equ	0xFDB
 28500                           fsr2h	equ	0xFDA
 28501                           fsr2l	equ	0xFD9
 28502                           status	equ	0xFD8
 28503                           
 28504 ;; *************** function _CMP1_ISR *****************
 28505 ;; Defined at:
 28506 ;;		line 95 in file "../Includes/MccGenerated/cmp1.c"
 28507 ;; Parameters:    Size  Location     Type
 28508 ;;		None
 28509 ;; Auto vars:     Size  Location     Type
 28510 ;;		None
 28511 ;; Return value:  Size  Location     Type
 28512 ;;		None               void
 28513 ;; Registers used:
 28514 ;;		None
 28515 ;; Tracked objects:
 28516 ;;		On entry : 0/0
 28517 ;;		On exit  : 0/0
 28518 ;;		Unchanged: 0/0
 28519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28520 ;;      Params:         0       0       0       0       0       0       0       0       0
 28521 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28522 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28523 ;;      Totals:         0       0       0       0       0       0       0       0       0
 28524 ;;Total ram usage:        0 bytes
 28525 ;; Hardware stack levels used:    1
 28526 ;; This function calls:
 28527 ;;		Nothing
 28528 ;; This function is called by:
 28529 ;;		_INTERRUPT_InterruptManager
 28530 ;; This function uses a non-reentrant model
 28531 ;;
 28532                           
 28533                           	psect	text123
 28534  0059D0                     __ptext123:
 28535                           	opt stack 0
 28536  0059D0                     _CMP1_ISR:
 28537                           	opt stack 19
 28538                           
 28539                           ;cmp1.c: 98: PIR2bits.C1IF = 0;
 28540                           
 28541                           ;incstack = 0
 28542  0059D0  9CA1               	bcf	4001,6,c	;volatile
 28543  0059D2  0012               	return		;funcret
 28544  0059D4                     __end_of_CMP1_ISR:
 28545                           	opt stack 0
 28546                           tosu	equ	0xFFF
 28547                           tosh	equ	0xFFE
 28548                           tosl	equ	0xFFD
 28549                           pclatu	equ	0xFFB
 28550                           pclath	equ	0xFFA
 28551                           tblptru	equ	0xFF8
 28552                           tblptrh	equ	0xFF7
 28553                           tblptrl	equ	0xFF6
 28554                           tablat	equ	0xFF5
 28555                           prodh	equ	0xFF4
 28556                           prodl	equ	0xFF3
 28557                           intcon	equ	0xFF2
 28558                           indf0	equ	0xFEF
 28559                           postinc0	equ	0xFEE
 28560                           fsr0h	equ	0xFEA
 28561                           fsr0l	equ	0xFE9
 28562                           wreg	equ	0xFE8
 28563                           indf1	equ	0xFE7
 28564                           postdec1	equ	0xFE5
 28565                           fsr1h	equ	0xFE2
 28566                           fsr1l	equ	0xFE1
 28567                           indf2	equ	0xFDF
 28568                           postinc2	equ	0xFDE
 28569                           postdec2	equ	0xFDD
 28570                           plusw2	equ	0xFDB
 28571                           fsr2h	equ	0xFDA
 28572                           fsr2l	equ	0xFD9
 28573                           status	equ	0xFD8
 28574                           tosu	equ	0xFFF
 28575                           tosh	equ	0xFFE
 28576                           tosl	equ	0xFFD
 28577                           pclatu	equ	0xFFB
 28578                           pclath	equ	0xFFA
 28579                           tblptru	equ	0xFF8
 28580                           tblptrh	equ	0xFF7
 28581                           tblptrl	equ	0xFF6
 28582                           tablat	equ	0xFF5
 28583                           prodh	equ	0xFF4
 28584                           prodl	equ	0xFF3
 28585                           intcon	equ	0xFF2
 28586                           indf0	equ	0xFEF
 28587                           postinc0	equ	0xFEE
 28588                           fsr0h	equ	0xFEA
 28589                           fsr0l	equ	0xFE9
 28590                           wreg	equ	0xFE8
 28591                           indf1	equ	0xFE7
 28592                           postdec1	equ	0xFE5
 28593                           fsr1h	equ	0xFE2
 28594                           fsr1l	equ	0xFE1
 28595                           indf2	equ	0xFDF
 28596                           postinc2	equ	0xFDE
 28597                           postdec2	equ	0xFDD
 28598                           plusw2	equ	0xFDB
 28599                           fsr2h	equ	0xFDA
 28600                           fsr2l	equ	0xFD9
 28601                           status	equ	0xFD8
 28602                           
 28603                           	psect	text124
 28604  000000                     __ptext124:
 28605                           	opt stack 0
 28606                           tosu	equ	0xFFF
 28607                           tosh	equ	0xFFE
 28608                           tosl	equ	0xFFD
 28609                           pclatu	equ	0xFFB
 28610                           pclath	equ	0xFFA
 28611                           tblptru	equ	0xFF8
 28612                           tblptrh	equ	0xFF7
 28613                           tblptrl	equ	0xFF6
 28614                           tablat	equ	0xFF5
 28615                           prodh	equ	0xFF4
 28616                           prodl	equ	0xFF3
 28617                           intcon	equ	0xFF2
 28618                           indf0	equ	0xFEF
 28619                           postinc0	equ	0xFEE
 28620                           fsr0h	equ	0xFEA
 28621                           fsr0l	equ	0xFE9
 28622                           wreg	equ	0xFE8
 28623                           indf1	equ	0xFE7
 28624                           postdec1	equ	0xFE5
 28625                           fsr1h	equ	0xFE2
 28626                           fsr1l	equ	0xFE1
 28627                           indf2	equ	0xFDF
 28628                           postinc2	equ	0xFDE
 28629                           postdec2	equ	0xFDD
 28630                           plusw2	equ	0xFDB
 28631                           fsr2h	equ	0xFDA
 28632                           fsr2l	equ	0xFD9
 28633                           status	equ	0xFD8
 28634                           
 28635                           	psect	rparam
 28636  0000                     tosu	equ	0xFFF
 28637                           tosh	equ	0xFFE
 28638                           tosl	equ	0xFFD
 28639                           pclatu	equ	0xFFB
 28640                           pclath	equ	0xFFA
 28641                           tblptru	equ	0xFF8
 28642                           tblptrh	equ	0xFF7
 28643                           tblptrl	equ	0xFF6
 28644                           tablat	equ	0xFF5
 28645                           prodh	equ	0xFF4
 28646                           prodl	equ	0xFF3
 28647                           intcon	equ	0xFF2
 28648                           indf0	equ	0xFEF
 28649                           postinc0	equ	0xFEE
 28650                           fsr0h	equ	0xFEA
 28651                           fsr0l	equ	0xFE9
 28652                           wreg	equ	0xFE8
 28653                           indf1	equ	0xFE7
 28654                           postdec1	equ	0xFE5
 28655                           fsr1h	equ	0xFE2
 28656                           fsr1l	equ	0xFE1
 28657                           indf2	equ	0xFDF
 28658                           postinc2	equ	0xFDE
 28659                           postdec2	equ	0xFDD
 28660                           plusw2	equ	0xFDB
 28661                           fsr2h	equ	0xFDA
 28662                           fsr2l	equ	0xFD9
 28663                           status	equ	0xFD8
 28664                           
 28665                           	psect	temp
 28666  00005B                     btemp:
 28667                           	opt stack 0
 28668  00005B                     	ds	1
 28669  0000                     int$flags	set	btemp
 28670                           tosu	equ	0xFFF
 28671                           tosh	equ	0xFFE
 28672                           tosl	equ	0xFFD
 28673                           pclatu	equ	0xFFB
 28674                           pclath	equ	0xFFA
 28675                           tblptru	equ	0xFF8
 28676                           tblptrh	equ	0xFF7
 28677                           tblptrl	equ	0xFF6
 28678                           tablat	equ	0xFF5
 28679                           prodh	equ	0xFF4
 28680                           prodl	equ	0xFF3
 28681                           intcon	equ	0xFF2
 28682                           indf0	equ	0xFEF
 28683                           postinc0	equ	0xFEE
 28684                           fsr0h	equ	0xFEA
 28685                           fsr0l	equ	0xFE9
 28686                           wreg	equ	0xFE8
 28687                           indf1	equ	0xFE7
 28688                           postdec1	equ	0xFE5
 28689                           fsr1h	equ	0xFE2
 28690                           fsr1l	equ	0xFE1
 28691                           indf2	equ	0xFDF
 28692                           postinc2	equ	0xFDE
 28693                           postdec2	equ	0xFDD
 28694                           plusw2	equ	0xFDB
 28695                           fsr2h	equ	0xFDA
 28696                           fsr2l	equ	0xFD9
 28697                           status	equ	0xFD8


Data Sizes:
    Strings     1714
    Constant    969
    Data        11
    BSS         534
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      90
    BANK0           160     45     155
    BANK1           256      9     239
    BANK2           256      0     160
    BANK3           256      0       0
    BANK4           192      0       0
    BANK5           128      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_141(CODE[7]), STR_139(CODE[7]), STR_136(CODE[7]), STR_97(CODE[7]), 
		 -> STR_95(CODE[7]), STR_93(CODE[7]), STR_90(CODE[7]), STR_34(CODE[5]), 
		 -> STR_30(CODE[5]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_135(CODE[3]), STR_89(CODE[3]), STR_68(CODE[14]), STR_66(CODE[11]), 
		 -> STR_62(CODE[7]), STR_59(CODE[9]), STR_58(CODE[11]), STR_56(CODE[14]), 
		 -> STR_53(CODE[14]), STR_52(CODE[3]), STR_48(CODE[9]), STR_44(CODE[14]), 
		 -> STR_43(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK1[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK1[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S5516_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S5516_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S5516_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S5516_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    S4229$pFunc	PTR FTN()void  size(2) Largest target is 0
		 -> USART_mySetLineCodingHandler(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0
		 -> USART_mySetLineCodingHandler(), 

    S4219$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S4219$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4195$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4195$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4195$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4195$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    oled_putString@string	PTR const unsigned char  size(2) Largest target is 32
		 -> oled_putUint16@numData(BANK0[6]), oled_putUint8@numData(BANK0[6]), STR_202(CODE[12]), STR_201(CODE[8]), 
		 -> STR_200(CODE[9]), STR_199(CODE[17]), STR_198(CODE[17]), STR_197(CODE[17]), 
		 -> STR_196(CODE[17]), STR_195(CODE[17]), STR_194(CODE[17]), STR_177(CODE[16]), 
		 -> STR_176(CODE[17]), STR_175(CODE[17]), STR_174(CODE[4]), STR_173(CODE[4]), 
		 -> STR_172(CODE[4]), STR_171(CODE[4]), STR_170(CODE[4]), STR_169(CODE[4]), 
		 -> STR_168(CODE[4]), STR_167(CODE[4]), STR_166(CODE[4]), STR_165(CODE[16]), 
		 -> STR_164(CODE[17]), STR_163(CODE[4]), STR_162(CODE[4]), STR_161(CODE[4]), 
		 -> STR_160(CODE[4]), STR_159(CODE[4]), STR_158(CODE[4]), STR_157(CODE[4]), 
		 -> STR_156(CODE[4]), STR_155(CODE[4]), STR_154(CODE[4]), STR_153(CODE[4]), 
		 -> STR_152(CODE[4]), STR_151(CODE[4]), STR_150(CODE[4]), STR_149(CODE[4]), 
		 -> STR_148(CODE[16]), STR_147(CODE[12]), STR_146(CODE[17]), STR_145(CODE[16]), 
		 -> STR_144(CODE[16]), STR_143(CODE[16]), STR_142(CODE[18]), STR_140(CODE[18]), 
		 -> STR_138(CODE[17]), STR_137(CODE[17]), STR_132(CODE[16]), STR_131(CODE[15]), 
		 -> STR_130(CODE[16]), STR_129(CODE[4]), STR_128(CODE[3]), STR_127(CODE[3]), 
		 -> STR_126(CODE[3]), STR_125(CODE[3]), STR_124(CODE[2]), STR_123(CODE[5]), 
		 -> STR_122(CODE[7]), STR_121(CODE[17]), STR_120(CODE[17]), STR_119(CODE[15]), 
		 -> STR_118(CODE[15]), STR_117(CODE[16]), STR_116(CODE[17]), STR_115(CODE[16]), 
		 -> STR_114(CODE[16]), STR_113(CODE[15]), STR_112(CODE[15]), STR_111(CODE[17]), 
		 -> STR_110(CODE[16]), STR_109(CODE[17]), STR_108(CODE[17]), STR_107(CODE[7]), 
		 -> STR_106(CODE[10]), STR_105(CODE[17]), STR_104(CODE[16]), STR_103(CODE[16]), 
		 -> STR_102(CODE[16]), STR_101(CODE[16]), STR_100(CODE[17]), STR_99(CODE[17]), 
		 -> STR_98(CODE[16]), STR_96(CODE[18]), STR_94(CODE[17]), STR_92(CODE[17]), 
		 -> STR_91(CODE[17]), responseData(BANK1[32]), responsePortNum(BANK0[3]), STR_88(CODE[12]), 
		 -> STR_87(CODE[13]), STR_86(CODE[12]), STR_83(CODE[18]), STR_82(CODE[13]), 
		 -> STR_81(CODE[17]), STR_80(CODE[16]), STR_79(CODE[17]), STR_78(CODE[17]), 
		 -> STR_77(CODE[16]), STR_76(CODE[17]), STR_75(CODE[17]), STR_73(CODE[16]), 
		 -> STR_72(CODE[13]), STR_71(CODE[12]), STR_70(CODE[17]), STR_64(CODE[7]), 
		 -> STR_63(CODE[10]), STR_61(CODE[11]), STR_60(CODE[11]), STR_55(CODE[9]), 
		 -> STR_54(CODE[11]), STR_50(CODE[11]), STR_49(CODE[10]), STR_46(CODE[9]), 
		 -> STR_45(CODE[11]), STR_41(CODE[17]), STR_39(CODE[17]), STR_37(CODE[17]), 
		 -> STR_36(CODE[17]), STR_35(CODE[17]), STR_33(CODE[17]), STR_32(CODE[17]), 
		 -> STR_31(CODE[17]), STR_28(CODE[17]), STR_27(CODE[17]), STR_26(CODE[17]), 
		 -> STR_25(CODE[17]), STR_24(CODE[9]), STR_23(CODE[10]), STR_20(CODE[9]), 
		 -> STR_19(CODE[8]), STR_18(CODE[8]), STR_17(CODE[9]), STR_16(CODE[10]), 
		 -> STR_15(CODE[11]), STR_14(CODE[13]), STR_13(CODE[13]), STR_12(CODE[13]), 
		 -> STR_11(CODE[12]), STR_10(CODE[13]), STR_9(CODE[9]), STR_8(CODE[12]), 
		 -> STR_7(CODE[16]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[9]), 
		 -> STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    oled_setFont@font	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    selectedFont	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    sendDataCommand@appData	PTR unsigned char  size(2) Largest target is 16
		 -> dataBuffer(BANK1[16]), 

    sendDataCommand@string	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_85(CODE[12]), STR_84(CODE[14]), STR_74(CODE[14]), 

    sendCommand@string	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_193(CODE[26]), STR_192(CODE[26]), STR_191(CODE[26]), STR_190(CODE[26]), 
		 -> STR_189(CODE[3]), STR_188(CODE[9]), STR_187(CODE[15]), STR_186(CODE[13]), 
		 -> STR_185(CODE[13]), STR_184(CODE[13]), STR_183(CODE[13]), STR_182(CODE[13]), 
		 -> STR_181(CODE[13]), STR_180(CODE[13]), STR_179(CODE[13]), STR_178(CODE[16]), 
		 -> STR_134(CODE[14]), STR_133(CODE[16]), STR_69(CODE[11]), STR_67(CODE[11]), 
		 -> STR_65(CODE[14]), STR_57(CODE[14]), STR_51(CODE[10]), STR_47(CODE[13]), 
		 -> STR_42(CODE[14]), STR_40(CODE[13]), STR_38(CODE[10]), STR_29(CODE[10]), 
		 -> STR_22(CODE[20]), STR_21(CODE[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBapp_CdcEmulatorInitialize
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USART_mySetLineCodingHandler
    _USBCtrlTrfInHandler->_USART_mySetLineCodingHandler
    _USART_mySetLineCodingHandler->___lldiv

Critical Paths under _main in BANK0

    _main->_moteHandler
    _test_powerup->_test_adc
    _test_switch->_oled_putString
    _test_oled->_oled_putString
    _test_leds->_oled_putString
    _test_comms->_oled_putString
    _moteApp_toggleLeds->_sendCommand
    _test_adc->_oled_putUint16
    _moteHandler->_moteRunningProcess
    _moteRunningProcess->_oled_putUint16
    _sendDataCommand->_EUSART_Write
    _sendDataCommand->_hexToStr
    _oled_putUint8->_oled_putString
    _oled_putUint16->_oled_putString
    _moteApp_add8bToDataBuffer->___awmod
    _moteApp_add16bToDataBuffer->___lwdiv
    _oled_setDisplay->_oled_writeCommand
    _oled_devInit->_oled_writeCommand
    _oled_displayOff->_oled_writeCommand
    _moduleSleep->_sendCommand
    _moduleResync->_moteApp_delayms
    _MOTEapp_getModuleResponse->_EUSART_Read
    _MOTEapp_SetDataRateSetting->_sendCommand
    _ADC_TempConversion->___lwdiv
    _moteJoiningProcess->_oled_putString
    _TMRapp_Handler->___almod
    _moteApp_clearCommand->_sendCommand
    _sendCommand->_EUSART_Write
    _EndLine->_EUSART_Write
    _USBapp_Handler->_oled_putString
    _oled_putString->_oled_putChar
    _oled_clear->_oled_clearRow
    _oled_clearRow->_oled_putChar
    _oled_putChar->_Set_Column_Address
    _oled_putChar->_Set_Page_Address
    _oled_writeData->_SPI_Exchange8bit
    _Set_Page_Address->_oled_writeCommand
    _Set_Column_Address->_oled_writeCommand
    _oled_writeCommand->_SPI_Exchange8bit
    _USBapp_DeviceCdcEmulatorHandler->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceInit->_memset
    _SYSTEM_Initialize->_TMR1_Initialize

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_moteHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  849666
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
               _MOTEapp_handlerState
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                     _USBapp_Handler
                _USBapp_handlerState
                       _moduleResync
               _moteApp_clearCommand
                    _moteApp_delayms
                        _moteHandler
                         _oled_clear
                          _oled_init
                     _oled_putString
                       _test_powerup
 ---------------------------------------------------------------------------------
 (1) _test_powerup                                         0     0      0  387944
                    _moteApp_delayms
                         _oled_clear
                           _test_adc
                         _test_comms
                          _test_leds
                          _test_oled
                        _test_switch
 ---------------------------------------------------------------------------------
 (2) _test_switch                                          3     3      0   54298
                                             18 BANK0      3     3      0
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_oled                                            0     0      0   50038
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_leds                                            0     0      0   52903
                    _moteApp_delayms
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_comms                                           0     0      0   56243
                    _moteApp_delayms
                 _moteApp_toggleLeds
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_toggleLeds                                   2     2      0    3340
                                              3 BANK0      2     2      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (2) _test_adc                                             8     8      0  169079
                                             28 BANK0      6     6      0
                  _ADC_GetConversion
                 _ADC_TempConversion
                    _moteApp_delayms
                         _oled_clear
                       _oled_putChar
                     _oled_putString
                     _oled_putUint16
                      _oled_putUint8
 ---------------------------------------------------------------------------------
 (1) _moteHandler                                         11    11      0  338247
                                             43 BANK0      2     2      0
                                              0 BANK1      9     9      0
                  _ADC_GetConversion
                 _ADC_TempConversion
             _MOTEapp_TimerBasedTask
          _MOTEapp_getModuleResponse
               _TMRapp_ClearBitFlags
                     _TMRapp_Handler
                     _USBapp_exitCDC
                _USBapp_exitCDCState
                    _moteApp_delayms
                 _moteJoiningProcess
                 _moteRunningProcess
                         _oled_clear
                     _oled_putString
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _moteRunningProcess                                  15    12      3  212044
                                             28 BANK0     15    12      3
                  _ADC_GetConversion
                 _ADC_TempConversion
         _MOTEapp_SetDataRateSetting
                     _TMR2_ReadTimer
                            ___awdiv
                  _moteApp_GoToSleep
         _moteApp_add16bToDataBuffer
          _moteApp_add8bToDataBuffer
               _moteApp_clearBuffers
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
                     _oled_putUint16
                      _oled_putUint8
                        _sendCommand
                    _sendDataCommand
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _sendDataCommand                                      8     3      5    1667
                                              1 BANK0      8     3      5
                       _EUSART_Write
                            _EndLine
                           _hexToStr
 ---------------------------------------------------------------------------------
 (4) _hexToStr                                             1     1      0     189
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putUint8                                        9     7      2   52739
                                             18 BANK0      9     7      2
                            ___awmod
                            ___lbdiv
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _oled_putUint16                                      10     6      4   58254
                                             18 BANK0     10     6      4
                            ___lwdiv
                            ___lwmod
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_clearBuffers                                 4     4      0     396
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _moteApp_add8bToDataBuffer                            4     3      1    3008
                                              6 BANK0      4     3      1
                            ___awmod
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1     657
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1681
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _moteApp_add16bToDataBuffer                           5     2      3    6951
                                              7 BANK0      5     2      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) _moteApp_GoToSleep                                    1     1      0   16999
                                             15 BANK0      1     1      0
                 _EUSART_FlushBuffer
             _PIN_MANAGER_Initialize
                       _moduleResync
                        _moduleSleep
                    _moteApp_delayms
                    _oled_displayOff
                          _oled_init
 ---------------------------------------------------------------------------------
 (1) _oled_init                                            0     0      0    1614
                         _oled_clear
                       _oled_devInit
                    _oled_setDisplay
                       _oled_setFont
 ---------------------------------------------------------------------------------
 (2) _oled_setFont                                         2     0      2     166
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _oled_setDisplay                                      1     1      0     127
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (2) _oled_devInit                                         1     1      0      62
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _oled_displayOff                                      1     1      0      93
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _moduleSleep                                          1     1      0    3309
                                              3 BANK0      1     1      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _moduleResync                                         3     3      0    7711
                                              5 BANK0      3     3      0
          _MOTEapp_getModuleResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (5) _MOTEapp_getModuleResponse                            2     2      0     204
                                              1 BANK0      2     2      0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (4) _EUSART_FlushBuffer                                   1     1      0      99
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     653
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _TMR2_ReadTimer                                       1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_SetDataRateSetting                           2     2      0    3371
                                              3 BANK0      2     2      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _ADC_TempConversion                                   2     2      0    2594
                                              7 BANK0      2     2      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    2529
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _ADC_GetConversion                                    5     3      2      31
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _moteJoiningProcess                                   6     4      2   64201
                                             18 BANK0      6     4      2
                   _DATAEE_WriteByte
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
                        _sendCommand
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              9     3      6    3000
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    2837
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _moteApp_delayms                                      5     3      2    4124
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     3     2      1     304
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _USBapp_exitCDCState                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_exitCDC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMRapp_Handler                                       0     0      0    4201
                            ___almod
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4    3560
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     641
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (2) _TMRapp_ClearBitFlags                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MOTEapp_TimerBasedTask                               1     1      0     217
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _moteApp_clearCommand                                 0     0      0    3309
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _sendCommand                                          2     0      2    3309
                                              1 BANK0      2     0      2
                       _EUSART_Write
                            _EndLine
 ---------------------------------------------------------------------------------
 (5) _EndLine                                              0     0      0      62
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (1) _USBapp_handlerState                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USBapp_Handler                                       1     1      0   54921
                                             18 BANK0      1     1      0
    _USBapp_DeviceCdcEmulatorHandler
                         _oled_clear
                     _oled_putString
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _service_pushbutton                                   1     1      0      46
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putString                                       5     1      4   48779
                                             13 BANK0      5     1      4
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (3) _oled_clear                                           0     0      0    1259
                      _oled_clearRow
 ---------------------------------------------------------------------------------
 (4) _oled_clearRow                                        2     2      0    1259
                                             13 BANK0      2     2      0
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (4) _oled_putChar                                        10     8      2    1129
                                              3 BANK0     10     8      2
                 _Set_Column_Address
                   _Set_Page_Address
                     _oled_writeData
 ---------------------------------------------------------------------------------
 (5) _oled_writeData                                       1     1      0      62
                                              1 BANK0      1     1      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (5) _Set_Page_Address                                     1     1      0     127
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (5) _Set_Column_Address                                   1     1      0     124
                                              2 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (6) _oled_writeCommand                                    1     1      0      62
                                              1 BANK0      1     1      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (6) _SPI_Exchange8bit                                     1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_DeviceCdcEmulatorHandler                      1     1      0    4800
                                             13 BANK0      1     1      0
                       _CDCTxService
                        _EUSART_Read
                       _EUSART_Write
           _MOTEapp_setResponseReady
               _USBapp_getrxByteFlag
                       _getsUSBUSART
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     270
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2267
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBapp_getrxByteFlag                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_setResponseReady                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Read                                          1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2164
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    1926
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CMP1_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              0 BANK0      2     2      0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MOTEapp_handlerState                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                         14    14      0   30063
                                             31 COMRAM    14    14      0
                           _CMP1_ISR
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR1_ISR
                        _TMRapp_Tick
                     _USBDeviceTasks
               _USBapp_setrxByteFlag
 ---------------------------------------------------------------------------------
 (12) _USBapp_setrxByteFlag                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   30063
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   17698
                                             27 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   16631
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  0     0      0   12636
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4401
                                             21 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             6     6      0    4286
                                             21 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3903
                                             13 COMRAM     8     2      6
                 _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
 ---------------------------------------------------------------------------------
 (14) _USBapp_CdcEmulatorInitialize                        1     1      0    1211
                                             12 COMRAM     1     1      0
                          _CDCInitEP
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (15) _CDCInitEP                                           0     0      0    1143
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (16) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (17) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     499
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     499
                                             17 COMRAM     2     2      0
       _USART_mySetLineCodingHandler *
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     500
                                             17 COMRAM     1     1      0
       _USART_mySetLineCodingHandler *
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _USART_mySetLineCodingHandler                        4     4      0     385
                                             13 COMRAM     4     4      0
                            ___lldiv
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (15) i2_EUSART_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) ___lldiv                                            13     5      8     340
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (12) _TMRapp_Tick                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _CMP1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _MOTEapp_handlerState
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _USBapp_Handler
     _USBapp_DeviceCdcEmulatorHandler
       _CDCTxService
         _USBTransferOnePacket
       _EUSART_Read
       _EUSART_Write
       _MOTEapp_setResponseReady
       _USBapp_getrxByteFlag
       _getsUSBUSART
         _USBTransferOnePacket
       _putUSBUSART
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _oled_putString
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
     _service_pushbutton
   _USBapp_handlerState
   _moduleResync
     _MOTEapp_getModuleResponse
       _EUSART_Read
     _moteApp_delayms
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_clearCommand
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_delayms
   _moteHandler
     _ADC_GetConversion
     _ADC_TempConversion
       ___lwdiv
     _MOTEapp_TimerBasedTask
     _MOTEapp_getModuleResponse
       _EUSART_Read
     _TMRapp_ClearBitFlags
     _TMRapp_Handler
       ___almod
       ___lwmod
     _USBapp_exitCDC
     _USBapp_exitCDCState
     _moteApp_delayms
     _moteJoiningProcess
       _DATAEE_WriteByte
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
       _strcmp
       _strncmp
     _moteRunningProcess
       _ADC_GetConversion
       _ADC_TempConversion
         ___lwdiv
       _MOTEapp_SetDataRateSetting
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _TMR2_ReadTimer
       ___awdiv
       _moteApp_GoToSleep
         _EUSART_FlushBuffer
         _PIN_MANAGER_Initialize
         _moduleResync
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_delayms
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moduleSleep
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_delayms
         _oled_displayOff
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_init
           _oled_clear
             _oled_clearRow
               _oled_putChar
                 _Set_Column_Address
                   _oled_writeCommand
                     _SPI_Exchange8bit
                 _Set_Page_Address
                   _oled_writeCommand
                     _SPI_Exchange8bit
                 _oled_writeData
                   _SPI_Exchange8bit
           _oled_devInit
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_setDisplay
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_setFont
       _moteApp_add16bToDataBuffer
         ___lwdiv
         ___lwmod
       _moteApp_add8bToDataBuffer
         ___awmod
         ___lbdiv
       _moteApp_clearBuffers
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
       _oled_putUint16
         ___lwdiv
         ___lwmod
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putUint8
         ___awmod
         ___lbdiv
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
       _sendDataCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
         _hexToStr
       _strcmp
       _strncmp
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _oled_putString
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
     _service_pushbutton
   _oled_clear
     _oled_clearRow
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
   _oled_init
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _oled_devInit
       _oled_writeCommand
         _SPI_Exchange8bit
     _oled_setDisplay
       _oled_writeCommand
         _SPI_Exchange8bit
     _oled_setFont
   _oled_putString
     _oled_putChar
       _Set_Column_Address
         _oled_writeCommand
           _SPI_Exchange8bit
       _Set_Page_Address
         _oled_writeCommand
           _SPI_Exchange8bit
       _oled_writeData
         _SPI_Exchange8bit
   _test_powerup
     _moteApp_delayms
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _test_adc
       _ADC_GetConversion
       _ADC_TempConversion
         ___lwdiv
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _Set_Page_Address
           _oled_writeCommand
             _SPI_Exchange8bit
         _oled_writeData
           _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
       _oled_putUint16
         ___lwdiv
         ___lwmod
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putUint8
         ___awmod
         ___lbdiv
         _oled_putString
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
     _test_comms
       _moteApp_delayms
       _moteApp_toggleLeds
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _test_leds
       _moteApp_delayms
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _test_oled
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit
     _test_switch
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _Set_Page_Address
               _oled_writeCommand
                 _SPI_Exchange8bit
             _oled_writeData
               _SPI_Exchange8bit
       _oled_putString
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _Set_Page_Address
             _oled_writeCommand
               _SPI_Exchange8bit
           _oled_writeData
             _SPI_Exchange8bit

 _INTERRUPT_InterruptManager (ROOT)
   _CMP1_ISR
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _TMR1_ISR
   _TMRapp_Tick
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USART_mySetLineCodingHandler *
           ___lldiv
           i2_EUSART_Initialize
         _USBCtrlTrfTxService *
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USART_mySetLineCodingHandler *
             ___lldiv
             i2_EUSART_Initialize
           _USBCtrlEPAllowStatusStage *
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCheckCDCRequest
             _USBapp_CdcEmulatorInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               i2_EUSART_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCheckCDCRequest
           _USBapp_CdcEmulatorInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             i2_EUSART_Initialize
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         i2_EUSART_Initialize
     i2_USBDeviceInit
       i2_memset
   _USBapp_setrxByteFlag

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      23        0.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      A0       9       62.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      9      EF       7       93.4%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2D      9B       5       96.9%
BITBANK5            80      0       0      15        0.0%
BANK5               80      0       0      16        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      5A       1       95.7%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     284      14        0.0%
DATA                 0      0     284       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Feb 16 15:28:06 2017

                             _SPI_Initialize 5910                                   _USB_SD_Ptr 7583  
                ?_moteApp_add16bToDataBuffer 00CA                                 test_adc@Traw 00E1  
                                         l58 315E                            ??_CMP1_Initialize 00C3  
                                         _RH 007A                                           _Ch 008D  
                                 _USB_Buffer 0124                                 ___awdiv@sign 00C8  
                  _MOTEapp_getModuleResponse 4CCA                          moteRunningProcess@i 00E7  
             moteJoiningProcess@selectButton 00D6                                _USBDeviceInit 27F4  
                    EUSART_FlushBuffer@index 00C3                       __end_of_oled_writeData 5944  
                       ??_moteApp_toggleLeds 00C6                           __size_of_CDCInitEP 006E  
                   USBapp_handlerState@state 00C3                                 __CFG_CP0$OFF 000000  
                               __CFG_CP1$OFF 000000                                 __CFG_CP2$OFF 000000  
                               __CFG_CP3$OFF 000000         USER_USB_CALLBACK_EVENT_HANDLER@event 003B  
       USER_USB_CALLBACK_EVENT_HANDLER@pdata 003D                                          l122 330E  
                                        l412 17C4                  __end_of_USBStdGetDscHandler 3080  
                                        l407 1792                                          l511 06EE  
                                        l344 4A76                                          l362 5724  
                                        l514 0754                                          l347 4AC0  
                                        l356 550A                                          l605 146A  
                                        l456 1D6E                                          l393 1FB2  
                                        l539 0B36                                          l708 3AD6  
                                        l487 033C                                          l569 1002  
                                        _BDT 000400                                          l861 3F14  
                                        _CKE 007E3E                                          l872 3FCC  
                                        l867 3FC0                                          l892 378A  
                                        l894 37B6                                          _CKP 007E34  
                                        _GIE 007F97                                 __CFG_CPB$OFF 000000  
                                        _PR2 000FBB                                 __CFG_CPD$OFF 000000  
                         _moteJoiningProcess 1786                                          _UIE 000F64  
                                        _UIR 000F65                                test_adc@count 00E4  
                                        _Sum 007C                              _timer1ReloadVal 001B  
                                 _USBSuspend 56EA                                 ___awmod@sign 00C8  
               __end_of_moteApp_clearBuffers 4472                 __end_of_moteApp_clearCommand 58FE  
                       USBStdSetCfgHandler@i 0043                              _TMR2_Initialize 58D8  
                                        prod 000FF3                                          tosl 000FFD  
                                        wreg 000FE8                               _USBDeviceTasks 2CFC  
                             _USBDeviceState 0097                        moteApp_delayms@length 00C3  
               MOTEapp_SetDataRateSetting@dr 00C7                        ??_USBCtrlTrfRxService 003F  
                   __size_ofi2_USBDeviceInit 0138                               ??_getsUSBUSART 00CD  
                               ?_EUSART_Read 002E                     USBEnableEndpoint@options 0036  
                               __CFG_LVP$OFF 000000                          ?_moteJoiningProcess 00D5  
                                       l1203 58B8                                         l1107 52BC  
                                       l1027 45C8                                         l1116 53D0  
                                       l1237 5292                                         l1265 5908  
                                       l1409 53A8                                         l1622 2862  
                                       l2416 4CC0                                         l2426 4F44  
                 USBConfigureEndpoint@handle 0034                                         l1683 5620  
                                       l1684 561E                                         l1982 26D4  
                                       l1987 2728                                         STR_1 7D18  
                                       STR_2 7CFA                                         STR_3 7D09  
                                       STR_4 7F45                                         STR_5 7D9F  
                                       STR_6 7D92                                         STR_7 7CAE  
                                       STR_8 7E78                                         STR_9 7F4E  
                                       _LATA 000F89                                         _LATB 000F8A  
                                       _LATC 000F8B              __size_of_MOTEapp_TimerBasedTask 0026  
                                       _PEIE 007F96                        ??_USBCtrlTrfTxService 002E  
                                       _UCFG 000F62                                         u9240 4E48  
                                       u9260 4E76                                         _UEP0 000F6A  
                                       _UEP1 000F6B                                         u9247 4E3E  
                                       u9267 4E6C                                         _UEIE 000F66  
                                       u9535 53B8                                         u9536 53BA  
                                       u9840 269E                                         _UEIR 000F67  
                                       _UCON 000F60                                         u9780 3690  
                                       u9848 26A2                                         _TMR2 000FBC  
                                       u9788 3694                                         _Temp 007E  
                            _CDCDataInHandle 0076       USBStdFeatureReqHandler@current_ep_data 0046  
                                       _pDst 0084                                         _main 3080  
                   ??i2_USBTransferOnePacket 0032            __end_of_moteApp_add8bToDataBuffer 3AD0  
                                       fsr0h 000FEA                                         fsr1h 000FE2  
                                       indf0 000FEF                                         fsr0l 000FE9  
                                       fsr2h 000FDA                                         indf1 000FE7  
                                _BaudRateGen 0120                                         fsr1l 000FE1  
                                       indf2 000FDF                                         fsr2l 000FD9  
                            _USBDeviceAttach 55F8                                         btemp 005B  
                              __CFG_BORV$190 000000                                         pclat 000FFA  
                                       prodh 000FF4                                         prodl 000FF3  
                       _USBapp_setrxByteFlag 59B8                                         start 00BA  
                            ?_oled_putUint16 00D5                                __CFG_IESO$OFF 000000  
                            __end_of_EndLine 5962                       __end_of_SPI_Initialize 5922  
                __end_of_USBapp_exitCDCState 598E                             __end_of_CMP1_ISR 59D4  
                            ?_oled_putString 00D0                   __end_of_USBCheckStdRequest 3C88  
                     ??_USBCtrlTrfOutHandler 0041                  __size_of_moteRunningProcess 16C8  
                           ?_oled_setDisplay 002E                                __CFG_MCLRE$ON 000000  
                               ___param_bank 000010                    ??_USBStdFeatureReqHandler 0043  
                                _TMRapp_Tick 59BE                         ??_moteJoiningProcess 00D7  
                     moteApp_delayms@counter 00C6                ?_USART_mySetLineCodingHandler 002E  
                     sendDataCommand@appData 00C6                            sendCommand@string 00C4  
                   ??_USBStdGetStatusHandler 002E                 __end_of_USBapp_getrxByteFlag 59C8  
                  __size_of_DATAEE_WriteByte 003C                               ?_USBDeviceInit 002E  
                              ?_EUSART_Write 002E                         oled_putUint16@number 00D5  
             __size_of_OSCILLATOR_Initialize 0016                              ?_oled_writeData 002E  
              __end_of_OSCILLATOR_Initialize 58C2                                        l11100 43C8  
                                      l11110 43EE                                        l11112 43F4  
                                      l11104 43D2                                        l11122 441A  
                                      l11202 3D50                                        l12010 027E  
                                      l11220 257A                                        l11140 4456  
                                      l11124 4420                                        l11116 43FE  
                                      l11028 342E                                        l11070 4870  
                                      l11230 25D4                                        l11222 258C  
                                      l11134 4446                                        l12014 0290  
                                      l12030 0316                                        l11400 26B8  
                                      l11080 48EE                                        l11232 25E6  
                                      l11224 259E                                        l11216 2556  
                                      l11136 444C                                        l11128 442A  
                                      l12200 0894                                        l12112 055A  
                                      l12104 0502                                        l12040 033E  
                                      l13000 2092                                        l11410 26DE  
                                      l10610 53F2                                        l11090 5186  
                                      l11074 48A0                                        l11226 25B0  
                                      l11218 2568                                        l11404 26C8  
                                      l10612 53F4                                        l11228 25C2  
                                      l11236 25F8                                        l11324 3B68  
                                      l11180 3CA0                                        l12204 08A8  
                                      l12116 056E                                        l12108 052E  
                                      l12044 0352                                        l13004 20A8  
                                      l11430 2754                                        l11422 272C  
                                      l11094 51C0                                        l11078 48E2  
                                      l11238 2632                                        l11510 4266  
                                      l12214 0908                                        l12142 064A  
                                      l12134 0610                                        l12054 03B2  
                                      l12038 0332                                        l13006 20C4  
                                      l11440 2784                                        l11416 2712  
                                      l10616 52BE                                        l11360 36E2  
                                      l11352 36A0                                        l10800 4E1E  
                                      l11088 517A                                        l11184 3CB8  
                                      l11176 3C8A                                        l13040 30EA  
                                      l11450 27B2                                        l10626 52F0  
                                      l11362 36EA                                        l11370 374C  
                                      l11354 36AA                                        l10642 5750  
                                      l10650 54F2                                        l11522 429A  
                                      l11194 3CE4                                        l12402 0FA0  
                                      l12330 0CFE                                        l12314 0C5A  
                                      l12306 0C24                                        l12226 0972  
                                      l12170 0702                                        l12090 04B0  
                                      l12066 041C                                        l11460 27F0  
                                      l10804 4E28                                        l11524 42A6  
                                      l11516 427C                                        l11188 3CC2  
                                      l12500 133C                                        l12404 0FA6  
                                      l12340 0D94                                        l12332 0D1C  
                                      l12228 097C                                        l13060 3172  
                                      l11438 2778                                        l11366 371A  
                                      l11390 57CE                                        l10590 454A  
                                      l10638 5746                                        l10662 5676  
                                      l11542 42FE                                        l11534 42DC  
                                      l11526 42AC                                        l10910 480C  
                                      l10902 47E8                                        l11198 3D00  
                                      l12414 0FF6                                        l12430 105A  
                                      l12334 0D3A                                        l12350 0E00  
                                      l12318 0C7E                                        l12254 0A56  
                                      l12190 07E4                                        l12166 06F8  
                                      l12086 049E                                        l13054 3160  
                                      l11456 27C8                                        l11448 27A8  
                                      l11712 57A4                                        l10680 4D0E  
                                      l10912 4818                                        l12512 13AE  
                                      l12504 135A                                        l12416 0FFC  
                                      l12408 0FB0                                        l12336 0D58  
                                      l12344 0DB2                                        l12176 0748  
                                      l12184 0792                                        l11458 27CC  
                                      l10586 4540                                        l10658 5660  
                                      l11490 3538                                        l11482 34DE  
                                      l11474 34AA                                        l11538 42EA  
                                      l10914 481E                                        l10922 4850  
                                      l10906 47F8                                        l10826 54CA  
                                      l12530 1446                                        l12522 13FE  
                                      l12514 13B6                                        l12506 1396  
                                      l12442 10C0                                        l12370 0EBC  
                                      l12338 0D76                                        l12346 0DDC  
                                      l12282 0B5A                                        l12258 0A6A  
                                      l12194 0834                                        l12178 074E  
                                      l12610 1716                                        l11650 35F2  
                                      l11570 32D2                                        l11740 4C1E  
                                      l11708 579A                                        l11484 34EE  
                                      l10852 5230                                        l10940 5032  
                                      l10836 54E2                                        l12540 14B6  
                                      l12452 1124                                        l12380 0EFC  
                                      l12292 0BC0                                        l12268 0ACA  
                                      l11572 32F0                                        l13068 3188  
                                      l11398 26AE                                        l10598 53C0  
                                      l11486 34F4                                        l11494 354A  
                                      l11478 34C2                                        l11902 1CB6  
                                      l10790 4A9A                                        l10926 4864  
                                      l10918 4842                                        l10942 5038  
                                      l12526 1422                                        l12518 13DA  
                                      l12462 1182                                        l12454 112A  
                                      l12278 0B1A                                        l12198 0882  
                                      l11646 35E8                                        l11590 337A  
                                      l12712 55CE                                        l11744 4C42  
                                      l11736 4C16                                        l11728 4BE4  
                                      l11920 1D3E                                        l11912 1CF8  
                                      l11904 1CBA                                        l11824 19DC  
                                      l11808 1960                                        l11760 17B4  
                                      l10848 5226                                        l10688 4D38  
                                      l10936 5028                                        l10952 5062  
                                      l12552 150A                                        l12472 11E2  
                                      l12456 113E                                        l12296 0BD6  
                                      l11584 3362                                        l11746 4C46  
                                      l11738 4C1A                                        l11498 3566  
                                      l11930 1D62                                        l11906 1CE2  
                                      l11850 1AC6                                        l11834 1A42  
                                      l11818 19A6                                        l11754 1794  
                                      l10962 4C70                                        l10858 524C  
                                      l12570 157A                                        l12562 1530  
                                      l12538 148C                                        l12490 12A6  
                                      l11578 3338                                        l12716 55E0  
                                      l10876 3E8C                                        l10868 3E58  
                                      l11908 1CE6                                        l11860 1B10  
                                      l11852 1AD6                                        l11836 1A52  
                                      l11940 1DF8                                        l10964 4C7C  
                                      l10796 4ABA                                        l10948 5056  
                                      l12580 1610                                        l12572 1598  
                                      l12564 1536                                        l12492 12C4  
                                      l12484 124C                                        l12900 1E32  
                                      l10990 4F36                                        l10982 4F00  
                                      l11934 1D76                                        l11926 1D54  
                                      l11918 1D3A                                        l11870 1B78  
                                      l11854 1ADA                                        l11838 1A56  
                                      l11790 18F6                                        l10974 4CB2  
                                      l10966 4C82                                        l12582 162E  
                                      l12574 15B6                                        l12566 153E  
                                      l12494 12E2                                        l12486 126A  
                                      l12910 1E4E                                        l12902 1E38  
                                      l12752 2842                                        l10888 3EF2  
                                      l12648 3804                                        l10984 4F0C  
                                      l11880 1BD0                                        l11792 18FA  
                                      l12576 15D4                                        l12568 155C  
                                      l12496 1300                                        l12488 1288  
                                      l12920 1E82                                        l12658 382C  
                                      l10986 4F12                                        l11890 1C3E  
                                      l11778 1866                                        l11938 1DB0  
                                      l12594 16A4                                        l12578 15F2  
                                      l12586 164C                                        l12498 131E  
                                      l12930 1EAA                                        l12780 28B2  
                                      l12764 286E                                        l12772 2880  
                                      l12748 2838                                        l11892 1C42  
                                      l11876 1BB2                                        l11868 1B74  
                                      l12596 16AC                                        l12588 1688  
                                      l11972 0158                                        l12924 1E90  
                                      l12916 1E6C                                        l12870 3F84  
                                      l12854 3F16                                        l11798 191A  
                                      l11982 0194                                        l11958 0108  
                                      l12776 28A8                                        l12864 3F72  
                                      l11968 0144                                        l12952 1F28  
                                      l12786 2918                                        l12882 3FA8  
                                      l12962 1F64                                        l12938 1ED8  
                                      l12868 3F7C                                        l12948 1F14  
                                      l12974 1FB4                                        l12966 1F84  
                                      l12986 2016                              __end_of___almod 3578  
                                      ?_main 002E                              __end_of___awdiv 4308  
                            __end_of___lbdiv 5068                                        _EEADR 000FA9  
                                      STR_10 7DFC                                        STR_11 7E84  
                                      STR_20 7F57                                        STR_12 7E23  
                                      STR_21 7FFC                                        STR_13 7E09  
                                      STR_30 7FB2                                        STR_14 7E16  
                                      STR_22 79B4                                        STR_23 7EE6  
                                      STR_15 7EC7                                        STR_31 7ADB  
                                      STR_24 7F3C                                        STR_16 7F0E  
                                      STR_40 7DEF                                        STR_32 7B52  
                                      STR_17 7F60                                        STR_25 7B63  
                                      STR_33 7A64                                        STR_41 7A53  
                                      STR_34 7FB7                                        STR_18 7F71  
                                      STR_50 7EA6                                        STR_42 7D43  
                                      STR_26 7BC9                                        STR_35 7ADB  
                                      STR_43 7FF9                                        STR_19 7F79  
                                      STR_51 7EFA                                        STR_27 7BEB  
                                      STR_36 7B52                                        STR_52 7FF9  
                                      STR_60 7E90                                        STR_44 7D5F  
                                      STR_28 7ACA                              __end_of___awmod 486E  
                                      STR_37 7A64                                        STR_61 7EA6  
                                      STR_53 7D5F                                        STR_29 7F04  
                                      STR_45 7EBC                                        STR_54 7EBC  
                                      STR_38 7F04                                        STR_62 7F8F  
                                      STR_46 7F21                                        STR_70 7B74  
                                      STR_55 7F21                                        STR_47 7DEF  
                                      STR_63 7EF0                                        STR_71 7E3C  
                                      STR_39 7A20                                        STR_80 7C5E  
                                      STR_64 7F88                                        STR_48 7F2A  
                                      STR_72 7D7A                                        STR_56 7D51  
                                      STR_65 7D43                                        STR_57 7D43  
                                      STR_49 7EDC                                        STR_73 7C5E  
                                      STR_81 7BA7                                        STR_66 7E9B  
                                      STR_90 7FA4                                        STR_58 7E9B  
                                      STR_82 7D6D                                        STR_74 7D27  
                                      STR_59 7F2A                                        STR_67 7EB1  
                                      STR_91 7AFD                                        STR_75 7AB9  
                                      STR_83 79C8                                        STR_84 7D27  
                                      STR_68 7D51                                        STR_76 7B41  
                                      STR_92 7A42                                        STR_77 7C5E  
                                      STR_69 7EB1                                        STR_93 7FAB  
                                      STR_85 7E6C                                        STR_86 7E54  
                                      STR_94 7B85                                        STR_78 7AA8  
                                      STR_87 7D7A                                        STR_95 7F9D  
                                      STR_79 7A97                                        STR_88 7E48  
                                      STR_96 79DA                                        STR_89 7FF9  
                                      STR_97 7F96                                        STR_98 7C9E  
                                      STR_99 7AB9            __size_of_USBCtrlEPServiceComplete 0100  
                            _TMR1_StartTimer 59CC                              __end_of___lldiv 4BD6  
                                      u12007 5730                                        u12017 2526  
                                      u12107 1DA2                                        u12027 2538  
                            ___awdiv@divisor 00C5            __size_of_MOTEapp_setResponseReady 0008  
                                      u12117 54FA                                        u12037 254A  
                                      u12047 263A                                        u11600 1EBA  
                                      _T1CON 000FCD                                        u12057 264C  
                     __end_of_USBDeviceTasks 2E30                                        u12067 265E  
                                      u12077 528C                                        u12087 1D7E  
                                      _T2CON 000FBA                                        u12097 1D90  
                    __end_of_sendDataCommand 3D62                                        u11907 346A  
                                      u11827 339E                                        u11917 088A  
                                      u11837 33B0                                        u11927 0E68  
                                      u11847 33C2                                        u11937 0E7A  
                                      u11857 33EE                    ?_USBCtrlEPServiceComplete 002E  
                                      u11947 0E8C                                        u11867 3400  
                                      u11957 1132                                        u11877 3412  
                                      u11967 3D6A                                        u11887 3446  
                                      u11977 3D78                                        u11897 3458  
                                      u11987 3D8E                                        u11997 3DA2  
                            __end_of___lwdiv 4CCA                              __end_of___lwmod 4F4E  
                  ?_MOTEapp_setResponseReady 002E                          oled_putUint8@number 00D7  
                                      _UADDR 000F63                              ___awdiv@counter 00C7  
                                      _RCREG 000FAE                                        _RCSTA 000FAB  
                                      _TMR1H 000FCF                                        _TMR1L 000FCE  
                                      _SPBRG 000FAF                                        _TRISB 000F93  
                                      _TRISC 000F94     moteApp_add16bToDataBuffer@bufferLocation 00CC  
    moteApp_add8bToDataBuffer@bufferLocation 00C9                                        _USTAT 000F61  
                                      _TXREG 000FAD                                        _TXSTA 000FAC  
                                      _Check 008E                                __CFG_WRT0$OFF 000000  
         __size_of_USBCtrlEPAllowStatusStage 00CE                                __CFG_WRT1$OFF 000000  
                              __CFG_WRT2$OFF 000000                                __CFG_WRT3$OFF 000000  
                          moteHandler@i_1555 01ED                               __CFG_EBTR0$OFF 000000  
                             __CFG_FCMEN$OFF 000000                               __CFG_EBTR1$OFF 000000  
                             __CFG_EBTR2$OFF 000000                               __CFG_EBTR3$OFF 000000  
            __end_of_USBCtrlEPAllowDataStage 49AC                            oled_putChar@index 00CF  
                           __end_of_TMR1_ISR 596E                                        _sd000 7948  
                                      _sd001 78CE              service_pushbutton@Release_Timer 00B6  
                                      _sd002 7902                                __CFG_WRTB$OFF 000000  
                     moteRunningProcess@Traw 00E5                                __CFG_WRTC$OFF 000000  
                              __CFG_WRTD$OFF 000000                              _DATAEE_ReadByte 58C2  
                             __CFG_EBTRB$OFF 000000                                   i2memset@p1 002E  
                                      _light 0080                      __end_of_TMR1_Initialize 5558  
                               _runningState 00B2                                        pclath 000FFA  
                                      tablat 000FF5                                        plusw2 000FDB  
                          __end_of_CDCInitEP 4E1A                   oled_setDisplay@displayType 00C5  
                                      status 000FD8                               __CFG_T3CMX$RC0 000000  
                            _TMR2_StartTimer 59C8                              __end_of_strncmp 4910  
                            ___lbdiv@divisor 00C3                               __CFG_ICPRT$OFF 000000  
                      ?_USBapp_setrxByteFlag 002E                             __end_ofi2_memset 56EA  
                            ___lbdiv@counter 00C5                                 _m10SecTicker 0082  
                            ?_SPI_Initialize 002E                              putUSBUSART@data 00C3  
         USART_mySetLineCodingHandler@dwBaud 003B                 __size_of_USBStdSetCfgHandler 00E0  
                            __initialization 4FAE                        TMR2_ReadTimer@readVal 00C3  
              __size_of_TMRapp_ClearBitFlags 0008                                 __end_of_main 319A  
                      _control_signal_bitmap 00A0                __size_of_MOTEapp_handlerState 000A  
                     _MOTEapp_TimerBasedTask 578A                               ??_EUSART_Write 00C3  
                    __end_of_TMR2_Initialize 58EC                                 ?_sendCommand 00C4  
                ?_INTERRUPT_InterruptManager 002E                    __size_of_USBCtrlEPService 00CE  
                                     ??_main 00F0                                 ?_moduleSleep 002E  
                               ?_moteHandler 002E                                __activetblptr 000002  
                            ?_USBDeviceTasks 002E                          i2_EUSART_Initialize 5470  
                      oled_putUint16@numData 00D9                    sendDataCommand@dataLength 00C8  
                                ?_USBSuspend 002E                                   _NextUSBOut 001E  
                             __CFG_SDOMX$RB3 000000                              __CFG_CCP2MX$RC1 000000  
                               _cdc_mem_type 009D                     __end_of_SPI_Exchange8bit 5910  
                    __end_of_USBDeviceAttach 562C                                       _ADCON0 000FC2  
                                     _ADCON1 000FC1                                       _ADCON2 000FC0  
                           _CDCDataOutHandle 0078                            _getsUSBUSART$5884 00CE  
                                     _ACTCON 000FB5                                       STR_100 7B41  
                                     STR_101 7C5E                                       STR_110 7C5E  
                                     STR_102 7C3E                                       STR_103 7C2E  
                                     STR_111 7BFC                                       STR_104 7C5E  
                                     STR_200 7F18                                       STR_112 7CBE  
                                     STR_120 7B1F                                       STR_201 7F69  
                                     STR_113 7CDC                                       STR_105 7C0D  
                                     STR_121 7B0E                                       STR_130 7C4E  
                                     STR_122 7F81                                       STR_106 7ED2  
                                     STR_202 7E30                                       STR_114 7C4E  
                                     _ADRESH 000FC4                                       STR_115 7C3E  
                                     STR_107 7E59                                       STR_123 7FBC  
                                     STR_131 7CCD                                       STR_108 7AA8  
                                     STR_124 7DD3                                       STR_140 79DA  
                                     STR_132 7C1E                                       STR_116 7A86  
                                     STR_109 7A97                                       STR_117 7C5E  
                                     STR_125 7FE2                                       STR_141 7FAB  
                                     STR_133 7C7E                                       STR_118 7CDC  
                                     STR_126 7FEE                                       STR_150 7FC5  
                                     STR_134 7D35                                       STR_142 79EC  
                                     _ADRESL 000FC3                                       STR_119 7CBE  
                                     STR_143 7C3E                                       STR_127 7FE6  
                                     STR_135 7FF9                                       STR_151 7FC9  
                                     STR_144 7C2E                                       STR_128 7FEA  
                                     STR_136 7FA4                                       STR_160 7FED  
                                     STR_152 7FCD                                       STR_145 7C5E  
                                     STR_129 7FF1                                       STR_161 7FE5  
                                     STR_153 7FD1                                       STR_137 7AEC  
                                     STR_138 7A42                                       STR_170 7FD1  
                                     STR_162 7FE9                                       STR_154 7FD5  
                                     STR_146 7BB8                                       STR_171 7FD5  
                                     STR_163 7FF1                                       STR_139 7F9D  
                                     STR_155 7FD9                                       STR_147 7E60  
                                     STR_148 7C4E                                       STR_172 7FD9  
                                     STR_156 7FDD                                       STR_180 7D94  
                                     STR_164 7B96                                       STR_173 7FDD  
                                     STR_157 7FF5                                       STR_149 7FC1  
                                     STR_181 7DA1                                       STR_165 7C6E  
                                     _EEDATA 000FA8                                       STR_166 7FC1  
                                     STR_158 7FD5                                       STR_174 7FF5  
                                     STR_182 7DAE                                       STR_190 7980  
                                     STR_175 7AB9                                       STR_167 7FC5  
                                     STR_159 7FE1                                       STR_183 7DBB  
                                     STR_191 799A                                       STR_168 7FC9  
                                     STR_176 7B41                                       STR_184 7DC8  
                                     STR_192 794C                                       STR_177 7C5E  
                                     STR_169 7FCD                                       STR_185 7DD5  
                                     STR_193 7966                                       STR_186 7DE2  
                                     STR_178 7C8E                                       STR_194 7A0F  
                                     STR_179 7D87                                       STR_187 7CEB  
                                     STR_195 79FE                                       STR_188 7F33  
                                     STR_196 7A31                                       STR_189 7963  
                                     STR_197 7B30                                       STR_198 7A75  
                                     STR_199 7BDA                                       _EECON2 000FA7  
                           ___awdiv@dividend 00C3                              getsUSBUSART@len 00CC  
                                     _T1GCON 000FCC                         oled_putUint8@numData 00D8  
                      __size_of_CDCTxService 017A                                       i2l1122 558A  
                                     i2l1171 007E                                       i2l1163 0052  
                                     i2l1165 0062                                       i2l1167 006E  
                                     i2l1622 2C22                                       i2l1634 2D28  
                                     i2l2363 4BC4                                       i2l1708 3216  
                                     i2l1644 2DB6                                       i2l1821 39C2  
                                     i2l1645 2E2C                                       i2l1646 2DC6  
                                     i2l1930 46F8                                       i2l1850 20F4  
                                     i2l1771 45DA                                       i2l1835 3BBC  
                                     i2l1844 3C0C                                       i2l1774 4664  
                                     i2l1775 45EA                                       i2l7000 419A  
                                     i2l1928 46C6                                       i2l1776 45EE  
                                     i2l1784 537C                                       i2l7004 41A4  
                                     i2l1869 22BA                                       i2l7014 41CE  
                                     i2l7022 4204                                       i2l7040 4B76  
                                     i2l7024 420C                                       i2l7032 4242  
                                     i2l7042 4B82                                       i2l7052 4BB6  
                                     i2l7044 4B86                                       i2l7204 40FC  
                                     i2l7300 3006                                       i2l7310 3062  
                                     i2l7302 300C                                       i2l7062 56D8  
                                     i2l7314 3068                                       i2l7058 56C8  
                                     i2l7234 4962                                       i2l7308 305C  
                                     i2l7422 231C                                       i2l7406 229A  
                                     i2l7326 460C                                       i2l7254 3872  
                                     i2l7238 497A                                       i2l8320 3948  
                                     i2l8304 4FA6                                       i2l7424 2328  
                                     i2l7416 22D6                                       i2l7408 22A6  
                                     i2l7336 464C                                       i2l7280 38EE  
                                     i2l7264 38A6                                       i2l7354 20EE  
                                     i2l7258 387A                                       i2l8332 3988  
                                     i2l7380 21CC                                       i2l7292 2F82  
                                     i2l8318 3942                                       i2l7390 221E  
                                     i2l7374 21AE                                       _TABLAT 000FF5  
                                     i2l7640 2EF2                                       i2l7624 2E7E  
                                     i2l6920 46BA                                       i2l6912 46A4  
                                     i2l6760 5444                                       i2l7392 223A  
                                     i2l7376 21B0                                       i2l7368 216A  
                                     i2l7288 2F70                                       i2l8346 39EA  
                                     i2l8338 39A8                                       i2l7650 2F52  
                                     i2l7618 2E5C                                       i2l6746 4A0E  
                                     i2l7570 31C0                                       i2l8348 39EC  
                                     i2l7636 2ED8                                       i2l6764 5452  
                                     i2l6780 4348                                       i2l6772 431E  
                                     i2l7396 2254                                       i2l7662 3BC6  
                                     i2l7590 3242                                       i2l8296 4F5C  
                                     i2l6928 46E2                                       i2l6936 4700  
                                     i2l6792 43A4                                       i2l7664 3BCC  
                                     i2l6890 50FC                                       i2l6962 506A  
                                     i2l7674 3BE4                                       i2l7666 3BD2  
                                     i2l9610 56B6                                       i2l6964 5070  
                                     i2l7676 3BEA                                       i2l7692 3C44  
                                     i2l9612 56B8                                       i2l6886 50F4  
                                     i2l7678 3BF0                                       i2l9702 2C2E  
                                     i2l9710 2C40                                       i2l6896 5114  
                                     i2l6968 5076                                       i2l7688 3C26  
                                     i2l9650 4030                                       i2l9634 537A  
                                     i2l9714 2C66                                       i2l9724 2CCA  
                                     i2l9662 407E                                       i2l9654 4038  
                                     i2l9718 2C6E                                       i2l9666 4098  
                                     i2l9690 2C06                                       i2l9668 409E  
                                     i2l9686 2BFE                                    ??_EndLine 00C4  
                                     _OSCCON 000FD3                                CDCTxService@i 00CD  
                                     _SPBRGH 000FB0                                       _SSPBUF 000FC9  
                   i2USBTransferOnePacket@ep 0032                            ??i2_USBDeviceInit 0036  
            __size_ofi2_USBTransferOnePacket 00BA                         ?i2_EUSART_Initialize 002E  
                       oled_displayOff@state 00C5                                oled_putChar@k 00CE  
                          _shortPacketStatus 002B               moteRunningProcess@changeStates 00ED  
                             __CFG_XINST$OFF 000000                         _moteApp_clearBuffers 43C2  
                       _moteApp_clearCommand 58EC                 ??_MOTEapp_SetDataRateSetting 00C6  
                            USBDeviceTasks@i 004C                   __end_of_Set_Column_Address 5814  
                USBStdFeatureReqHandler@pUEP 0044                             __end_of_hexToStr 54E6  
                   USBTransferOnePacket@data 00C4                   USBCtrlTrfInHandler@lastDTS 003F  
                            ??_USBDeviceInit 00CB                    __size_of_Set_Page_Address 001C  
                    __end_of_TMR1_StartTimer 59D0                                 ?_putUSBUSART 00C3  
                                  ??___almod 00CB                                    ??___awdiv 00C7  
                                  ??___lbdiv 00C4                               __CFG_STVREN$ON 000000  
                                  ??___awmod 00C7                                    ??___lldiv 0036  
                                     _appKey 0280                         __end_of_getsUSBUSART 3752  
                                  ??___lwdiv 00C7                                    ??___lwmod 00C7  
                          _USBEnableEndpoint 5434              __size_of_USBStdGetStatusHandler 00AC  
                        _EUSART_Transmit_ISR 5558                                       _memset 55C4  
                                     clear_0 4FB4                                       clear_1 4FC0  
                                     clear_2 4FCC                                       clear_3 4FD8  
                           ___awdiv@quotient 00C9                              ___awmod@divisor 00C5  
                            ___awmod@counter 00C7                           ?_USBEnableEndpoint 0036  
             ??_USART_mySetLineCodingHandler 003B                      __end_of_DATAEE_ReadByte 58D8  
                                     _strcmp 5178                   __end_of_ADC_TempConversion 565E  
              __size_of_USBTransferOnePacket 00D8                             ?_sendDataCommand 00C4  
                            _moteApp_delayms 54E6                  __size_of_service_pushbutton 007C  
                               _CDCTxService 267A                                 __mediumconst 7582  
                           __end_of_test_adc 3668                                       tblptrh 000FF7  
                                     tblptrl 000FF6                                       tblptru 000FF8  
                        ??_USBEnableEndpoint 0037                     ADC_GetConversion@channel 00C7  
                                  ?_CMP1_ISR 002E                      __end_of_TMR2_StartTimer 59CC  
                               _dataRateRead 00A2                                  _CtrlTrfData 000438  
                                  ??_strncmp 00C9                             ___lbdiv@dividend 00C4  
                              ?_oled_devInit 002E                         ?_EUSART_Transmit_ISR 002E  
                       _controlTransferState 0024                    USBapp_Handler@buttonPress 00D5  
                       _USBapp_getrxByteFlag 59C4                             ?_TMR1_Initialize 002E  
                       __CFG_LS48MHZ$SYS48X8 000000          __size_of_MOTEapp_SetDataRateSetting 017A  
                       __size_of_EUSART_Read 0046                            _SYSTEM_Initialize 57D2  
               __size_of_USBapp_handlerState 000A                                   __accesstop 0060  
                    __end_of__initialization 4FFE                       ??_USBapp_setrxByteFlag 002E  
                            __CFG_PBADEN$OFF 000000                                 ?_test_switch 002E  
                      ??i2_EUSART_Initialize 002E                              _CMP1_Initialize 5922  
                         ?_SYSTEM_Initialize 002E                           oled_writeData@data 00C4  
                              ___rparam_used 000001                                ?_oled_setFont 00C3  
                   __size_of_USBStallHandler 0042                                ?_oled_putChar 00C6  
                      ?_moteApp_clearBuffers 002E                        ?_moteApp_clearCommand 002E  
                        __size_of_USBSuspend 002A                  __size_of_EUSART_FlushBuffer 004E  
                             __pcstackCOMRAM 002E                    __end_of_USBEnableEndpoint 5470  
                           __CFG_nPWRTEN$OFF 000000                                __end_of_sd000 794C  
                              __end_of_sd001 7902                                __end_of_sd002 7936  
                               __pidataBANK0 596E                          ??_SYSTEM_Initialize 00C5  
                  oled_putUint16@station_dot 00D7                                    ?_TMR1_ISR 002E  
           __size_of_USBCtrlEPAllowDataStage 009C                             _DATAEE_WriteByte 5380  
              __size_of_USBConfigureEndpoint 0094                  __end_of_USBCtrlTrfInHandler 39F2  
                           ?_TMR2_Initialize 002E                             ___lbdiv@quotient 00C6  
                     i2_USBTransferOnePacket 4308                              __CFG_PCLKEN$OFF 000000  
                             __CFG_nLPBOR$ON 000000                            __end_of_OledFont0 788B  
                          _CDCTxService$5932 00CB                                   _cdc_notice 01D4  
                                  ?i2_memset 002E                                   _cdc_rx_len 009E  
                                 _cdc_tx_len 009F                                 _inClassCMode 00A7  
                                 ??_CMP1_ISR 002E                              _responsePortNum 00BE  
                   ??_USBCtrlTrfSetupHandler 0049                                   _dataBuffer 01C4  
                             ??_oled_devInit 00C5                             ?_USBDeviceAttach 002E  
                  __end_of_SYSTEM_Initialize 57F4                        ??_EUSART_Transmit_ISR 002E  
                     _USBStdGetStatusHandler 45CC                                ?_moduleResync 002E  
                      ?_USBapp_getrxByteFlag 002E                         service_pushbutton@bs 00C3  
                           ??_oled_putUint16 00D9                                   __pbssBANK0 0060  
                                 __pbssBANK1 0100                                   __pbssBANK2 0200  
                       __end_of_EUSART_Write 53F8                      __size_of_TMR2_ReadTimer 000A  
                           ??_oled_putString 00D4                      moduleResync@escapeEvent 00CA  
                             ??_oled_setFont 00C5                              _periodicUpValue 00FA  
                __size_of_EUSART_Receive_ISR 0036                          oled_putString@index 00D4  
                             ??_oled_putChar 00C8                  __size_of_USBWakeFromSuspend 0030  
                                _pBDTEntryIn 000F                       __size_of_oled_clearRow 0028  
                   sendDataCommand@byteCount 00CA             __end_of_USBCtrlEPServiceComplete 329A  
           __end_of_MOTEapp_setResponseReady 59B2                       oled_putChar@start_page 00C7  
                __size_of_USBCheckCDCRequest 00AC                            __CFG_PLLSEL$PLL3X 000000  
                         __size_of_oled_init 0026                             ??_oled_writeData 00C4  
                       USBCtrlTrfRxService@i 003F                                 ?_TMRapp_Tick 002E  
                           ?_TMR1_StartTimer 002E                                   ??_TMR1_ISR 002E  
                   oled_putUint16@start_page 00D8                      __end_of_moteApp_delayms 5520  
                                    _CM1CON0 000F98                      __size_of_USBapp_Handler 00CE  
                    __size_of_TMRapp_Handler 0142                                      _BAUDCON 000FB8  
                                    ?_memset 00C3                                   _device_dsc 7936  
                  Set_Column_Address@address 00C5                     __size_of_oled_displayOff 0016  
                           _USBCtrlEPService 3FE0                  __size_of_moteApp_toggleLeds 00F4  
                                 _ep_data_in 006A                      __size_of_ADC_Initialize 001A  
                                    ?_strcmp 00C3                             ?_DATAEE_ReadByte 002E  
                __end_of_USBCtrlTrfRxService 2F60                         __size_of_sendCommand 0030  
                         _USBCheckStdRequest 3BAC                                _eusartRxCount 0026  
                          _configDescriptor1 788B                                      i2l10102 55C0  
                                    i2l10200 2E0C                                      i2l10202 2E28  
                                    i2l10122 2D20                                      i2l10114 2D14  
                                    i2l10150 2D6C                                      i2l10160 2D7C  
                                    i2l10144 2D48                                      i2l10136 2D3C  
                                    i2l10180 2DBE                                      i2l10094 5598  
                                    i2l10174 2DAA                                      i2l10166 2D86  
                                    i2l10406 007A                                      i2l10088 5586  
                                    i2l10194 2DEC                                      i2l13206 508E  
                                    i2l13208 50BE                                      _RS232cp 0020  
                            __CFG_WDTEN$SWON 000000                           __size_of_test_leds 0066  
                                 ??i2_memset 0034                           __size_of_test_oled 00AE  
                       __size_of_moduleSleep 0028                  __end_of_USBCtrlTrfTxService 424A  
                       __size_of_moteHandler 02CC                          _USBStdSetCfgHandler 3832  
                                    _OSCCON2 000FD2                                      _TBLPTRH 000FF7  
                                    _TBLPTRL 000FF6                                      _TBLPTRU 000FF8  
                                    _OSCTUNE 000F9B                       __size_of_oled_putUint8 00A8  
             USBapp_LEDUpdateStatus@ledCount 0015                              __CFG_WDTPS$8192 000000  
                                    _SSP1ADD 000FC8                      __end_of_CMP1_Initialize 5934  
                             ??_moduleResync 00C8                          ?_USBCheckStdRequest 002E  
                           ?_TMR2_StartTimer 002E                 __size_of_USBStdGetDscHandler 0120  
                                    _UIEbits 000F64                                    ?_hexToStr 002E  
                                    _UIRbits 000F65                       test_switch@buttonCheck 00D7  
            moteRunningProcess@bufferReadPos 00EC                             ??_SPI_Initialize 00C3  
                                    _EndLine 5954                                _cdc_trf_state 0023  
                       DATAEE_WriteByte@bAdd 00C4                      __size_of_USBapp_exitCDC 0006  
                 __end_of_moteRunningProcess 1786                       ??_moteApp_clearBuffers 00C3  
                     ??_moteApp_clearCommand 00C6                   ?_moteApp_add8bToDataBuffer 00C9  
                                    _pCDCDst 0070                                      _pCDCSrc 0073  
                      __size_of_getsUSBUSART 00EA           __end_of_MOTEapp_SetDataRateSetting 267A  
                 _MOTEapp_SetDataRateSetting 2500                                      _T_byte1 0092  
                                    _T_byte2 0093                                      __Hparam 0000  
                       ?_USBStdSetCfgHandler 002E                                    _CDCInitEP 4DAC  
                    ?_MOTEapp_TimerBasedTask 002E                                      __Lparam 0000  
                   moteRunningProcess@i_1621 00E8                   __size_of_USBEnableEndpoint 003C  
                USBapp_exitCDCState@usbState 00C3                          moteHandler@s2Button 01EA  
                           _Set_Page_Address 5830                                    ?_test_adc 002E  
                       ??_USBCheckStdRequest 0049                 moteRunningProcess@sleepEvent 00E1  
                                    ___almod 3486                            _timerMinTickCount 0088  
              __size_of_USBCtrlTrfOutHandler 0060                  __size_of_moteJoiningProcess 0678  
                                    ___awdiv 424A                                      ___lbdiv 500C  
                                    ___awmod 47CC                                      ___lldiv 4B54  
                           ??_USBDeviceTasks 004C                                      ___lwdiv 4C52  
                          ??_USBStallHandler 002E                                      ___lwmod 4EEC  
                       __size_of_putUSBUSART 0022                                      __pcinit 4FAE  
                         getsUSBUSART@buffer 00CA                 __size_of_USBapp_exitCDCState 000A  
                            __size_of_memset 0034                    __end_of_configDescriptor1 78CE  
                                    __ramtop 0800                            hexToStr@character 00C3  
                                    __ptext0 3080                                      __ptext1 52FA  
                                    __ptext2 329A                                      __ptext3 4472  
                                    __ptext4 4E86                                      __ptext5 4D3E  
                                    __ptext6 3392                                      __ptext7 3578  
                                    __ptext8 1DFE                                      __ptext9 00BE  
                   __size_of_oled_setDisplay 001C                                      _inPipes 0009  
                _USBDeferOUTDataStagePackets 0096                              __size_of_strcmp 0058  
                  moteRunningProcess@counter 00E9                             oled_setFont@font 00C3  
                                  _T1CONbits 000FCD                        _OSCILLATOR_Initialize 58AC  
                                    _exitUSB 00F5                                 ??_USBSuspend 0043  
                              _oled_clearRow 573C                                    _T2CONbits 000FBA  
            moteApp_add8bToDataBuffer@number 00CC                                   _oled_clear 584C  
                           ___awmod@dividend 00C3                     ??_PIN_MANAGER_Initialize 00C3  
               __end_of_TMRapp_ClearBitFlags 59AA                                 _LastRS232Out 001D  
                            i2_USBDeviceInit 2BC4                             i2USBDeviceInit@i 0036  
                          __end_of_oled_init 578A                            ?_SPI_Exchange8bit 002E  
               __end_of_MOTEapp_handlerState 59A2                       ??_USBapp_getrxByteFlag 00C3  
                         __end_of_USB_CD_Ptr 758B                   moteRunningProcess@readByte 00E4  
                 __size_of_SYSTEM_Initialize 0022              __size_of_USBCtrlTrfSetupHandler 0088  
                                 ??_hexToStr 00C3                                      _strncmp 486E  
                       end_of_initialization 4FFE                                 _getsUSBUSART 3668  
              sendDataCommand@byteCount_1782 00CB                           ??_SPI_Exchange8bit 00C3  
                       SPI_Exchange8bit@data 00C3                           __end_of_USB_SD_Ptr 7589  
                        _pBDTEntryEP0OutNext 0019                                      memset@c 00C5  
                                    memset@n 00C7                                      memset@p 00C9  
                              __Lmediumconst 7582              _dummy_encapsulated_cmd_response 01DE  
                   ?_USBStdFeatureReqHandler 002E               __end_of_MOTEapp_TimerBasedTask 57B0  
                          _EUSART_Initialize 53F8                                   _rxByteFlag 002A  
                      ??_USBStdSetCfgHandler 0043                              ___lldiv@divisor 0032  
                       __size_of_test_switch 00F8                                   ?_CDCInitEP 002E  
                            ___lldiv@counter 003A                            __end_of_test_leds 4EEC  
                          __end_of_test_oled 4520               moteJoiningProcess@changeStates 00D5  
                         ?_EUSART_Initialize 002E                                _oled_putUint8 4724  
                         __end_of_USBSuspend 5714               ??_USBapp_CdcEmulatorInitialize 003A  
                    _USBCtrlEPAllowDataStage 4910                                    _RCSTAbits 000FAB  
                                 ??_test_adc 00DF                           test_switch@timeout 00D5  
                                    postdec1 000FE5                                      postdec2 000FDD  
                                    postinc0 000FEE                                      postinc2 000FDE  
                       __end_of_oled_devInit 3E3A                     _USBCtrlEPServiceComplete 319A  
                    moteApp_toggleLeds@state 00C7                                   _responseId 0110  
                                 _retryCount 00B0                             ?_moteApp_delayms 00C3  
                              _randomPortNum 00AE                     _MOTEapp_setResponseReady 59AA  
                                    strcmp@r 00C8                   _USBStatusStageEnabledFlag1 0098  
                 _USBStatusStageEnabledFlag2 0099                                _dataRateValue 00F4  
                        _USBapp_handlerState 598E                          ??_EUSART_Initialize 00C3  
                         USBEnableEndpoint@p 0037                                    _PORTAbits 000F80  
                                  _PORTBbits 000F81                                    _PORTCbits 000F82  
                    oled_putUint8@start_page 00D6                               ?_oled_clearRow 002E  
                                 _test_comms 4D3E                         __end_of_oled_setFont 5896  
                         _Set_Column_Address 57F4                         __end_of_oled_putChar 45CC  
                                  _TRISAbits 000F92                                    _TRISBbits 000F93  
                                  _TRISCbits 000F94                            ??_oled_displayOff 00C5  
                      __size_of_EUSART_Write 003C                           _BothEP0OutUOWNsSet 008C  
                              ?_test_powerup 002E                             ?_CMP1_Initialize 002E  
                  USBConfigureEndpoint@EPNum 0033                   ?_USBCtrlEPAllowStatusStage 002E  
                   __end_of_DATAEE_WriteByte 53BC                          ?_Set_Column_Address 002E  
             moteRunningProcess@counter_1692 00EA          USER_USB_CALLBACK_EVENT_HANDLER@size 003F  
                             _TMR2_ReadTimer 597A                                    _USTATcopy 002D  
                          __size_of_CMP1_ISR 0004                         ?_USBapp_handlerState 002E  
                         _ADC_TempConversion 562C                     oled_putString@start_page 00D3  
                                _CM1CON0bits 000F98                    __end_of_EUSART_Initialize 5434  
               __end_of_USBTransferOnePacket 3F12                                  _CM2CON1bits 000F9A  
                                  _TXSTAbits 000FAC                              moteHandler@Traw 01E7  
                             ?_oled_putUint8 00D5                            putUSBUSART@length 00C5  
                        ?_ADC_TempConversion 002E                       _USBCtrlTrfSetupHandler 4ACC  
                       ??_Set_Column_Address 00C5                      ?i2_USBTransferOnePacket 002E  
                       __end_of_moduleResync 4ACC                        __end_of_USBDeviceInit 294A  
                             _TMRapp_Handler 294A                               _USBapp_Handler 3F12  
                       __size_of_TMRapp_Tick 0006                 ??_moteApp_add16bToDataBuffer 00CD  
        MOTEapp_getModuleResponse@bufferByte 00C5                                 _EUSART_Write 53BC  
                      sendDataCommand@string 00C4                      __end_ofi2_USBDeviceInit 2CFC  
                          __size_of_TMR1_ISR 000C                   __end_of_service_pushbutton 4C52  
                             _ADC_Initialize 5866                  moteApp_clearBuffers@counter 00C3  
                    moteApp_GoToSleep@status 00D2                                    i2memset@c 0030  
                                  i2memset@n 0032                                    i2memset@p 0034  
                     ?_OSCILLATOR_Initialize 002E                               __end_of_memset 55F8  
                          _USBBusIsSuspended 0094                     oled_writeCommand@command 00C4  
       moteRunningProcess@bufferReadPos_1691 00EB                               __end_of_strcmp 51D0  
                                ?_oled_clear 002E                          start_initialization 4FAE  
                       ??_ADC_TempConversion 00CA                      ?_USBStdGetStatusHandler 002E  
              USBCtrlTrfRxService@byteToRead 0040                               ??_test_powerup 00E5  
            __size_of_PIN_MANAGER_Initialize 0050                            ??_oled_setDisplay 00C5  
                              ??_EUSART_Read 00C3                       __end_of_TMR2_ReadTimer 5984  
                                _cdc_data_rx 000540                                  _cdc_data_tx 000500  
                __end_ofi2_EUSART_Initialize 54AC                            __size_ofi2_memset 002C  
                                  _OledFont0 758B                 __end_of_USBConfigureEndpoint 4A40  
            __end_of_USBStdFeatureReqHandler 234E                     __size_of_sendDataCommand 00DA  
                      ??_USBapp_handlerState 00C3            __end_of_USBCtrlEPAllowStatusStage 417C  
                              _periodicState 00F8                               _USBapp_exitCDC 59B2  
                   __end_of_USBCtrlEPService 40AE         __end_of_USART_mySetLineCodingHandler 5178  
      __size_of_USART_mySetLineCodingHandler 005A                 _USART_mySetLineCodingHandler 511E  
                 __end_of_EUSART_FlushBuffer 526E                          DATAEE_ReadByte@bAdd 00C3  
              __size_of_USBapp_setrxByteFlag 0006          __size_of_moteApp_add16bToDataBuffer 01B2  
                              _moteModeState 00AB                    ??_USBCtrlEPAllowDataStage 002F  
                                ??_CDCInitEP 003A                               USBDeviceInit@i 00CB  
                         _periodicTimerValue 00F9                       _pBDTEntryEP0OutCurrent 0017  
                   __size_of_TMR1_Initialize 0038                      USBTransferOnePacket@dir 00C3  
                    USBTransferOnePacket@len 00C6                       __end_of_USBapp_Handler 3FE0  
                     __end_of_TMRapp_Handler 2A8C               __end_ofi2_USBTransferOnePacket 43C2  
                       _TMRapp_ClearBitFlags 59A2                          _USBStdGetDscHandler 2F60  
                       _MOTEapp_handlerState 5998                       __end_of_ADC_Initialize 5880  
                                __pdataBANK0 00F0                                     ??_memset 00C9  
                            ??_oled_clearRow 00D0              MOTEapp_TimerBasedTask@timerTask 00C3  
                        _moduleResonseBuffer 0164                                     ??_strcmp 00C7  
                                ?_test_comms 002E                    oled_putString@station_dot 00D2  
                     _USBActiveConfiguration 002C               __end_of_USBStdGetStatusHandler 4678  
                __end_of_EUSART_Transmit_ISR 558E                                  __pbssCOMRAM 0001  
                 service_pushbutton@PB_Timer 0066                                __pcstackBANK0 00C3  
                              __pcstackBANK1 01E6                 __size_of_USBCtrlTrfInHandler 00E0  
                   __size_of_TMR2_Initialize 0014                     __end_of_Set_Page_Address 584C  
                            ?_TMR2_ReadTimer 002E                                  _activeState 009A  
                       ?_USBStdGetDscHandler 002E                       __end_of_USBapp_exitCDC 59B8  
         __size_of_MOTEapp_getModuleResponse 0074                   ?_MOTEapp_getModuleResponse 002E  
                  ADC_TempConversion@tempRaw 00CA                   __end_of_EUSART_Receive_ISR 55C4  
             moteRunningProcess@messageReady 00E0                                     ?_EndLine 002E  
                        _USBapp_exitCDCState 5984                   __end_of_USBWakeFromSuspend 56BE  
                 __size_of_EUSART_Initialize 003C                            __size_of_hexToStr 003A  
                            _USBStallHandler 533E                                 _pBDTEntryOut 0060  
                        __end_of_EUSART_Read 52FA                   __end_of_USBCheckCDCRequest 4724  
                            ??_oled_putUint8 00D7                         oled_putString@string 00D0  
                   __size_of_USBDeviceAttach 0034                                    _appDevEui 0100  
                ??_moteApp_add8bToDataBuffer 00CA                            _oled_writeCommand 5944  
                      __size_of_oled_devInit 00D8                      oled_putChar@station_dot 00C6  
                ?_MOTEapp_SetDataRateSetting 002E                             ___lwdiv@dividend 00C3  
                     _PIN_MANAGER_Initialize 51D0                          __size_of_oled_clear 001A  
                      ?_TMRapp_ClearBitFlags 002E                              _messageReceived 00A9  
                       EUSART_Read@readValue 00C3                              ?_TMRapp_Handler 002E  
                            ?_USBapp_Handler 002E                                    __pintcode 0008  
                         ?_oled_writeCommand 002E                                __pmediumconst 7582  
                                   ?___almod 00C3                        ?_MOTEapp_handlerState 002E  
                                   ?___awdiv 00C3                                    __ptext100 56BE  
                                  __ptext101 45CC                                     ?___lbdiv 00C3  
                                  __ptext110 4678                                    __ptext102 2F60  
                                  __ptext111 4F4E                                    __ptext103 20CA  
                                  __ptext120 5962                                    __ptext112 2E30  
                                  __ptext104 5068                                    __ptext121 5558  
                                  __ptext113 40AE                                    __ptext105 50C4  
                                  __ptext122 558E                                    __ptext114 3912  
                                  __ptext106 4DAC                                    __ptext123 59D0  
                                  __ptext115 417C                                    __ptext107 4308  
                                  __ptext124 0000                                    __ptext116 511E  
                                  __ptext108 5434                                    __ptext117 5470  
                                  __ptext109 49AC                                    __ptext118 4B54  
                                  __ptext119 59BE                                     ?___awmod 00C3  
                 __end_of_moteApp_toggleLeds 3486                                     ?___lldiv 002E  
                                   ?___lwdiv 00C3                                     ?___lwmod 00C3  
                            ?_ADC_Initialize 002E                        __size_of_oled_setFont 0016  
                               _eusartRxHead 00A4                                ??_sendCommand 00C6  
                               _eusartTxHead 0028                                 _eusartRxTail 00A5  
                               _eusartTxTail 00A6                            __size_of_test_adc 00F0  
                       ?_USBapp_exitCDCState 002E                        __size_of_oled_putChar 00AC  
                         _moteRunningProcess 00BE                            _moduleBufferIndex 0029  
               ??_INTERRUPT_InterruptManager 004D                             ___almod@dividend 00C3  
                           ?i2_USBDeviceInit 002E                       moteHandler@readMessage 01EE  
                        ??_oled_writeCommand 00C4                                ??_moduleSleep 00C6  
                              ??_moteHandler 00EE                      _eusartTxBufferRemaining 0027  
                       _USBTransferOnePacket 3E3A                                    _mainState 00A8  
                               moteHandler@i 01EC             moteApp_add16bToDataBuffer@number 00CA  
                   __size_of_TMR1_StartTimer 0004                       moteHandler@buttonPress 01EB  
                        ?_moteRunningProcess 00DF                 __end_of_USBCtrlTrfOutHandler 4FAE  
                                  _minTicker 00AA                        ??_USBStdGetDscHandler 002E  
                                   _CMP1_ISR 59D0                                  _ep_data_out 006D  
                           ___lwdiv@quotient 00C8                 __size_of_USBCtrlTrfRxService 0130  
                                  _secTicker 00B3                              ?_USBapp_exitCDC 002E  
              USBConfigureEndpoint@direction 002E                     __size_of_DATAEE_ReadByte 0016  
                                   ?_strncmp 00C3                                 _oled_devInit 3D62  
                             _eusartRxBuffer 0200                            _dataRateSelection 00F3  
                           _timerMsTickCount 008A                                    _oled_init 5764  
               __size_of_USBCtrlTrfTxService 00CE            __end_of_MOTEapp_getModuleResponse 4D3E  
                             _eusartTxBuffer 0240                                     _LATAbits 000F89  
                                   _IOCCbits 000F87                    __end_of_oled_writeCommand 5954  
                                   _LATBbits 000F8A                                     _LATCbits 000F8B  
                 ??_USBCtrlEPServiceComplete 002F                   ??_MOTEapp_setResponseReady 00C3  
                                   _PIE1bits 000F9D                                     _IPR3bits 000FA5  
                                   _PIE2bits 000FA0                                     _PIE3bits 000FA3  
                        __size_of_test_comms 006E                     __size_of_TMR2_StartTimer 0004  
                               _oled_setFont 5880                                    _moteState 00F7  
                          ??_sendDataCommand 00C9                                _operationType 00AC  
                      __size_of_moduleResync 008C                         ??_moteRunningProcess 00E2  
                 __end_of_moteJoiningProcess 1DFE          __size_of_INTERRUPT_InterruptManager 00B2  
                               _oled_putChar 4520                                     i2u510_40 2FD4  
                                   i2u510_47 2FCA                                     i2u511_40 3002  
                                   i2u511_47 2FF8                                     i2u513_40 3052  
                                   _PIR1bits 000F9E                                     i2u513_47 3048  
                                   _PIR2bits 000FA1                __size_of_moteApp_clearBuffers 00B0  
              __size_of_moteApp_clearCommand 0012                                     _PIR3bits 000FA4  
                                   i2u484_40 41F6                                     i2u484_47 41EC  
                                   i2u486_40 4234                                     i2u486_47 422A  
                                   i2u638_48 39D6                                     i2u567_48 2F3E  
                  USBCtrlEPService@setup_cnt 004B                    __size_of_SPI_Exchange8bit 0012  
                                   _RCONbits 000FD0                         __end_of_test_powerup 533E  
                    __size_of_oled_putUint16 0138                                ??_putUSBUSART 00C6  
                                   _UEP0bits 000F6A                   _USBDeferINDataStagePackets 0095  
                                   _SSP1CON1 000FC6           __end_of_moteApp_add16bToDataBuffer 2500  
                 _moteApp_add16bToDataBuffer 234E                  __size_of_USBCheckStdRequest 00DC  
                                   _TMR1_ISR 5962                      __size_of_oled_putString 006C  
                                   _SSP1STAT 000FC7                                     _UCONbits 000F60  
                            _oled_displayOff 5896                                    _test_leds 4E86  
                                   _VREFCON0 000F7D               moteRunningProcess@selectButton 00DF  
                       _USBConfigureEndpoint 49AC                                    _test_oled 4472  
                      ??_USBapp_exitCDCState 00C3             __size_of_USBStdFeatureReqHandler 0284  
                          ??_TMR1_Initialize 00C3                                   _ADCON0bits 000FC2  
                    Set_Page_Address@address 00C5                        ?_USBTransferOnePacket 00C3  
                     ADC_TempConversion@temp 00CB                                     _RH_byte1 008F  
                                   _RH_byte2 0090                    _moteApp_add8bToDataBuffer 39F2  
                    __size_of_oled_writeData 0010                                ?_CDCTxService 002E  
                                   _WPUBbits 000F85                     moteHandler@gotoNextState 01E9  
                               _RemoteWakeup 0091                          __end_of_sendCommand 568E  
                                   i2_memset 56BE                            __CFG_CFGPLLEN$OFF 000000  
                      DATAEE_WriteByte@bData 00C3                           _RS232_Out_Data_Rdy 001F  
                    __end_of_USBStallHandler 5380                          __end_of_moduleSleep 573C  
                        __end_of_moteHandler 20CA                                  _EUSART_Read 52B4  
                          _moteApp_GoToSleep 3AD0                                    copy_data0 4FF2  
                ??_USBCtrlEPAllowStatusStage 002E                                 _moduleResync 4A40  
                __end_of_USBStdSetCfgHandler 3912                            ?_DATAEE_WriteByte 00C3  
              __size_of_USBapp_getrxByteFlag 0004                           ?_moteApp_GoToSleep 002E  
                                 ?_oled_init 002E                            ??_TMR2_Initialize 00C3  
                              ??_test_switch 00D5  MOTEapp_getModuleResponse@terminatorReceived 00C4  
                           __size_of_EndLine 000E                           ??_DATAEE_WriteByte 00C4  
                               _SleepTimeOut 00F2                           __end_of_device_dsc 7948  
                                 _EECON1bits 000FA6                      ?_USBCtrlTrfSetupHandler 002E  
              USBapp_CdcEmulatorInitialize@i 003A                       ??_TMRapp_ClearBitFlags 00C3  
                    USBStdGetStatusHandler@p 002F                                     __Hrparam 0000  
                        ??_moteApp_GoToSleep 00D2                                     __Lrparam 0000  
                     USBTransferOnePacket@ep 00C7                       ??_MOTEapp_handlerState 00C3  
                          _ADC_GetConversion 526E                           __CFG_BOREN$SBORDIS 000000  
                                   _SetupPkt 000430                      __size_of_SPI_Initialize 0012  
                    ??_OSCILLATOR_Initialize 00C3                        ?_USBConfigureEndpoint 002E  
                         ?_ADC_GetConversion 00C3                             __size_of___almod 00F2  
                          ??_USBDeviceAttach 00C3                                   ?_test_leds 002E  
                           __size_of___awdiv 00BE                             __size_of___lbdiv 005C  
                                 ?_test_oled 002E                             __size_of___awmod 00A2  
             moteJoiningProcess@readDataRate 00D8                                 _selectedFont 00F0  
                           __size_of___lldiv 0082                              _oled_setDisplay 5814  
           moteApp_clearBuffers@counter_1853 00C4             moteApp_clearBuffers@counter_1854 00C5  
           moteApp_clearBuffers@counter_1855 00C6                             __size_of___lwdiv 0078  
                           __size_of___lwmod 0062                    MOTEapp_handlerState@state 00C3  
                                 _ANSELAbits 000F5B                          __end_of_putUSBUSART 57D2  
                                _line_coding 00B7                                   _ANSELCbits 000F5D  
                             ??_CDCTxService 00CA                                _responseReady 00AF  
                        ??_ADC_GetConversion 00C5                                 ??_oled_clear 00D2  
                                _menuTimeout 00F6                     __size_of_moteApp_delayms 003A  
                  __end_of_moteApp_GoToSleep 3BAC                      __size_of_USBDeviceTasks 0134  
                            ___lwdiv@divisor 00C5                                     _appTimer 009C  
                                   _appState 009B                              ___lwdiv@counter 00C7  
                                   __ptext10 3C88                                     __ptext11 54AC  
                                   __ptext20 5764                                     __ptext12 4724  
                                   __ptext21 5880                                     __ptext13 2A8C  
                                 _T1GCONbits 000FCC                                     __ptext30 597A  
                                   __ptext22 5814                                     __ptext14 43C2  
                                   __ptext31 2500                                     __ptext23 3D62  
                                   __ptext15 39F2                                     __ptext40 5984  
                                   __ptext32 562C                                     __ptext24 5896  
                                   __ptext16 500C                                     __ptext41 59B2  
                                   __ptext33 4C52                                     __ptext25 5714  
                                   __ptext17 47CC                                     __ptext50 598E  
                                   __ptext42 294A                                     __ptext34 526E  
                                   __ptext26 4A40                                     __ptext18 234E  
                                   __ptext51 3F12                                     __ptext43 4EEC  
                                   __ptext35 1786                                     __ptext27 4CCA  
                                   __ptext19 3AD0                                     __ptext60 5944  
                                   __ptext52 4BD6                                     __ptext44 3486  
                                   __ptext36 486E                                     __ptext28 5220  
                                   __ptext61 58FE                                     __ptext53 4E1A  
                                   __ptext45 59A2                                     __ptext37 5178  
                                   __ptext29 424A                                     __ptext70 3E3A  
                                   __ptext62 3752                                     __ptext54 584C  
                                   __ptext46 578A                                     __ptext38 54E6  
                                   __ptext71 27F4                                     __ptext63 57B0  
                                   __ptext55 573C                                     __ptext47 58EC  
                                   __ptext39 5380                                     __ptext80 51D0  
                                   __ptext72 55C4                                     __ptext64 3668  
                                   __ptext56 4520                                     __ptext48 565E  
                                   __ptext81 58AC                                     __ptext73 55F8  
                                   __ptext65 59C4                                     __ptext57 5934  
                                   __ptext49 5954                                     __ptext90 2BC4  
                                   __ptext82 53F8                                     __ptext74 57D2  
                                   __ptext66 59AA                                     __ptext58 5830  
                                   __ptext91 568E                                     __ptext83 5922  
                                   __ptext75 58D8                                     __ptext67 53BC  
                                   __ptext59 57F4                                     __ptext92 56EA  
                                   __ptext84 5866                                     __ptext76 59C8  
                                   __ptext68 52B4                                     __ptext93 533E  
                                   __ptext85 5998                                     __ptext77 5520  
                                   __ptext69 267A                                     __ptext94 3FE0  
                                   __ptext86 58C2                                     __ptext78 59CC  
                                   __ptext95 4ACC                                     __ptext79 5910  
                                   __ptext96 319A                                     __ptext88 59B8  
                                   __ptext97 4910                                     __ptext89 2CFC  
                                   __ptext98 3BAC                                     __ptext99 3832  
       __end_of_USBapp_CdcEmulatorInitialize 511E        __size_of_USBapp_CdcEmulatorInitialize 005A  
               _USBapp_CdcEmulatorInitialize 50C4                                 _SSP1CON1bits 000FC6  
                                   _dotCount 00A3                                     _hexToStr 54AC  
                         _service_pushbutton 4BD6                              ___almod@divisor 00C7  
                          ??_TMR1_StartTimer 00C3                              ___almod@counter 00CB  
                DATAEE_WriteByte@GIEBitValue 00C5                                  _OSCCON2bits 000FD2  
                           __size_of_strncmp 00A2               __end_of_USBCtrlTrfSetupHandler 4B54  
                              __size_of_main 011A                            ?_USBCtrlEPService 002E  
                 __size_of_oled_writeCommand 0010                                     _rnModule 00B1  
                                 strncmp@len 00C7                          ?_service_pushbutton 002E  
                          ??_DATAEE_ReadByte 00C3                    __end_of_ADC_GetConversion 52B4  
                   __size_of_CMP1_Initialize 0012                      __end_of_oled_displayOff 58AC  
                         ??_USBCtrlEPService 0049                    moduleResync@escapeCounter 00C8  
                        _USBCtrlTrfInHandler 3912                                ??_TMRapp_Tick 002E  
                           _dataRatePosition 00A1                           __end_of_oled_clear 5866  
                        __end_of_test_switch 3392                                     _outPipes 0001  
                                   _test_adc 3578                         _USBCtrlTrfOutHandler 4F4E  
                                   int$flags 005B                                     _usbState 00B5  
                  _USBCtrlEPAllowStatusStage 40AE                                    test_adc@L 00DF  
                                  test_adc@T 00E3                  __size_of_Set_Column_Address 0020  
                          ??_TMR2_StartTimer 00C3           __end_of_INTERRUPT_InterruptManager 00BA  
                 _INTERRUPT_InterruptManager 0008                                 _SSP1STATbits 000FC7  
                                _sendCommand 565E                       ??_USBTransferOnePacket 00C7  
                         oled_clearRow@index 00D1                           _EUSART_FlushBuffer 5220  
                               ??_test_comms 00D5                 __end_of_USBapp_setrxByteFlag 59BE  
                                _moduleSleep 5714                                  _moteHandler 1DFE  
                           ??_TMR2_ReadTimer 00C3                         ??_service_pushbutton 00C3  
                  _USBDeferStatusStagePacket 0021                     CDCTxService@byte_to_send 00CE  
                                 _INTCONbits 000FF2                  __end_of_USBapp_handlerState 5998  
                       ?_USBCtrlTrfInHandler 002E                          ?_EUSART_FlushBuffer 002E  
                __size_of_ADC_TempConversion 0032                USBCtrlTrfTxService@byteToSend 002E  
                                   memset@p1 00C3                             ?_USBStallHandler 002E  
                   USBStdFeatureReqHandler@p 0047                            ?_Set_Page_Address 002E  
                   ??_MOTEapp_TimerBasedTask 00C3                                 _responseData 01A4  
              ?_USBapp_CdcEmulatorInitialize 002E                                     intlevel2 0000  
                                ??_oled_init 00D2                  ??_MOTEapp_getModuleResponse 00C4  
                         ??_Set_Page_Address 00C5                       __size_of_USBDeviceInit 0156  
    __end_of_USER_USB_CALLBACK_EVENT_HANDLER 50C4     __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005C  
          ??_USER_USB_CALLBACK_EVENT_HANDLER 0041             ?_USER_USB_CALLBACK_EVENT_HANDLER 003B  
            _USER_USB_CALLBACK_EVENT_HANDLER 5068               moteJoiningProcess@messageReady 00DA  
                           ___lwmod@dividend 00C3                 i2USBTransferOnePacket@handle 0033  
                               _VREFCON0bits 000F7D                             ___lldiv@dividend 002E  
                    ?_PIN_MANAGER_Initialize 002E                             ??_USBapp_Handler 00D5  
                           ??_TMRapp_Handler 00CD                        __size_of_test_powerup 0044  
                       moteHandler@gotoSleep 01E6                 __size_ofi2_EUSART_Initialize 003C  
                                  strncmp@s1 00C3                                    strncmp@s2 00C5  
                           ??_ADC_Initialize 00C3                           __end_of_test_comms 4DAC  
                       ??_EUSART_FlushBuffer 00C3                      __end_of_oled_setDisplay 5830  
                             _oled_putUint16 2A8C                             _SPI_Exchange8bit 58FE  
                 i2USBTransferOnePacket@data 002F                                  _sleepTicker 00B4  
                     ??_USBConfigureEndpoint 002F                        ?_USBCtrlTrfOutHandler 002E  
                             _oled_putString 4E1A                                  _putUSBUSART 57B0  
                         _EUSART_Receive_ISR 558E                            oled_clearRow@page 00D0  
                       __CFG_CPUDIV$NOCLKDIV 000000                          _USBCtrlTrfRxService 2E30  
                         _USBWakeFromSuspend 568E                                  ??_test_leds 00D5  
                              _powerOnStatus 00AD                                  ??_test_oled 00D5  
                    _USBStdFeatureReqHandler 20CA      __end_of_USBapp_DeviceCdcEmulatorHandler 3832  
   __size_of_USBapp_DeviceCdcEmulatorHandler 00E0             ?_USBapp_DeviceCdcEmulatorHandler 002E  
          ??_USBapp_DeviceCdcEmulatorHandler 00D0              _USBapp_DeviceCdcEmulatorHandler 3752  
                         _USBCheckCDCRequest 4678                          _USBCtrlTrfTxService 417C  
                        __end_of_TMRapp_Tick 59C4                        __end_of_oled_clearRow 5764  
                                _temperature 0086                          ?_EUSART_Receive_ISR 002E  
                             _oled_writeData 5934                          ?_USBWakeFromSuspend 002E  
                                   strcmp@s1 00C3                                     strcmp@s2 00C5  
                           ___lldiv@quotient 0036                              ___lwmod@divisor 00C5  
                           ??_USBapp_exitCDC 00C3                        ??_USBCtrlTrfInHandler 003F  
                      _USBAlternateInterface 00C1                              ___lwmod@counter 00C7  
                        ?_USBCheckCDCRequest 002E                   __size_of_moteApp_GoToSleep 00DC  
                  i2USBTransferOnePacket@dir 002E                           _moteApp_toggleLeds 3392  
                  i2USBTransferOnePacket@len 0031                          USBEnableEndpoint@ep 0039  
                            _endpoint_number 0025                                   _WDTCONbits 000FD1  
                               _test_powerup 52FA                              _sendDataCommand 3C88  
                       ?_USBCtrlTrfRxService 002E                                ?_getsUSBUSART 00CA  
                   oled_putUint8@station_dot 00D5                           __CFG_FOSC$INTOSCIO 000000  
                         EUSART_Write@txData 00C3                 __size_of_EUSART_Transmit_ISR 0036  
             __end_of_PIN_MANAGER_Initialize 5220                     ?_USBCtrlEPAllowDataStage 002E  
         __size_of_moteApp_add8bToDataBuffer 00DE                                 ___almod@sign 00CC  
                       ?_USBCtrlTrfTxService 002E                            ??_moteApp_delayms 00C5  
                        ?_moteApp_toggleLeds 002E                 _USBStatusStageTimeoutCounter 0022  
                                _test_switch 329A                         ??_EUSART_Receive_ISR 002E  
                       ??_USBWakeFromSuspend 0043                       __end_of_oled_putUint16 2BC4  
                 USBTransferOnePacket@handle 00C8                   __size_of_ADC_GetConversion 0046  
                       __end_of_CDCTxService 27F4                              _TMR1_Initialize 5520  
          moteJoiningProcess@joiningComplete 00D9                             ?_oled_displayOff 002E  
                      __end_of_oled_putUint8 47CC                       __end_of_oled_putString 4E86  
                       ??_USBCheckCDCRequest 002E                                   _USB_CD_Ptr 7589  
